OBJECT Page 6085759 Document Files Factbox
{
  OBJECT-PROPERTIES
  {
    Date=01/09/19;
    Time=[ 6:52:30 PM];
    Modified=Yes;
    Version List=DCW17.00.00.4.50.07;
  }
  PROPERTIES
  {
    CaptionML=ENU=Documents;
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table6085756;
    PageType=CardPart;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 IF WebClientMgt.IsWebClient THEN
                   ClientAddInWebVisible := TRUE
                 ELSE
                   IF NOT (ClientAddIn220Visible OR ClientAddIn110Visible) THEN
                     ClientAddIn220Visible := TRUE;
               END;

    OnAfterGetCurrRecord=VAR
                           PurchInvHeader@1001 : Record 122;
                           PurchCrMemoHeader@6085576 : Record 124;
                           RecRef@6085573 : RecordRef;
                           RecIDMgt@6085575 : Codeunit 6085604;
                           No@1000 : Code[250];
                           TableID@6085574 : Integer;
                         BEGIN
                           FILTERGROUP(4);
                           IF NOT HASFILTER THEN
                             EXIT;

                           IF GETFILTER("Source Table No. Filter") <> '' THEN
                             No := GETRANGEMIN("Source Table No. Filter");
                           IF No = '' THEN
                             EXIT;

                           IF GETFILTER("Source Table ID Filter") <> '' THEN
                             TableID := GETRANGEMIN("Source Table ID Filter");

                           CASE TableID OF
                             DATABASE::"Purch. Inv. Header":
                               BEGIN
                                 PurchInvHeader.GET(No);
                                 SetDocAndPostingDate(PurchInvHeader."Posting Date",PurchInvHeader."No.",FALSE);
                               END;

                             DATABASE::"Purch. Cr. Memo Hdr.":
                               BEGIN
                                 PurchCrMemoHeader.GET(No);
                                 SetDocAndPostingDate(PurchCrMemoHeader."Posting Date",PurchCrMemoHeader."No.",FALSE);
                               END;

                             ELSE BEGIN
                               RecRef.OPEN(TableID);
                               RecIDMgt.FilterRecRef(RecRef,RecIDMgt.GetFirstKeyField(TableID),No);
                               RecRef.FINDFIRST;
                               SetRecId(RecRef.RECORDID,FALSE);
                             END;
                           END;
                           FILTERGROUP(0);
                         END;

  }
  CONTROLS
  {
    { 161024012;0;Container;
                ContainerType=ContentArea }

    { 6085573;1;Field     ;
                Name=DocDragAndDropAddIn110;
                Visible=ClientAddIn110Visible;
                Enabled=ClientAddIn110Visible;
                ControlAddIn=[Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop110;PublicKeyToken=afaa4797ccef7206];
                OnControlAddIn=BEGIN
                                 OnControlAddIn(Index,Data);
                               END;
                                }

    { 1   ;1   ;Field     ;
                Name=DocDragAndDropAddIn220;
                Visible=ClientAddIn220Visible;
                Enabled=ClientAddIn220Visible;
                ControlAddIn=[Continia.DocumentCapture.Dynamics.Nav.DocDragAndDrop220;PublicKeyToken=afaa4797ccef7206];
                OnControlAddIn=BEGIN
                                 OnControlAddIn(Index,Data);
                               END;
                                }

    { 2   ;1   ;Field     ;
                Name=DocDragAndDropAddInWeb;
                Visible=ClientAddInWebVisible;
                ControlAddIn=[Continia.DocumentCapture.Dynamics.Nav.Web.DragAndDrop;PublicKeyToken=652b4f7dbff5f5b3] }

  }
  CODE
  {
    VAR
      CaptureAddinLib@161024013 : Codeunit 6085660;
      WebClientMgt@1004 : Codeunit 6085662;
      AddInResponse@161024016 : Codeunit 6085661;
      OutXmlDoc@161024014 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      RecID@161024015 : RecordID;
      IsInfoPane@161024031 : Boolean;
      CreatedDocType@161024017 : Integer;
      CreatedDocSubtype@161024018 : Integer;
      CreatedDocID@161024019 : Code[20];
      CreatedDocRefNo@161024020 : Integer;
      PostingDate@1008 : Date;
      DocNo@1007 : Code[250];
      ClientAddIn110Visible@1001 : Boolean;
      ClientAddIn220Visible@1002 : Boolean;
      ClientAddInWebVisible@1003 : Boolean;
      DocDragAndDropAddInSource110@161024021 : Text;
      Text001@161024023 : TextConst 'ENU=Open Document,Edit Properties';
      Text002@161024024 : TextConst 'ENU=Drop Files Here';
      Text003@161024025 : TextConst 'ENU=Browse';
      Text004@161024026 : TextConst 'ENU=New';
      Text005@161024027 : TextConst 'ENU=You must enter a description to create a new document.';
      Text007@161024029 : TextConst 'ENU=There are no %1 that has %2.';
      Text008@161024030 : TextConst 'ENU=Delete %1?';
      DocDragAndDropAddInSource220@1005 : Text;
      DocDragAndDropAddInSourceWeb@1006 : Text;
      AddInReady@1000 : Boolean;

    PROCEDURE SetDocument@1160040001(NewCreatedDocType@161024014 : Integer;NewCreatedDocSubtype@161024015 : Integer;NewCreatedDocID@161024016 : Code[20];NewCreatedDocRefNo@161024017 : Integer;ShowDetails@1160040000 : Boolean);
    VAR
      EmptyRecId@1160040001 : RecordID;
    BEGIN
      UpdatePage(NOT ShowDetails,EmptyRecId,NewCreatedDocType,NewCreatedDocSubtype,NewCreatedDocID,NewCreatedDocRefNo);
    END;

    PROCEDURE SetDocAndPostingDate@6085573(NewPostingDate@6085573 : Date;NewDocNo@6085574 : Code[250];ShowDetails@6085575 : Boolean);
    BEGIN
      PostingDate := NewPostingDate;
      DocNo := NewDocNo;
      UpdatePageNavigate(NOT ShowDetails,NewPostingDate,NewDocNo);
    END;

    PROCEDURE SetRecId@1160040000(NewRecID@161024012 : RecordID;ShowDetails@161024014 : Boolean);
    BEGIN
      UpdatePage(NOT ShowDetails,NewRecID,0,0,'',0);
    END;

    LOCAL PROCEDURE UpdatePage@161024014(NewIsInfoPane@161024013 : Boolean;NewRecID@161024012 : RecordID;NewCreatedDocType@161024014 : Integer;NewCreatedDocSubtype@161024015 : Integer;NewCreatedDocID@161024016 : Code[20];NewCreatedDocRefNo@161024017 : Integer);
    VAR
      DocAttachMgt@161024018 : Codeunit 6085602;
    BEGIN
      IsInfoPane := NewIsInfoPane;
      RecID := NewRecID;
      CreatedDocType := NewCreatedDocType;
      CreatedDocSubtype := NewCreatedDocSubtype;
      CreatedDocID := NewCreatedDocID;
      CreatedDocRefNo := NewCreatedDocRefNo;

      DocAttachMgt.CreateTempDocumentList(Rec,RecID,CreatedDocType,CreatedDocSubtype,CreatedDocID,CreatedDocRefNo,FALSE);

      UpdateInfoBar;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE UpdatePageNavigate@4(NewIsInfoPane@161024013 : Boolean;NewPostingDate@6085574 : Date;NewDocNo@6085573 : Code[250]);
    VAR
      DocAttachMgt@161024018 : Codeunit 6085602;
    BEGIN
      IsInfoPane := NewIsInfoPane;
      PostingDate := NewPostingDate;
      DocNo := NewDocNo;

      DocAttachMgt.CreateTempDocListFromNavigate(Rec,PostingDate,DocNo);

      UpdateInfoBar;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UpdateInfoBar@161024016();
    BEGIN
      CaptureAddinLib.BuildSetClientTypeCommand(OutXmlDoc);
      CaptureAddinLib.BuildFileMenuCommand(OutXmlDoc,Text002,Text003,Text004);
      CaptureAddinLib.BuildDocListSetupCommand(OutXmlDoc,IsInfoPane);
      CaptureAddinLib.BuildDocListContentCommand(OutXmlDoc,Rec,IsInfoPane);

      SendCommand;
    END;

    PROCEDURE HandleResponse@161024017();
    VAR
      ResponseCommand@1160040004 : Text[50];
    BEGIN
      ResponseCommand := AddInResponse.Command;

      CASE ResponseCommand OF
        'Visible':
          AddInReady := TRUE;

        'NewFile':
          NewFileCmd;

        'CopyFileStarting':
          CopyFileStartingCmd;

        'FileCopyCompleted':
          FileCopyCompletedCmd;

        'FileClosed':
          FileClosedCmd;

        'ContextActionClicked':
          ContextActionClickedCmd;

        'DoubleClick':
          DoubleClickCmd;

        'FileDataReady':
          FileDataReadyCmd;
      END;

      IF NOT ISNULL(OutXmlDoc) THEN
        SendCommand
      ELSE
        ReloadFileList;
    END;

    PROCEDURE NewFileCmd@161024019();
    VAR
      Document@161024018 : Record 6085590;
      DocAttachMgt@161024016 : Codeunit 6085602;
      NewDocDialog@161024014 : Page 6085780;
      CategoryCode@161024017 : Code[20];
      DocType@161024013 : Text[1024];
      DocDesc@161024012 : Text[1024];
      NewDescription@161024015 : Text[1024];
      EditFilePath@1160040005 : Text[1024];
    BEGIN
      DocType := AddInResponse.GetText('Type');
      DocDesc := AddInResponse.GetText('Description');

      NewDocDialog.SetValues(RecID,DocDesc);
      NewDocDialog.LOOKUPMODE := TRUE;

      IF NewDocDialog.RUNMODAL = ACTION::LookupOK THEN BEGIN
        NewDocDialog.GetValues(CategoryCode,NewDescription);
        IF DELCHR(NewDescription,'=',' ') = '' THEN
          ERROR(Text005);

        NewDescription := DELCHR(NewDescription,'=','<>&"''');

        DocAttachMgt.CreateDocument(Document,RecID,CreatedDocType,CreatedDocSubtype,CreatedDocID,CreatedDocRefNo,
          CategoryCode,NewDescription,DocType);

        EditFilePath := GetTempFileName(Document);
        CaptureAddinLib.BuildCreateNewFileCommand(OutXmlDoc,DocType,EditFilePath,Document."No.",TRUE);

        ReloadFileList;
      END;
    END;

    PROCEDURE CopyFileStartingCmd@161024020();
    VAR
      DocCat@161024018 : Record 6085575;
      Document@161024021 : Record 6085590;
      DocAttachMgt@161024020 : Codeunit 6085602;
      FileManagement@1160040001 : Codeunit 419;
      FileSysMgt@6085573 : Codeunit 6085584;
      RecRef@6085574 : RecordRef;
      MoveFile@1000 : Boolean;
      CategoryCode@161024015 : Code[20];
      FileIndex@1002 : Integer;
      NumberOfFiles@1001 : Integer;
      FullFilename@161024014 : Text[1024];
      Filename@161024013 : Text[1024];
      Extension@161024012 : Text[20];
      ServerFileTempPath@1160040002 : Text[1024];
    BEGIN
      FullFilename := AddInResponse.GetText('FullFilename');
      Filename := AddInResponse.GetText('Filename');
      Extension := AddInResponse.GetText('Extension');
      CategoryCode := AddInResponse.GetText('CategoryCode');
      FileIndex := AddInResponse.GetInt('FileIndex');
      NumberOfFiles := AddInResponse.GetInt('NumberOfFiles');
      MoveFile := AddInResponse.GetText('Action') = 'Move';

      CreateDocument(CategoryCode,FullFilename,Filename,Document);

      COMMIT;

      ServerFileTempPath := FileManagement.UploadFileSilent(FullFilename);
      FileSysMgt.DeleteFile(Document.GetMiscServerFileName,TRUE);
      Document.SetMiscFile(ServerFileTempPath);
      FileSysMgt.DeleteFile(ServerFileTempPath,TRUE);
      IF MoveFile THEN
        FileManagement.DeleteClientFile(FullFilename);
    END;

    PROCEDURE FileClosedCmd@1160040042();
    VAR
      Document@1160040005 : Record 6085590;
      FileManagement@1160040004 : Codeunit 419;
      FileSysMgt@6085573 : Codeunit 6085584;
      EditFilePath@1160040003 : Text[1024];
      ServerFileTempPath@1160040002 : Text[1024];
      DocumentNo@1160040001 : Code[20];
    BEGIN
      DocumentNo := AddInResponse.GetText('DocumentNo');
      Document.GET(DocumentNo);
      EditFilePath := GetTempFileName(Document);
      ServerFileTempPath := FileManagement.UploadFileSilent(EditFilePath);
      FileSysMgt.DeleteFile(Document.GetMiscServerFileName,TRUE);
      Document.SetMiscFile(ServerFileTempPath);
      FileSysMgt.DeleteFile(ServerFileTempPath,TRUE);
      FileManagement.DeleteClientFile(EditFilePath);
    END;

    PROCEDURE FileCopyCompletedCmd@161024021();
    BEGIN
      ReloadFileList;
    END;

    PROCEDURE ContextActionClickedCmd@161024022();
    VAR
      Document@161024014 : Record 6085590;
      RenameDocDialog@161024015 : Page 6085781;
      DocAttachMgt@161024017 : Codeunit 6085602;
      FileManagement@6085574 : Codeunit 419;
      ActionName@161024013 : Code[20];
      DocumentNo@161024012 : Code[20];
      EditFilePath@6085573 : Text[1024];
      NewDescription@161024016 : Text[80];
    BEGIN
      ActionName := AddInResponse.GetText('Name');
      DocumentNo := AddInResponse.GetText('DocumentNo');
      Document.GET(DocumentNo);

      CASE ActionName OF
        'OPEN':
          OpenFile(Document);

        'EDIT':
          BEGIN
            IF Document."File Type" = Document."File Type"::OCR THEN
              CaptureAddinLib.BuildOpenFileCommand(OutXmlDoc,Document.GetPdfFileName,Document."No.",FALSE)
            ELSE BEGIN
              EditFilePath := GetTempFileName(Document);
              FileManagement.DownloadToFile(Document.GetMiscServerFileName,EditFilePath);
              CaptureAddinLib.BuildOpenFileCommand(OutXmlDoc,EditFilePath,Document."No.",TRUE);
            END;
          END;

        'RENAME':
          BEGIN
            Rec.RESET;
            Rec.SETRANGE("No.",DocumentNo);
            Rec.FINDFIRST;
            Rec.RESET;

            RenameDocDialog.SetValues(Description);
            RenameDocDialog.LOOKUPMODE := TRUE;
            IF RenameDocDialog.RUNMODAL = ACTION::LookupOK THEN BEGIN
              RenameDocDialog.GetValues(NewDescription);
              NewDescription := DELCHR(NewDescription,'=','<>&"''');
              IF DELCHR(NewDescription,'=',' ') = '' THEN
                ERROR(Text005);
              IF Description <> NewDescription THEN BEGIN
                Description := NewDescription;
                MODIFY;
                DocAttachMgt.ModifyDocument(Rec);
              END;

              UpdateInfoBar;
            END;
          END;

        'DELETE':
          BEGIN
            Rec.RESET;
            Rec.SETRANGE("No.",DocumentNo);
            Rec.FINDFIRST;
            IF CONFIRM(Text008,FALSE,TABLECAPTION) THEN
              IF DocAttachMgt.DeleteDocument(Rec) THEN
                ReloadFileList;
          END;
      END;
    END;

    PROCEDURE DoubleClickCmd@161024023();
    VAR
      Document@161024012 : Record 6085590;
    BEGIN
      Document.GET(AddInResponse.GetText('DocumentNo'));
      OpenFile(Document);
    END;

    PROCEDURE GetTempFileName@1160040012(Document@1160040003 : Record 6085590) : Text[1024];
    VAR
      PathClient@1160040001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FullFilename@1160040000 : Text[1024];
    BEGIN
      WITH Document DO BEGIN
        IF "No."= '' THEN
          EXIT('');

        FullFilename := PathClient.GetTempPath + "No." + '.' + "File Extension";
        CreateDirectory(FullFilename);
        EXIT(FullFilename);
      END;
    END;

    LOCAL PROCEDURE ReloadFileList@14();
    BEGIN
      IF DocNo <> '' THEN
        UpdatePageNavigate(IsInfoPane,PostingDate,DocNo)
      ELSE
        UpdatePage(IsInfoPane,RecID,CreatedDocType,CreatedDocSubtype,CreatedDocID,CreatedDocRefNo)
    END;

    LOCAL PROCEDURE SendCommand@5();
    VAR
      XMLText@1000 : Text;
    BEGIN
      CaptureAddinLib.XmlToText(OutXmlDoc,XMLText);

      CASE TRUE OF
        WebClientMgt.IsWebClient :
          BEGIN
            CaptureAddinLib.XmlToText(OutXmlDoc,XMLText);
            CurrPage.DocDragAndDropAddInWeb.SourceValueChanged(XMLText);
          END;
        ClientAddIn110Visible :
          IF AddInReady THEN
            CurrPage.DocDragAndDropAddIn110.SourceValue := XMLText;
        ClientAddIn220Visible :
          IF AddInReady THEN
            CurrPage.DocDragAndDropAddIn220.SourceValue := XMLText;
      END;

      CLEAR(OutXmlDoc);
    END;

    PROCEDURE SetClientAddInSizeSmall@26(IsSmall@1000 : Boolean);
    BEGIN
      ClientAddIn110Visible := IsSmall AND NOT WebClientMgt.IsWebClient;
      ClientAddIn220Visible := NOT IsSmall AND NOT WebClientMgt.IsWebClient;
      ClientAddInWebVisible := WebClientMgt.IsWebClient;
    END;

    LOCAL PROCEDURE OnControlAddIn@17(Index@1000 : Integer;Data@1001 : Text);
    BEGIN
      CLEAR(OutXmlDoc);
      AddInResponse.Load(Data);
      HandleResponse;
      CLEAR(AddInResponse);
    END;

    LOCAL PROCEDURE FileDataReadyCmd@2();
    VAR
      FileName@1000 : Text;
      FileData@1001 : Text;
      FileCategory@1002 : Code[10];
    BEGIN
      FileName := AddInResponse.GetText('FileName');
      FileData := AddInResponse.GetText('FileData');
      FileCategory := AddInResponse.GetText('FileCategory');
      SaveDataUrlToFile(FileName,FileData,FileCategory);
    END;

    LOCAL PROCEDURE BrowseFile@6();
    VAR
      Document@1001 : Record 6085590;
      FileSysMgt@1002 : Codeunit 6085584;
      TempFilePath@1000 : Text;
    BEGIN
      UPLOAD('Select file','','Alle Filer (*.*)|*.*','',TempFilePath);
      IF TempFilePath <> '' THEN BEGIN
        CreateDocument('',TempFilePath,'',Document);
        Document.SetMiscFile(TempFilePath);
        FileCopyCompletedCmd;
      END;
    END;

    PROCEDURE CreateDocument@3(CategoryCode@1005 : Code[20];FullFilename@1004 : Text[1024];Filename@1003 : Text[1024];VAR Document@1001 : Record 6085590);
    VAR
      DocCat@161024018 : Record 6085575;
      EmptyRecID@1000 : RecordID;
      FileMgt@1006 : Codeunit 419;
      DocAttachMgt@161024020 : Codeunit 6085602;
      FileManagement@1160040001 : Codeunit 419;
      FileSysMgt@6085573 : Codeunit 6085584;
      RecRef@6085574 : RecordRef;
      Extension@161024012 : Text[20];
      ServerFileTempPath@1160040002 : Text[1024];
    BEGIN
      Filename := FileMgt.GetFileName(FullFilename);
      Extension := FileMgt.GetExtension(FullFilename);

      IF DocNo <> '' THEN BEGIN
        DocCat.SETRANGE("Source Table No.",DATABASE::"G/L Entry");
        DocCat.SETRANGE("Allow Drag-and-Drop",TRUE);
        IF NOT DocCat.FINDFIRST THEN BEGIN
          DocCat.SETRANGE("Source Table No.",0);
          IF NOT DocCat.FINDFIRST THEN
            ERROR(Text007,DocCat.TABLECAPTION,DocCat.FIELDCAPTION("Allow Drag-and-Drop"));
        END;

        IF DocCat.COUNT > 1 THEN
          IF PAGE.RUNMODAL(0,DocCat) <> ACTION::LookupOK THEN
            ERROR('');

        CategoryCode := DocCat.Code;

        DocAttachMgt.CreateDocument(Document,EmptyRecID,DATABASE::"G/L Entry",0,DocNo,0,CategoryCode,Filename,Extension);
      END ELSE BEGIN
        IF (CategoryCode = '') AND ((FORMAT(RecID) <> '') OR (CreatedDocType > 0)) THEN BEGIN
          IF FORMAT(RecID) <> '' THEN BEGIN
            RecRef.GET(RecID);
            DocCat.SETRANGE("Source Table No.",RecRef.NUMBER);
          END ELSE
            DocCat.SETRANGE("Source Table No.",CreatedDocType);
          DocCat.SETRANGE("Allow Drag-and-Drop",TRUE);
          IF NOT DocCat.FINDFIRST THEN BEGIN
            DocCat.SETRANGE("Source Table No.",0);
            IF NOT DocCat.FINDFIRST THEN
              ERROR(Text007,DocCat.TABLECAPTION,DocCat.FIELDCAPTION("Allow Drag-and-Drop"));
          END;

          IF DocCat.COUNT > 1 THEN
            IF PAGE.RUNMODAL(0,DocCat) <> ACTION::LookupOK THEN
              ERROR('');

          CategoryCode := DocCat.Code;
        END;

        DocAttachMgt.CreateDocument(Document,RecID,CreatedDocType,CreatedDocSubtype,CreatedDocID,CreatedDocRefNo,
          CategoryCode,Filename,Extension);
      END;

      COMMIT;
    END;

    PROCEDURE SaveDataUrlToFile@1(FileName@1009 : Text;DataUrl@1006 : Text;FileCategory@1007 : Code[10]);
    VAR
      FileMgt@1010 : Codeunit 419;
      FileSysMgt@1005 : Codeunit 6085584;
      Document@1000 : Record 6085590;
      MemStream@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.MemoryStream";
      File@1008 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.File";
      RegEx@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Regex";
      Match@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Text.RegularExpressions.Match";
      Convert@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Convert";
      TempFilePath@1011 : Text;
    BEGIN
      RegEx := RegEx.Regex('data\:(.*?);base64,(.*)');
      Match := RegEx.Match(DataUrl);
      TempFilePath := TEMPORARYPATH + FileName;
      IF Match.Success THEN BEGIN
        MemStream := MemStream.MemoryStream(Convert.FromBase64String(Match.Groups.Item(2).Value));
        File.WriteAllBytes(TempFilePath,MemStream.ToArray());
        CreateDocument(FileCategory,TempFilePath,FileName,Document);
        Document.SetMiscFile(TempFilePath);
      END ELSE
        ERROR('Could not store file');
    END;

    LOCAL PROCEDURE OpenFile@8(Document@1000 : Record 6085590);
    VAR
      FileSysMgt@6085573 : Codeunit 6085584;
      FromFileName@1001 : Text;
      ToFileName@1003 : Text;
      FileExtension@1004 : Text;
      FileFilter@1002 : Text;
    BEGIN
      IF WebClientMgt.IsWebClient THEN BEGIN
        IF Document."File Type" = Document."File Type"::OCR THEN BEGIN
          FileExtension := '.pdf';
          ToFileName := Document."No." + FileExtension;
          FromFileName := Document.GetPdfServerFileName;
        END ELSE BEGIN
          FileExtension := Document."File Extension";
          ToFileName := Document."No." + '.' + FileExtension;
          FromFileName := Document.GetMiscServerFileName;
        END;

        FileFilter := STRSUBSTNO('File (*.%1)|*.%1',FileExtension);
        DOWNLOAD(FromFileName,'Download','C:\',FileFilter,ToFileName);
      END ELSE BEGIN
        IF Document."File Type" = Document."File Type"::OCR THEN
          CaptureAddinLib.BuildOpenFileCommand(OutXmlDoc,Document.GetPdfFileName,Document."No.",FALSE)
        ELSE BEGIN
          FileSysMgt.LocalShell(Document.GetMiscFileName(TRUE));
        END;
      END;
    END;

    EVENT OutXmlDoc@161024014::NodeInserting@93(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT OutXmlDoc@161024014::NodeInserted@94(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT OutXmlDoc@161024014::NodeRemoving@95(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT OutXmlDoc@161024014::NodeRemoved@96(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT OutXmlDoc@161024014::NodeChanging@97(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT OutXmlDoc@161024014::NodeChanged@98(sender@6085574 : Variant;e@6085573 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNodeChangedEventArgs");
    BEGIN
    END;

    EVENT DocDragAndDropAddInWeb@-2::OnControlAddIn@1(index@1001 : Integer;data@1000 : Text);
    BEGIN
      OnControlAddIn(index,data);
    END;

    EVENT DocDragAndDropAddInWeb@-2::AddInReady@2();
    BEGIN
      IF ClientAddInWebVisible THEN
        ReloadFileList;
    END;

    BEGIN
    END.
  }
}

