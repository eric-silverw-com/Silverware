OBJECT Table 407 Graph Mail Setup
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Graph Mail Setup;
               ESM=Configuraci¢n correo de Graph;
               FRC=Configuration de messagerie Graph;
               ENC=Graph Mail Setup];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code] }
    { 2   ;   ;Refresh Code        ;BLOB          ;CaptionML=[ENU=Refresh Code;
                                                              ESM=Refresh Code;
                                                              FRC=Refresh Code;
                                                              ENC=Refresh Code] }
    { 3   ;   ;Expires On          ;DateTime      ;CaptionML=[ENU=Expires On;
                                                              ESM=Caduca el;
                                                              FRC=Expire le;
                                                              ENC=Expires On] }
    { 4   ;   ;Sender Email        ;Text250       ;CaptionML=[ENU=Sender Email;
                                                              ESM=Remitente de correo electr¢nico;
                                                              FRC=Courriel de l'exp‚diteur;
                                                              ENC=Sender Email] }
    { 5   ;   ;Sender Name         ;Text250       ;CaptionML=[ENU=Sender Name;
                                                              ESM=Nombre del remitente;
                                                              FRC=Nom de l'exp‚diteur;
                                                              ENC=Sender Name] }
    { 6   ;   ;Enabled             ;Boolean       ;CaptionML=[ENU=Enabled;
                                                              ESM=Habilitado;
                                                              FRC=Activ‚;
                                                              ENC=Enabled] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GraphMailCategoryTxt@1002 : TextConst '@@@={Locked};ENU=AL GraphMail;ESM=AL GraphMail;FRC=AL GraphMail;ENC=AL GraphMail';
      GraphMailSentMsg@1010 : TextConst '@@@={Locked};ENU=Sent an email;ESM=Sent an email;FRC=Sent an email;ENC=Sent an email';
      GraphMailSetupStartMsg@1007 : TextConst '@@@={Locked};ENU=Setting up graph mail;ESM=Setting up graph mail;FRC=Setting up graph mail;ENC=Setting up graph mail';
      GraphMailSetupFinishMsg@1009 : TextConst '@@@={Locked};ENU=Graph mail setup for current user;ESM=Graph mail setup for current user;FRC=Graph mail setup for current user;ENC=Graph mail setup for current user';
      GraphMailGetTokenMsg@1008 : TextConst '@@@={Locked};ENU=Attempting to get a token using the existing refresh code;ESM=Attempting to get a token using the existing refresh code;FRC=Attempting to get a token using the existing refresh code;ENC=Attempting to get a token using the existing refresh code';
      ClientResourceNameTxt@1006 : TextConst '@@@={Locked};ENU=MailerResourceId;ESM=MailerResourceId;FRC=MailerResourceId;ENC=MailerResourceId';
      MissingClientInfoErr@1003 : TextConst 'ENU=Missing configuration data. Contact a system administrator.;ESM=Faltan datos de configuraci¢n. P¢ngase en contacto con un administrador del sistema.;FRC=Donn‚es de configuration manquantes. Contactez un administrateur systŠme.;ENC=Missing configuration data. Contact a system administrator.';
      InvalidResultErr@1000 : TextConst 'ENU=The configuration data is not valid. Contact a system administrator.;ESM=Los datos de configuraci¢n no son v lidos. P¢ngase en contacto con un administrador del sistema.;FRC=Les donn‚es de configuration ne sont pas valides. Contactez un administrateur systŠme.;ENC=The configuration data is not valid. Contact a system administrator.';
      AuthFailErr@1001 : TextConst 'ENU=Could not authenticate while sending mail.;ESM=No se puede autenticar mientras se env¡a un correo electr¢nico.;FRC=Authentification impossible lors de l''envoi d''un message.;ENC=Could not authenticate while sending mail.';
      NotEnabledErr@1004 : TextConst 'ENU=Not enabled.;ESM=No habilitado.;FRC=Pas activ‚.;ENC=Not enabled.';
      TestEmailSubjectTxt@1005 : TextConst 'ENU=Test Email;ESM=Correo electr¢nico de prueba;FRC=Courriel de test;ENC=Test Email';

    PROCEDURE IsEnabled@4() : Boolean;
    VAR
      GraphMail@1000 : Codeunit 405;
    BEGIN
      EXIT(GraphMail.IsEnabled);
    END;

    PROCEDURE RenewRefreshToken@6();
    BEGIN
      GetToken;
    END;

    LOCAL PROCEDURE GetToken@1() : Text;
    VAR
      AzureKeyVaultManagement@1012 : Codeunit 2200;
      ResourceId@1004 : Text;
      RefreshToken@1000 : Text;
      AccessToken@1002 : Text;
    BEGIN
      IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(ResourceId,ClientResourceNameTxt) THEN
        ERROR(MissingClientInfoErr);

      IF ResourceId = '' THEN
        ERROR(MissingClientInfoErr);

      IF NOT IsEnabled THEN
        ERROR(NotEnabledErr);

      IF NOT TryGetToken(RefreshToken,AccessToken) THEN BEGIN
        CLEAR("Refresh Code");
        CLEAR("Expires On");
        VALIDATE(Enabled,FALSE);
        MODIFY;
        EXIT;
      END;

      SetRefreshToken(RefreshToken);
      VALIDATE("Expires On",CREATEDATETIME(TODAY + 14,TIME));
      MODIFY;

      EXIT(AccessToken);
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetToken@7(VAR RefreshToken@1002 : Text;VAR AccessToken@1000 : Text);
    VAR
      AzureADMgt@1001 : Codeunit 6300;
    BEGIN
      SENDTRACETAG('00001QL',GraphMailCategoryTxt,VERBOSITY::Normal,GraphMailGetTokenMsg,DATACLASSIFICATION::SystemMetadata);
      AccessToken := AzureADMgt.GetTokenFromRefreshToken(GetRefreshToken,RefreshToken);

      IF (AccessToken = '') OR (RefreshToken = '') THEN
        ERROR('');
    END;

    PROCEDURE SendTestMail@2(Recipient@1003 : Text);
    VAR
      TempEmailItem@1002 : TEMPORARY Record 9500;
      GraphMail@1001 : Codeunit 405;
      Payload@1000 : Text;
    BEGIN
      IF Recipient = '' THEN
        ERROR('');

      TempEmailItem."Send to" := COPYSTR(Recipient,1,MAXSTRLEN(TempEmailItem."Send to"));
      TempEmailItem."From Address" := COPYSTR("Sender Email",1,MAXSTRLEN(TempEmailItem."From Address"));
      TempEmailItem."From Name" := COPYSTR("Sender Name",1,MAXSTRLEN(TempEmailItem."From Name"));
      TempEmailItem.Subject := TestEmailSubjectTxt;
      TempEmailItem.SetBodyText(GraphMail.GetTestMessageBody);

      Payload := GraphMail.PrepareMessage(TempEmailItem);

      SendWebRequest(Payload,GetToken);
    END;

    PROCEDURE SendMail@3(TempEmailItem@1000 : TEMPORARY Record 9500;VAR RefreshToken@1003 : Text);
    VAR
      GraphMail@1001 : Codeunit 405;
      Payload@1002 : Text;
      Token@1004 : Text;
    BEGIN
      IF NOT TryGetToken(RefreshToken,Token) THEN
        ERROR(AuthFailErr);

      Payload := GraphMail.PrepareMessage(TempEmailItem);

      SendWebRequest(Payload,Token);
      SENDTRACETAG('00001QM',GraphMailCategoryTxt,VERBOSITY::Normal,GraphMailSentMsg,DATACLASSIFICATION::SystemMetadata);
    END;

    LOCAL PROCEDURE SendWebRequest@5(Payload@1000 : Text;Token@1009 : Text) : Boolean;
    VAR
      TempBlob@1001 : TEMPORARY Record 99008535;
      HttpWebRequestMgt@1002 : Codeunit 1297;
      GraphMail@1006 : Codeunit 405;
      HttpStatusCode@1005 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      ResponseHeaders@1004 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameValueCollection";
      ResponseInStream@1003 : InStream;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(ResponseInStream);

      HttpWebRequestMgt.Initialize(STRSUBSTNO('%1/v1.0/me/sendMail',GraphMail.GetGraphDomain));
      HttpWebRequestMgt.SetMethod('POST');
      HttpWebRequestMgt.SetContentType('application/json');
      HttpWebRequestMgt.SetReturnType('application/json');
      HttpWebRequestMgt.AddHeader('Authorization',STRSUBSTNO('Bearer %1',Token));
      HttpWebRequestMgt.AddBodyAsText(Payload);

      IF NOT HttpWebRequestMgt.GetResponse(ResponseInStream,HttpStatusCode,ResponseHeaders) THEN BEGIN
        HttpWebRequestMgt.ProcessFaultResponse('');
        EXIT(FALSE);
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE GetRefreshToken@9() RefreshToken : Text;
    VAR
      InStr@1000 : InStream;
    BEGIN
      CALCFIELDS("Refresh Code");
      "Refresh Code".CREATEINSTREAM(InStr);
      InStr.READTEXT(RefreshToken);
    END;

    PROCEDURE SetRefreshToken@10(Token@1000 : Text);
    VAR
      OutStr@1001 : OutStream;
    BEGIN
      "Refresh Code".CREATEOUTSTREAM(OutStr);
      OutStr.WRITETEXT(Token);
    END;

    PROCEDURE Initialize@11();
    VAR
      AzureKeyVaultManagement@1015 : Codeunit 2200;
      AzureADMgt@1000 : Codeunit 6300;
      ResourceId@1003 : Text;
      RefreshToken@1001 : Text;
      Token@1006 : Text;
    BEGIN
      IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(ResourceId,ClientResourceNameTxt) THEN
        ERROR(MissingClientInfoErr);

      IF ResourceId = '' THEN
        ERROR(MissingClientInfoErr);

      SENDTRACETAG('00001QN',GraphMailCategoryTxt,VERBOSITY::Normal,GraphMailSetupStartMsg,DATACLASSIFICATION::SystemMetadata);
      Token := AzureADMgt.GetOnBehalfAccessTokenAndRefreshToken(ResourceId,RefreshToken);

      IF (Token = '') OR (RefreshToken = '') THEN
        ERROR(InvalidResultErr);

      SetRefreshToken(RefreshToken);
      VALIDATE("Expires On",CREATEDATETIME(TODAY + 14,TIME));

      SetUserFields(Token);
      SENDTRACETAG('00001QO',GraphMailCategoryTxt,VERBOSITY::Normal,GraphMailSetupFinishMsg,DATACLASSIFICATION::SystemMetadata);
    END;

    LOCAL PROCEDURE SetUserFields@8(Token@1000 : Text);
    VAR
      TempBlob@1001 : TEMPORARY Record 99008535;
      HttpWebRequestMgt@1003 : Codeunit 1297;
      JSONManagement@1002 : Codeunit 5459;
      GraphMail@1010 : Codeunit 405;
      HttpStatusCode@1008 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      JsonObject@1007 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      ResponseHeaders@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameValueCollection";
      ResponseInStream@1005 : InStream;
      JsonResult@1004 : Variant;
      UserProfileJson@1009 : Text;
    BEGIN
      TempBlob.INIT;
      TempBlob.Blob.CREATEINSTREAM(ResponseInStream);

      HttpWebRequestMgt.Initialize(STRSUBSTNO('%1/v1.0/me/',GraphMail.GetGraphDomain));
      HttpWebRequestMgt.SetReturnType('application/json');
      HttpWebRequestMgt.AddHeader('Authorization',STRSUBSTNO('Bearer %1',Token));

      HttpWebRequestMgt.GetResponse(ResponseInStream,HttpStatusCode,ResponseHeaders);
      ResponseInStream.READTEXT(UserProfileJson);
      JSONManagement.InitializeObject(UserProfileJson);
      JSONManagement.GetJSONObject(JsonObject);

      JSONManagement.GetPropertyValueFromJObjectByName(JsonObject,'displayName',JsonResult);
      VALIDATE("Sender Name",JsonResult);

      JSONManagement.GetPropertyValueFromJObjectByName(JsonObject,'mail',JsonResult);
      VALIDATE("Sender Email",JsonResult);

      TESTFIELD("Sender Email");
    END;

    BEGIN
    END.
  }
}

