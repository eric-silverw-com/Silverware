OBJECT Page 2503 Extension Installation
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Extension Installation;
               ESM=Instalaci¢n de extensi¢n;
               FRC=Installation de l'extension;
               ENC=Extension Installation];
    SourceTable=Table2000000160;
    PageType=Card;
    SourceTableTemporary=Yes;
    OnOpenPage=VAR
                 MarketplaceExtnDeployment@1003 : Page 2510;
               BEGIN
                 GetDetailsFromFilters;
                 ExtensionAppId := ID;
                 TelemetryUrl := responseUrl;

                 MarketplaceExtnDeployment.SetAppIDAndTelemetryUrl(ExtensionAppId,TelemetryUrl);
                 MarketplaceExtnDeployment.RUN;
               END;

    OnFindRecord=BEGIN
                   CurrPage.CLOSE;
                 END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Container;
                ContainerType=ContentArea }

  }
  CODE
  {
    VAR
      ExtensionAppId@1000 : Text;
      TelemetryUrl@1010 : Text;

    LOCAL PROCEDURE GetDetailsFromFilters@1();
    VAR
      RecRef@1001 : RecordRef;
      i@1000 : Integer;
    BEGIN
      RecRef.GETTABLE(Rec);
      FOR i := 1 TO RecRef.FIELDCOUNT DO
        ParseFilter(RecRef.FIELDINDEX(i));
      RecRef.SETTABLE(Rec);
    END;

    LOCAL PROCEDURE ParseFilter@2(FieldRef@1003 : FieldRef);
    VAR
      FilterPrefixDotNet_RegEx@1002 : Codeunit 3001;
      SingleQuoteDotNet_RegEx@1001 : Codeunit 3001;
      EscapedEqualityDotNet_RegEx@1004 : Codeunit 3001;
      Filter@1000 : Text;
    BEGIN
      FilterPrefixDotNet_RegEx.Regex('^@\*([^\\]+)\*$');
      SingleQuoteDotNet_RegEx.Regex('^''([^\\]+)''$');
      EscapedEqualityDotNet_RegEx.Regex('~');
      Filter := FieldRef.GETFILTER;
      Filter := FilterPrefixDotNet_RegEx.Replace(Filter,'$1');
      Filter := SingleQuoteDotNet_RegEx.Replace(Filter,'$1');
      Filter := EscapedEqualityDotNet_RegEx.Replace(Filter,'=');

      IF Filter <> '' THEN
        FieldRef.VALUE(Filter);
    END;

    BEGIN
    END.
  }
}

