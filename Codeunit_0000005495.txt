OBJECT Codeunit 5495 Graph Mgt - Sales Order
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    Permissions=TableData 112=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ProcessComplexTypes@1(VAR SalesOrderEntityBuffer@1000 : Record 5495;BillToAddressJSON@1001 : Text);
    BEGIN
      ParseBillToCustomerAddressFromJSON(BillToAddressJSON,SalesOrderEntityBuffer);
    END;

    PROCEDURE ParseBillToCustomerAddressFromJSON@10(BillToAddressJSON@1000 : Text;VAR SalesOrderEntityBuffer@1002 : Record 5495);
    VAR
      GraphMgtComplexTypes@1003 : Codeunit 5468;
      RecRef@1001 : RecordRef;
    BEGIN
      IF BillToAddressJSON <> '' THEN
        WITH SalesOrderEntityBuffer DO BEGIN
          RecRef.GETTABLE(SalesOrderEntityBuffer);
          GraphMgtComplexTypes.ApplyPostalAddressFromJSON(BillToAddressJSON,RecRef,
            FIELDNO("Sell-to Address"),FIELDNO("Sell-to Address 2"),FIELDNO("Sell-to City"),FIELDNO("Sell-to County"),
            FIELDNO("Sell-to Country/Region Code"),FIELDNO("Sell-to Post Code"));
          RecRef.SETTABLE(SalesOrderEntityBuffer);
        END;
    END;

    PROCEDURE BillToCustomerAddressToJSON@5(SalesOrderEntityBuffer@1000 : Record 5495) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH SalesOrderEntityBuffer DO
        GraphMgtComplexTypes.GetPostalAddressJSON("Sell-to Address","Sell-to Address 2",
          "Sell-to City","Sell-to County","Sell-to Country/Region Code","Sell-to Post Code",JSON);
    END;

    PROCEDURE UpdateIntegrationRecordIds@34(OnlyRecordsWithoutID@1007 : Boolean);
    VAR
      DummySalesOrderEntityBuffer@1001 : Record 5495;
      DummyCustomer@1005 : Record 18;
      GraphMgtGeneralTools@1008 : Codeunit 5465;
      SalesHeaderRecordRef@1000 : RecordRef;
      CustomerRecordRef@1004 : RecordRef;
    BEGIN
      CustomerRecordRef.OPEN(DATABASE::Customer);
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        CustomerRecordRef,DummyCustomer.FIELDNO(Id),TRUE);

      SalesHeaderRecordRef.OPEN(DATABASE::"Sales Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(
        SalesHeaderRecordRef,DummySalesOrderEntityBuffer.FIELDNO(Id),OnlyRecordsWithoutID);
    END;

    LOCAL PROCEDURE CheckSupportedTable@3(VAR RecRef@1000 : RecordRef) : Boolean;
    VAR
      SalesHeader@1002 : Record 36;
    BEGIN
      IF RecRef.NUMBER = DATABASE::"Sales Header" THEN BEGIN
        RecRef.SETTABLE(SalesHeader);
        EXIT(SalesHeader."Document Type" = SalesHeader."Document Type"::Order);
      END;
      EXIT(FALSE);
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnSalesInvoiceHeader@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    VAR
      DummySalesOrderEntityBuffer@1004 : Record 5495;
      GraphMgtGeneralTools@1003 : Codeunit 5465;
    BEGIN
      IF NOT CheckSupportedTable(RecRef) THEN
        EXIT;

      GraphMgtGeneralTools.HandleUpdateReferencedIdFieldOnItem(
        RecRef,NewId,Handled,RecRef.NUMBER,DummySalesOrderEntityBuffer.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    VAR
      DummySalesOrderEntityBuffer@1004 : Record 5495;
      GraphMgtGeneralTools@1007 : Codeunit 5465;
    BEGIN
      IF NOT CheckSupportedTable(RecRef) THEN
        EXIT;

      GraphMgtGeneralTools.HandleGetPredefinedIdValue(
        Id,RecRef,Handled,RecRef.NUMBER,DummySalesOrderEntityBuffer.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    PROCEDURE HandleApiSetup@2();
    VAR
      GraphMgtSalesOrderBuffer@1001 : Codeunit 5496;
    BEGIN
      UpdateIntegrationRecordIds(FALSE);
      GraphMgtSalesOrderBuffer.UpdateBufferTableRecords;
    END;

    BEGIN
    END.
  }
}

