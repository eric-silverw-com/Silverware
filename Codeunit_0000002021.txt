OBJECT Codeunit 2021 Image Analysis Result
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      JSONManagement@1001 : Codeunit 5459;
      Result@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Tags@1002 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      Color@1003 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      DominantColors@1005 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      Faces@1004 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      LastAnalysisType@1006 : 'Tags,Faces,Color';

    [External]
    PROCEDURE SetJson@2(JSONMgt@1000 : Codeunit 5459;AnalysisType@1001 : 'Tags,Faces,Color');
    BEGIN
      Tags := Tags.JArray;
      Color := Color.JObject;
      DominantColors := DominantColors.JArray;
      Faces := Faces.JObject;

      LastAnalysisType := AnalysisType;

      JSONMgt.GetJSONObject(Result);
      IF ISNULL(Result) THEN
        EXIT;

      IF NOT JSONManagement.GetArrayPropertyValueFromJObjectByName(Result,'tags',Tags) THEN
        IF NOT JSONManagement.GetArrayPropertyValueFromJObjectByName(Result,'Predictions',Tags) THEN
          Tags := Tags.JArray;

      IF NOT JSONManagement.GetObjectPropertyValueFromJObjectByName(Result,'faces',Faces) THEN
        Faces := Faces.JObject;

      Color := Color.JObject;
      DominantColors := DominantColors.JArray;
      IF JSONManagement.GetObjectPropertyValueFromJObjectByName(Result,'color',Color) THEN
        JSONManagement.GetArrayPropertyValueFromJObjectByName(Color,'dominantColors',DominantColors)
      ELSE BEGIN
        Color := Color.JObject;
        DominantColors := DominantColors.JArray;
      END;
    END;

    [External]
    PROCEDURE TagCount@7() : Integer;
    BEGIN
      EXIT(Tags.Count);
    END;

    [External]
    PROCEDURE TagName@8(Number@1002 : Integer) : Text;
    VAR
      Tag@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Name@1001 : Text;
    BEGIN
      JSONManagement.InitializeCollectionFromJArray(Tags);
      IF JSONManagement.GetJObjectFromCollectionByIndex(Tag,Number - 1) THEN BEGIN
        IF NOT JSONManagement.GetStringPropertyValueFromJObjectByName(Tag,'name',Name) THEN
          JSONManagement.GetStringPropertyValueFromJObjectByName(Tag,'Tag',Name);
        EXIT(Name)
      END;
    END;

    [External]
    PROCEDURE TagConfidence@17(Number@1002 : Integer) : Decimal;
    VAR
      Tag@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Confidence@1001 : Decimal;
      ConfidenceText@1003 : Text;
    BEGIN
      JSONManagement.InitializeCollectionFromJArray(Tags);
      IF JSONManagement.GetJObjectFromCollectionByIndex(Tag,Number - 1) THEN BEGIN
        IF NOT JSONManagement.GetStringPropertyValueFromJObjectByName(Tag,'confidence',ConfidenceText) THEN
          IF NOT JSONManagement.GetStringPropertyValueFromJObjectByName(Tag,'Probability',ConfidenceText) THEN
            ConfidenceText := '0';
        EVALUATE(Confidence,ConfidenceText);
        EXIT(Confidence)
      END;
    END;

    [External]
    PROCEDURE DominantColorForeground@24() : Text;
    VAR
      ColorText@1001 : Text;
    BEGIN
      JSONManagement.GetStringPropertyValueFromJObjectByName(Color,'dominantColorForeground',ColorText);
      EXIT(ColorText);
    END;

    [External]
    PROCEDURE DominantColorBackground@27() : Text;
    VAR
      ColorText@1001 : Text;
    BEGIN
      JSONManagement.GetStringPropertyValueFromJObjectByName(Color,'dominantColorBackground',ColorText);
      EXIT(ColorText);
    END;

    [External]
    PROCEDURE DominantColorCount@29() : Integer;
    BEGIN
      EXIT(DominantColors.Count);
    END;

    [External]
    PROCEDURE DominantColor@39(Number@1002 : Integer) : Text;
    VAR
      DominantColor@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
    BEGIN
      JSONManagement.InitializeCollectionFromJArray(DominantColors);
      IF JSONManagement.GetJObjectFromCollectionByIndex(DominantColor,Number - 1) THEN
        EXIT(FORMAT(DominantColor));
    END;

    [External]
    PROCEDURE FaceCount@3() : Integer;
    BEGIN
      EXIT(Faces.Count);
    END;

    [External]
    PROCEDURE FaceAge@4(Number@1002 : Integer) : Integer;
    VAR
      Face@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      AgeText@1001 : Text;
      Age@1003 : Integer;
    BEGIN
      JSONManagement.InitializeCollectionFromJArray(Faces);
      IF JSONManagement.GetJObjectFromCollectionByIndex(Face,Number - 1) THEN BEGIN
        JSONManagement.GetStringPropertyValueFromJObjectByName(Face,'age',AgeText);
        EVALUATE(Age,AgeText);
        IF Age < 16 THEN
          EXIT(0);
        EXIT(Age);
      END;
    END;

    [External]
    PROCEDURE FaceGender@5(Number@1002 : Integer) : Text;
    VAR
      Face@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      Gender@1001 : Text;
      AgeText@1003 : Text;
      Age@1004 : Integer;
    BEGIN
      JSONManagement.InitializeCollectionFromJArray(Faces);
      IF JSONManagement.GetJObjectFromCollectionByIndex(Face,Number - 1) THEN BEGIN
        JSONManagement.GetStringPropertyValueFromJObjectByName(Face,'age',AgeText);
        EVALUATE(Age,AgeText);
        IF Age < 16 THEN
          EXIT('');
        JSONManagement.GetStringPropertyValueFromJObjectByName(Face,'gender',Gender);
        EXIT(Gender);
      END;
    END;

    [External]
    PROCEDURE GetLatestAnalysisType@11(VAR AnalysisType@1000 : 'Tags,Faces,Color');
    BEGIN
      AnalysisType := LastAnalysisType;
    END;

    EVENT Color@1003::PropertyChanged@117(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.PropertyChangedEventArgs");
    BEGIN
    END;

    EVENT Color@1003::PropertyChanging@118(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.PropertyChangingEventArgs");
    BEGIN
    END;

    EVENT Color@1003::ListChanged@119(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.ListChangedEventArgs");
    BEGIN
    END;

    EVENT Color@1003::AddingNew@120(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.AddingNewEventArgs");
    BEGIN
    END;

    EVENT Color@1003::CollectionChanged@121(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NotifyCollectionChangedEventArgs");
    BEGIN
    END;

    EVENT Faces@1004::PropertyChanged@117(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.PropertyChangedEventArgs");
    BEGIN
    END;

    EVENT Faces@1004::PropertyChanging@118(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.PropertyChangingEventArgs");
    BEGIN
    END;

    EVENT Faces@1004::ListChanged@119(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.ListChangedEventArgs");
    BEGIN
    END;

    EVENT Faces@1004::AddingNew@120(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.AddingNewEventArgs");
    BEGIN
    END;

    EVENT Faces@1004::CollectionChanged@121(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NotifyCollectionChangedEventArgs");
    BEGIN
    END;

    EVENT DominantColors@1005::ListChanged@117(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.ListChangedEventArgs");
    BEGIN
    END;

    EVENT DominantColors@1005::AddingNew@118(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.ComponentModel.AddingNewEventArgs");
    BEGIN
    END;

    EVENT DominantColors@1005::CollectionChanged@119(sender@1001 : Variant;e@1000 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NotifyCollectionChangedEventArgs");
    BEGIN
    END;

    BEGIN
    END.
  }
}

