OBJECT Page 5303 Outlook Synch. Filters
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:59 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Outlook Synch. Filters;
    SourceTable=Table5303;
    DelayedInsert=Yes;
    DataCaptionFields=Filter Type;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             ValueEditable := TRUE;
           END;

    OnNewRecord=BEGIN
                  SetTablesNo(TableLeftNo,TableRightNo);
                  CheckValueAvailability;
                END;

    OnInsertRecord=VAR
                     ExistentFilterExpression@1000 : Text[250];
                   BEGIN
                     ExistentFilterExpression := OSynchSetupMgt.ComposeFilterExpression("Record GUID","Filter Type");
                     IF (STRLEN(ExistentFilterExpression) +
                         STRLEN(GetFieldCaption) +
                         STRLEN(FORMAT(Type)) +
                         STRLEN(Value)) > MAXSTRLEN(ExistentFilterExpression)
                     THEN
                       ERROR(Text001);
                     EXIT(TRUE);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           CheckValueAvailability;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Group     ;
                CaptionML=ENU=Filter }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Filtering Expression;
                ToolTipML=ENU=Specifies a filter defined on the lines of the Outlook Synch. Filters window. The expression in this field is composed according to Dynamics 365 filter syntax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RecomposeFilterExpression;
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the field with values that are used in the filter expression. A value in this field is appropriate if you specified the number of the table in the Table No. field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field No." }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Field Name;
                ToolTipML=ENU=Specifies the name of the field whose values will be used in the filter expression. The program fills in this field when you specify the number of the field in the Field No. field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetFieldCaption }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies what type of filtration is applied. There are three options you can choose from:;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                OnValidate=BEGIN
                             CheckValueAvailability;
                           END;
                            }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the value that is compared with the value in the Field No. field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Value;
                Editable=ValueEditable }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      OSynchSetupMgt@1000 : Codeunit 5300;
      TableLeftNo@1001 : Integer;
      TableRightNo@1002 : Integer;
      Text001@1003 : TextConst 'ENU=The filter cannot be processed because the expression is too long. Redefine your criteria.';
      ValueEditable@19072790 : Boolean INDATASET;

    [External]
    PROCEDURE SetTables@2(LeftNo@1000 : Integer;RightNo@1001 : Integer);
    BEGIN
      TableLeftNo := LeftNo;
      TableRightNo := RightNo;
    END;

    [External]
    PROCEDURE CheckValueAvailability@1();
    BEGIN
      IF Type = Type::FIELD THEN
        ValueEditable := FALSE
      ELSE
        ValueEditable := TRUE;
    END;

    BEGIN
    END.
  }
}

