OBJECT Page 6085707 Purch. Credit Memo With Image
{
  OBJECT-PROPERTIES
  {
    Date=10/11/18;
    Time=[ 1:00:00 AM];
    Version List=DCNA13.00.00.5.00.04;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Credit Memo;
               ENC=Purchase Credit Memo];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Approval Administration,6,7,Document;
                                ENC=New,Process,Report,Approve,Approval Administration,6,7,Document];
    OnInit=VAR
             PurchasesPayablesSetup@1000 : Record 312;
           BEGIN
             JobQueueUsed := PurchasesPayablesSetup.JobQueueActive;
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit 1630;
                 PermissionManager@1001 : Codeunit 9002;
                 DCSetup@6085573 : Record 6085573;
               BEGIN
                 SetDocNoVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
                 IsSaaS := PermissionManager.SoftwareAsAService;

                 DCSetup.GET;
                 ShowAllocations := DCSetup."Enable Purchase Allocation";

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
                 IF ("No." <> '') AND ("Buy-from Vendor No." = '') THEN
                   DocumentIsPosted := (NOT GET("Document Type","No."));

                 ActivateFields;
                 CurrPage.DocumentFiles.PAGE.SetClientAddInSizeSmall(TRUE);
                 ShowApproval := DCApprovalsBridge.IsPurchApprovalEnabledDocType("Document Type");
               END;

    OnAfterGetRecord=BEGIN
                       CalculateCurrentShippingOption;
                       ApprovalFlowCode := PurchHeaderDCInfo.GetApprovalFlowCode(Rec);
                       ApprovalFlowCodeEditable := CurrPage.EDITABLE;
                       CurrPage.DocumentFiles.PAGE.SetDocument(DATABASE::"Purchase Header","Document Type","No.",0,TRUE);
                       UpdateAmounts;
                       EnableFields;
                     END;

    OnNewRecord=BEGIN
                  ApprovalFlowCode := '';
                  ApprovalFlowCodeEditable := CurrPage.EDITABLE;
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;
                  UpdateAmounts;

                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           IF "No." <> '' THEN
                             CurrPage.DocumentFiles.PAGE.SetDocument(DATABASE::"Purchase Header","Document Type","No.",0,TRUE);

                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Credit Memo;
                                 ENC=&Credit Memo];
                      Image=CreditMemo }
      { 49      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 ENC=Statistics];
                      ToolTipML=[ENU=View statistical information, such as the value of posted entries, for the record.;
                                 ENC=View statistical information, such as the value of posted entries, for the record.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 IF "Tax Area Code" = '' THEN
                                   PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec)
                                 ELSE
                                   PAGE.RUNMODAL(PAGE::"Purchase Stats.",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=VendorCardAction;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 ENC=Vendor];
                      ToolTipML=[ENU=View or edit detailed information about the vendor on the purchase document.;
                                 ENC=View or edit detailed information about the vendor on the purchase document.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Enabled="Buy-from Vendor No." <> '';
                      Image=Vendor }
      { 105     ;2   ;Action    ;
                      Name=DimensionsAction;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 ENC=Dimensions];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 ENC=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyse transaction history.];
                      ApplicationArea=#Dimensions;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=ApprovalsAction;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 ENC=Approvals];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 ENC=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=BEGIN
                                 DCApprovalMgt.DrillDownApprovalEntries(Rec);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 ENC=Co&mments];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ENC=View or add comments for the record.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 6085518 ;2   ;Action    ;
                      Name=ArchivedVersionsAction;
                      CaptionML=ENU=&Archived Versions;
                      RunObject=Page 6086032;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.);
                      Image=Approvals }
      { 6085577 ;2   ;Action    ;
                      Name=AllocationsAction;
                      CaptionML=ENU=Allocations;
                      Visible=ShowAllocations;
                      Image=Approvals;
                      OnAction=VAR
                                 PurchDocManagement@6085573 : Codeunit 6085709;
                               BEGIN
                                 PurchDocManagement.ShowAllocations(Rec);
                               END;
                                }
      { 1900000004;  ;ActionContainer;
                      Name=ActionsItemsGroup;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 ENC=Approval] }
      { 25      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 ENC=Approve];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 ENC=Approve the requested changes.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=EnableApprove;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DCApprovalsBridge.Approve(Rec);
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 ENC=Reject];
                      ToolTipML=[ENU=Reject the approval request.;
                                 ENC=Reject the approval request.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=EnableReject;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DCApprovalsBridge.Reject(Rec);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 ENC=Delegate];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 ENC=Delegate the approval to a substitute approver.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=EnableForward;
                      PromotedIsBig=Yes;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DCApprovalsBridge.Forward(Rec);
                               END;
                                }
      { 6085582 ;2   ;Action    ;
                      Name=OnHold;
                      CaptionML=ENU=&On Hold;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=EnableOnHold;
                      PromotedIsBig=Yes;
                      Image=Lock;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DCApprovalsBridge.OnHold(Rec);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 ENC=Comments];
                      ToolTipML=[ENU=View or add comments for the record.;
                                 ENC=View or add comments for the record.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 ENC=Release];
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 ENC=Re&lease];
                      ToolTipML=[ENU=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.;
                                 ENC=Release the document to the next stage of processing. When a document is released, it will be included in all availability calculations from the expected receipt date of the items. You must reopen the document before you can make changes to it.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 ENC=Re&open];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 ENC=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 52      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ENC=F&unctions];
                      Image=Action }
      { 127     ;2   ;Action    ;
                      Name=GetStdVendPurchaseCodesAction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Vend. Purchase Codes;
                                 ENC=Get St&d. Vend. Purchase Codes];
                      ToolTipML=[ENU=View a list of the standard purchase lines that have been assigned to the vendor to be used for recurring purchases.;
                                 ENC=View a list of the standard purchase lines that have been assigned to the vendor to be used for recurring purchases.];
                      ApplicationArea=#Basic,#Suite;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 1160040002;2 ;Action    ;
                      Name=GetAmtDistrib;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Std. Amount Di&stribution Codes;
                      Image=ApplyTemplate;
                      OnAction=BEGIN
                                 PurchDocMgt.GetAmountDistribution(Rec);
                               END;
                                }
      { 6085581 ;2   ;Action    ;
                      Name=GetReturnOrderLines;
                      Ellipsis=Yes;
                      CaptionML=ENU=Ge&t Return Order Lines;
                      Image=GetLines;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Purch.-Get Return Order",Rec);
                               END;
                                }
      { 6085586 ;2   ;Action    ;
                      Name=GetReturnShipmentLines;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get Return &Shipment Lines;
                      Image=GetLines;
                      OnAction=BEGIN

                                 CurrPage.PurchLines.PAGE.GetReturnShipment;
                               END;
                                }
      { 53      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 ENC=Calculate &Invoice Discount];
                      ToolTipML=[ENU=Calculate the invoice discount for the entire document.;
                                 ENC=Calculate the invoice discount for the entire document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 RecalculateTaxesOnLines;
                               END;
                                }
      { 128     ;2   ;Separator  }
      { 93      ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 ENC=Apply Entries];
                      ToolTipML=[ENU=Apply open entries for the relevant account type.;
                                 ENC=Apply open entries for the relevant account type.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Purchase Header Apply",Rec);
                               END;
                                }
      { 129     ;2   ;Separator  }
      { 143     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Posted Doc&ument Lines to Reverse;
                                 ENC=Get Posted Doc&ument Lines to Reverse];
                      ToolTipML=[ENU=Copy one or more posted purchase document lines in order to reverse the original order.;
                                 ENC=Copy one or more posted purchase document lines in order to reverse the original order.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ReverseLines;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=CopyDocumentAction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 ENC=Copy Document];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 ENC=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 131     ;2   ;Separator  }
      { 114     ;2   ;Action    ;
                      Name=MoveNegativeLinesAction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 ENC=Move Negative Lines];
                      ToolTipML=[ENU=Prepare to create a replacement sales order in a sales return process.;
                                 ENC=Prepare to create a replacement sales order in a sales return process.];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 132     ;2   ;Separator  }
      { 1020005 ;2   ;Action    ;
                      CaptionML=[ENU=Import Electronic Invoice;
                                 ENC=Import Electronic Invoice];
                      ToolTipML=[ENU=Import an electronic invoice that is returned from PAC with a digital stamp.;
                                 ENC=Import an electronic invoice that is returned from PAC with a digital stamp.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Import;
                      OnAction=VAR
                                 EInvoiceMgt@1020000 : Codeunit 10145;
                               BEGIN
                                 EInvoiceMgt.ImportElectronicInvoice(Rec);
                               END;
                                }
      { 37      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 ENC=Incoming Document];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 35      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 ENC=View Incoming Document];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 ENC=View any incoming document records and file attachments that exist for the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 33      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 ENC=Select Incoming Document];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 ENC=Select an incoming document record and file attachment that you want to link to the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 ENC=Create Incoming Document from File];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 ENC=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CreateIncomingDocumentEnabled;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 ENC=Remove Incoming Document];
                      ToolTipML=[ENU=Remove any incoming document records and file attachments.;
                                 ENC=Remove any incoming document records and file attachments.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 ENC=Request Approval];
                      Image=Approval }
      { 146     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 ENC=Send A&pproval Request];
                      ToolTipML=[ENU=Request approval of the document.;
                                 ENC=Request approval of the document.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=NOT OpenApprovalEntriesExist AND CanRequestApprovalForFlow AND EnableSendApproval;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 DCApprovalsBridge.SendPurchDocApprovalRequest(Rec);
                               END;
                                }
      { 147     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 ENC=Cancel Approval Re&quest];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 ENC=Cancel the approval request.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=CanCancelApprovalForRecord OR CanCancelApprovalForFlow;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 DCApprovalsBridge.CancelApprovalRequest(Rec);
                               END;
                                }
      { 6085580 ;2   ;Action    ;
                      Name=ForceApproval;
                      CaptionML=ENU=&Force Approval;
                      Promoted=Yes;
                      Visible=ShowApproval;
                      Enabled=EnableForceApproval;
                      Image=EncryptionKeys;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 DCApprovalsBridge.ForceApproval(Rec);
                               END;
                                }
      { 6085579 ;2   ;Action    ;
                      Name=ChangeImportedAmounts;
                      CaptionML=ENU=&Change Imported Amounts;
                      Promoted=Yes;
                      Visible=ShowImportedAmounts;
                      Enabled=EnableChangeImportedAmount;
                      Image=EditAdjustments;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 PurchDocMgt.ChangeDocAmounts(Rec);
                                 UpdateAmounts;
                               END;
                                }
      { 144     ;2   ;Separator  }
      { 61      ;2   ;ActionGroup;
                      CaptionML=[ENU=Flow;
                                 ENC=Flow];
                      Image=Flow }
      { 62      ;3   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=[ENU=Create a Flow;
                                 ENC=Create a Flow];
                      ToolTipML=[ENU=Create a new Flow from a list of relevant Flow templates.;
                                 ENC=Create a new Flow from a list of relevant Flow templates.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsSaaS;
                      Image=Flow;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 FlowServiceManagement@1000 : Codeunit 6400;
                                 FlowTemplateSelector@1001 : Page 6400;
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetPurchasingTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 64      ;3   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=[ENU=See my Flows;
                                 ENC=See my Flows];
                      ToolTipML=[ENU=View and configure Flows that you created.;
                                 ENC=View and configure Flows that you created.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 6401;
                      Image=Flow;
                      PromotedCategory=Category5 }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 ENC=P&osting];
                      Image=Post }
      { 924     ;2   ;Action    ;
                      Name=DocAttach;
                      CaptionML=[ENU=Attachments;
                                 ENC=Attachments];
                      ToolTipML=[ENU=Add a file as an attachment. You can attach images as well as documents.;
                                 ENC=Add a file as an attachment. You can attach images as well as documents.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Image=Attach;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocumentAttachmentDetails@1000 : Page 1173;
                                 RecRef@1001 : RecordRef;
                               BEGIN
                                 RecRef.GETTABLE(Rec);
                                 DocumentAttachmentDetails.OpenForRecRef(RecRef);
                                 DocumentAttachmentDetails.RUNMODAL;
                               END;
                                }
      { 59      ;2   ;Action    ;
                      Name=PostAction;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 ENC=P&ost];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 ENC=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SIStorage.SetAllowPostRelPurchDocC90(TRUE);
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                                 SIStorage.SetAllowPostRelPurchDocC90(FALSE);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 ENC=Preview Posting];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 ENC=Review the different types of entries that will be created when you post the document or journal.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=PreviewPostingEnabled;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                                 PurchDocLineRelMgt@6085574 : Codeunit 6085761;
                               BEGIN
                                 PurchDocLineRelMgt.PurchDocMatchedToPreviewError(Rec);
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 ENC=Test Report];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 ENC=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.];
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 ENC=Post and &Print];
                      ToolTipML=[ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                                 ENC=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsOfficeAddin;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SIStorage.SetAllowPostRelPurchDocC90(TRUE);
                                 Post(CODEUNIT::"Purch.-Post + Print");
                                 SIStorage.SetAllowPostRelPurchDocC90(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 ENC=Remove From Job Queue];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 ENC=Remove the scheduled processing of this record from the job queue.];
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 6085591 ;1   ;ActionGroup;
                      Name=Document;
                      CaptionML=ENU=Document;
                      ActionContainerType=NewDocumentItems }
      { 6085590 ;2   ;Action    ;
                      Name=Document Card;
                      CaptionML=ENU=Document Card;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 PurchDocMgt.ShowDocumentFromPurchDoc(Rec);
                               END;
                                }
      { 6085585 ;2   ;Action    ;
                      Name=Show File;
                      ShortCutKey=Shift+Ctrl+P;
                      CaptionML=ENU=&Show File;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendAsPDF;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 PurchDocMgt.ShowDocPDFFromPurchDoc(Rec);
                               END;
                                }
      { 6085584 ;2   ;Action    ;
                      Name=Incoming E-Mail;
                      CaptionML=ENU=Incoming E-Mail;
                      Promoted=Yes;
                      Visible=ShowIncomingEmail;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 PurchDocMgt.ShowEmailFromPurchDoc(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;;Container;
                Name=ContentArea;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ENC=General] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           ENC=Specifies the number of the involved entry or record, according to the specified number series.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 22  ;2   ;Field     ;
                CaptionML=[ENU=Vendor No.;
                           ENC=Vendor No.];
                ToolTipML=[ENU=Specifies the number of the vendor who delivers the products.;
                           ENC=Specifies the number of the vendor who delivers the products.];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Buy-from Vendor No.";
                Importance=Additional;
                OnValidate=BEGIN
                             OnAfterValidateBuyFromVendorNo(Rec,xRec);
                             CurrPage.UPDATE;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor Name;
                           ENC=Vendor Name];
                ToolTipML=[ENU=Specifies the name of the vendor who delivers the products.;
                           ENC=Specifies the name of the vendor who delivers the products.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaMgmtFacade@1001 : Codeunit 9179;
                           BEGIN
                             IF "No." = '' THEN
                               InitRecord;

                             OnAfterValidateBuyFromVendorNo(Rec,xRec);

                             IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 66  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies additional posting information for the document. After you post the document, the description can add detail to vendor and customer ledger entries.;
                           ENC=Specifies additional posting information for the document. After you post the document, the description can add detail to vendor and customer ledger entries.];
                ApplicationArea=#Suite;
                SourceExpr="Posting Description";
                Visible=FALSE }

    { 4   ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           ENC=Buy-from];
                GroupType=Group }

    { 63  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENC=Address];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           ENC=Specifies the address of the vendor who ships the items.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENC=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENC=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address 2";
                Importance=Additional }

    { 67  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENC=City];
                ToolTipML=[ENU=Specifies the city of the vendor on the purchase document.;
                           ENC=Specifies the city of the vendor on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from City";
                Importance=Additional;
                QuickEntry=FALSE }

    { 88  ;3   ;Group     ;
                Visible=IsBuyFromCountyVisible;
                GroupType=Group }

    { 74  ;4   ;Field     ;
                CaptionML=[ENU=State;
                           ENC=Province/State];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ENC=Specifies the state, province or county as a part of the address.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from County";
                Importance=Additional }

    { 68  ;3   ;Field     ;
                CaptionML=[ENU=ZIP Code;
                           ENC=Postal/ZIP Code];
                ToolTipML=[ENU=Specifies the ZIP code.;
                           ENC=Specifies the postal code.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ENC=Country/Region];
                ToolTipML=[ENU=Specifies the country or region of the vendor on the purchase document.;
                           ENC=Specifies the country or region of the vendor on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Country/Region Code";
                Importance=Additional;
                OnValidate=BEGIN
                             IsBuyFromCountyVisible := FormatAddress.UseCounty("Buy-from Country/Region Code");
                           END;
                            }

    { 123 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENC=Contact No.];
                ToolTipML=[ENU=Specifies the number of your contact at the vendor.;
                           ENC=Specifies the number of your contact at the vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact No.";
                Importance=Additional;
                QuickEntry=FALSE }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENC=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           ENC=Specifies the name of the person to contact about shipment of the item from this vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact";
                Editable="Buy-from Vendor No." <> '' }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded.;
                           ENC=Specifies the date when the posting of the purchase document will be recorded.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Additional;
                QuickEntry=FALSE }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the related document was created.;
                           ENC=Specifies the date when the related document was created.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional;
                QuickEntry=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                           ENC=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           ENC=Specifies the date you expect to receive the items on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expected Receipt Date" }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the identification number of a compensation agreement.;
                           ENC=Specifies the identification number of a compensation agreement.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Authorization No." }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this purchase document is created for.;
                           ENC=Specifies the number of the incoming document that this purchase document is created for.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document number of the original document you received from the vendor. You can require the document number for posting, or let it be optional. By default, it's required, so that this document references the original. Making document numbers optional removes a step from the posting process. For example, if you attach the original invoice as a PDF, you might not need to enter the document number. To specify whether document numbers are required, in the Purchases & Payables Setup window, select or clear the Ext. Doc. No. Mandatory field.;
                           ENC=Specifies the document number of the original document you received from the vendor. You can require the document number for posting, or let it be optional. By default, it's required, so that this document references the original. Making document numbers optional removes a step from the posting process. For example, if you attach the original invoice as a PDF, you might not need to enter the document number. To specify whether document numbers are required, in the Purchases & Payables Setup window, select or clear the Ext. Doc. No. Mandatory field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Cr. Memo No.";
                ShowMandatory=VendorCreditMemoNoMandatory }

    { 6085574;2;Group     ;
                Name=AppCodes;
                CaptionML=ENU="";
                GroupType=Group }

    { 10  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is assigned to the vendor.;
                           ENC=Specifies which purchaser is assigned to the vendor.];
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;
                            }

    { 6085592;3;Group     ;
                Name=AppFlowCode;
                CaptionML=ENU="";
                Visible=ShowApproval;
                GroupType=Group }

    { 6085583;4;Field     ;
                Name=ApprovalFlowCode;
                CaptionML=ENU=Approval Flow Code;
                SourceExpr=ApprovalFlowCode;
                Editable=ApprovalFlowCodeEditable;
                OnValidate=BEGIN
                             PurchHeaderDCInfo.UpdateApprovalFlowCode(Rec,ApprovalFlowCode);
                           END;

                OnLookup=BEGIN
                           EXIT(PurchHeaderDCInfo.LookupApprovalFlowCode(Text));
                         END;
                          }

    { 6085575;2;Field     ;
                Name=Reason Code;
                SourceExpr="Reason Code" }

    { 1102601000;2;Field  ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           ENC=Specifies the campaign number the document is linked to.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center, such as a distribution hub, that is associated with the involved user, company, customer, or vendor.;
                           ENC=Specifies the code of the responsibility centre, such as a distribution hub, that is associated with the involved user, company, customer, or vendor.];
                ApplicationArea=#Suite;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           ENC=Specifies the ID of the user who is responsible for the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Assigned User ID";
                Importance=Additional;
                QuickEntry=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry that handles the posting of purchase credit memos.;
                           ENC=Specifies the status of a job queue entry that handles the posting of purchase credit memos.];
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueueUsed }

    { 6085567;2;Field     ;
                Name=AmountExclVAT;
                CaptionML=ENU=Amount Excl. VAT (Imported);
                SourceExpr=AmountExclVAT;
                Editable=FALSE }

    { 6085573;2;Field     ;
                Name=AmountInclVAT;
                CaptionML=ENU=Amount Incl. VAT (Imported);
                SourceExpr=AmountInclVAT;
                Editable=FALSE }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           ENC=Specifies whether the record is open, is waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.];
                ApplicationArea=#Suite;
                SourceExpr=Status;
                QuickEntry=FALSE }

    { 6085588;2;Group     ;
                Name=Approvals;
                CaptionML=ENU="";
                Visible=ShowApproval;
                GroupType=Group }

    { 6085589;3;Field     ;
                Name=ApprovBy;
                CaptionML=ENU=Approval by;
                SourceExpr=DCApprovalsBridge.GetApproversList(Rec,TRUE);
                CaptionClass='1,5,,' + GetApprovalCaption;
                OnDrillDown=BEGIN
                              DCApprovalsBridge.ShowApproversList(Rec);
                            END;
                             }

    { 6085587;3;Field     ;
                Name=ApprovComments;
                CaptionML=ENU=Approval Comments;
                SourceExpr=DCApprovalsBridge.GetLastApprovalComment(Rec);
                OnDrillDown=BEGIN
                              DCApprovalMgt.DrillDownApprovalComments(Rec);
                            END;
                             }

    { 6085593;1;Part      ;
                Name=DocumentFiles;
                CaptionML=ENU=Attached Files;
                PagePartID=Page6085759;
                Visible=TRUE;
                PartType=Page;
                ShowFilter=No }

    { 46  ;1   ;Part      ;
                Name=PurchLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page98;
                Enabled="Buy-from Vendor No." <> '';
                Editable="Buy-from Vendor No." <> '';
                UpdatePropagation=Both }

    { 6085578;1;Part      ;
                Name=ApprovalComments;
                CaptionML=ENU=Approval Comments;
                SubPageView=SORTING(Table ID,Document Type,Document No.)
                            WHERE(Table ID=CONST(38));
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page6085715;
                Visible=ShowApprovalFactBox;
                PartType=Page;
                ShowFilter=No }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           ENC=Invoice Details];
                GroupType=Group }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for amounts on the purchase lines.;
                           ENC=Specifies the currency code for amounts on the purchase lines.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 110 ;2   ;Field     ;
                Name=Prices Including VAT;
                ToolTipML=ENU=Specifies if the Unit Price and Line Amount fields on document lines should be shown with or without VAT.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 141 ;2   ;Field     ;
                Name=VAT Bus. Posting Group;
                ToolTipML=ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount.;
                           ENC=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the document represents, for the purpose of reporting to INTRASTAT.;
                           ENC=Specifies the type of transaction that the document represents, for the purpose of reporting to INTRASTAT.];
                SourceExpr="Transaction Type" }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ENC=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                           ENC=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.];
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.;
                           ENC=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Discount %" }

    { 139 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                           ENC=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 1020002;2;Field     ;
                ToolTipML=[ENU=Specifies if the customer or vendor is liable for sales tax.;
                           ENC=Specifies if the customer or vendor is liable for sales tax.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Liable" }

    { 1020000;2;Field     ;
                ToolTipML=[ENU=Specifies the tax area that is used to calculate and post sales tax.;
                           ENC=Specifies the tax area that is used to calculate and post sales tax.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Area Code";
                OnValidate=BEGIN
                             CurrPage.PurchLines.PAGE.RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1020004;2;Field     ;
                ToolTipML=[ENU=Specifies the tax exemption number from the Vendor table when you fill in the Buy-from Vendor No. field. The field is blank if no tax exemption number has been entered on the vendor card.;
                           ENC=Specifies the tax exemption number from the Vendor table when you fill in the Buy-from Vendor No. field. The field is blank if no tax exemption number has been entered on the vendor card.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Exemption No." }

    { 1400000;2;Field     ;
                ToolTipML=[ENU=Specifies the tax area code for self assessed Provincial Sales Tax for the company.;
                           ENC=Specifies the tax area code for self assessed Provincial Sales Tax for the company.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Provincial Tax Area Code";
                Importance=Additional }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                           ENC=Specifies a code for the location where you want the items to be placed when they are received.];
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Importance=Additional }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           ENC=Shipping and Payment];
                GroupType=Group }

    { 71  ;2   ;Group     ;
                Name=ShipToGroup;
                CaptionML=ENU="";
                GroupType=Group }

    { 70  ;3   ;Field     ;
                CaptionML=[ENU=Ship-to;
                           ENC=Ship-to];
                ToolTipML=[ENU=Specifies the address that the products on the purchase document are shipped to. Default (Company Address): The same as the company address specified in the Company Information window. Location: One of the company's location addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                           ENC=Specifies the address that the products on the purchase document are shipped to. Default (Company Address): The same as the company address specified in the Company Information window. Location: One of the company's location addresses. Custom Address: Any ship-to address that you specify in the fields below.];
                OptionCaptionML=[ENU=Default (Vendor Address),Alternate Vendor Address,Custom Address;
                                 ENC=Default (Vendor Address),Alternate Vendor Address,Custom Address];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                OnValidate=BEGIN
                             ValidateShippingOption;
                           END;
                            }

    { 69  ;2   ;Group     ;
                Name=OrderAddressCodeGroup;
                CaptionML=ENU="";
                Visible=ShipToOptions = ShipToOptions::"Alternate Vendor Address";
                GroupType=Group }

    { 72  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the order address of the related vendor.;
                           ENC=Specifies the order address of the related vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Address Code" }

    { 48  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           ENC=Ship-to];
                GroupType=Group }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENC=Name];
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.;
                           ENC=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENC=Address];
                ToolTipML=[ENU=Specifies the address that you want the items in the purchase order to be shipped to.;
                           ENC=Specifies the address that you want the items in the purchase order to be shipped to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENC=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENC=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENC=City];
                ToolTipML=[ENU=Specifies the city of the vendor on the purchase document.;
                           ENC=Specifies the city of the vendor on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 86  ;3   ;Group     ;
                Visible=IsShipToCountyVisible;
                GroupType=Group }

    { 77  ;4   ;Field     ;
                CaptionML=[ENU=State;
                           ENC=Province/State];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ENC=Specifies the state, province or county as a part of the address.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to County";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=ZIP Code;
                           ENC=Postal/ZIP Code];
                ToolTipML=[ENU=Specifies the ZIP code.;
                           ENC=Specifies the postal code.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ENC=Country/Region];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                OnValidate=BEGIN
                             IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
                           END;
                            }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENC=Contact];
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.;
                           ENC=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 1020015;3;Field     ;
                CaptionML=[ENU=UPS Zone;
                           ENC=UPS Zone];
                ToolTipML=[ENU=Specifies a UPS Zone code for this document if UPS is used for shipments.;
                           ENC=Specifies a UPS Zone code for this document if UPS is used for shipments.];
                SourceExpr="Ship-to UPS Zone" }

    { 55  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           ENC=Pay-to];
                GroupType=Group }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           ENC=Name];
                ToolTipML=[ENU=Specifies the vendor who is sending the invoice.;
                           ENC=Specifies the vendor who is sending the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaMgmtFacade@1000 : Codeunit 9179;
                           BEGIN
                             IF GETFILTER("Pay-to Vendor No.") = xRec."Pay-to Vendor No." THEN
                               IF "Pay-to Vendor No." <> xRec."Pay-to Vendor No." THEN
                                 SETRANGE("Pay-to Vendor No.");

                             IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           ENC=Address];
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           ENC=Specifies the address of the vendor sending the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           ENC=Address 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           ENC=Specifies additional address information.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           ENC=City];
                ToolTipML=[ENU=Specifies the city of the vendor on the purchase document.;
                           ENC=Specifies the city of the vendor on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 84  ;3   ;Group     ;
                Visible=IsPayToCountyVisible;
                GroupType=Group }

    { 81  ;4   ;Field     ;
                CaptionML=[ENU=State;
                           ENC=Province/State];
                ToolTipML=[ENU=Specifies the state, province or county as a part of the address.;
                           ENC=Specifies the state, province or county as a part of the address.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to County";
                Importance=Additional }

    { 73  ;3   ;Field     ;
                CaptionML=[ENU=ZIP Code;
                           ENC=Postal/ZIP Code];
                ToolTipML=[ENU=Specifies the ZIP code.;
                           ENC=Specifies the postal code.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 82  ;3   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           ENC=Country/Region];
                ToolTipML=[ENU=Specifies the country or region of the vendor on the purchase document.;
                           ENC=Specifies the country or region of the vendor on the purchase document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Country/Region Code";
                Importance=Additional;
                OnValidate=BEGIN
                             IsPayToCountyVisible := FormatAddress.UseCounty("Pay-to Country/Region Code");
                           END;
                            }

    { 125 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           ENC=Contact No.];
                ToolTipML=[ENU=Specifies the number of the contact who sends the invoice.;
                           ENC=Specifies the number of the contact who sends the invoice.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           ENC=Contact];
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           ENC=Specifies the name of the person to contact about an invoice from this vendor.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact" }

    { 1480000;3;Field     ;
                ToolTipML=[ENU=Specifies the 1099 code of the vendor if one was entered on the vendor card.;
                           ENC=Specifies the 1099 code of the vendor if one was entered on the vendor card.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="IRS 1099 Code";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           ENC=Foreign Trade] }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a specification of the document's transaction, for the purpose of reporting to INTRASTAT.;
                           ENC=Specifies a specification of the document's transaction, for the purpose of reporting to INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transaction Specification" }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           ENC=Specifies the transport method, for the purpose of reporting to INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr="Transport Method" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the port of entry where the items pass into your country/region, for reporting to Intrastat.;
                           ENC=Specifies the code of the port of entry where the items pass into your country/region, for reporting to Intrastat.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry Point" }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area of the customer or vendor, for the purpose of reporting to INTRASTAT.;
                           ENC=Specifies the area of the customer or vendor, for the purpose of reporting to INTRASTAT.];
                ApplicationArea=#Suite;
                SourceExpr=Area }

    { 1904409301;1;Group  ;
                CaptionML=[ENU=Application;
                           ENC=Application] }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           ENC=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type" }

    { 137 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           ENC=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No." }

    { 133 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                           ENC=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID" }

    { 1020003;1;Group     ;
                CaptionML=[ENU=Electronic Invoice;
                           ENC=Electronic Invoice] }

    { 1020001;2;Field     ;
                ToolTipML=[ENU=Specifies the official invoice number for the electronic document.;
                           ENC=Specifies the official invoice number for the electronic document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Fiscal Invoice Number PAC" }

    { 1900000007;;Container;
                Name=FactboxArea;
                ContainerType=FactBoxArea }

    { 954 ;1   ;Part      ;
                Name=Attached Documents;
                CaptionML=[ENU=Attachments;
                           ENC=Attachments];
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(38),
                            No.=FIELD(No.),
                            Document Type=FIELD(Document Type);
                PagePartID=Page1174;
                Visible=FALSE;
                PartType=Page }

    { 6085576;1;Part      ;
                Name=CaptureUI;
                CaptionML=ENU=Document;
                SubPageView=SORTING(Document Type,No.)
                            WHERE(Document Type=CONST(Credit Memo));
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page6085596 }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1005 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      PurchCalcDiscByType@1007 : Codeunit 66;
      LinesInstructionMgt@1017 : Codeunit 1320;
      FormatAddress@1027 : Codeunit 365;
      ChangeExchangeRate@1001 : Page 511;
      ShipToOptions@1022 : 'Default (Vendor Address),Alternate Vendor Address,Custom Address';
      JobQueueVisible@1000 : Boolean INDATASET;
      JobQueueUsed@1019 : Boolean INDATASET;
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1006 : Boolean;
      VendorCreditMemoNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      IsOfficeAddin@1015 : Boolean;
      CanCancelApprovalForRecord@1014 : Boolean;
      DocumentIsPosted@1018 : Boolean;
      OpenPostedPurchCrMemoQst@1013 : TextConst '@@@="%1 = posted document number";ENU=The credit memo is posted as number %1 and moved to the Posted Purchase Credit Memos window.\\Do you want to open the posted credit memo?;ENC=The credit memo is posted as number %1 and moved to the Posted Purchase Credit Memos window.\\Do you want to open the posted credit memo?';
      CreateIncomingDocumentEnabled@1016 : Boolean;
      CanRequestApprovalForFlow@1020 : Boolean;
      CanCancelApprovalForFlow@1021 : Boolean;
      IsSaaS@1023 : Boolean;
      IsBuyFromCountyVisible@1026 : Boolean;
      IsPayToCountyVisible@1025 : Boolean;
      IsShipToCountyVisible@1024 : Boolean;
      PurchHeaderDCInfo@6085592 : Record 6085767;
      PurchDocMgt@6085580 : Codeunit 6085709;
      DCApprovalMgt@6085579 : Codeunit 6085722;
      DCApprovalsBridge@6085593 : Codeunit 6085790;
      SIStorage@6085581 : Codeunit 6085789;
      ApprovalFlowCode@6085595 : Code[10];
      AmountExclVAT@6085578 : Decimal;
      AmountInclVAT@6085577 : Decimal;
      LineAmountExclVAT@6085576 : Decimal;
      LineAmountInclVAT@6085575 : Decimal;
      ImageCleared@6085574 : Boolean;
      ApprovalFlowCodeEditable@6085573 : Boolean INDATASET;
      PreviewPostingEnabled@6085594 : Boolean INDATASET;
      ShowIncomingEmail@6085582 : Boolean INDATASET;
      EnableForceApproval@6085590 : Boolean INDATASET;
      EnableChangeImportedAmount@6085589 : Boolean INDATASET;
      EnableSendApproval@6085588 : Boolean INDATASET;
      EnableCancelApproval@6085587 : Boolean INDATASET;
      EnableApprove@6085586 : Boolean INDATASET;
      EnableReject@6085585 : Boolean INDATASET;
      EnableForward@6085584 : Boolean INDATASET;
      EnableOnHold@6085591 : Boolean INDATASET;
      ShowAllocations@6085583 : Boolean INDATASET;
      ShowApprovalFactBox@6085597 : Boolean INDATASET;
      ShowApproval@6085596 : Boolean INDATASET;
      ApprovedByMsg@6085599 : TextConst 'ENU=Approved by';
      ApprovalByMsg@6085598 : TextConst 'ENU=Approval by';
      ShowImportedAmounts@6085600 : Boolean INDATASET;

    LOCAL PROCEDURE ActivateFields@6();
    BEGIN
      IsBuyFromCountyVisible := FormatAddress.UseCounty("Buy-from Country/Region Code");
      IsPayToCountyVisible := FormatAddress.UseCounty("Pay-to Country/Region Code");
      IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
    END;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1001 : Record 38;
      PurchCrMemoHdr@1002 : Record 124;
      ApplicationAreaMgmtFacade@1003 : Codeunit 9179;
      InstructionMgt@1004 : Codeunit 1330;
      IsScheduledPosting@1005 : Boolean;
    BEGIN
      IF ApplicationAreaMgmtFacade.IsFoundationEnabled THEN
        LinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);

      IsScheduledPosting := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      DocumentIsPosted := (NOT PurchaseHeader.GET("Document Type","No.")) OR IsScheduledPosting;

      IF IsScheduledPosting THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" THEN
        EXIT;

      IF IsOfficeAddin THEN BEGIN
        PurchCrMemoHdr.SETRANGE("Pre-Assigned No.","No.");
        IF PurchCrMemoHdr.FINDFIRST THEN
          PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
      END ELSE
        IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::"Credit Memo","No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorCreditMemoNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
      WorkflowWebhookMgt@1000 : Codeunit 1543;
      PurchLineRel@6085573 : Record 6085702;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (NOT HasIncomingDocument) AND ("No." <> '');
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      WorkflowWebhookMgt.GetCanRequestAndCanCancel(RECORDID,CanRequestApprovalForFlow,CanCancelApprovalForFlow);

      PurchLineRel.SETRANGE("Document Type","Document Type");
      PurchLineRel.SETRANGE("Document No.","No.");
      PreviewPostingEnabled := PurchLineRel.ISEMPTY;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@13();
    VAR
      PurchCrMemoHdr@1000 : Record 124;
      InstructionMgt@1001 : Codeunit 1330;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Pre-Assigned No.","No.");
      IF PurchCrMemoHdr.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(STRSUBSTNO(OpenPostedPurchCrMemoQst,PurchCrMemoHdr."No."),
             InstructionMgt.ShowPostedConfirmationMessageCode)
        THEN
          PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
    END;

    LOCAL PROCEDURE ValidateShippingOption@7();
    BEGIN
      CASE ShipToOptions OF
        ShipToOptions::"Default (Vendor Address)":
          BEGIN
            VALIDATE("Order Address Code",'');
            VALIDATE("Buy-from Vendor No.");
          END;
        ShipToOptions::"Alternate Vendor Address":
          VALIDATE("Order Address Code",'');
      END
    END;

    LOCAL PROCEDURE CalculateCurrentShippingOption@8();
    BEGIN
      CASE TRUE OF
        "Order Address Code" <> '':
          ShipToOptions := ShipToOptions::"Alternate Vendor Address";
        BuyFromAddressEqualsShipToAddress:
          ShipToOptions := ShipToOptions::"Default (Vendor Address)";
        ELSE
          ShipToOptions := ShipToOptions::"Custom Address";
      END;
    END;

    PROCEDURE UpdateAmounts@6085574();
    BEGIN
      PurchDocMgt.GetPurchStatusAmounts(Rec,AmountExclVAT,AmountInclVAT,LineAmountExclVAT,LineAmountInclVAT);
    END;

    LOCAL PROCEDURE EnableFields@6085573();
    VAR
      PurchDocMgt@6085575 : Codeunit 6085709;
      Document@6085574 : Record 6085590;
      EmptyGuid@6085573 : GUID;
      DCApprovalsBridge@6085576 : Codeunit 6085790;
    BEGIN
      ShowIncomingEmail := FALSE;
      EnableChangeImportedAmount := DCApprovalsBridge.AllowChangingImportedAmounts(Rec);
      IF PurchDocMgt.GetDocument(Document,DATABASE::"Purchase Header","Document Type","No.") THEN
        ShowIncomingEmail := Document."E-Mail GUID" <> EmptyGuid;
      ShowApproval := DCApprovalsBridge.IsPurchApprovalEnabledDocType("Document Type");

      // Possition of Change Imported Amounts are rendered wrong (standard NAV issue observed in 2018 RTM) when other actions in same group have variable set on Visible property.
      // Below workaround solved the issue
      ShowImportedAmounts := TRUE;

      IF ShowApproval THEN
        DCApprovalsBridge.SetApprovalButtons(
          Rec,
          EnableForceApproval,
          EnableSendApproval,
          EnableCancelApproval,
          EnableApprove,
          EnableReject,
          EnableForward,
          EnableOnHold,
          ShowApprovalFactBox);
    END;

    LOCAL PROCEDURE GetApprovalCaption@6085575() : Text[80];
    BEGIN
      IF Status = Status::Released THEN
        EXIT(ApprovedByMsg)
      ELSE
        EXIT(ApprovalByMsg);
    END;

    BEGIN
    END.
  }
}

