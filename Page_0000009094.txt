OBJECT Page 9094 Vendor Statistics FactBox
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:50 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Vendor Statistics;
    SourceTable=Table23;
    PageType=CardPart;
    OnInit=BEGIN
             ShowVendorNo := TRUE;
           END;

    OnFindRecord=BEGIN
                   TotalAmountLCY := 0;

                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       FILTERGROUP(4);
                       SETAUTOCALCFIELDS("Balance (LCY)","Outstanding Orders (LCY)","Amt. Rcd. Not Invoiced (LCY)","Outstanding Invoices (LCY)");
                       TotalAmountLCY := "Balance (LCY)" + "Outstanding Orders (LCY)" + "Amt. Rcd. Not Invoiced (LCY)" + "Outstanding Invoices (LCY)";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 13  ;1   ;Field     ;
                CaptionML=ENU=Vendor No.;
                ToolTipML=ENU=Specifies the number of the vendor. The field is either filled automatically from a defined number series, or you enter the number manually because you have enabled manual number entry in the number-series setup.;
                ApplicationArea=#All;
                SourceExpr="No.";
                Visible=ShowVendorNo;
                OnDrillDown=BEGIN
                              ShowDetails;
                            END;
                             }

    { 4   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the total value of your completed purchases from the vendor in the current fiscal year. It is calculated from amounts excluding tax on all completed purchase invoices and credit memos.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance (LCY)";
                OnDrillDown=VAR
                              VendLedgEntry@1001 : Record 25;
                              DtldVendLedgEntry@1000 : Record 380;
                            BEGIN
                              DtldVendLedgEntry.SETRANGE("Vendor No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldVendLedgEntry."Currency Code");
                              VendLedgEntry.DrillDownOnEntries(DtldVendLedgEntry);
                            END;
                             }

    { 5   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the sum of outstanding orders (in $) to this vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Orders (LCY)" }

    { 6   ;1   ;Field     ;
                CaptionML=ENU=Amt. Rcd. Not Invd. ($);
                ToolTipML=ENU=Specifies the total invoice amount (in $) for the items you have received but not yet been invoiced for.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amt. Rcd. Not Invoiced (LCY)" }

    { 7   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the sum of the vendor's outstanding purchase invoices in $.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Invoices (LCY)" }

    { 9   ;1   ;Field     ;
                CaptionML=ENU=Total ($);
                ToolTipML=ENU=Specifies the payment amount that you owe the vendor for completed purchases plus purchases that are still ongoing.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmountLCY;
                AutoFormatType=1 }

    { 12  ;1   ;Field     ;
                Name=Balance Due (LCY);
                CaptionML=ENU=Balance Due ($);
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CalcOverDueBalance;
                CaptionClass=FORMAT(STRSUBSTNO(Text000,FORMAT(WORKDATE)));
                OnDrillDown=VAR
                              VendLedgEntry@1001 : Record 25;
                              DtldVendLedgEntry@1000 : Record 380;
                            BEGIN
                              DtldVendLedgEntry.SETFILTER("Vendor No.","No.");
                              COPYFILTER("Global Dimension 1 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 1");
                              COPYFILTER("Global Dimension 2 Filter",DtldVendLedgEntry."Initial Entry Global Dim. 2");
                              COPYFILTER("Currency Filter",DtldVendLedgEntry."Currency Code");
                              VendLedgEntry.DrillDownOnOverdueEntries(DtldVendLedgEntry);
                            END;
                             }

    { 1   ;1   ;Field     ;
                CaptionML=ENU=Invoiced Prepayment Amount ($);
                ToolTipML=ENU=Specifies your payments to the vendor, based on invoiced prepayments.;
                ApplicationArea=#Prepayments;
                SourceExpr=GetInvoicedPrepmtAmountLCY }

    { 2   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the sum of payments paid to the vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payments (LCY)" }

    { 3   ;1   ;Field     ;
                Name=LastPaymentDate;
                CaptionML=ENU=Last Payment Date;
                ToolTipML=ENU=Specifies the posting date of the last payment paid to the vendor.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetLastPaymentDate;
                OnDrillDown=VAR
                              VendorLedgerEntry@1001 : Record 25;
                              VendorLedgerEntries@1000 : Page 29;
                            BEGIN
                              CLEAR(VendorLedgerEntries);
                              SetFilterLastPaymentDateEntry(VendorLedgerEntry);
                              IF VendorLedgerEntry.FINDLAST THEN
                                VendorLedgerEntries.SETRECORD(VendorLedgerEntry);
                              VendorLedgerEntries.SETTABLEVIEW(VendorLedgerEntry);
                              VendorLedgerEntries.RUN;
                            END;
                             }

  }
  CODE
  {
    VAR
      TotalAmountLCY@1014 : Decimal;
      Text000@1018 : TextConst 'ENU=Overdue Amounts ($) as of %1';
      ShowVendorNo@1000 : Boolean;

    LOCAL PROCEDURE ShowDetails@1102601000();
    BEGIN
      PAGE.RUN(PAGE::"Vendor Card",Rec);
    END;

    [External]
    PROCEDURE SetVendorNoVisibility@2(Visible@1000 : Boolean);
    BEGIN
      ShowVendorNo := Visible;
    END;

    LOCAL PROCEDURE GetLastPaymentDate@1() : Date;
    VAR
      VendorLedgerEntry@1000 : Record 25;
    BEGIN
      SetFilterLastPaymentDateEntry(VendorLedgerEntry);
      IF VendorLedgerEntry.FINDLAST THEN;
      EXIT(VendorLedgerEntry."Posting Date");
    END;

    LOCAL PROCEDURE SetFilterLastPaymentDateEntry@3(VAR VendorLedgerEntry@1000 : Record 25);
    BEGIN
      VendorLedgerEntry.SETCURRENTKEY("Document Type","Vendor No.","Posting Date","Currency Code");
      VendorLedgerEntry.SETRANGE("Vendor No.","No.");
      VendorLedgerEntry.SETRANGE("Document Type",VendorLedgerEntry."Document Type"::Payment);
      VendorLedgerEntry.SETRANGE(Reversed,FALSE);
    END;

    BEGIN
    END.
  }
}

