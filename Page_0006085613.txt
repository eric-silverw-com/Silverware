OBJECT Page 6085613 Document Capture Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=06/26/18;
    Time=[ 1:00:00 AM];
    Version List=DCW17.00.00.5.00.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Capture Setup Wizard;
    InsertAllowed=No;
    DeleteAllowed=No;
    PageType=NavigatePage;
    UsageCategory=Administration;
    OnInit=VAR
             DCSetup@6085573 : Record 6085573;
           BEGIN
             IF (NOT DCSetup.GET) OR (DCSetup."Document Nos." = '') THEN BEGIN
               IsNewCompany := TRUE;
               ActivateCompany := TRUE;
               ExportConfigFiles := TRUE;
             END ELSE
               WizardAction := WizardAction::Setup;

             TestConnection := TRUE;
           END;

    OnOpenPage=BEGIN
                 ShowNextStep(0);
               END;

    ActionList=ACTIONS
    {
      { 1160040012;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1160040011;1 ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=&Back;
                      Promoted=Yes;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowNextStep(-1);
                               END;
                                }
      { 1160040010;1 ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=&Next;
                      Promoted=Yes;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowNextStep(1);
                               END;
                                }
      { 1160040009;1 ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=&Finish;
                      Promoted=Yes;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1160040003;;Container;
                Name=Control1160040003;
                ContainerType=ContentArea }

    { 1160040000;1;Group  ;
                Name=WizardStart;
                Visible=WizardStartVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard helps you to import or export Document Capture configurations and to set up Document Capture. }

    { 6085573;2;Field     ;
                Name=WizardAction;
                CaptionML=ENU=Action;
                OptionCaptionML=ENU=Import Configuration,Export Configuration,Set up Company;
                SourceExpr=WizardAction;
                OnValidate=BEGIN
                             EnableWizardStartFields;
                           END;
                            }

    { 1160040002;2;Field  ;
                Name=ClientFilename;
                AssistEdit=Yes;
                CaptionML=ENU=File Name;
                SourceExpr=ClientFilename;
                Enabled=FilenameEnabled;
                OnValidate=BEGIN
                             IF WizardAction = WizardAction::Import THEN
                               TempConfigFile.CreateFromClientFilePath(ClientFilename);
                           END;

                OnAssistEdit=BEGIN
                               IF WizardAction = WizardAction::Import THEN
                                 ClientFilename := TempConfigFile.BrowseFile(CurrPage.CAPTION,'Setup.xml','XML File (*.xml)|*.xml')
                               ELSE
                                 ClientFilename := TempConfigFile.CreateWithSaveDialog(CurrPage.CAPTION,'');
                             END;
                              }

    { 1160040004;1;Group  ;
                Name=ImportExportSelection;
                CaptionML=ENU=Configurations;
                Visible=ImportExportSelectionVisible;
                GroupType=Group;
                InstructionalTextML=ENU=You can exclude a configuration by unticking 'Include'. Expand a Document Category to view its Templates. }

    { 1160040007;2;Part   ;
                Name=ConfigLines;
                PagePartID=Page6085612;
                Visible=ConfigLinesVisible;
                PartType=Page }

    { 1160040005;1;Group  ;
                Name=ImportExportCompleted;
                CaptionML=ENU=Import/Export Completed;
                Visible=ImportExportCompletedVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Document Capture configurations have been imported/exported. }

    { 1   ;2   ;Field     ;
                Name=TEMP1;
                CaptionClass='3,' }

    { 6085579;1;Group     ;
                Name=WizardSetupCompanyStory;
                CaptionML=ENU=Set up Document Capture;
                Visible=WizardSetupCompanyStoryVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard will help you set up some of the key Document Capture configurations. }

    { 6085578;2;Field     ;
                Name=TEMP3;
                CaptionClass='3,' }

    { 6085577;1;Group     ;
                Name=SpecifyClientCredentials;
                Visible=SpecifyClientCredentialsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=In order to activate and use Document Capture you will need to specify your Continia client credentials. These are given by your reseller. }

    { 6085576;2;Field     ;
                Name=ClientID;
                CaptionML=ENU=Client ID;
                SourceExpr=ClientID;
                OnLookup=VAR
                           ContiniaClientCredentials@6085573 : Record 6192771;
                         BEGIN
                           IF PAGE.RUNMODAL(PAGE::"Continia Client Credentials",ContiniaClientCredentials) = ACTION::LookupOK THEN BEGIN
                             ClientID := ContiniaClientCredentials."Client ID";
                             ClientPassword := ContiniaClientCredentials."Client Password";
                           END;
                         END;
                          }

    { 6085580;2;Field     ;
                Name=ClientPassword;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Client Password;
                SourceExpr=ClientPassword }

    { 6085581;2;Field     ;
                Name=TestConnection;
                CaptionML=ENU=Test Connection;
                SourceExpr=TestConnection }

    { 6085585;1;Group     ;
                Name=SpecifyGeneralDCSetupInfo;
                CaptionML=ENU=General Document Capture Settings;
                Visible=SpecifyGeneralDCSetupInfoVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Please specify general Document Capture settings below. }

    { 6085584;2;Field     ;
                Name=CompanyCode;
                CaptionML=ENU=Company Code;
                CharAllowed=0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+-;
                SourceExpr=CompanyCode }

    { 6085599;2;Field     ;
                Name=DocStorageType;
                CaptionML=ENU=Document Storage Type;
                OptionCaptionML=ENU=File System,Database;
                SourceExpr=DocStorageType;
                OnValidate=VAR
                             DCSetup@6085573 : Record 6085573;
                           BEGIN
                             ArchiveFilePathEnabled := DocStorageType = DCSetup."Document Storage Type"::"File System";
                           END;
                            }

    { 6085583;2;Field     ;
                Name=DocFilePath;
                CaptionML=ENU=Document File Path;
                SourceExpr=DocFilePath;
                Enabled=ArchiveFilePathEnabled }

    { 6085582;2;Field     ;
                Name=ActivateCompany;
                CaptionML=ENU=Activate Company;
                SourceExpr=ActivateCompany }

    { 6085586;2;Field     ;
                Name=UseCloudOCR;
                CaptionML=ENU=Use Cloud OCR;
                SourceExpr=UseCloudOCR }

    { 6085587;2;Field     ;
                Name=ExportConfigFiles;
                CaptionML=ENU=Export OCR Configuration Files;
                SourceExpr=ExportConfigFiles;
                OnValidate=BEGIN
                             IF UseCloudOCR THEN
                               ExportConfigFiles := TRUE;
                           END;
                            }

    { 6085574;2;Field     ;
                Name=CreateDCProfile;
                CaptionML=ENU=Create Document Capture Role Center;
                SourceExpr=DoCreateDCProfile }

    { 6085575;2;Field     ;
                Name=SetDCDefaultProfile;
                CaptionML=ENU=Set as Default Role Center;
                SourceExpr=SetDCDefaultProfile }

    { 6085590;1;Group     ;
                Name=SpecifyWebApproval;
                CaptionML=ENU=Web Approval;
                Visible=SpecifyWebApprovalVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Please specify required settings to use Web Approval. You must specify the NAV Web Service URL for the credential types you would like to enable. }

    { 6085589;2;Field     ;
                Name=EnableWebApproval;
                CaptionML=ENU=Enable Web Approval;
                SourceExpr=EnableWebApproval;
                OnValidate=VAR
                             ContiniaCompanySetup@6085575 : Record 6192773;
                             ContiniaWebPortal@6085574 : Record 6192774;
                             Environment@6085573 : Codeunit 6085667;
                             URLMgt@6085576 : Codeunit 6085699;
                             SOAPUrl@6085577 : Text[250];
                           BEGIN
                             IF EnableWebApproval THEN BEGIN
                               IF WebPortalCode = '' THEN BEGIN
                                 IF ContiniaCompanySetup.GET THEN
                                   WebPortalCode := ContiniaCompanySetup."Web Portal Code";

                                 IF WebPortalCode = '' THEN
                                   IF ContiniaWebPortal.FINDFIRST THEN
                                     WebPortalCode := ContiniaWebPortal.Code
                                   ELSE
                                     WebPortalCode := 'WEB';

                                 OnValidateWebPortalCode(WebPortalCode);
                               END;

                               SOAPUrl := URLMgt.GetSOAPUrl;
                               IF STRLEN(SOAPUrl) >= 9 THEN BEGIN
                                 IF COPYSTR(SOAPUrl,STRLEN(SOAPUrl) - 8) = '/Services' THEN
                                   SOAPUrl := COPYSTR(SOAPUrl,1, STRLEN(SOAPUrl) - 9);
                               END;

                               IF WindowsWSUrl = '' THEN BEGIN
                                 IF SOAPUrl <> '' THEN
                                   WindowsWSUrl := SOAPUrl
                                 ELSE
                                   WindowsWSUrl := 'http://my-nav-server:7047/NAV/WS';
                               END;

                               IF DatabaseWSUrl = '' THEN BEGIN
                                 IF SOAPUrl <> '' THEN
                                   DatabaseWSUrl := SOAPUrl
                                 ELSE
                                   DatabaseWSUrl := 'http://my-nav-server:7047/NAV/WS';
                               END;

                               IF LocalDomainName = '' THEN
                                 IF OnlineMgt.IsDev OR OnlineMgt.IsDemo THEN
                                   LocalDomainName := Environment.MachineName
                                 ELSE
                                   LocalDomainName := Environment.UserDomainName;

                               IF UseContiniaOnlineWeb THEN
                                 IF WebSiteUrl = '' THEN
                                   CASE TRUE OF
                                     OnlineMgt.IsDev:
                                       WebSiteUrl := 'https://dev.continiaonline.com';
                                     OnlineMgt.IsDemo:
                                       WebSiteUrl := 'https://demo.continiaonline.com'
                                     ELSE
                                       WebSiteUrl := 'https://www.continiaonline.com';
                                   END;
                             END;

                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 6085598;2;Group     ;
                Name=Control6085598;
                CaptionML=ENU="";
                Enabled=EnableWebApproval;
                GroupType=Group }

    { 6085597;3;Field     ;
                Name=WebPortalCode;
                CaptionML=ENU=Web Portal Code;
                SourceExpr=WebPortalCode;
                Editable=EnableWebApproval;
                OnValidate=BEGIN
                             OnValidateWebPortalCode(WebPortalCode);
                           END;

                OnLookup=VAR
                           ContiniaWebPortal@6085573 : Record 6192774;
                         BEGIN
                           IF PAGE.RUNMODAL(PAGE::"Continia Web Portal List",ContiniaWebPortal) = ACTION::LookupOK THEN BEGIN
                             Text := ContiniaWebPortal.Code;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 6085588;3;Field     ;
                Name=UseContiniaOnlineWeb;
                CaptionML=ENU=Use Continia Online Web Portal;
                SourceExpr=UseContiniaOnlineWeb;
                Enabled=EnableWebApproval;
                OnValidate=BEGIN
                             IF UseContiniaOnlineWeb THEN BEGIN
                               CASE TRUE OF
                                 OnlineMgt.IsDev:
                                   WebSiteUrl := 'https://dev.continiaonline.com';
                                 OnlineMgt.IsDemo:
                                   WebSiteUrl := 'https://demo.continiaonline.com'
                                 ELSE
                                   WebSiteUrl := 'https://www.continiaonline.com';
                               END;
                             END ELSE
                               WebSiteUrl := '';
                           END;
                            }

    { 6085591;3;Field     ;
                Name=LocalDomainName;
                CaptionML=ENU=Local Domain Name;
                SourceExpr=LocalDomainName;
                Enabled=EnableWebApproval }

    { 6085592;3;Field     ;
                Name=WindowsWSUrl;
                CaptionML=ENU=Windows Web Service URL;
                SourceExpr=WindowsWSUrl;
                Enabled=EnableWebApproval }

    { 6085593;3;Field     ;
                Name=DatabaseWSUrl;
                CaptionML=ENU=Database Web Service URL;
                SourceExpr=DatabaseWSUrl;
                Enabled=EnableWebApproval }

    { 6085594;3;Field     ;
                Name=WebSiteUrl;
                CaptionML=ENU=Web Site URL;
                SourceExpr=WebSiteUrl;
                Enabled=EnableWebApproval }

    { 6085596;1;Group     ;
                Name=WizardCompleted;
                CaptionML=ENU=Wizard is complete;
                Visible=WizardCompletedVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This wizard has now completed. We hope you will enjoy working with Continia Document Capture. }

    { 6085595;2;Field     ;
                Name=TEMP4;
                CaptionClass='3,' }

  }
  CODE
  {
    VAR
      OnlineMgt@6085602 : Codeunit 6192772;
      TempConfigFile@1017 : TEMPORARY Record 6085608;
      BackEnabled@1160040000 : Boolean INDATASET;
      ConfigLinesVisible@1160040005 : Boolean INDATASET;
      WizardStartVisible@1160040009 : Boolean INDATASET;
      ImportExportSelectionVisible@6085576 : Boolean INDATASET;
      ImportExportCompletedVisible@1160040004 : Boolean INDATASET;
      WizardSetupCompanyStoryVisible@6085593 : Boolean INDATASET;
      SpecifyClientCredentialsVisible@6085594 : Boolean INDATASET;
      SpecifyGeneralDCSetupInfoVisible@6085595 : Boolean INDATASET;
      SpecifyWebApprovalVisible@6085596 : Boolean INDATASET;
      WizardCompletedVisible@6085597 : Boolean INDATASET;
      FinishEnabled@1160040006 : Boolean INDATASET;
      NextEnabled@1160040007 : Boolean INDATASET;
      FilenameEnabled@6085598 : Boolean INDATASET;
      TestConnection@1010 : Boolean;
      ActivateCompany@1009 : Boolean;
      DoCreateDCProfile@1008 : Boolean;
      SetDCDefaultProfile@1007 : Boolean;
      EnableWebApproval@1006 : Boolean;
      UseContiniaOnlineWeb@1005 : Boolean;
      UseCloudOCR@1004 : Boolean;
      ExportConfigFiles@1003 : Boolean;
      IsNewCompany@1002 : Boolean;
      ArchiveFilePathEnabled@6085583 : Boolean INDATASET;
      ClientID@1014 : Code[20];
      CompanyCode@1013 : Code[10];
      WebPortalCode@6085575 : Code[20];
      LocalDomainName@1012 : Code[50];
      Step@1011 : Integer;
      Steps@6085577 : 'WizardStart,ImportExportSelection,ImportExportCompleted,WizardSetupCompanyStory,SpecifyClientCredentials,SpecifyGeneralDCSetupInfo,SpecifyWebApproval,WizardCompleted';
      WizardAction@1015 : 'Import,Export,Setup';
      DocStorageType@6085579 : 'File System,Database';
      ClientFilename@1018 : Text[250];
      TEMP@1000 : Text INDATASET;
      DocFilePath@6085589 : Text[250];
      ClientPassword@6085588 : Text[50];
      WindowsWSUrl@6085582 : Text[250];
      DatabaseWSUrl@6085581 : Text[250];
      WebSiteUrl@6085580 : Text[80];
      Text001@6085592 : TextConst 'ENU=<Multiple File Locations>';
      Text002@6085601 : TextConst 'ENU=You must specify a Company Code.';
      Text003@6085574 : TextConst 'ENU=You must specify a filename';
      Text004@6085578 : TextConst 'ENU=You must specify a Web Portal Code.';

    LOCAL PROCEDURE ShowNextStep@6085573(NextStep@1160040000 : Integer);
    VAR
      ContiniaCompanySetup@6085574 : Record 6192773;
      ContiniaClientCredentials@6085575 : Record 6192771;
      ContiniaWebPortal@1160040001 : Record 6192774;
      DCSetup@1160040003 : Record 6085573;
      AllObj@6085577 : Record 2000000038;
      OnlineMgt@1160040002 : Codeunit 6192772;
      CODC@1160040004 : Codeunit 6085617;
      CreateDCProfile@1000 : Codeunit 6086007;
      WebClientMgt@1001 : Codeunit 6085662;
      GotClientCredentials@6085576 : Boolean;
    BEGIN
      IF (WizardAction = WizardAction::Setup) AND (Step = 0) AND (NextStep <> 0) THEN
        Step := 2;

      CASE (Step + NextStep) OF
        0:
          BEGIN
            CurrPage.ConfigLines.PAGE.ClearTempTable;
            EnableWizardStartFields;
            ShowStep(Steps::WizardStart,FALSE,TRUE,FALSE);
          END;

        1:
          BEGIN
            IF ClientFilename = '' THEN
              ERROR(Text003);

            IF WizardAction = WizardAction::Import THEN BEGIN
              CurrPage.ConfigLines.PAGE.SetParam(0,TempConfigFile);
            END ELSE BEGIN
              CurrPage.ConfigLines.PAGE.SetParam(1,TempConfigFile);
            END;

            CurrPage.ConfigLines.PAGE.CreateTempTable;
            ShowStep(Steps::ImportExportSelection,TRUE,TRUE,FALSE);
          END;

        2:
          BEGIN
            CurrPage.ConfigLines.PAGE.PerformAction;

            IF WizardAction = WizardAction::Export THEN BEGIN
              CurrPage.ConfigLines.PAGE.GetXmlFile(TempConfigFile);
              IF WebClientMgt.IsWebClient THEN
                TempConfigFile.SaveFileWithDialog(CurrPage.CAPTION,'XML File (*.xml)|*.xml')
              ELSE
                TempConfigFile.SaveToClient(ClientFilename);

              ShowStep(Steps::ImportExportCompleted,FALSE,FALSE,TRUE);
            END ELSE
              ShowStep(Steps::ImportExportCompleted,FALSE,TRUE,FALSE);
          END;

        3:
          ShowStep(Steps::WizardSetupCompanyStory,FALSE,TRUE,FALSE);

        4:
          BEGIN
            GotClientCredentials := FALSE;
            IF ContiniaCompanySetup.GET THEN
              GotClientCredentials := ContiniaClientCredentials.GET(ContiniaCompanySetup."Client ID");
            IF NOT GotClientCredentials THEN
              GotClientCredentials := ContiniaClientCredentials.FINDFIRST;

            IF GotClientCredentials THEN BEGIN
              ClientID := ContiniaClientCredentials."Client ID";
              ClientPassword := ContiniaClientCredentials."Client Password";
            END;

            ShowStep(Steps::SpecifyClientCredentials,TRUE,TRUE,FALSE);
          END;

        5:
          BEGIN
            IF NextStep = 1 THEN BEGIN
              // PROCESS THE CONTINIA ONLINE SETTINGS AND TEST THE CONNECTION IF REQUESTED
              IF ContiniaClientCredentials.GET(ClientID) THEN BEGIN
                ContiniaClientCredentials."Client Password" := ClientPassword;
                ContiniaClientCredentials.MODIFY;
              END ELSE BEGIN
                ContiniaClientCredentials.VALIDATE("Client ID",ClientID);
                ContiniaClientCredentials."Client Password" := ClientPassword;
                ContiniaClientCredentials.INSERT(TRUE);
              END;

              IF NOT ContiniaCompanySetup.GET THEN
                ContiniaCompanySetup.INSERT(TRUE);

              ContiniaCompanySetup.VALIDATE("Client ID",ClientID);
              ContiniaCompanySetup.MODIFY(TRUE);

              IF AllObj.GET(AllObj."Object Type"::Table,2000000069) THEN
                CODEUNIT.RUN(CODEUNIT::"Capture RTC Library");

              IF TestConnection THEN
                OnlineMgt.TestConnection;

              DoCreateDCProfile := TRUE;
              SetDCDefaultProfile := TRUE;
            END;

            // SETUP THE DEFAULT VALUES FOR DC SETUP AND SHOW THE STEP
            IF NOT DCSetup.GET THEN BEGIN
              DCSetup.INIT;
              DCSetup.INSERT(TRUE);
            END;

            IF ContiniaCompanySetup.GET THEN;

            IF (NextStep = 1) AND (IsNewCompany) AND (OnlineMgt.IsDev OR OnlineMgt.IsDemo) THEN
              UseCloudOCR := TRUE
            ELSE
              UseCloudOCR := DCSetup."Use Cloud OCR";

            CompanyCode := ContiniaCompanySetup."Company Code";

            DocStorageType := DCSetup."Document Storage Type";
            ArchiveFilePathEnabled := DocStorageType = DCSetup."Document Storage Type"::"File System";

            DocFilePath := GetTopFolder(DCSetup."File Path for OCR-proc. files");
            IF (DocFilePath <> GetTopFolder(DCSetup."Scanned File Path for OCR")) OR
              (DocFilePath <> GetTopFolder(DCSetup."PDF File Path for OCR")) OR
              (DocFilePath <> GetTopFolder(DCSetup."Archive File Path")) OR
              (DocFilePath <> GetTopFolder(DCSetup."Miscellaneous File Path"))
            THEN
              DocFilePath := Text001;

            ShowStep(Steps::SpecifyGeneralDCSetupInfo,TRUE,TRUE,FALSE);
          END;

        6:
          BEGIN
            DCSetup.GET;
            ContiniaCompanySetup.GET;

            IF NextStep = 1 THEN BEGIN
              // PROCESS THE DOCUMENT CAPTURE SETTINGS ACTIVATE THE COMPANY
              IF UseCloudOCR AND (CompanyCode = '') THEN
                ERROR(Text002);

              ContiniaCompanySetup."Company Code" := CompanyCode;
              DCSetup."Use Cloud OCR" := UseCloudOCR;
              DCSetup.VALIDATE("Document Storage Type",DocStorageType);

              IF DocStorageType = DCSetup."Document Storage Type"::"File System" THEN
                IF (GetTopFolder(DCSetup."File Path for OCR-proc. files") <> DocFilePath) AND
                  (DocFilePath <> Text001)
                THEN BEGIN
                  DCSetup.AddFolderSlash(DocFilePath);
                  DCSetup.VALIDATE("Scanned File Path for OCR",DocFilePath + GetSubFolder(DCSetup."Scanned File Path for OCR"));
                  DCSetup.VALIDATE("PDF File Path for OCR",DocFilePath + GetSubFolder(DCSetup."PDF File Path for OCR"));
                  DCSetup.VALIDATE("File Path for OCR-proc. files",DocFilePath + GetSubFolder(DCSetup."File Path for OCR-proc. files"));
                  DCSetup.VALIDATE("Archive File Path",DocFilePath + GetSubFolder(DCSetup."Archive File Path"));
                  DCSetup.VALIDATE("Miscellaneous File Path",DocFilePath + GetSubFolder(DCSetup."Miscellaneous File Path"));
                END;

              DCSetup.MODIFY;
              ContiniaCompanySetup.MODIFY;

              IF DoCreateDCProfile THEN
                CreateDCProfile.CreateProfile(SetDCDefaultProfile);

              COMMIT;

              IF ActivateCompany THEN
                CODC.ActivateCompany;

              ActivateCompany := FALSE;

              IF UseCloudOCR AND ExportConfigFiles THEN BEGIN
                DCSetup.SetHideValidate(TRUE);
                DCSetup.CreateAndAssignConnEndpoints;
              END;

              IF ExportConfigFiles THEN
                CODEUNIT.RUN(CODEUNIT::"Export Doc. Cat. Config. - DC");
            END;

            // SETUP THE DEFAULT VALUES FOR WEB APPROVAL SETUP AND SHOW THE STEP
            ContiniaCompanySetup.GET;
            IF ContiniaWebPortal.GET(ContiniaCompanySetup."Web Portal Code") THEN BEGIN
              EnableWebApproval := TRUE;
              WebPortalCode := ContiniaWebPortal.Code;
              UseContiniaOnlineWeb := ContiniaWebPortal."Use Continia Online Web Portal";
              WebSiteUrl := ContiniaWebPortal."Web Site Url";
              WindowsWSUrl := ContiniaWebPortal."Windows Web Service URL";
              DatabaseWSUrl := ContiniaWebPortal."Database Web Service URL";
              LocalDomainName := ContiniaWebPortal."Local Domain Name";
            END;

            ShowStep(Steps::SpecifyWebApproval,TRUE,TRUE,FALSE);
          END;

        7:
          BEGIN
            ContiniaCompanySetup.GET;
            IF EnableWebApproval THEN BEGIN
              IF WebPortalCode = '' THEN
                ERROR(Text004);

              WITH ContiniaWebPortal DO BEGIN
                IF GET(WebPortalCode) THEN BEGIN
                  VALIDATE("Web Site Url",WebSiteUrl);
                  VALIDATE("Use Continia Online Web Portal",UseContiniaOnlineWeb);
                  VALIDATE("Windows Web Service URL",WindowsWSUrl);
                  VALIDATE("Database Web Service URL",DatabaseWSUrl);
                  VALIDATE("Local Domain Name",LocalDomainName);
                  MODIFY;
                END ELSE BEGIN
                  InitValues;
                  VALIDATE(Code, WebPortalCode);
                  VALIDATE("Web Site Url",WebSiteUrl);
                  VALIDATE("Use Continia Online Web Portal",UseContiniaOnlineWeb);
                  VALIDATE("Windows Web Service URL",WindowsWSUrl);
                  VALIDATE("Database Web Service URL",DatabaseWSUrl);
                  VALIDATE("Local Domain Name",LocalDomainName);
                  INSERT(TRUE);
                END;

                ContiniaCompanySetup."Web Portal Code" := Code;
                ContiniaCompanySetup.MODIFY;
              END;
            END ELSE BEGIN
              ContiniaCompanySetup."Web Portal Code" := '';
              ContiniaCompanySetup.MODIFY;
            END;

            ShowStep(Steps::WizardCompleted,TRUE,FALSE,TRUE);
          END;
      END;

      Step += NextStep;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowStep@1160040013(NewStep@1160040000 : Integer;EnableBack@1160040001 : Boolean;EnableNext@1160040002 : Boolean;EnableFinish@1160040003 : Boolean);
    BEGIN
      WizardStartVisible := FALSE;
      ImportExportSelectionVisible := FALSE;
      ImportExportCompletedVisible := FALSE;
      ConfigLinesVisible := FALSE;
      WizardSetupCompanyStoryVisible := FALSE;
      SpecifyClientCredentialsVisible := FALSE;
      SpecifyGeneralDCSetupInfoVisible := FALSE;
      SpecifyWebApprovalVisible := FALSE;
      WizardCompletedVisible := FALSE;

      CASE NewStep OF
        Steps::WizardStart:
          WizardStartVisible := TRUE;

        Steps::ImportExportSelection:
          BEGIN
            ImportExportSelectionVisible := TRUE;
            ConfigLinesVisible := TRUE;
          END;

        Steps::ImportExportCompleted:
          ImportExportCompletedVisible := TRUE;

        Steps::WizardSetupCompanyStory:
          WizardSetupCompanyStoryVisible := TRUE;

        Steps::SpecifyClientCredentials:
          SpecifyClientCredentialsVisible := TRUE;

        Steps::SpecifyGeneralDCSetupInfo:
          SpecifyGeneralDCSetupInfoVisible := TRUE;

        Steps::SpecifyWebApproval:
          SpecifyWebApprovalVisible := TRUE;

        Steps::WizardCompleted:
          WizardCompletedVisible := TRUE;
      END;

      BackEnabled := EnableBack;
      NextEnabled := EnableNext;
      FinishEnabled := EnableFinish;
    END;

    PROCEDURE GetTopFolder@1160040016(Path@1160040000 : Text[250]) : Text[250];
    VAR
      FileInfo@1160040001 : Codeunit 6085666;
    BEGIN
      IF Path = '' THEN
        EXIT;

      Path := DELCHR(Path,'>','\');
      EXIT(COPYSTR(Path,1,FileInfo.LastIndexOf(Path,'\',TRUE)));
    END;

    PROCEDURE GetSubFolder@1160040035(Path@1160040000 : Text[250]) : Text[250];
    VAR
      FileInfo@6085573 : Codeunit 6085666;
    BEGIN
      IF Path = '' THEN
        EXIT;

      Path := DELCHR(Path,'>','\');
      EXIT(COPYSTR(Path,FileInfo.LastIndexOf(Path,'\',TRUE)+1));
    END;

    PROCEDURE EnableWizardStartFields@6085574();
    VAR
      WebClientMgt@1000 : Codeunit 6085662;
    BEGIN
      FilenameEnabled := (WizardAction <> WizardAction::Setup) AND NOT (WebClientMgt.IsWebClient AND (WizardAction = WizardAction::Export));
    END;

    LOCAL PROCEDURE OnValidateWebPortalCode@6085575(_WebPortalCode@6085573 : Code[20]);
    VAR
      ContiniaWebPortal@6085574 : Record 6192774;
    BEGIN
      IF ContiniaWebPortal.GET(_WebPortalCode) THEN BEGIN
        WebPortalCode := ContiniaWebPortal.Code;
        UseContiniaOnlineWeb := ContiniaWebPortal."Use Continia Online Web Portal";
        WebSiteUrl := ContiniaWebPortal."Web Site Url";
        WindowsWSUrl := ContiniaWebPortal."Windows Web Service URL";
        DatabaseWSUrl := ContiniaWebPortal."Database Web Service URL";
        LocalDomainName := ContiniaWebPortal."Local Domain Name";
      END;
    END;

    BEGIN
    END.
  }
}

