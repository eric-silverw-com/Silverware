OBJECT Page 2180 O365 Import from Excel Wizard
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import from Excel Wizard;
               ESM=Asistente para importar desde Excel;
               FRC=Importer Ö partir de l'Assistant Excel;
               ENC=Import from Excel Wizard];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table2112;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 ResetWizardControls;
                 ShowFirstStep;
                 SetSubpagesUseEmphasizing;
                 DataHasHeaders := TRUE;
               END;

    OnAfterGetRecord=BEGIN
                       Style := SetStyle;
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 ESM=Atr†s;
                                 FRC=PrÇcÇdent;
                                 ENC=Back];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 ESM=Siguiente;
                                 FRC=Suivant;
                                 ENC=Next];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 ESM=Terminar;
                                 FRC=Terminer;
                                 ENC=Finish];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 OnActionFinish;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Step1;
                CaptionML=[ENU=Step 1;
                           ESM=Paso 1;
                           FRC=êtapeˇ1;
                           ENC=Step 1];
                Visible=Step1Visible;
                GroupType=Group }

    { 17  ;2   ;Group     ;
                CaptionML=[ENU=Specify the Excel file name;
                           ESM=Especifica el nombre del archivo de Excel;
                           FRC=SpÇcifier le nom du fichier Excel;
                           ENC=Specify the Excel file name];
                GroupType=Group }

    { 4   ;3   ;Field     ;
                CaptionML=[ENU=Excel File Name;
                           ESM=Nombre archivo de Excel;
                           FRC=Nom du fichier Excel;
                           ENC=Excel File Name];
                ToolTipML=[ENU=Specifies the name of the Excel file that contains the data to import.;
                           ESM=Especifica el nombre del archivo de Excel que contiene los datos que se van a importar.;
                           FRC=SpÇcifie le nom du fichier Excel contenant les donnÇes Ö importer.;
                           ENC=Specifies the name of the Excel file that contains the data to import.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=FileName;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               OpenExcelFile;
                             END;
                              }

    { 13  ;3   ;Field     ;
                CaptionML=[ENU=Excel Sheet Name;
                           ESM=Nombre hoja de Excel;
                           FRC=Nom de la feuille Excel;
                           ENC=Excel Sheet Name];
                ToolTipML=[ENU=Specifies the Excel sheet name to be imported from.;
                           ESM=Especifica el nombre de la hoja de Excel desde la que se va a importar.;
                           FRC=SpÇcifie le nom de la feuille Excel Ö partir de laquelle importer.;
                           ENC=Specifies the Excel sheet name to be imported from.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=SheetName;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               IF FileName = '' THEN
                                 EXIT;

                               SelectAndReadSheet;
                             END;
                              }

    { 23  ;3   ;Field     ;
                CaptionML=[ENU=Data has headers;
                           ESM=Datos con encabezados;
                           FRC=Les donnÇes comportent des en-tàtes;
                           ENC=Data has headers];
                ToolTipML=[ENU=Specifies whether the Excel sheet contains column headers as the first row.;
                           ESM=Especifica si la hoja de Excel contiene encabezados de columna como primera fila.;
                           FRC=SpÇcifie si la feuille Excel contient des en-tàtes de colonne en tant que la premiäre ligne.;
                           ENC=Specifies whether the Excel sheet contains column headers as the first row.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=DataHasHeaders }

    { 3   ;1   ;Group     ;
                Name=Step2;
                CaptionML=[ENU=Step 2;
                           ESM=Paso 2;
                           FRC=êtapeˇ2;
                           ENC=Step 2];
                Visible=Step2Visible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=[ENU=Enter the Excel row number to start import from;
                           ESM=Permite introducir el n£mero de la fila de Excel desde la que iniciar la importaci¢n;
                           FRC=Entrez le numÇro de la ligne Excel Ö partir de laquelle commencer l'importation;
                           ENC=Enter the Excel row number to start import from];
                GroupType=Group }

    { 5   ;3   ;Field     ;
                CaptionML=[ENU=Start Row Number;
                           ESM=N£mero de fila inicial;
                           FRC=NumÇro de ligne de dÇbut;
                           ENC=Start Row Number];
                ToolTipML=[ENU=Specifies the first Excel row number with data to be imported.;
                           ESM=Especifica el n£mero de la primera fila de Excel desde la que se van a importar datos.;
                           FRC=SpÇcifie le numÇro de la premiäre ligne Excel avec donnÇes Ö importer.;
                           ENC=Specifies the first Excel row number with data to be imported.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=StartRowNo;
                MinValue=0;
                OnValidate=BEGIN
                             ValidateStartRowNo(StartRowNo);
                           END;
                            }

    { 8   ;3   ;Part      ;
                Name=ExcelSheetDataSubPage;
                CaptionML=[ENU=Excel Sheet Data;
                           ESM=Datos de hoja de Excel;
                           FRC=DonnÇes de la feuille Excel;
                           ENC=Excel Sheet Data];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                PagePartID=Page2181;
                PartType=Page }

    { 6   ;1   ;Group     ;
                Name=Step3;
                CaptionML=[ENU=Step 3;
                           ESM=Paso 3;
                           FRC=êtapeˇ3;
                           ENC=Step 3];
                Visible=Step3Visible;
                GroupType=Group }

    { 19  ;2   ;Group     ;
                CaptionML=[ENU=Choose the Excel column number for each field you would like to import;
                           ESM=Elija el n£mero de columna de Excel de cada uno de los campos que quiere importar;
                           FRC=Choisissez le numÇro de colonne Excel pour chaque champ que vous souhaitez importer;
                           ENC=Choose the Excel column number for each field you would like to import];
                GroupType=Group }

    { 16  ;3   ;Group     ;
                GroupType=Repeater }

    { 7   ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the field name that the Excel column maps to.;
                           ESM=Especifica el nombre del campo al que se asigna la columna de Excel.;
                           FRC=SpÇcifie le nom du champ auquel la colonne Excel correspond.;
                           ENC=Specifies the field name that the Excel column maps to.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Field Name";
                Editable=FALSE;
                StyleExpr=Style }

    { 15  ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the Excel column number that the field name maps to.;
                           ESM=Especifica el n£mero de la columna de Excel a la que se asigna el nombre del campo.;
                           FRC=SpÇcifie le numÇro de colonne Excel auquel le nom du champ correspond.;
                           ENC=Specifies the Excel column number that the field name maps to.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Excel Column No.";
                MinValue=0;
                OnValidate=BEGIN
                             CheckMaxAllowedExcelColumnNo;
                             CurrPage.SAVERECORD;
                             NextEnabled := DoesMappingExist;
                           END;

                OnLookup=BEGIN
                           LookupColumn;
                           CurrPage.SAVERECORD;
                           NextEnabled := DoesMappingExist;
                         END;
                          }

    { 14  ;3   ;Part      ;
                Name=ExcelSheetDataSubPage2;
                CaptionML=[ENU=Excel Sheet Data;
                           ESM=Datos de hoja de Excel;
                           FRC=DonnÇes de la feuille Excel;
                           ENC=Excel Sheet Data];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                PagePartID=Page2181;
                PartType=Page }

    { 20  ;1   ;Group     ;
                Name=Step4;
                CaptionML=[ENU=Step 4;
                           ESM=Paso 4;
                           FRC=êtapeˇ4;
                           ENC=Step 4];
                Visible=Step4Visible;
                GroupType=Group }

    { 21  ;2   ;Group     ;
                CaptionML=[ENU=Preview;
                           ESM=Vista previa;
                           FRC=Aperáu;
                           ENC=Preview];
                GroupType=Group }

    { 22  ;3   ;Part      ;
                Name=ExcelSheetDataSubPage3;
                CaptionML=[ENU=Excel Sheet Data;
                           ESM=Datos de hoja de Excel;
                           FRC=DonnÇes de la feuille Excel;
                           ENC=Excel Sheet Data];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                PagePartID=Page2181;
                PartType=Page }

  }
  CODE
  {
    VAR
      TempExcelBuffer@1007 : TEMPORARY Record 370;
      TempStartRowCellNameValueBuffer@1006 : TEMPORARY Record 823;
      FileMgt@1004 : Codeunit 419;
      O365ExcelImportMgt@1023 : Codeunit 2130;
      FileName@1003 : Text;
      ServerFileName@1002 : Text;
      SheetName@1001 : Text[250];
      Style@1018 : Text;
      StartRowNo@1000 : Integer;
      BackEnabled@1010 : Boolean;
      NextEnabled@1009 : Boolean;
      FinishEnabled@1008 : Boolean;
      Step1Visible@1012 : Boolean;
      Step2Visible@1013 : Boolean;
      Step3Visible@1014 : Boolean;
      Step4Visible@1019 : Boolean;
      DataHasHeaders@1021 : Boolean;
      Step@1011 : 'Step 1,Step 2,Step 3,Step 4';
      ImportExcelFileTxt@1016 : TextConst 'ENU="Import Excel File ";ESM="Importar arch. Excel ";FRC="Importer fichier Excel ";ENC="Import Excel File "';
      ExcelFileExtensionTok@1015 : TextConst '@@@={Locked};ENU=.xlsx;ESM=.xlsx;FRC=.xlsx;ENC=.xlsx';
      ImportResultMsg@1005 : TextConst '@@@=%1 - number;ENU=%1 record(s) sucessfully imported.;ESM=%1 registro(s) importados correctamente.;FRC=%1 enregistrement(s) correctement importÇs.;ENC=%1 record(s) sucessfully imported.';
      StartRowNoOverLimitErr@1022 : TextConst '@@@=%1 - number;ENU=The start row number cannot be greater than %1.;ESM=El n£mero de la fila inicial no puede ser mayor que %1.;FRC=Le numÇro de ligne de dÇbut ne peut pas àtre supÇrieur Ö %1.;ENC=The start row number cannot be greater than %1.';
      ImportCustomersFromExcelWizardTxt@1024 : TextConst 'ENU=Import customers from Excel;ESM=Importar clientes de Excel;FRC=Importer des clients d''Excel;ENC=Import customers from Excel';
      ImportItemsFromExcelWizardTxt@1025 : TextConst 'ENU=Import prices from Excel;ESM=Importar precios desde Excel;FRC=Importer les prix Ö partir d''Excel;ENC=Import prices from Excel';
      ObjType@1017 : 'Customer,Item';
      NoDataOnTheExcelSheetMsg@1026 : TextConst '@@@=%1 - name of the Excel sheet;ENU=There is no data in the Excel sheet %1.;ESM=No hay ning£n dato en la hoja de Excel %1.;FRC=La feuille Excel %1 ne contient pas de donnÇes.;ENC=There is no data in the Excel sheet %1.';
      ColumnNoOverLimitErr@1020 : TextConst '@@@=%1 - number;ENU=The Excel column number cannot be greater than %1.;ESM=El n£mero de columna de Excel no puede ser mayor que %1.;FRC=Le numÇro de colonne Excel ne peut pas àtre supÇrieur Ö %1.;ENC=The Excel column number cannot be greater than %1.';

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      ResetWizardControls;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      CASE Step OF
        Step::"Step 1":
          ShowFirstStep;
        Step::"Step 2":
          ShowSecondStep;
        Step::"Step 3":
          ShowThirdStep;
        Step::"Step 4":
          ShowFinalStep;
      END;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ResetWizardControls@10();
    BEGIN
      // Buttons
      BackEnabled := TRUE;
      NextEnabled := TRUE;
      FinishEnabled := FALSE;

      // Tabs
      Step1Visible := FALSE;
      Step2Visible := FALSE;
      Step3Visible := FALSE;
      Step4Visible := FALSE;
    END;

    LOCAL PROCEDURE ShowFirstStep@6();
    BEGIN
      Step1Visible := TRUE;
      BackEnabled := FALSE;
      NextEnabled := SheetName <> '';
    END;

    LOCAL PROCEDURE ShowSecondStep@7();
    BEGIN
      Step2Visible := TRUE;
      NextEnabled := StartRowNo <> 0;
      IF TempExcelBuffer.ISEMPTY THEN
        MESSAGE(NoDataOnTheExcelSheetMsg,SheetName);

      IF StartRowNo = 0 THEN BEGIN
        IF DataHasHeaders THEN
          IF O365ExcelImportMgt.AutomapColumns(Rec,TempExcelBuffer) THEN
            ValidateStartRowNo(2);

        IF NOT DataHasHeaders THEN
          ValidateStartRowNo(1);
      END;
    END;

    LOCAL PROCEDURE ShowThirdStep@8();
    BEGIN
      FillStartRowCellBuffer;
      Step3Visible := TRUE;
      BackEnabled := TRUE;
      NextEnabled := DoesMappingExist;
      FinishEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowFinalStep@18();
    VAR
      TempO365FieldExcelMapping@1000 : TEMPORARY Record 2112;
    BEGIN
      TempO365FieldExcelMapping := Rec;
      CurrPage.ExcelSheetDataSubPage3.PAGE.SetColumnMapping(Rec);
      Rec := TempO365FieldExcelMapping;
      CurrPage.ExcelSheetDataSubPage3.PAGE.SetColumnVisibility;
      CurrPage.ExcelSheetDataSubPage3.PAGE.SetRowNoFilter;
      Step4Visible := TRUE;
      NextEnabled := FALSE;
      FinishEnabled := TRUE;
    END;

    LOCAL PROCEDURE OpenExcelFile@20();
    VAR
      PrevServerFileName@1000 : Text;
    BEGIN
      PrevServerFileName := ServerFileName;
      ServerFileName := FileMgt.UploadFile(ImportExcelFileTxt,ExcelFileExtensionTok);
      IF ServerFileName = '' THEN BEGIN
        IF PrevServerFileName <> '' THEN
          ServerFileName := PrevServerFileName;
        EXIT;
      END;

      SelectAndReadSheet;
    END;

    LOCAL PROCEDURE ReadSheet@5();
    BEGIN
      TempExcelBuffer.OpenBook(ServerFileName,SheetName);
      TempExcelBuffer.ReadSheet;
    END;

    LOCAL PROCEDURE ClearTempExcelBuffer@9();
    BEGIN
      TempExcelBuffer.RESET;
      TempExcelBuffer.DELETEALL;
    END;

    LOCAL PROCEDURE SelectAndReadSheet@28();
    VAR
      PrevSheetName@1000 : Text[250];
    BEGIN
      PrevSheetName := SheetName;
      SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
      IF SheetName = '' THEN BEGIN
        IF PrevSheetName <> '' THEN
          SheetName := PrevSheetName;
        EXIT;
      END;
      FileName := FileMgt.GetFileName(ServerFileName);
      ClearTempExcelBuffer;
      ReadSheet;
      SendExcelBufferToSubpages;
      NextEnabled := TRUE;
    END;

    LOCAL PROCEDURE SendExcelBufferToSubpages@23();
    BEGIN
      CurrPage.ExcelSheetDataSubPage.PAGE.SetExcelBuffer(TempExcelBuffer);
      CurrPage.ExcelSheetDataSubPage2.PAGE.SetExcelBuffer(TempExcelBuffer);
      CurrPage.ExcelSheetDataSubPage3.PAGE.SetExcelBuffer(TempExcelBuffer);
    END;

    LOCAL PROCEDURE SendStartRowNoToSubpages@27();
    BEGIN
      CurrPage.ExcelSheetDataSubPage.PAGE.SetStartRowNo(StartRowNo);
      CurrPage.ExcelSheetDataSubPage2.PAGE.SetStartRowNo(StartRowNo);
      CurrPage.ExcelSheetDataSubPage3.PAGE.SetStartRowNo(StartRowNo);
    END;

    LOCAL PROCEDURE FillStartRowCellBuffer@2();
    VAR
      i@1000 : Integer;
    BEGIN
      TempStartRowCellNameValueBuffer.RESET;
      TempStartRowCellNameValueBuffer.DELETEALL;

      IF StartRowNo = 0 THEN
        EXIT;

      TempExcelBuffer.RESET;
      TempExcelBuffer.SETRANGE("Row No.",StartRowNo);
      IF TempExcelBuffer.FINDSET THEN
        REPEAT
          i += 1;
          TempStartRowCellNameValueBuffer.ID := i;
          TempStartRowCellNameValueBuffer.Name :=
            COPYSTR(TempExcelBuffer."Cell Value as Text",1,MAXSTRLEN(TempStartRowCellNameValueBuffer.Name));
          TempStartRowCellNameValueBuffer.INSERT;
        UNTIL TempExcelBuffer.NEXT = 0;
    END;

    PROCEDURE PrepareCustomerImportData@4();
    BEGIN
      ObjType := ObjType::Customer;
      O365ExcelImportMgt.FillCustomerFieldsMappingBuffer(Rec);
      CurrPage.CAPTION := ImportCustomersFromExcelWizardTxt;
    END;

    PROCEDURE PrepareItemImportData@15();
    BEGIN
      ObjType := ObjType::Item;
      O365ExcelImportMgt.FillItemFieldsMappingBuffer(Rec);
      CurrPage.CAPTION := ImportItemsFromExcelWizardTxt;
    END;

    LOCAL PROCEDURE DoesMappingExist@12() MappingExists : Boolean;
    VAR
      TempO365FieldExcelMapping@1000 : TEMPORARY Record 2112;
    BEGIN
      TempO365FieldExcelMapping := Rec;
      SETFILTER("Excel Column No.",'<>%1',0);
      MappingExists := NOT ISEMPTY;
      RESET;
      Rec := TempO365FieldExcelMapping;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE LookupColumn@22();
    VAR
      O365ExcelColumns@1000 : Page 2182;
    BEGIN
      O365ExcelColumns.SetStartRowCellBuffer(TempStartRowCellNameValueBuffer);
      O365ExcelColumns.LOOKUPMODE(TRUE);
      IF O365ExcelColumns.RUNMODAL = ACTION::LookupOK THEN BEGIN
        O365ExcelColumns.GETRECORD(TempStartRowCellNameValueBuffer);
        VALIDATE("Excel Column No.",TempStartRowCellNameValueBuffer.ID);
        CheckMaxAllowedExcelColumnNo;
      END;
    END;

    LOCAL PROCEDURE OnActionFinish@1();
    VAR
      O365ExcelImportManagement@1000 : Codeunit 2130;
      ImportedRecordsQty@1002 : Integer;
    BEGIN
      ImportedRecordsQty := O365ExcelImportManagement.ImportData(TempExcelBuffer,Rec,StartRowNo,ObjType);
      CurrPage.CLOSE;
      IF ImportedRecordsQty > 0 THEN
        MESSAGE(ImportResultMsg,ImportedRecordsQty);
    END;

    LOCAL PROCEDURE SetStyle@21() : Text;
    BEGIN
      IF "Excel Column No." = 0 THEN
        EXIT('');

      EXIT('Strong');
    END;

    PROCEDURE SetParameters@11(VAR NewExcelBuffer@1000 : Record 370;NewExcelSheetName@1001 : Text[250]);
    BEGIN
      TempExcelBuffer.RESET;
      TempExcelBuffer.DELETEALL;
      IF NewExcelBuffer.FINDSET THEN
        REPEAT
          TempExcelBuffer := NewExcelBuffer;
          TempExcelBuffer.INSERT;
        UNTIL NewExcelBuffer.NEXT = 0;

      SheetName := NewExcelSheetName;

      SendExcelBufferToSubpages;
    END;

    LOCAL PROCEDURE ValidateStartRowNo@14(NewStartRowNo@1000 : Integer);
    BEGIN
      StartRowNo := NewStartRowNo;
      CheckMaxAllowedStartRowNo;
      FillStartRowCellBuffer;
      SendStartRowNoToSubpages;
      CurrPage.UPDATE(FALSE);
      NextEnabled := StartRowNo <> 0;
    END;

    LOCAL PROCEDURE SetSubpagesUseEmphasizing@13();
    BEGIN
      CurrPage.ExcelSheetDataSubPage.PAGE.SetUseEmphasizing;
      CurrPage.ExcelSheetDataSubPage2.PAGE.SetUseEmphasizing;
    END;

    LOCAL PROCEDURE CheckMaxAllowedStartRowNo@31();
    VAR
      MaxExcelRowNo@1000 : Integer;
    BEGIN
      MaxExcelRowNo := GetMaxExcelRowNo;
      IF StartRowNo > MaxExcelRowNo THEN
        ERROR(StartRowNoOverLimitErr,MaxExcelRowNo);
    END;

    LOCAL PROCEDURE CheckMaxAllowedExcelColumnNo@17();
    VAR
      MaxColumnNo@1000 : Integer;
    BEGIN
      MaxColumnNo := GetMaxExcelExcelColumnNo;
      IF "Excel Column No." > MaxColumnNo THEN
        ERROR(ColumnNoOverLimitErr,MaxColumnNo);
    END;

    LOCAL PROCEDURE GetMaxExcelRowNo@16() : Integer;
    BEGIN
      TempExcelBuffer.RESET;
      IF TempExcelBuffer.FINDLAST THEN;
      EXIT(TempExcelBuffer."Row No.");
    END;

    LOCAL PROCEDURE GetMaxExcelExcelColumnNo@25() : Integer;
    BEGIN
      TempExcelBuffer.RESET;
      IF TempExcelBuffer.FINDLAST THEN;
      EXIT(TempExcelBuffer."Column No.");
    END;

    BEGIN
    END.
  }
}

