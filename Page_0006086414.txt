OBJECT Page 6086414 Apply Bank Transaction Entries
{
  OBJECT-PROPERTIES
  {
    Date=10/25/17;
    Time=[ 1:00:00 AM];
    Version List=EMW17.10.00.2.60.02;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Apply Bank Transaction Entries;
    SourceTable=Table6086330;
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       LineApplied := IsApplied;
                       SetUserInteractions;
                       CalcBalance;

                       ExpenseStatus := GetExpenseStatus;

                       IF NOT Expense.GET(GetMatchedExpenseEntryNo) THEN
                         CLEAR(Expense);
                     END;

    OnModifyRecord=BEGIN
                     SetUserInteractions;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           LineApplied := IsApplied;
                           SetUserInteractions;
                           CalcBalance;
                         END;

    ActionList=ACTIONS
    {
      { 11      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6086303 ;1   ;ActionGroup;
                      Name=<Action1160040002>;
                      CaptionML=ENU=Details;
                      ActionContainerType=ActionItems }
      { 6086302 ;2   ;Action    ;
                      CaptionML=ENU=S&how Matched Expense;
                      OnAction=BEGIN
                                 ShowMatchedExpense;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      Name=;
                      CaptionML=ENU=Bank Transaction;
                      OnAction=VAR
                                 BankTrans@1000 : Record 6086330;
                                 BankTransactions@1001 : Page 6086332;
                               BEGIN
                                 BankTrans.SETRANGE("Entry No.","Entry No.");

                                 BankTransactions.SetShowAll(TRUE);
                                 BankTransactions.SETTABLEVIEW(BankTrans);
                                 BankTransactions.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=LineApplied;
                CaptionML=ENU=Applied;
                SourceExpr=LineApplied;
                Editable=FALSE }

    { 6086300;2;Field     ;
                Name=ExpStatus;
                CaptionML=ENU=Expense Status;
                SourceExpr=ExpenseStatus }

    { 6086304;2;Field     ;
                CaptionML=ENU=Expense Type;
                SourceExpr=Expense."Expense Type";
                Visible=FALSE;
                Editable=FALSE }

    { 6086301;2;Field     ;
                SourceExpr=Posted;
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 2   ;2   ;Field     ;
                SourceExpr="Posting Date";
                Editable=FALSE;
                StyleExpr=StyleTxt }

    { 4   ;2   ;Field     ;
                SourceExpr="Business Category ID";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Business No.";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Business Name" }

    { 21  ;2   ;Field     ;
                SourceExpr="Business Address";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Business Address 2";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                SourceExpr="Business Address 3";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Business Country/Region";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                SourceExpr="Business Post Code";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                SourceExpr=Amount;
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                SourceExpr="Bank-Currency Amount" }

    { 8   ;2   ;Field     ;
                SourceExpr="Bank Currency Code";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Statement Status";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                SourceExpr="Statement No.";
                Visible=FALSE;
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr="Statement Line No.";
                Visible=FALSE;
                Editable=FALSE }

    { 7   ;1   ;Group     ;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=Balance;
                CaptionML=ENU=Balance;
                SourceExpr=Balance;
                Editable=FALSE }

    { 13  ;2   ;Field     ;
                Name=BalanceToReconcile;
                CaptionML=ENU=Balance To Reconcile;
                SourceExpr=BalanceToReconcile;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Expense@6086301 : Record 6086320;
      StyleTxt@1000 : Text;
      LineApplied@1004 : Boolean;
      Balance@1002 : Decimal;
      BalanceToReconcile@1005 : Decimal;
      ExpenseStatus@6086300 : 'Not Matched,Open,Pending Expense User,Pending Approval,Released,Posted';

    PROCEDURE SetUserInteractions@3();
    BEGIN
      StyleTxt := SetStyle;
    END;

    LOCAL PROCEDURE CalcBalance@4();
    BEGIN
      BalanceToReconcile := CalcBalanceToReconcile;
      Balance := BalanceToReconcile + GetLastStatementBalance;
    END;

    PROCEDURE ToggleMatchedFilter@5(SetFilterOn@1000 : Boolean);
    BEGIN
      IF SetFilterOn THEN BEGIN
        SETRANGE("Statement Status","Statement Status"::Open);
        SETRANGE("Statement No.",'');
        SETRANGE("Statement Line No.",0);
      END ELSE
        RESET;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CalcBalanceToReconcile@1() : Decimal;
    VAR
      BankTransaction@1000 : Record 6086330;
    BEGIN
      FILTERGROUP(4);
      IF GETFILTERS = '' THEN
        EXIT;

      BankTransaction.SETCURRENTKEY("Bank Account Type","Bank Account No.","Bank Statement Transaction",Reconciled,Posted);
      BankTransaction.COPYFILTERS(Rec);
      BankTransaction.CALCSUMS("Bank-Currency Amount");
      EXIT(BankTransaction."Bank-Currency Amount");
    END;

    LOCAL PROCEDURE GetLastStatementBalance@6() : Decimal;
    VAR
      EMBankAccRecon@1000 : Record 6086374;
    BEGIN
      IF EMBankAccRecon.GET(GETRANGEMIN("Bank Account Type"),GETFILTER("Bank Account No."),GETFILTER("Statement No.")) THEN
        EXIT(EMBankAccRecon.GetBalanceLastStatement);
    END;

    PROCEDURE GetSelectedRecords@2(VAR TempBankTran@1000 : TEMPORARY Record 6086330);
    VAR
      BankTransaction@1001 : Record 6086330;
    BEGIN
      CurrPage.SETSELECTIONFILTER(BankTransaction);
      IF BankTransaction.FINDSET THEN
        REPEAT
          TempBankTran := BankTransaction;
          TempBankTran.INSERT;
        UNTIL BankTransaction.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

