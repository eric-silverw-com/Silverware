OBJECT Codeunit 8620 Config. Package - Import
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      PathIsEmptyErr@1001 : TextConst 'ENU=You must enter a file path.;ESM=Debe insertar una ruta de archivo.;FRC=Vous devez entrer un chemin d''accŠs au fichier.;ENC=You must enter a file path.';
      ErrorsImportingPackageErr@1000 : TextConst '@@@="%1 = No. of errors, %2 = Package Code";ENU=%1 errors occurred when importing %2 package.;ESM=Se produjeron %1 errores al importar el paquete %2.;FRC=%1 erreurs se sont produites lors de l''importation du package %2.;ENC=%1 errors occurred when importing %2 package.';
      PathIsTooLongErr@1002 : TextConst '@@@="%1 = Max no. of characters";ENU=The path cannot be longer than %1 characters.;ESM=La ruta de acceso no puede superar los %1 caracteres.;FRC=Le chemin d''accŠs ne peut pas compter plus de %1ÿcaractŠres.;ENC=The path cannot be longer than %1 characters.';

    PROCEDURE ImportAndApplyRapidStartPackage@1(PackageFileLocation@1000 : Text);
    VAR
      TempConfigSetup@1001 : TEMPORARY Record 8627;
    BEGIN
      ImportRapidStartPackage(PackageFileLocation,TempConfigSetup);
      ApplyRapidStartPackage(TempConfigSetup);
    END;

    PROCEDURE ImportRapidStartPackage@2(PackageFileLocation@1000 : Text;VAR TempConfigSetup@1001 : TEMPORARY Record 8627);
    VAR
      DecompressedFileName@1003 : Text;
      FileLocation@1002 : Text[250];
    BEGIN
      IF PackageFileLocation = '' THEN
        ERROR(PathIsEmptyErr);

      IF STRLEN(PackageFileLocation) > MAXSTRLEN(TempConfigSetup."Package File Name") THEN
        ERROR(PathIsTooLongErr,MAXSTRLEN(TempConfigSetup."Package File Name"));

      FileLocation :=
        COPYSTR(PackageFileLocation,1,MAXSTRLEN(TempConfigSetup."Package File Name"));

      TempConfigSetup.INIT;
      TempConfigSetup.INSERT;
      TempConfigSetup."Package File Name" := FileLocation;
      DecompressedFileName := TempConfigSetup.DecompressPackage(FALSE);

      TempConfigSetup.SetHideDialog(TRUE);
      TempConfigSetup.ReadPackageHeader(DecompressedFileName);
      TempConfigSetup.ImportPackage(DecompressedFileName);
    END;

    [External]
    PROCEDURE ApplyRapidStartPackage@3(VAR TempConfigSetup@1000 : TEMPORARY Record 8627);
    VAR
      ErrorCount@1001 : Integer;
    BEGIN
      ErrorCount := TempConfigSetup.ApplyPackages;
      IF ErrorCount > 0 THEN
        ERROR(ErrorsImportingPackageErr,ErrorCount,TempConfigSetup."Package Code");
      TempConfigSetup.ApplyAnswers;
    END;

    [External]
    PROCEDURE ImportAndApplyRapidStartPackageStream@4(VAR TempBlob@1000 : Record 99008535);
    VAR
      TempConfigSetup@1001 : TEMPORARY Record 8627;
    BEGIN
      ImportRapidStartPackageStream(TempBlob,TempConfigSetup);
      ApplyRapidStartPackage(TempConfigSetup);
    END;

    [External]
    PROCEDURE ImportRapidStartPackageStream@5(VAR TempBlob@1000 : Record 99008535;VAR TempConfigSetup@1002 : TEMPORARY Record 8627);
    VAR
      TempBlobUncompressed@1001 : Record 99008535;
      InStream@1003 : InStream;
    BEGIN
      IF TempConfigSetup.GET('ImportRS') THEN
        TempConfigSetup.DELETE;
      TempConfigSetup.INIT;
      TempConfigSetup."Primary Key" := 'ImportRS';
      TempConfigSetup."Package File Name" := 'ImportRapidStartPackageFromStream';
      TempConfigSetup.INSERT;
      // TempBlob contains the compressed .rapidstart file
      // Decompress the file and put into the TempBlobUncompressed blob
      TempConfigSetup.DecompressPackageToBlob(TempBlob,TempBlobUncompressed);

      TempConfigSetup."Package File" := TempBlobUncompressed.Blob;
      TempConfigSetup.CALCFIELDS("Package File");
      TempConfigSetup."Package File".CREATEINSTREAM(InStream);

      TempConfigSetup.SetHideDialog(TRUE);
      TempConfigSetup.ReadPackageHeaderFromStream(InStream);
      TempConfigSetup.ImportPackageFromStream(InStream);
    END;

    BEGIN
    END.
  }
}

