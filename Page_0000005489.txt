OBJECT Page 5489 Dimension Lines Entity
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=dimensionLines;
               ESM=dimensionLines;
               FRC=dimensionLines;
               ENC=dimensionLines];
    SourceTable=Table5489;
    DelayedInsert=Yes;
    PageType=API;
    SourceTableTemporary=Yes;
    EntitySetName=dimensionLines;
    EntityName=dimensionLine;
    OnFindRecord=VAR
                   ParentIdFilter@1001 : Text;
                 BEGIN
                   ParentIdFilter := GETFILTER("Parent Id");
                   IF ParentIdFilter = '' THEN
                     ERROR(ParentIDNotSpecifiedErr);
                   EXIT(LoadLinesFromFilter(ParentIdFilter));
                 END;

    OnAfterGetRecord=BEGIN
                       SetCalculatedFields;
                     END;

    OnNewRecord=BEGIN
                  ClearCalculatedFields;
                END;

    OnInsertRecord=VAR
                     DimensionId@1002 : GUID;
                     BlankGUID@1001 : GUID;
                   BEGIN
                     IF "Parent Id" = BlankGUID THEN
                       ERROR(ParentIDRequiredErr);

                     CheckIfValuesAreProperlyFilled;
                     AssignDimensionValueToRecord;

                     DimensionId := "Dimension Id";
                     INSERT(TRUE);

                     LoadLinesFromFilter("Parent Id");
                     SaveDimensions;

                     LoadLinesFromFilter("Parent Id");
                     GET("Parent Id",DimensionId);
                     SetCalculatedFields;

                     EXIT(FALSE);
                   END;

    OnModifyRecord=VAR
                     DimensionId@1000 : GUID;
                   BEGIN
                     EVALUATE(DimensionId,GETFILTER("Dimension Id"));
                     IF "Dimension Id" <> DimensionId THEN
                       ERROR(IdAndCodeCannotBeModifiedErr);

                     AssignDimensionValueToRecord;
                     MODIFY(TRUE);

                     SaveDimensions;
                     LoadLinesFromFilter(GETFILTER("Parent Id"));
                     GET("Parent Id",DimensionId);
                     SetCalculatedFields;

                     EXIT(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     DELETE(TRUE);
                     SaveDimensions;
                     EXIT(FALSE);
                   END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 9   ;2   ;Field     ;
                Name=parentId;
                CaptionML=[@@@={Locked};
                           ENU=ParentId;
                           ESM=ParentId;
                           FRC=ParentId;
                           ENC=ParentId];
                ApplicationArea=#All;
                SourceExpr="Parent Id" }

    { 7   ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=Id;
                           ESM=Id;
                           FRC=Id;
                           ENC=Id];
                ApplicationArea=#All;
                SourceExpr="Dimension Id";
                OnValidate=BEGIN
                             GlobalDimension.SETRANGE(Id,"Dimension Id");
                             IF NOT GlobalDimension.FINDFIRST THEN
                               ERROR(DimensionIdDoesNotMatchADimensionErr);

                             "Dimension Code" := GlobalDimension.Code;
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=code;
                CaptionML=[@@@={Locked};
                           ENU=Code;
                           ESM=Code;
                           FRC=Code;
                           ENC=Code];
                ApplicationArea=#All;
                SourceExpr="Dimension Code";
                OnValidate=BEGIN
                             IF GlobalDimension.Code <> '' THEN BEGIN
                               IF GlobalDimension.Code <> "Dimension Code" THEN
                                 ERROR(DimensionFieldsDontMatchErr);
                               EXIT;
                             END;

                             IF NOT GlobalDimension.GET("Dimension Code") THEN
                               ERROR(DimensionCodeDoesNotMatchADimensionErr);

                             "Dimension Id" := GlobalDimension.Id;
                           END;
                            }

    { 8   ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=DisplayName;
                           ESM=DisplayName;
                           FRC=DisplayName;
                           ENC=DisplayName];
                ApplicationArea=#All;
                SourceExpr="Dimension Name" }

    { 4   ;2   ;Field     ;
                Name=valueId;
                CaptionML=[@@@={Locked};
                           ENU=ValueId;
                           ESM=ValueId;
                           FRC=ValueId;
                           ENC=ValueId];
                ToolTipML=[ENU=Specifies the ID of the Dimension value.;
                           ESM=Especifica el Id. del valor de dimensi¢n.;
                           FRC=Sp‚cifie le code de la valeur de dimension.;
                           ENC=Specifies the ID of the Dimension value.];
                ApplicationArea=#All;
                SourceExpr=GlobalDimensionValueId;
                OnValidate=BEGIN
                             GlobalDimensionValue.SETRANGE(Id,GlobalDimensionValueId);
                             IF NOT GlobalDimensionValue.FINDFIRST THEN
                               ERROR(DimensionValueIdDoesNotMatchADimensionValueErr);

                             GlobalDimensionValueCode := GlobalDimensionValue.Code;
                           END;
                            }

    { 5   ;2   ;Field     ;
                Name=valueCode;
                CaptionML=[@@@={Locked};
                           ENU=ValueCode;
                           ESM=ValueCode;
                           FRC=ValueCode;
                           ENC=ValueCode];
                ToolTipML=[ENU=Specifies the Code of the Dimension value.;
                           ESM=Especifica el c¢digo del valor de dimensi¢n.;
                           FRC=Sp‚cifie le code de la valeur de dimension.;
                           ENC=Specifies the Code of the Dimension value.];
                ApplicationArea=#All;
                SourceExpr=GlobalDimensionValueCode;
                OnValidate=BEGIN
                             IF GlobalDimensionValue.Code <> '' THEN BEGIN
                               IF GlobalDimensionValue.Code <> GlobalDimensionValueCode THEN
                                 ERROR(DimensionValueFieldsDontMatchErr);
                               EXIT;
                             END;

                             IF NOT GlobalDimensionValue.GET("Dimension Code",GlobalDimensionValueCode) THEN
                               ERROR(DimensionValueCodeDoesNotMatchADimensionValueErr);

                             GlobalDimensionValueId := GlobalDimensionValue.Id;
                           END;
                            }

    { 6   ;2   ;Field     ;
                Name=valueDisplayName;
                CaptionML=[@@@={Locked};
                           ENU=ValueDisplayName;
                           ESM=ValueDisplayName;
                           FRC=ValueDisplayName;
                           ENC=ValueDisplayName];
                ApplicationArea=#All;
                SourceExpr="Dimension Value Name" }

  }
  CODE
  {
    VAR
      GlobalDimension@1004 : Record 348;
      GlobalDimensionValue@1005 : Record 349;
      GlobalDimensionValueId@1015 : GUID;
      GlobalDimensionValueCode@1016 : Code[20];
      LinesLoaded@1002 : Boolean;
      ParentIDNotSpecifiedErr@1017 : TextConst '@@@={Locked};ENU=You must specify a parent id to get the lines.;ESM=You must specify a parent id to get the lines.;FRC=You must specify a parent id to get the lines.;ENC=You must specify a parent id to get the lines.';
      ParentIDRequiredErr@1018 : TextConst '@@@={Locked};ENU=The parent ID must be filled in.;ESM=The parent ID must be filled in.;FRC=The parent ID must be filled in.;ENC=The parent ID must be filled in.';
      IdOrCodeShouldBeFilledErr@1013 : TextConst '@@@={Locked};ENU=The ID or Code field must be filled in.;ESM=The ID or Code field must be filled in.;FRC=The ID or Code field must be filled in.;ENC=The ID or Code field must be filled in.';
      ValueIdOrValueCodeShouldBeFilledErr@1012 : TextConst '@@@={Locked};ENU=The valueId or valueCode field must be filled in.;ESM=The valueId or valueCode field must be filled in.;FRC=The valueId or valueCode field must be filled in.;ENC=The valueId or valueCode field must be filled in.';
      IdAndCodeCannotBeModifiedErr@1014 : TextConst '@@@={Locked};ENU=The ID and Code fields cannot be modified.;ESM=The ID and Code fields cannot be modified.;FRC=The ID and Code fields cannot be modified.;ENC=The ID and Code fields cannot be modified.';
      RecordDoesntExistErr@1000 : TextConst '@@@={Locked};ENU=Could not find the record.;ESM=Could not find the record.;FRC=Could not find the record.;ENC=Could not find the record.';
      RecordWasDeletedErr@1001 : TextConst '@@@={Locked};ENU=The record was deleted.;ESM=The record was deleted.;FRC=The record was deleted.;ENC=The record was deleted.';
      WrongEntityErr@1003 : TextConst '@@@={Locked};ENU=Dimension Lines do not exist for the Entity with that Id.;ESM=Dimension Lines do not exist for the Entity with that Id.;FRC=Dimension Lines do not exist for the Entity with that Id.;ENC=Dimension Lines do not exist for the Entity with that Id.';
      DimensionFieldsDontMatchErr@1008 : TextConst '@@@={Locked};ENU=The dimension field values do not match to a specific Dimension.;ESM=The dimension field values do not match to a specific Dimension.;FRC=The dimension field values do not match to a specific Dimension.;ENC=The dimension field values do not match to a specific Dimension.';
      DimensionIdDoesNotMatchADimensionErr@1007 : TextConst '@@@={Locked};ENU=The "id" does not match to a Dimension.;ESM=The "id" does not match to a Dimension.;FRC=The "id" does not match to a Dimension.;ENC=The "id" does not match to a Dimension.';
      DimensionCodeDoesNotMatchADimensionErr@1006 : TextConst '@@@={Locked};ENU=The "code" does not match to a Dimension.;ESM=The "code" does not match to a Dimension.;FRC=The "code" does not match to a Dimension.;ENC=The "code" does not match to a Dimension.';
      DimensionValueFieldsDontMatchErr@1011 : TextConst '@@@={Locked};ENU=The values of the Dimension Code field and the Dimension ID field do not refer to the same Dmension Value.;ESM=The values of the Dimension Code field and the Dimension ID field do not refer to the same Dmension Value.;FRC=The values of the Dimension Code field and the Dimension ID field do not refer to the same Dmension Value.;ENC=The values of the Dimension Code field and the Dimension ID field do not refer to the same Dmension Value.';
      DimensionValueIdDoesNotMatchADimensionValueErr@1010 : TextConst '@@@={Locked};ENU=The "valueId" does not match to a Dimension Value.;ESM=The "valueId" does not match to a Dimension Value.;FRC=The "valueId" does not match to a Dimension Value.;ENC=The "valueId" does not match to a Dimension Value.';
      DimensionValueCodeDoesNotMatchADimensionValueErr@1009 : TextConst '@@@={Locked};ENU=The "valueCode" does not match to a Dimension Value.;ESM=The "valueCode" does not match to a Dimension Value.;FRC=The "valueCode" does not match to a Dimension Value.;ENC=The "valueCode" does not match to a Dimension Value.';

    LOCAL PROCEDURE LoadLinesFromFilter@8(ParentIdFilter@1002 : Text) : Boolean;
    VAR
      FilterView@1000 : Text;
    BEGIN
      IF NOT LinesLoaded THEN BEGIN
        FilterView := GETVIEW;
        LoadLinesFromId(ParentIdFilter);
        SETVIEW(FilterView);
        IF NOT FINDFIRST THEN
          EXIT(FALSE);
        LinesLoaded := TRUE;
      END;

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE LoadLinesFromId@24(IntegrationId@1000 : Text);
    VAR
      TempDimensionSetEntry@1008 : TEMPORARY Record 480;
      DimensionManagement@1007 : Codeunit 408;
      DimensionSetId@1001 : Integer;
    BEGIN
      DimensionSetId := GetSetId(IntegrationId);
      IF DimensionSetId = 0 THEN
        EXIT;

      TempDimensionSetEntry.SETAUTOCALCFIELDS("Dimension Name","Dimension Value Name");
      DimensionManagement.GetDimensionSet(TempDimensionSetEntry,DimensionSetId);

      IF NOT TempDimensionSetEntry.FIND('-') THEN
        EXIT;

      REPEAT
        CLEAR(Rec);
        TRANSFERFIELDS(TempDimensionSetEntry,TRUE);
        "Parent Id" := IntegrationId;
        INSERT(TRUE);
      UNTIL TempDimensionSetEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE GetSetId@12(IntegrationId@1000 : Text) : Integer;
    VAR
      IntegrationRecord@1001 : Record 5151;
      GenJournalLine@1005 : Record 81;
      DummyRecordId@1004 : RecordID;
    BEGIN
      IF NOT IntegrationRecord.GET(IntegrationId) THEN
        ERROR(RecordDoesntExistErr);

      IF FORMAT(IntegrationRecord."Record ID") = FORMAT(DummyRecordId) THEN
        ERROR(RecordWasDeletedErr);

      CASE IntegrationRecord."Table ID" OF
        DATABASE::"Gen. Journal Line":
          BEGIN
            GenJournalLine.GET(IntegrationRecord."Record ID");
            EXIT(GenJournalLine."Dimension Set ID");
          END;
        ELSE
          ERROR(WrongEntityErr);
      END;
    END;

    LOCAL PROCEDURE SaveDimensions@1();
    VAR
      TempDimensionSetEntry@1000 : TEMPORARY Record 480;
      IntegrationRecord@1001 : Record 5151;
      GenJournalLine@1003 : Record 81;
      DimensionManagement@1004 : Codeunit 408;
    BEGIN
      IntegrationRecord.GET("Parent Id");

      RESET;
      IF FINDFIRST THEN
        REPEAT
          TempDimensionSetEntry.TRANSFERFIELDS(Rec,TRUE);
          TempDimensionSetEntry."Dimension Set ID" := 0;
          TempDimensionSetEntry.INSERT(TRUE);
        UNTIL NEXT = 0;

      CASE IntegrationRecord."Table ID" OF
        DATABASE::"Gen. Journal Line":
          BEGIN
            GenJournalLine.GET(IntegrationRecord."Record ID");
            GenJournalLine."Dimension Set ID" := DimensionManagement.GetDimensionSetID(TempDimensionSetEntry);
            DimensionManagement.UpdateGlobalDimFromDimSetID(
              GenJournalLine."Dimension Set ID",GenJournalLine."Shortcut Dimension 1 Code",GenJournalLine."Shortcut Dimension 2 Code");
            GenJournalLine.MODIFY(TRUE);
          END;
        ELSE
          ERROR(WrongEntityErr);
      END;
    END;

    LOCAL PROCEDURE CheckIfValuesAreProperlyFilled@19();
    BEGIN
      IF "Dimension Code" = '' THEN
        ERROR(IdOrCodeShouldBeFilledErr);

      IF ISNULLGUID(GlobalDimensionValueId) AND
         (GlobalDimensionValueCode = '')
      THEN
        ERROR(ValueIdOrValueCodeShouldBeFilledErr);
    END;

    LOCAL PROCEDURE AssignDimensionValueToRecord@2();
    BEGIN
      IF NOT ISNULLGUID(GlobalDimensionValueId) THEN
        VALIDATE("Value Id",GlobalDimensionValueId);

      IF GlobalDimensionValueCode <> '' THEN
        VALIDATE("Dimension Value Code",GlobalDimensionValueCode);
    END;

    LOCAL PROCEDURE SetCalculatedFields@21();
    BEGIN
      GlobalDimensionValueId := "Value Id";
      GlobalDimensionValueCode := "Dimension Value Code";
    END;

    LOCAL PROCEDURE ClearCalculatedFields@5();
    BEGIN
      CLEAR(GlobalDimensionValueId);
      CLEAR(GlobalDimensionValueCode);
    END;

    BEGIN
    END.
  }
}

