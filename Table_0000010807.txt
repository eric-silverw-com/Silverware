OBJECT Table 10807 Sales Tax Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:15:52 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Tax Setup Wizard;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Tax Account (Sales) ;Code20        ;TableRelation="G/L Account" WHERE (Account Type=CONST(Posting),
                                                                                      Income/Balance=CONST(Balance Sheet),
                                                                                      Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                IF ("Tax Account (Sales)" = '') AND ("Tax Account (Purchases)" = '') THEN
                                                                  ERROR(TaxAccountRequiredErr);
                                                              END;

                                                   CaptionML=ENU=Tax Account (Sales) }
    { 3   ;   ;Tax Account (Purchases);Code20     ;TableRelation="G/L Account" WHERE (Account Type=CONST(Posting),
                                                                                      Blocked=CONST(No));
                                                   OnValidate=BEGIN
                                                                VALIDATE("Tax Account (Sales)");
                                                              END;

                                                   CaptionML=ENU=Tax Account (Purchases) }
    { 4   ;   ;City                ;Text30        ;OnValidate=BEGIN
                                                                IF ("City Rate" > 0) AND (DELCHR(City,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(City),LOWERCASE(FIELDCAPTION(City)));
                                                                ValidateJurisdiction;
                                                                IF City <> xRec.City THEN
                                                                  "Tax Area Code" := '';
                                                              END;

                                                   CaptionML=ENU=City }
    { 5   ;   ;City Rate           ;Decimal       ;OnValidate=BEGIN
                                                                IF ("City Rate" > 0) AND (DELCHR(City,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(City),LOWERCASE(FIELDCAPTION(City)));
                                                              END;

                                                   CaptionML=ENU=City Rate;
                                                   DecimalPlaces=1:3;
                                                   MinValue=0 }
    { 6   ;   ;County              ;Text30        ;OnValidate=BEGIN
                                                                IF ("County Rate" > 0) AND (DELCHR(County,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(County),LOWERCASE(FIELDCAPTION(County)));
                                                                ValidateJurisdiction;

                                                                IF County <> xRec.County THEN
                                                                  "Tax Area Code" := '';
                                                              END;

                                                   CaptionML=ENU=County }
    { 7   ;   ;County Rate         ;Decimal       ;OnValidate=BEGIN
                                                                IF ("County Rate" > 0) AND (DELCHR(County,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(County),LOWERCASE(FIELDCAPTION(County)));
                                                              END;

                                                   CaptionML=ENU=County Rate;
                                                   DecimalPlaces=1:3;
                                                   MinValue=0 }
    { 8   ;   ;State               ;Code2         ;OnValidate=BEGIN
                                                                IF ("State Rate" > 0) AND (DELCHR(State,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(State),LOWERCASE(FIELDCAPTION(State)));
                                                                ValidateJurisdiction;
                                                                IF State <> xRec.State THEN
                                                                  "Tax Area Code" := '';
                                                              END;

                                                   CaptionML=ENU=State }
    { 9   ;   ;State Rate          ;Decimal       ;OnValidate=BEGIN
                                                                IF ("State Rate" > 0) AND (DELCHR(State,'<>',' ') = '') THEN
                                                                  ERROR(NotBlankErr,FIELDCAPTION(State),LOWERCASE(FIELDCAPTION(State)));
                                                              END;

                                                   CaptionML=ENU=State Rate;
                                                   DecimalPlaces=1:3;
                                                   MinValue=0 }
    { 10  ;   ;Tax Area Code       ;Code20        ;CaptionML=ENU=Tax Area Code }
    { 10010;  ;Country/Region      ;Option        ;CaptionML=ENU=Country/Region;
                                                   OptionCaptionML=ENU=US,CA;
                                                   OptionString=US,CA }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NotBlankErr@1020000 : TextConst '@@@="%1 = City, County, or State; %2 = city, county, or state";ENU=%1 must not be blank when a %2 tax rate is specified.';
      TaxAccountRequiredErr@1020001 : TextConst 'ENU=You must specify at least one tax account.';
      NotUniqueErr@1020002 : TextConst 'ENU=The City, County, and State must be unique.';
      TaxableCodeTxt@1020006 : TextConst '@@@={Locked};ENU=TAXABLE';
      TaxableDescriptionTxt@1020005 : TextConst 'ENU=Taxable';
      CityTxt@1020007 : TextConst '@@@="%1 = Name of city; %2 = State abbreviation";ENU=City of %1, %2';
      StateTxt@1020003 : TextConst '@@@="%1 = State abbreviation";ENU=State of %1';

    LOCAL PROCEDURE ValidateJurisdiction@1020000();
    VAR
      HasError@1020000 : Boolean;
    BEGIN
      HasError := (UPPERCASE(City) = UPPERCASE(County)) AND (City <> '');
      HasError := HasError OR ((UPPERCASE(City) = State) AND (City <> ''));
      HasError := HasError OR ((UPPERCASE(County) = State) AND (County <> ''));
      IF HasError THEN
        ERROR(NotUniqueErr);
    END;

    [External]
    PROCEDURE SetTaxGroup@1020017(VAR TaxGroup@1020000 : Record 321);
    BEGIN
      IF NOT TaxGroup.GET(TaxableCodeTxt) THEN BEGIN
        TaxGroup.INIT;
        TaxGroup.VALIDATE(Code,TaxableCodeTxt);
        TaxGroup.VALIDATE(Description,TaxableDescriptionTxt);
        TaxGroup.INSERT;
      END;
    END;

    [External]
    PROCEDURE SetTaxJurisdiction@1020018(Jurisdiction@1020000 : Text[30];Description@1020001 : Text[50];ReportToCode@1020002 : Code[10]);
    VAR
      TaxJurisdiction@1020003 : Record 320;
      JurisdictionCode@1020004 : Code[10];
      NewJurisdiction@1020005 : Boolean;
    BEGIN
      IF Jurisdiction = '' THEN
        EXIT;

      NewJurisdiction := GetTaxJurisdictionCode(Jurisdiction,JurisdictionCode);

      IF JurisdictionCode = '' THEN
        JurisdictionCode := GenerateTaxJurisdictionCode;

      IF NewJurisdiction THEN BEGIN
        TaxJurisdiction.INIT;
        TaxJurisdiction.VALIDATE(Code,JurisdictionCode);
        TaxJurisdiction.INSERT;
      END ELSE
        TaxJurisdiction.GET(JurisdictionCode);

      TaxJurisdiction.VALIDATE(Description,Description);
      TaxJurisdiction.VALIDATE(Name,Jurisdiction);
      IF ReportToCode <> '' THEN
        TaxJurisdiction.VALIDATE("Report-to Jurisdiction",ReportToCode);
      TaxJurisdiction.VALIDATE("Tax Account (Sales)","Tax Account (Sales)");
      TaxJurisdiction.VALIDATE("Tax Account (Purchases)","Tax Account (Purchases)");
      TaxJurisdiction.VALIDATE("Country/Region","Country/Region");
      TaxJurisdiction.MODIFY;
    END;

    [External]
    PROCEDURE SetTaxArea@1020019(VAR TaxArea@1020000 : Record 318);
    BEGIN
      IF NOT TaxArea.GET("Tax Area Code") THEN BEGIN
        TaxArea.INIT;
        TaxArea.VALIDATE(Code,"Tax Area Code");
        TaxArea.VALIDATE(Description,"Tax Area Code");
        TaxArea.VALIDATE("Country/Region","Country/Region");
        TaxArea.INSERT;
      END;
    END;

    [External]
    PROCEDURE SetTaxAreaLine@1020044(TaxArea@1020000 : Record 318;Jurisdiction@1020001 : Text);
    VAR
      TaxAreaLine@1020002 : Record 319;
      JurisdictionCode@1020003 : Code[10];
    BEGIN
      GetTaxJurisdictionCode(COPYSTR(Jurisdiction,1,MAXSTRLEN(City)),JurisdictionCode);

      IF JurisdictionCode <> '' THEN
        IF NOT TaxAreaLine.GET(TaxArea.Code,JurisdictionCode) THEN BEGIN
          TaxAreaLine.INIT;
          TaxAreaLine.VALIDATE("Tax Area",TaxArea.Code);
          TaxAreaLine.VALIDATE("Tax Jurisdiction Code",JurisdictionCode);
          TaxAreaLine.INSERT;
        END;
    END;

    [External]
    PROCEDURE SetTaxDetail@1020020(Jurisdiction@1020000 : Text[30];Group@1020001 : Code[20];Tax@1020002 : Decimal);
    VAR
      TaxDetail@1020003 : Record 322;
      JurisdictionCode@1020004 : Code[10];
    BEGIN
      GetTaxJurisdictionCode(Jurisdiction,JurisdictionCode);

      IF JurisdictionCode <> '' THEN BEGIN
        TaxDetail.SETRANGE("Tax Jurisdiction Code",JurisdictionCode);
        TaxDetail.SETRANGE("Tax Group Code",Group);
        IF NOT TaxDetail.ISEMPTY THEN
          TaxDetail.DELETEALL;
        TaxDetail.INIT;
        TaxDetail.VALIDATE("Tax Jurisdiction Code",JurisdictionCode);
        TaxDetail.VALIDATE("Tax Group Code",Group);
        TaxDetail.VALIDATE("Tax Type",TaxDetail."Tax Type"::"Sales and Use Tax");
        TaxDetail.VALIDATE("Effective Date",0D);
        TaxDetail.VALIDATE("Maximum Amount/Qty.",0);
        TaxDetail.VALIDATE("Tax Below Maximum",Tax);
        TaxDetail.INSERT(TRUE);
      END;
    END;

    [External]
    PROCEDURE GetDescription@1020062(Description@1020000 : Text;CityOrCounty@1020001 : Text[30]) Result : Text[50];
    BEGIN
      Result := COPYSTR(STRSUBSTNO(Description,CityOrCounty,State),1,50);
      IF State = '' THEN
        Result := DELCHR(Result,'>',', ');
    END;

    [External]
    PROCEDURE GetDefaultTaxGroupCode@1020001() : Code[20];
    BEGIN
      EXIT(UPPERCASE(TaxableCodeTxt));
    END;

    [External]
    PROCEDURE GenerateTaxAreaCode@1020007() : Code[20];
    VAR
      TrucatedCity@1020000 : Text[18];
      CommaSeparator@1020001 : Text[2];
    BEGIN
      TrucatedCity := COPYSTR(City,1,16);
      IF (STRLEN(TrucatedCity) > 0) AND (STRLEN(State) > 0) THEN
        CommaSeparator := ', ';
      EXIT(STRSUBSTNO('%1%2%3',TrucatedCity,CommaSeparator,State));
    END;

    LOCAL PROCEDURE GenerateTaxJurisdictionCode@1020005() JurisdictionCode : Code[10];
    VAR
      TaxJurisdiction@1020001 : Record 320;
      TypeHelper@1020000 : Codeunit 10;
    BEGIN
      REPEAT
        JurisdictionCode := COPYSTR(TypeHelper.GetGuidAsString(CREATEGUID),1,MAXSTRLEN(JurisdictionCode));
      UNTIL NOT TaxJurisdiction.GET(JurisdictionCode);
    END;

    LOCAL PROCEDURE GetTaxJurisdictionCode@1020010(JurisdictionName@1020000 : Text[30];VAR JurisdictionCode@1020001 : Code[10]) NewJurisdiction : Boolean;
    VAR
      TaxJurisdiction@1020002 : Record 320;
    BEGIN
      IF JurisdictionName = '' THEN
        EXIT;

      IF STRLEN(DELCHR(JurisdictionName,'<>',' ')) < MAXSTRLEN(JurisdictionCode) THEN
        JurisdictionCode := COPYSTR(DELCHR(JurisdictionName,'<>',' '),1,MAXSTRLEN(JurisdictionCode));

      NewJurisdiction := TRUE;
      IF JurisdictionCode <> '' THEN
        IF TaxJurisdiction.GET(JurisdictionCode) THEN
          NewJurisdiction := FALSE;

      IF NewJurisdiction THEN BEGIN
        TaxJurisdiction.SETRANGE(Name,JurisdictionName);
        IF TaxJurisdiction.FINDFIRST THEN BEGIN
          JurisdictionCode := TaxJurisdiction.Code;
          NewJurisdiction := FALSE;
        END;
      END;
    END;

    [External]
    PROCEDURE StoreSalesTaxSetup@1020003();
    VAR
      TaxGroup@1020001 : Record 321;
      TaxArea@1020003 : Record 318;
      TaxAreaLine@1020000 : Record 319;
    BEGIN
      IF "Tax Area Code" = '' THEN BEGIN
        "Tax Area Code" := GenerateTaxAreaCode;
        MODIFY;
      END;
      SetTaxGroup(TaxGroup);
      SetTaxJurisdiction(State,STRSUBSTNO(StateTxt,State),State);
      IF State = '' THEN
        SetTaxJurisdiction(County,STRSUBSTNO('%1 County',County),State)
      ELSE
        SetTaxJurisdiction(County,STRSUBSTNO('%1 County, %2',County,State),State);
      SetTaxJurisdiction(City,GetDescription(CityTxt,City),State);
      SetTaxArea(TaxArea);

      TaxAreaLine.SETRANGE("Tax Area","Tax Area Code");
      IF NOT TaxAreaLine.ISEMPTY THEN
        TaxAreaLine.DELETEALL;
      SetTaxAreaLine(TaxArea,State);
      SetTaxAreaLine(TaxArea,County);
      SetTaxAreaLine(TaxArea,City);
      SetTaxDetail(State,TaxGroup.Code,"State Rate");
      SetTaxDetail(County,TaxGroup.Code,"County Rate");
      SetTaxDetail(City,TaxGroup.Code,"City Rate");
    END;

    PROCEDURE Initialize@1020002();
    VAR
      TaxSetup@1020000 : Record 326;
    BEGIN
      IF TaxSetup.GET THEN BEGIN
        IF ("Tax Account (Sales)" = '') AND (TaxSetup."Tax Account (Sales)" <> '') THEN
          VALIDATE("Tax Account (Sales)",TaxSetup."Tax Account (Sales)");
        IF ("Tax Account (Purchases)" = '') AND (TaxSetup."Tax Account (Purchases)" <> '') THEN
          VALIDATE("Tax Account (Purchases)",TaxSetup."Tax Account (Purchases)");
      END;
    END;

    BEGIN
    END.
  }
}

