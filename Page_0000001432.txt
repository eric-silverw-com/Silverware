OBJECT Page 1432 Net Promoter Score Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Net Promoter Score Setup;
               ESM=Configuraci¢n de Net Promoter Score;
               FRC=Programme d'installation de Net Promoter Score;
               ENC=Net Promoter Score Setup];
    SourceTable=Table1432;
    PageType=Card;
    OnOpenPage=VAR
                 NetPromoterScoreMgt@1000 : Codeunit 1432;
               BEGIN
                 GetActualApiUrl;
                 Puid := NetPromoterScoreMgt.GetPuid;
               END;

    OnAfterGetCurrRecord=BEGIN
                           GetCachedApiUrl;
                         END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;Action    ;
                      Name=Validate Actual URL;
                      CaptionML=[ENU=Validate Actual URL;
                                 ESM=Validar URL real;
                                 FRC=Valider l'URL r‚elle;
                                 ENC=Validate Actual URL];
                      ToolTipML=[ENU=Validate the actual API URL.;
                                 ESM=Permite validar la URL de API real.;
                                 FRC=Validez l'URL de l'API r‚elle.;
                                 ENC=Validate the actual API URL.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=IsActualUrlNotEmpty;
                      Image=ValidateEmailLoggingSetup;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ValidateApiUrl(ActualApiUrl);
                               END;
                                }
      { 12      ;1   ;Action    ;
                      Name=Validate Cached URL;
                      CaptionML=[ENU=Validate Cached URL;
                                 ESM=Validar URL en cach‚;
                                 FRC=Valider l'URL mise en cache;
                                 ENC=Validate Cached URL];
                      ToolTipML=[ENU=Validate the cached API URL.;
                                 ESM=Permite validar la URL de API en cach‚.;
                                 FRC=Validez l'URL de l'API mise en cache.;
                                 ENC=Validate the cached API URL.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=IsCachedUrlNotEmpty;
                      Image=ValidateEmailLoggingSetup;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ValidateApiUrl(CachedApiUrl);
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Name=Test Actual URL;
                      CaptionML=[ENU=Test Actual URL;
                                 ESM=Examinar URL real;
                                 FRC=Tester l'URL r‚elle;
                                 ENC=Test Actual URL];
                      ToolTipML=[ENU=Verify the actual API URL.;
                                 ESM=Permite comprobar la URL de API real.;
                                 FRC=V‚rifiez l'URL de l'API r‚elle.;
                                 ENC=Verify the actual API URL.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=IsActualUrlNotEmpty;
                      Image=Link;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 NetPromoterScoreMgt@1000 : Codeunit 1432;
                               BEGIN
                                 TestApiUrl(NetPromoterScoreMgt.GetTestUrl(ActualApiUrl));
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=Test Cached URL;
                      CaptionML=[ENU=Test Cached URL;
                                 ESM=Examinar URL en cach‚;
                                 FRC=Tester l'URL mise en cache;
                                 ENC=Test Cached URL];
                      ToolTipML=[ENU=Verify the cached API URL.;
                                 ESM=Permite comprobar la URL de API en cach‚.;
                                 FRC=V‚rifiez l'URL de l'API mise en cache.;
                                 ENC=Verify the cached API URL.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=IsCachedUrlNotEmpty;
                      Image=Link;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 NetPromoterScoreMgt@1000 : Codeunit 1432;
                               BEGIN
                                 TestApiUrl(NetPromoterScoreMgt.GetTestUrl(CachedApiUrl));
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=Renew Cached URL;
                      CaptionML=[ENU=Renew Cached URL;
                                 ESM=Renovar URL en cach‚;
                                 FRC=Renouveler l'URL mise en cache;
                                 ENC=Renew Cached URL];
                      ToolTipML=[ENU=Renew the cached API URL.;
                                 ESM=Permite renovar la URL de API en cach‚.;
                                 FRC=Renouvelez l'URL de l'API mise en cache.;
                                 ENC=Renew the cached API URL.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 GetActualApiUrl;
                                 IF NOT IsActualUrlNotEmpty THEN
                                   IF NOT CONFIRM(EmptyCachedUrlQst) THEN
                                     EXIT;

                                 "Expire Time" := CURRENTDATETIME;
                                 MODIFY;

                                 GetCachedApiUrl;
                                 IF IsCachedUrlNotEmpty THEN
                                   MESSAGE(SuccessfulSynchronizationMsg)
                                 ELSE
                                   MESSAGE(FailedSynchronizationMsg);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 10  ;1   ;Field     ;
                Name=PUID;
                CaptionML=[ENU=PUID;
                           ESM=PUID;
                           FRC=PUID;
                           ENC=PUID];
                ToolTipML=[ENU=Specifies PUID;
                           ESM=Especifica el PUID;
                           FRC=Sp‚cifie les PUID;
                           ENC=Specifies PUID];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Puid }

    { 8   ;1   ;Field     ;
                Name=Actual API URL;
                CaptionML=[ENU=Actual API URL;
                           ESM=URL de API real;
                           FRC=URL de l'API r‚elle;
                           ENC=Actual API URL];
                ToolTipML=[ENU=Specifies the actual API URL.;
                           ESM=Especifica la URL de API real.;
                           FRC=Sp‚cifie l'URL de l'API r‚elle.;
                           ENC=Specifies the actual API URL.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ActualApiUrl }

    { 3   ;1   ;Field     ;
                Name=Cached API URL;
                CaptionML=[ENU=Cached API URL;
                           ESM=URL de API en cach‚;
                           FRC=URL de l'API mise en cache;
                           ENC=Cached API URL];
                ToolTipML=[ENU=Specifies the cached API URL.;
                           ESM=Especifica la URL de API en cach‚.;
                           FRC=Sp‚cifie l'URL de l'API mise en cache.;
                           ENC=Specifies the cached API URL.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CachedApiUrl;
                Editable=FALSE }

    { 4   ;1   ;Field     ;
                Name=Cache Expire Time;
                CaptionML=[ENU=Cache Expire Time;
                           ESM=Hora de vencimiento de la cach‚;
                           FRC=Heure d'expiration du cache;
                           ENC=Cache Expire Time];
                ToolTipML=[ENU=Specifies the cache expiration time.;
                           ESM=Especifica la hora de vencimiento de la cach‚.;
                           FRC=Sp‚cifie le d‚lai d'expiration du cache.;
                           ENC=Specifies the cache expiration time.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expire Time" }

    { 5   ;1   ;Field     ;
                CaptionML=[ENU=Time Between Requests;
                           ESM=Tiempo entre solicitudes;
                           FRC=Dur‚e entre les demandes;
                           ENC=Time Between Requests];
                ToolTipML=[ENU=Specifies the minimum time between requests to the NPS API URL.;
                           ESM=Especifica el tiempo m¡nimo entre solicitudes en la URL de API de NPS.;
                           FRC=Sp‚cifie la dur‚e minimale entre les demandes sur l'URL de l'API NPS.;
                           ENC=Specifies the minimum time between requests to the NPS API URL.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Time Between Requests" }

  }
  CODE
  {
    VAR
      CachedApiUrl@1000 : Text;
      TestSuccessfulMsg@1001 : TextConst '@@@=%1 - request, %2 - response;ENU=The URL test was successful.\Request: %1\Response: %2.;ESM=La prueba de URL se realiz¢ correctamente.\Solicitud: %1\Respuesta: %2.;FRC=Le test d''URL a r‚ussi.\Demandeÿ: %1\R‚ponseÿ: %2.;ENC=The URL test was successful.\Request: %1\Response: %2.';
      TestFailedMsg@1002 : TextConst '@@@=%1 - request, %2 - error;ENU=The URL test failed.\Request: %1\Error: %2.;ESM=Error en la prueba de URL.\Solicitud: %1\Error: %2.;FRC=Le test de l''URL a ‚chou‚.\Demandeÿ: %1\Erreurÿ: %2.;ENC=The URL test failed.\Request: %1\Error: %2.';
      ValidationMsg@1012 : TextConst '@@@=%1 - URL, %2 - is URI, %3 - is HTTP, %4 - is HTTPS;ENU=The URL was validated.\URL: %1\Is URI: %2\Is HTTP: %3\Is HTTPS: %4.;ESM=La URL se valid¢.\URL: %1\URI: %2\HTTP: %3\HTTPS: %4.;FRC=L''URL a ‚t‚ valid‚e.\URLÿ: %1\URIÿ: %2\HTTPÿ: %3\HTTPSÿ: %4.;ENC=The URL was validated.\URL: %1\Is URI: %2\Is HTTP: %3\Is HTTPS: %4.';
      SuccessfulSynchronizationMsg@1003 : TextConst 'ENU=The cached URL was successfuly synchronized with the actual URL.;ESM=La URL en cach‚ se ha sincronizado correctamente con la URL real.;FRC=L''URL mise en cache a ‚t‚ correctement synchronis‚e avec l''URL r‚elle.;ENC=The cached URL was successfuly synchronized with the actual URL.';
      FailedSynchronizationMsg@1004 : TextConst 'ENU=Cannot get the actual URL.;ESM=No se puede obtener la URL real.;FRC=Impossible d''obtenir l''URL r‚elle.;ENC=Cannot get the actual URL.';
      ActualApiUrl@1005 : Text;
      NpsApiUrlTxt@1006 : TextConst '@@@={Locked};ENU=NpsApiUrl;ESM=NpsApiUrl;FRC=NpsApiUrl;ENC=NpsApiUrl';
      Puid@1010 : Text;
      IsCachedUrlNotEmpty@1007 : Boolean;
      IsActualUrlNotEmpty@1008 : Boolean;
      EmptyCachedUrlQst@1009 : TextConst 'ENU=The actual API URL is empty. Do you want to empty the cached API URL as well?;ESM=La URL de API real est  vac¡a. ¨Desea vaciar tambi‚n la URL de API en cach‚?;FRC=L''URL de l''API r‚elle est vide. Voulez-vous vider ‚galement l''URL de l''API mise en cacheÿ?;ENC=The actual API URL is empty. Do you want to empty the cached API URL as well?';

    LOCAL PROCEDURE GetActualApiUrl@4();
    VAR
      AzureKeyVaultManagement@1000 : Codeunit 2200;
    BEGIN
      IF AzureKeyVaultManagement.IsEnable THEN
        IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(ActualApiUrl,NpsApiUrlTxt) THEN
          ActualApiUrl := '';
      ActualApiUrl := DELCHR(ActualApiUrl,'<>',' ');
      IsActualUrlNotEmpty := ActualApiUrl <> '';
    END;

    LOCAL PROCEDURE GetCachedApiUrl@2();
    BEGIN
      CachedApiUrl := DELCHR(GetApiUrl,'<>',' ');
      IsCachedUrlNotEmpty := CachedApiUrl <> '';
    END;

    LOCAL PROCEDURE TestApiUrl@5(Url@1004 : Text);
    VAR
      NetPromoterScoreMgt@1002 : Codeunit 1432;
      Response@1000 : Text;
      ErrorMessage@1001 : Text;
    BEGIN
      IF NetPromoterScoreMgt.TestConnection(Url,Response,ErrorMessage) THEN
        MESSAGE(TestSuccessfulMsg,Url,Response)
      ELSE
        MESSAGE(TestFailedMsg,Url,ErrorMessage);
    END;

    LOCAL PROCEDURE ValidateApiUrl@3(Url@1004 : Text);
    VAR
      WebRequestHelper@1002 : Codeunit 1299;
      IsValidUri@1000 : Boolean;
      IsHttpUrl@1003 : Boolean;
      IsSecureHttpUrl@1005 : Boolean;
    BEGIN
      IsValidUri := WebRequestHelper.IsValidUri(Url);
      IsHttpUrl := WebRequestHelper.IsHttpUrl(Url);
      IsSecureHttpUrl := WebRequestHelper.IsSecureHttpUrl(Url);
      MESSAGE(ValidationMsg,Url,IsValidUri,IsHttpUrl,IsSecureHttpUrl);
    END;

    BEGIN
    END.
  }
}

