OBJECT Page 9801 User Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:05 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=User Permission Sets;
    SourceTable=Table2000000053;
    DelayedInsert=Yes;
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       IF User."User Name" <> '' THEN
                         CurrPage.CAPTION := User."User Name";
                     END;

    OnNewRecord=BEGIN
                  IF User.GET("User Security ID") THEN;
                  CALCFIELDS("App Name","Role Name");
                END;

    OnInsertRecord=BEGIN
                     User.TESTFIELD("User Name");
                     CALCFIELDS("App Name","Role Name");
                   END;

    OnModifyRecord=BEGIN
                     CALCFIELDS("App Name","Role Name");
                   END;

    OnDeleteRecord=VAR
                     UserGroupAccessControl@1000 : Record 9002;
                   BEGIN
                     UserGroupAccessControl.SETFILTER("User Group Code",'<>%1','');
                     UserGroupAccessControl.SETRANGE("User Security ID","User Security ID");
                     UserGroupAccessControl.SETRANGE("Role ID","Role ID");
                     UserGroupAccessControl.SETRANGE("Company Name","Company Name");
                     IF UserGroupAccessControl.FINDFIRST THEN
                       ERROR(InUserGroupErr,UserGroupAccessControl."User Group Code");
                   END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      Name=PermissionActions;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;Action    ;
                      Name=Permissions;
                      ShortCutKey=Shift+Ctrl+p;
                      CaptionML=ENU=Permissions;
                      ToolTipML=ENU=View or edit which feature objects that users need to access and set up the related permissions in permission sets that you can assign to the users of the database.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Permission;
                      OnAction=VAR
                                 PermissionPagesMgt@1000 : Codeunit 9001;
                               BEGIN
                                 PermissionPagesMgt.ShowPermissions(Scope,"App ID","Role ID",FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=ENU=User Permissions;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=PermissionSet;
                CaptionML=ENU=Permission Set;
                ToolTipML=ENU=Specifies the ID of a security role that has been assigned to this Windows login in the current database.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Role ID";
                OnValidate=VAR
                             AggregatePermissionSet@1000 : Record 2000000167;
                           BEGIN
                             // If the user used the lookup, skip validation
                             IF SkipValidation THEN BEGIN
                               SkipValidation := FALSE;
                               EXIT;
                             END;

                             // Get the Scope and App ID for a matching Role ID
                             AggregatePermissionSet.SETRANGE("Role ID","Role ID");
                             AggregatePermissionSet.FINDFIRST;

                             IF AggregatePermissionSet.COUNT > 1 THEN
                               ERROR(MultipleRoleIDErr,"Role ID");

                             Scope := AggregatePermissionSet.Scope;
                             "App ID" := AggregatePermissionSet."App ID";

                             CALCFIELDS("App Name","Role Name");

                             SkipValidation := FALSE; // re-enable validation
                           END;

                OnLookup=VAR
                           PermissionSetLookupRecord@1002 : Record 2000000167;
                           PermissionSetLookup@1001 : Page 9841;
                         BEGIN
                           PermissionSetLookup.LOOKUPMODE := TRUE;
                           IF PermissionSetLookup.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             PermissionSetLookup.GETRECORD(PermissionSetLookupRecord);
                             Scope := PermissionSetLookupRecord.Scope;
                             "App ID" := PermissionSetLookupRecord."App ID";
                             "Role ID" := PermissionSetLookupRecord."Role ID";
                             CALCFIELDS("App Name","Role Name");
                             SkipValidation := TRUE;
                           END;
                         END;
                          }

    { 4   ;2   ;Field     ;
                Name=Description;
                DrillDown=No;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies the name of the security role that has been given to this Windows login in the current database.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Role Name";
                Editable=FALSE }

    { 5   ;2   ;Field     ;
                Name=Company;
                CaptionML=ENU=Company;
                ToolTipML=ENU=Specifies the name of the company that this role is limited to for this Windows login.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Company Name" }

    { 6   ;2   ;Field     ;
                Name=ExtensionName;
                DrillDown=No;
                CaptionML=ENU=Extension Name;
                ToolTipML=ENU=Specifies the name of the extension.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="App Name";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      User@1000 : Record 2000000120;
      InUserGroupErr@1001 : TextConst '@@@="%1=a user group code, e.g. ADMIN or SALESDEPT";ENU=You cannot remove this permission set because it is included in user group %1.';
      MultipleRoleIDErr@1003 : TextConst '@@@=%1 will be replaced with a Role ID code value from the Permission Set table;ENU=The permission set %1 is defined multiple times in this context. Use the lookup button to select the relevant permission set.';
      SkipValidation@1004 : Boolean;

    BEGIN
    END.
  }
}

