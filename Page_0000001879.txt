OBJECT Page 1879 VAT Product Posting Grp Part
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:44 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Tax Product Posting Grp Part;
    SourceTable=Table1877;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 VATNotification.ID := FORMAT(CREATEGUID);
                 PopulateVATProdGroups;
                 ShowVATRates;
                 SETRANGE(Default,FALSE);
               END;

    OnNewRecord=BEGIN
                  VALIDATE(Selected,TRUE);
                  VALIDATE(Default,FALSE);
                  VALIDATE("Application Type","Application Type"::Items);
                END;

    OnInsertRecord=BEGIN
                     IF VATAccountsGroup OR VATClausesGroup THEN
                       ERROR(VATAddIsNotallowedErr);
                   END;

    OnDeleteRecord=BEGIN
                     IF CheckExistingItemAndServiceWithVAT("VAT Prod. Posting Group","Application Type" = "Application Type"::Services ) THEN BEGIN
                       TrigerNotification(VATDeleteIsNotallowedErr);
                       EXIT(FALSE);
                     END;
                     IF VATAccountsGroup OR VATClausesGroup THEN BEGIN
                       SETRANGE(Selected,TRUE);
                       IF COUNT = 1 THEN BEGIN
                         TrigerNotification(VATEmptyErrorMsg);
                         EXIT(FALSE);
                       END;
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 9   ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether to include the Tax product posting group on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Selected;
                Visible=VATRatesGroup;
                OnValidate=BEGIN
                             IF Selected THEN
                               EXIT;

                             IF CheckExistingItemAndServiceWithVAT(xRec."VAT Prod. Posting Group",xRec."Application Type" = "Application Type"::Services) THEN BEGIN
                               TrigerNotification(VATDeleteIsNotallowedErr);
                               ERROR('');
                             END;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Tax specification of the involved item or resource to link transactions made for this record with the appropriate general ledger account according to the Tax posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                OnValidate=BEGIN
                             IF CheckExistingItemAndServiceWithVAT(xRec."VAT Prod. Posting Group",xRec."Application Type" = "Application Type"::Services) THEN BEGIN
                               TrigerNotification(VATDeleteIsNotallowedErr);
                               ERROR('');
                             END;
                           END;
                            }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how a cost recipient is linked to its cost source to provide cost forwarding according to the costing method.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Application Type";
                Visible=VATRatesGroup;
                OnValidate=BEGIN
                             IF CheckExistingItemAndServiceWithVAT(xRec."VAT Prod. Posting Group",xRec."Application Type" = "Application Type"::Services) THEN BEGIN
                               TrigerNotification(VATDeleteIsNotallowedErr);
                               ERROR('');
                             END;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the Tax product posting group.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Grp Desc.";
                Visible=VATRatesGroup }

    { 5   ;2   ;Field     ;
                Width=3;
                ToolTipML=ENU=Specifies the Tax percentage used.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT %";
                Visible=VATRatesGroup }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general ledger account number to which to post sales Tax, for the particular combination of Tax business posting group and Tax product posting group.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales VAT Account";
                Visible=VATAccountsGroup }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general ledger account number to which to post purchase Tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Purchase VAT Account";
                Visible=VATAccountsGroup }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general ledger account number to which you want to post reverse charge Tax (purchase Tax) for this combination of Tax business posting group and Tax product posting group, if you have selected the Reverse Charge Tax option in the Tax Calculation Type field.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reverse Chrg. VAT Acc.";
                Visible=VATAccountsGroup }

    { 11  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the Tax clause.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Clause Desc";
                Visible=VATClausesGroup }

  }
  CODE
  {
    VAR
      VATNotification@1007 : Notification;
      VATRatesGroup@1000 : Boolean;
      VATAccountsGroup@1001 : Boolean;
      VATClausesGroup@1002 : Boolean;
      VATAddIsNotallowedErr@1003 : TextConst 'ENU=You can''t add accounts now because they won''t have settings like Tax rates. Go back to the Tax Rates for Items and Services page, add a line, and continue.';
      VATDeleteIsNotallowedErr@1004 : TextConst 'ENU=You can''t delete or modify this Tax record because it is connected to existing item.';
      VATEmptyErrorMsg@1009 : TextConst 'ENU=You can''t delete the record because the Tax setup would be empty.';

    PROCEDURE ShowVATRates@1();
    BEGIN
      ResetView;
      VATRatesGroup := TRUE;
      RESET;
      SETRANGE(Default,FALSE);
      CurrPage.UPDATE;
    END;

    PROCEDURE ShowVATAccounts@2();
    BEGIN
      ResetView;
      VATAccountsGroup := TRUE;
      ShowOnlySelectedSrvItem;
    END;

    PROCEDURE ShowVATClauses@3();
    BEGIN
      ResetView;
      VATClausesGroup := TRUE;
      ShowOnlySelectedSrvItem;
    END;

    LOCAL PROCEDURE ResetView@4();
    BEGIN
      VATNotification.RECALL;
      VATRatesGroup := FALSE;
      VATAccountsGroup := FALSE;
      VATClausesGroup := FALSE;
    END;

    LOCAL PROCEDURE ShowOnlySelectedSrvItem@13();
    BEGIN
      SETRANGE(Selected,TRUE);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TrigerNotification@15(NotificationMsg@1000 : Text);
    BEGIN
      VATNotification.RECALL;
      VATNotification.MESSAGE(NotificationMsg);
      VATNotification.SEND;
    END;

    PROCEDURE HideNotification@5();
    VAR
      DummyGuid@1000 : GUID;
    BEGIN
      IF VATNotification.ID = DummyGuid THEN
        EXIT;
      VATNotification.MESSAGE := '';
      VATNotification.RECALL;
    END;

    BEGIN
    END.
  }
}

