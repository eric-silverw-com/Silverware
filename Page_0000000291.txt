OBJECT Page 291 Req. Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:12 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Requisition Worksheets;
    ApplicationArea=#Basic,#Suite,#Planning;
    SaveValues=Yes;
    LinksAllowed=No;
    SourceTable=Table246;
    DelayedInsert=Yes;
    DataCaptionFields=Journal Batch Name;
    PageType=Worksheet;
    UsageCategory=Tasks;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 OpenedFromBatch := ("Journal Batch Name" <> '') AND ("Worksheet Template Name" = '');
                 IF OpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   ReqJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   EXIT;
                 END;
                 ReqJnlManagement.TemplateSelection(PAGE::"Req. Worksheet",FALSE,0,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');

                 OnBeforeOpenReqWorksheet(CurrentJnlBatchName);
                 ReqJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                     END;

    OnNewRecord=BEGIN
                  ReqJnlManagement.SetUpNewLine(Rec,xRec);
                  CLEAR(ShortcutDimCode);
                END;

    OnDeleteRecord=BEGIN
                     "Accept Action Message" := FALSE;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 30      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the item or resource.;
                      ApplicationArea=#Planning;
                      RunObject=Codeunit 335;
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=EditLines }
      { 76      ;2   ;ActionGroup;
                      CaptionML=ENU=Item Availability by;
                      Image=ItemAvailability }
      { 3       ;3   ;Action    ;
                      CaptionML=ENU=Event;
                      ToolTipML=ENU=View how the actual and the projected available balance of an item will develop over time according to supply and demand events.;
                      ApplicationArea=#Planning;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 77      ;3   ;Action    ;
                      CaptionML=ENU=Period;
                      ToolTipML=ENU=Show the projected quantity of the item over time according to time periods, such as day, week, or month.;
                      ApplicationArea=#Planning;
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 78      ;3   ;Action    ;
                      CaptionML=ENU=Variant;
                      ToolTipML=ENU=View or edit the item's variants. Instead of setting up each color of an item as a separate item, you can set up the various colors as variants of the item.;
                      ApplicationArea=#Planning;
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 61      ;3   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=ENU=Location;
                      ToolTipML=ENU=View the actual and projected quantity of the item per location.;
                      ApplicationArea=#Location;
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 7       ;3   ;Action    ;
                      CaptionML=ENU=BOM Level;
                      ToolTipML=ENU=View availability figures for items on bills of materials that show how many units of a parent item you can make based on the availability of child items.;
                      ApplicationArea=#Assembly;
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromReqLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 5       ;3   ;Action    ;
                      CaptionML=ENU=Timeline;
                      ToolTipML=ENU=Get a graphical view of an item's projected inventory based on future supply and demand events, with or without planning suggestions. The result is a graphical representation of the inventory profile.;
                      ApplicationArea=#Planning;
                      Image=Timeline;
                      OnAction=BEGIN
                                 ShowTimeline(Rec);
                               END;
                                }
      { 83      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6500    ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 31      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 32      ;2   ;Action    ;
                      Name=CalculatePlan;
                      Ellipsis=Yes;
                      CaptionML=ENU=Calculate Plan;
                      ToolTipML=ENU=Use a batch job to help you calculate a supply plan for items and stockkeeping units that have the Replenishment System field set to Purchase or Transfer.;
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CalculatePlan;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalculatePlan.SetTemplAndWorksheet("Worksheet Template Name","Journal Batch Name");
                                 CalculatePlan.RUNMODAL;
                                 CLEAR(CalculatePlan);
                               END;
                                }
      { 33      ;2   ;ActionGroup;
                      CaptionML=ENU=Drop Shipment;
                      Image=Delivery }
      { 34      ;3   ;Action    ;
                      AccessByPermission=TableData 223=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Sales Orders;
                      ToolTipML=ENU=Copy sales lines to the requisition worksheet. You can use the batch job to create requisition worksheet proposal lines from sales lines for drop shipments or special orders.;
                      ApplicationArea=#Planning;
                      Image=Order;
                      OnAction=BEGIN
                                 GetSalesOrder.SetReqWkshLine(Rec,0);
                                 GetSalesOrder.RUNMODAL;
                                 CLEAR(GetSalesOrder);
                               END;
                                }
      { 35      ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      ToolTipML=ENU=Create a new sales order for an item that is shipped directly from the vendor to the customer. The Drop Shipment check box must be selected on the sales order line, and the Vendor No. field must be filled on the item card.;
                      ApplicationArea=#Planning;
                      Image=Document;
                      OnAction=BEGIN
                                 SalesHeader.SETRANGE("No.","Sales Order No.");
                                 SalesOrder.SETTABLEVIEW(SalesHeader);
                                 SalesOrder.EDITABLE := FALSE;
                                 SalesOrder.RUN;
                               END;
                                }
      { 52      ;2   ;ActionGroup;
                      CaptionML=ENU=Special Order;
                      Image=SpecialOrder }
      { 53      ;3   ;Action    ;
                      AccessByPermission=TableData 223=R;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get &Sales Orders;
                      ToolTipML=ENU=Copy sales lines to the requisition worksheet. You can use the batch job to create requisition worksheet proposal lines from sales lines for drop shipments or special orders.;
                      ApplicationArea=#Planning;
                      Image=Order;
                      OnAction=BEGIN
                                 GetSalesOrder.SetReqWkshLine(Rec,1);
                                 GetSalesOrder.RUNMODAL;
                                 CLEAR(GetSalesOrder);
                               END;
                                }
      { 75      ;3   ;Action    ;
                      AccessByPermission=TableData 110=R;
                      CaptionML=ENU=Sales &Order;
                      ToolTipML=ENU=Create a new sales order for an item that is shipped directly from the vendor to the customer. The Drop Shipment check box must be selected on the sales order line, and the Vendor No. field must be filled on the item card.;
                      ApplicationArea=#Planning;
                      Image=Document;
                      OnAction=BEGIN
                                 SalesHeader.SETRANGE("No.","Sales Order No.");
                                 SalesOrder.SETTABLEVIEW(SalesHeader);
                                 SalesOrder.EDITABLE := FALSE;
                                 SalesOrder.RUN;
                               END;
                                }
      { 81      ;2   ;Separator  }
      { 90      ;2   ;Action    ;
                      Name=Reserve;
                      CaptionML=ENU=&Reserve;
                      ToolTipML=ENU=Reserve one or more units of the item on the job planning line, either from inventory or from incoming supply.;
                      ApplicationArea=#Reservation;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reserve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CurrPage.SAVERECORD;
                                 ShowReservation;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=CarryOutActionMessage;
                      Ellipsis=Yes;
                      CaptionML=ENU=Carry &Out Action Message;
                      ToolTipML=ENU=Use a batch job to help you create actual supply orders from the order proposals.;
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CarryOutActionMessage;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 PerformAction@1001 : Report 493;
                               BEGIN
                                 PerformAction.SetReqWkshLine(Rec);
                                 PerformAction.RUNMODAL;
                                 PerformAction.GetReqWkshLine(Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=Order Tracking;
                      Image=OrderTracking }
      { 80      ;2   ;Action    ;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Planning;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderTracking;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TrackingForm@1001 : Page 99000822;
                               BEGIN
                                 TrackingForm.SetReqLine(Rec);
                                 TrackingForm.RUNMODAL;
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1901091106;1 ;Action    ;
                      CaptionML=ENU=Inventory Availability;
                      ToolTipML=ENU=View, print, or save a summary of historical inventory transactions with selected items, for example, to decide when to purchase the items. The report specifies quantity on sales order, quantity on purchase order, back orders from vendors, minimum inventory, and whether there are reorders.;
                      ApplicationArea=#Planning;
                      RunObject=Report 10131;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1901254106;1 ;Action    ;
                      CaptionML=ENU=Status;
                      ToolTipML=ENU=View the status of the worksheet.;
                      ApplicationArea=#Planning;
                      RunObject=Report 706;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906212206;1 ;Action    ;
                      CaptionML=ENU=Inventory - Availability Plan;
                      ToolTipML=ENU=View a list of the quantity of each item in customer, purchase, and transfer orders and the quantity available in inventory. The list is divided into columns that cover six periods with starting and ending dates as well as the periods before and after those periods. The list is useful when you are planning your inventory purchases.;
                      ApplicationArea=#Planning;
                      RunObject=Report 707;
                      Promoted=Yes;
                      Image=ItemAvailability;
                      PromotedCategory=Report }
      { 1903262806;1 ;Action    ;
                      CaptionML=ENU=Inventory Order Details;
                      ToolTipML=ENU=View a list of the orders that have not yet been shipped or received and the items in the orders. It shows the order number, customer's name, shipment date, order quantity, quantity on back order, outstanding quantity and unit price, as well as possible discount percentage and amount. The quantity on back order and outstanding quantity and amount are totaled for each item. The list can be used to find out whether there are currently shipment problems or any can be expected.;
                      ApplicationArea=#Planning;
                      RunObject=Report 708;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1904739806;1 ;Action    ;
                      CaptionML=ENU=Inventory Purchase Orders;
                      ToolTipML=ENU=View a list of items on order from vendors. It also shows the expected receipt date and the quantity and amount on back orders. The report can be used, for example, to see when items should be received and whether a reminder of a back order should be issued.;
                      ApplicationArea=#Planning;
                      RunObject=Report 10156;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#Planning;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             ReqJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           ReqJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of requisition worksheet line you are creating.;
                ApplicationArea=#Planning;
                SourceExpr=Type;
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                ApplicationArea=#Planning;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 60  ;2   ;Field     ;
                ToolTipML=ENU=Specifies an action to take to rebalance the demand-supply situation.;
                ApplicationArea=#Planning;
                SourceExpr="Action Message" }

    { 65  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether to accept the action message proposed for the line.;
                ApplicationArea=#Planning;
                SourceExpr="Accept Action Message" }

    { 62  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies text that describes the entry.;
                ApplicationArea=#Planning;
                SourceExpr=Description }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies additional text describing the entry, or a remark about the requisition worksheet line.;
                ApplicationArea=#Planning;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 92  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the location that items are transferred from.;
                ApplicationArea=#Location;
                SourceExpr="Transfer-from Code";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a code for an inventory location where the items that are being ordered will be registered.;
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 69  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity stated on the production or purchase order, when an action message proposes to change the quantity on an order.;
                ApplicationArea=#Planning;
                SourceExpr="Original Quantity" }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of units of the item or resource specified on the line.;
                ApplicationArea=#Planning;
                SourceExpr=Quantity }

    { 66  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Planning;
                SourceExpr="Unit of Measure Code" }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the cost of one unit of the selected item or resource.;
                ApplicationArea=#Planning;
                SourceExpr="Direct Unit Cost" }

    { 27  ;2   ;Field     ;
                AssistEdit=Yes;
                ToolTipML=ENU=Specifies the currency code for the requisition lines.;
                ApplicationArea=#Planning;
                SourceExpr="Currency Code";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 46  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Line Discount %";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the due date stated on the production or purchase order, when an action message proposes to reschedule an order.;
                ApplicationArea=#Planning;
                SourceExpr="Original Due Date" }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when you can expect to receive the items.;
                ApplicationArea=#Planning;
                SourceExpr="Due Date" }

    { 48  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the related order was created.;
                ApplicationArea=#Planning;
                SourceExpr="Order Date";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the vendor who will ship the items in the purchase order.;
                ApplicationArea=#Planning;
                SourceExpr="Vendor No.";
                OnValidate=BEGIN
                             ReqJnlManagement.GetDescriptionAndRcptName(Rec,Description2,BuyFromVendorName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number that the vendor uses for this item.;
                ApplicationArea=#Planning;
                SourceExpr="Vendor Item No." }

    { 54  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the order address of the related vendor.;
                ApplicationArea=#Planning;
                SourceExpr="Order Address Code";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the customer.;
                ApplicationArea=#Planning;
                SourceExpr="Sell-to Customer No.";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Planning;
                SourceExpr="Ship-to Code";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the related production order.;
                ApplicationArea=#Planning;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the ID of the user who is ordering the items on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Requester ID";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the items on the line have been approved for purchase.;
                ApplicationArea=#Planning;
                SourceExpr=Confirmed;
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                ApplicationArea=#Dimensions;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 79  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the relevant production or purchase order.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Order No.";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the order is a purchase order, a production order, or a transfer order.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Order Type";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                ToolTipML=ENU=Specifies which kind of order to use to create replenishment orders and order proposals.;
                ApplicationArea=#Planning;
                SourceExpr="Replenishment System" }

    { 87  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the purchase or production order line.;
                ApplicationArea=#Planning;
                SourceExpr="Ref. Line No.";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the supply represented by this line is considered by the planning system when calculating action messages.;
                ApplicationArea=#Planning;
                SourceExpr="Planning Flexibility";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if a blanket purchase order exists for the item on the requisition line.;
                ApplicationArea=#Planning;
                BlankZero=Yes;
                SourceExpr="Blanket Purch. Order Exists";
                Visible=False }

    { 20  ;1   ;Group      }

    { 1901776201;2;Group  ;
                GroupType=FixedLayout }

    { 1902759801;3;Group  ;
                CaptionML=ENU=Description }

    { 21  ;4   ;Field     ;
                ToolTipML=ENU=Specifies an additional part of the worksheet description.;
                ApplicationArea=#Planning;
                SourceExpr=Description2;
                Editable=FALSE;
                ShowCaption=No }

    { 1901652601;3;Group  ;
                CaptionML=ENU=Buy-from Vendor Name }

    { 23  ;4   ;Field     ;
                CaptionML=ENU=Buy-from Vendor Name;
                ToolTipML=ENU=Specifies the vendor according to the values in the Document No. and Document Type fields.;
                ApplicationArea=#Planning;
                SourceExpr=BuyFromVendorName;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1903326807;1;Part   ;
                ApplicationArea=#Planning;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9090;
                Visible=TRUE;
                PartType=Page }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      GetSalesOrder@1004 : Report 698;
      CalculatePlan@1003 : Report 699;
      ReqJnlManagement@1005 : Codeunit 330;
      ItemAvailFormsMgt@1011 : Codeunit 353;
      ChangeExchangeRate@1002 : Page 511;
      SalesOrder@1001 : Page 42;
      CurrentJnlBatchName@1006 : Code[10];
      Description2@1007 : Text[50];
      BuyFromVendorName@1008 : Text[50];
      ShortcutDimCode@1009 : ARRAY [8] OF Code[20];
      OpenedFromBatch@1010 : Boolean;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@6212();
    BEGIN
      CurrPage.SAVERECORD;
      ReqJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeOpenReqWorksheet@1(VAR CUrrentJnlBatchName@1000 : Code[10]);
    BEGIN
    END;

    BEGIN
    END.
  }
}

