OBJECT Page 7336 Whse. Shipment Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:41 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table7321;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       CrossDockMgt.CalcCrossDockedItems("Item No.","Variant Code","Unit of Measure Code","Location Code",
                         QtyCrossDockedUOMBase,
                         QtyCrossDockedAllUOMBase);
                       QtyCrossDockedUOM := 0;
                       IF  "Qty. per Unit of Measure" <> 0 THEN
                         QtyCrossDockedUOM := ROUND(QtyCrossDockedUOMBase / "Qty. per Unit of Measure",0.00001);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1900724404;2 ;Action    ;
                      CaptionML=ENU=Source &Document Line;
                      ToolTipML=ENU="View the line on a released source document that the warehouse activity is for. ";
                      ApplicationArea=#Warehouse;
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 ShowSourceLine;
                               END;
                                }
      { 1903866704;2 ;Action    ;
                      AccessByPermission=TableData 7302=R;
                      CaptionML=ENU=&Bin Contents List;
                      ToolTipML=ENU=View the contents of each bin and the parameters that define how items are routed through the bin.;
                      ApplicationArea=#Warehouse;
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1900295504;2 ;Action    ;
                      Name=ItemTrackingLines;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=ENU=Assemble to Order;
                      ToolTipML=ENU=View the linked assembly order if the shipment was for an assemble-to-order sale.;
                      ApplicationArea=#Assembly;
                      Image=AssemblyBOM;
                      OnAction=VAR
                                 ATOLink@1001 : Record 904;
                                 ATOSalesLine@1000 : Record 37;
                               BEGIN
                                 TESTFIELD("Assemble to Order",TRUE);
                                 TESTFIELD("Source Type",DATABASE::"Sales Line");
                                 ATOSalesLine.GET("Source Subtype","Source No.","Source Line No.");
                                 ATOLink.ShowAsm(ATOSalesLine);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 52  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of document that the line relates to.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source Document" }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the source document that the entry originates from.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source No." }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the line number of the source document that the entry originates from.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source Line No.";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of destination associated with the warehouse shipment line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Destination Type";
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the customer, vendor, or location to which the items should be shipped.;
                ApplicationArea=#Warehouse;
                SourceExpr="Destination No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the item that should be shipped.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No." }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the description of the item in the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the location from which the items on the line are being shipped.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the zone where the bin on this shipment line is located.;
                ApplicationArea=#Warehouse;
                SourceExpr="Zone Code";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;
                            }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the shelf number of the item for informational use.;
                ApplicationArea=#Warehouse;
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that should be shipped.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that should be shipped, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of items that remain to be shipped.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Ship" }

    { 38  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the item on the line that is posted as shipped.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Shipped" }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity, in base units of measure, that will be shipped when the warehouse shipment is posted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. to Ship (Base)";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that is posted as shipped expressed in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Shipped (Base)";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                Visible=TRUE }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled, expressed in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity in pick instructions assigned to be picked for the warehouse shipment line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Qty.";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity, in the base unit of measure, in pick instructions, that is assigned to be picked for the warehouse shipment line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Qty. (Base)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many of the total shipment quantity have been registered as picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Picked";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many of the total shipment quantity in the base unit of measure have been registered as picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Picked (Base)";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the related warehouse activity, such as a pick, must be completed to ensure items can be shipped by the shipment date.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date" }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code" }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of base units of measure that are in the unit of measure specified for the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure" }

    { 54  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Cross-Dock Bin;
                ToolTipML=ENU=Specifies the sum of all the outbound lines requesting the item within the look-ahead period, minus the quantity of the items that have already been placed in the cross-dock area.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=QtyCrossDockedUOM;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CrossDockMgt.ShowBinContentsCrossDocked("Item No.","Variant Code","Unit of Measure Code","Location Code",TRUE);
                            END;
                             }

    { 56  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Cross-Dock Bin (Base);
                ToolTipML=ENU=Specifies the sum of all the outbound lines requesting the item within the look-ahead period, minus the quantity of the items that have already been placed in the cross-dock area.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=QtyCrossDockedUOMBase;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CrossDockMgt.ShowBinContentsCrossDocked("Item No.","Variant Code","Unit of Measure Code","Location Code",TRUE);
                            END;
                             }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Cross-Dock Bin (Base all UOM);
                ToolTipML=ENU=Specifies the sum of all the outbound lines requesting the item within the look-ahead period, minus the quantity of the items that have already been placed in the cross-dock area.;
                ApplicationArea=#Warehouse;
                DecimalPlaces=0:5;
                SourceExpr=QtyCrossDockedAllUOMBase;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CrossDockMgt.ShowBinContentsCrossDocked("Item No.","Variant Code","Unit of Measure Code","Location Code",FALSE);
                            END;
                             }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the warehouse shipment line is for items that are assembled to a sales order before it is shipped.;
                ApplicationArea=#Assembly;
                SourceExpr="Assemble to Order";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      WMSMgt@1000 : Codeunit 7302;
      CrossDockMgt@1004 : Codeunit 5780;
      QtyCrossDockedUOM@1003 : Decimal;
      QtyCrossDockedAllUOMBase@1002 : Decimal;
      QtyCrossDockedUOMBase@1001 : Decimal;

    LOCAL PROCEDURE ShowSourceLine@1();
    BEGIN
      WMSMgt.ShowSourceDocLine("Source Type","Source Subtype","Source No.","Source Line No.",0);
    END;

    [External]
    PROCEDURE PostShipmentYesNo@3();
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Post Shipment (Yes/No)",WhseShptLine);
      RESET;
      SETCURRENTKEY("No.","Sorting Sequence No.");
      CurrPage.UPDATE(FALSE);
    END;

    [External]
    PROCEDURE PostShipmentPrintYesNo@2();
    VAR
      WhseShptLine@1001 : Record 7321;
    BEGIN
      WhseShptLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Post Shipment + Print",WhseShptLine);
      RESET;
      SETCURRENTKEY("No.","Sorting Sequence No.");
      CurrPage.UPDATE(FALSE);
    END;

    [External]
    PROCEDURE AutofillQtyToHandle@10();
    VAR
      WhseShptLine@1000 : Record 7321;
    BEGIN
      WhseShptLine.COPY(Rec);
      AutofillQtyToHandle(WhseShptLine);
    END;

    [External]
    PROCEDURE DeleteQtyToHandle@8();
    VAR
      WhseShptLine@1000 : Record 7321;
    BEGIN
      WhseShptLine.COPY(Rec);
      DeleteQtyToHandle(WhseShptLine);
    END;

    LOCAL PROCEDURE ShowBinContents@6();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code","Bin Code");
    END;

    [External]
    PROCEDURE PickCreate@4();
    VAR
      WhseShptHeader@1001 : Record 7320;
      WhseShptLine@1000 : Record 7321;
      ReleaseWhseShipment@1002 : Codeunit 7310;
    BEGIN
      WhseShptLine.COPY(Rec);
      WhseShptHeader.GET(WhseShptLine."No.");
      IF WhseShptHeader.Status = WhseShptHeader.Status::Open THEN
        ReleaseWhseShipment.Release(WhseShptHeader);
      CreatePickDoc(WhseShptLine,WhseShptHeader);
    END;

    LOCAL PROCEDURE OpenItemTrackingLines@6500();
    BEGIN
      OpenItemTrackingLines;
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

