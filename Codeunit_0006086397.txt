OBJECT Codeunit 6086397 EM Document File System
{
  OBJECT-PROPERTIES
  {
    Date=10/09/18;
    Time=[ 1:00:00 AM];
    Version List=EMW16.00.10.2.60.08;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ContCompSetup@6085574 : Record 6192773;
      EMSetup@1000 : Record 6086300;
      FileSystemMgt@1001 : Codeunit 6085584;
      CurrentCompanyName@6085573 : Text[50];
      GotCompSetup@6085575 : Boolean;
      GotEMSetup@1002 : Boolean;
      CannotCopy@1003 : TextConst 'ENU=Cannot copy file %1 to %2.';
      FilenameTooLong@1160040000 : TextConst 'ENU=File path too long. The full filename and path can be %1 characters.\Please change %2 %3.';

    PROCEDURE GetAttachmentFileName@10(VAR EMAttachment@1000 : Record 6086359) FullFilename : Text[1024];
    BEGIN
      FullFilename := GetAttachServerFilePath(EMAttachment);
      CreateDirectory(FullFilename);
    END;

    PROCEDURE SetAttachment@3(FilePath@1000 : Text[250];VAR EMAttachment@1001 : Record 6086359) : Boolean;
    BEGIN
      IF FilePath <> EMAttachment.GetAttachmentServerFileName THEN
        IF NOT FileSystemMgt.CopyFile(FilePath,EMAttachment.GetAttachmentServerFileName) THEN
          ERROR(CannotCopy,FilePath,EMAttachment.GetAttachmentServerFileName);

      EXIT(TRUE);
    END;

    PROCEDURE HasAttachment@16(VAR EMAttachment@1000 : Record 6086359) : Boolean;
    BEGIN
      EXIT(FILE.EXISTS(EMAttachment.GetAttachmentServerFileName));
    END;

    PROCEDURE ClearAttachment@14(VAR EMAttachment@1001 : Record 6086359;SupressError@1160040000 : Boolean) : Boolean;
    BEGIN
      IF HasAttachment(EMAttachment) THEN
        EXIT(FileSystemMgt.DeleteFile(EMAttachment.GetAttachmentServerFileName,SupressError));
    END;

    PROCEDURE GetInboxAttachmentFileName@1160040009(VAR EMAttachmentInbox@1000 : Record 6086363) FullFilename : Text[1024];
    BEGIN
      FullFilename := GetInboxServerFilePath(EMAttachmentInbox);

      //THE FILE IS ALREADY MOVED.
      IF EMAttachmentInbox.InboxAccepted THEN
        EXIT;

      CreateDirectory(FullFilename);
    END;

    PROCEDURE SetInboxAttachment@1160040008(FilePath@1000 : Text[250];VAR EMAttachmentInbox@1001 : Record 6086363) : Boolean;
    BEGIN
      IF FilePath <> EMAttachmentInbox.GetAttachmentServerFileName THEN
        EXIT(FileSystemMgt.CopyFile(FilePath,EMAttachmentInbox.GetAttachmentServerFileName));
    END;

    PROCEDURE HasInboxAttachment@1160040006(VAR EMAttachmentInbox@1000 : Record 6086363) : Boolean;
    BEGIN
      EXIT(FILE.EXISTS(EMAttachmentInbox.GetAttachmentServerFileName));
    END;

    PROCEDURE ClearInboxAttachment@1160040005(VAR EMAttachmentInbox@1001 : Record 6086363) : Boolean;
    BEGIN
      IF HasInboxAttachment(EMAttachmentInbox) THEN
        EXIT(FileSystemMgt.DeleteFile(EMAttachmentInbox.GetAttachmentServerFileName,TRUE));
    END;

    PROCEDURE GetStorageLocation@6085574() : Text[1024];
    VAR
      EMAttachment@6085573 : Record 6086359;
      DateCreated@1160040000 : Date;
    BEGIN
      IF NOT EMAttachment.FINDSET THEN;

      GetSetup;
      EXIT(GetArchiveDirFromDate(TODAY));
    END;

    LOCAL PROCEDURE GetAttachServerFilePath@6085573(VAR EMAttachment@6085575 : Record 6086359) FullFilename : Text[1024];
    VAR
      DateCreated@1160040000 : Date;
    BEGIN
      GetSetup;

      DateCreated := EMAttachment.GetCreatedDate;
      IF DateCreated = 0D THEN
        EXIT;

      FullFilename :=
        STRSUBSTNO('%1%2 - %3',GetArchiveDirFromDate(DateCreated),EMAttachment."Attachment GUID",EMAttachment."File Name");
    END;

    LOCAL PROCEDURE GetInboxServerFilePath@1160040011(VAR EMAttachmentInbox@6085575 : Record 6086363) FullFilename : Text[1024];
    VAR
      DateCreated@1160040000 : Date;
    BEGIN
      GetSetup;

      DateCreated := EMAttachmentInbox.GetCreatedDate;
      IF DateCreated = 0D THEN
        EXIT;

      FullFilename :=
        STRSUBSTNO('%1%2 - %3',
         GetArchiveDirFromDate(DateCreated),EMAttachmentInbox."Attachment GUID",EMAttachmentInbox."File Name");
    END;

    LOCAL PROCEDURE GetDocSubDir@161024017(DateCreated@1160040001 : Date) : Text[1024];
    BEGIN
      IF DateCreated = 0D THEN
        EXIT;

      GetSetup;
      EXIT(GetArchiveDirFromDate(DateCreated));
    END;

    LOCAL PROCEDURE GetSetup@11();
    BEGIN
      IF NOT GotEMSetup THEN
        GotEMSetup := EMSetup.GET;

      IF NOT GotCompSetup THEN
        GotCompSetup := ContCompSetup.GET;
    END;

    PROCEDURE SetSetup@4(VAR NewEMSetup@1000 : Record 6086300;VAR NewContCompSetup@1160040000 : Record 6192773);
    BEGIN
      EMSetup := NewEMSetup;
      GotEMSetup := TRUE;

      ContCompSetup := NewContCompSetup;
      GotCompSetup := TRUE;
    END;

    PROCEDURE CreateDirectory@1160040007(FullFilename@1160040000 : Text[1024]);
    VAR
      FileSysMgt@1160040002 : Codeunit 6085584;
      Path@1160040001 : Text[1024];
    BEGIN
      Path := FileSysMgt.GetFilePath(FullFilename);

      IF NOT FileSysMgt.DirectoryExists(Path) THEN
        FileSysMgt.CreateDirectory(Path);
    END;

    PROCEDURE GetArchiveDirFromDate@1160040002(DateCreated@1160040000 : Date) Path : Text[1024];
    BEGIN
      GetSetup;
      Path := EMSetup."Archive Path" +
        GetSubDir(EMSetup."Archive Directory Structure",DateCreated,EMSetup."Company Code in Archive",ContCompSetup."Company Code");
    END;

    PROCEDURE GetSubDir@1160040001(Structure@1160040000 : Integer;Date@1160040001 : Date;CompCodeInArchive@1160040002 : Boolean;CompanyCode@1160040003 : Code[20]) : Text[1024];
    VAR
      Path@1160040006 : Text[1024];
      Day@1160040005 : Code[2];
      Month@1160040004 : Code[2];
      DayInteger@1160040008 : Integer;
      MonthInteger@1160040007 : Integer;
    BEGIN
      MonthInteger := DATE2DMY(Date,2);
      DayInteger := DATE2DMY(Date,1);

      IF MonthInteger < 10 THEN
        Month := '0' + FORMAT(MonthInteger)
      ELSE
        Month := FORMAT(MonthInteger);

      IF DayInteger < 10 THEN
        Day := '0' + FORMAT(DayInteger)
      ELSE
        Day := FORMAT(DayInteger);

      IF CompCodeInArchive AND (CompanyCode <> '') THEN
        Path := '\' + CompanyCode + '\'
      ELSE
        Path := '\';

      CASE Structure OF
        EMSetup."Archive Directory Structure"::"One Directory":
          EXIT(Path);
        EMSetup."Archive Directory Structure"::"Year\Month":
          EXIT(Path + STRSUBSTNO('%1\%2\',DATE2DMY(Date,3),Month));
        EMSetup."Archive Directory Structure"::"Year\Month\Day":
          EXIT(Path + STRSUBSTNO('%1\%2\%3\',DATE2DMY(Date,3),Month,Day));
      END;
    END;

    PROCEDURE CorrectAndShortenFilename@1160040000(Filename@1160040000 : Text[1024]) NewFileName : Text[1024];
    VAR
      EMAttachmentInbox@1160040003 : Record 6086363;
      FileSysMgt@1160040006 : Codeunit 6085584;
      FileNameMaxLen@1160040002 : Integer;
      MaxFilepathLen@1160040001 : Integer;
      FileExtension@1160040004 : Text[10];
      Index@1160040005 : Integer;
    BEGIN
      Filename := DELCHR(Filename,'=','\/:?"<>|');
      MaxFilepathLen := 200; //Defined by OS and NAV, otherwise it crashes

      FileNameMaxLen := MaxFilepathLen - STRLEN(GetInboxServerFilePath(EMAttachmentInbox));
      IF FileNameMaxLen < 0 THEN
        ERROR(FilenameTooLong,MaxFilepathLen,EMSetup.TABLECAPTION,(EMSetup.FIELDCAPTION("Archive Directory Structure")));

      IF FileNameMaxLen > STRLEN(Filename) THEN BEGIN
        NewFileName := Filename;
        EXIT;
      END;

      Index := FileSysMgt.LastIndexOf(Filename,'.',TRUE);
      IF Index <> 0 THEN
        FileExtension := COPYSTR(Filename,Index + 1);

      //SHORTEN STRING WITHOUT LOSING EXTENSION
      IF FileExtension <> '' THEN
        NewFileName := COPYSTR(Filename,1,FileNameMaxLen - STRLEN(FileExtension) - 1) + '.' + FileExtension
      ELSE
        NewFileName := COPYSTR(Filename,1,FileNameMaxLen);
    END;

    BEGIN
    END.
  }
}

