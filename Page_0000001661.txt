OBJECT Page 1661 Payroll Import Transactions
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Payroll Transactions;
               ESM=Importar transacciones de n¢mina;
               FRC=Importer les transactions de paie;
               ENC=Import Payroll Transactions];
    InsertAllowed=No;
    SourceTable=Table1661;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=VAR
             CompanyInformation@1000 : Record 79;
           BEGIN
             CompanyInformation.GET;
             IsDemoCompany := CompanyInformation."Demo Company";
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 EnableControls;
                 SETCURRENTKEY("Entry No.");
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.Status = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 ESM=Atr s;
                                 FRC=Pr‚c‚dent;
                                 ENC=Back];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                                 IF Step = 0 THEN
                                   DELETEALL;
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 ESM=Siguiente;
                                 FRC=Suivant;
                                 ENC=Next];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 CASE Step OF
                                   0:
                                     BEGIN
                                       OnImportPayrollTransactions(TempServiceConnection,TempImportGLTransaction);
                                       IF TempImportGLTransaction.FINDSET THEN
                                         REPEAT
                                           Rec := TempImportGLTransaction;
                                           INSERT;
                                         UNTIL TempImportGLTransaction.NEXT = 0;
                                       IF FINDFIRST THEN BEGIN
                                         SETCURRENTKEY("Entry No.");
                                         NextStep(FALSE);
                                       END;
                                     END;
                                   ELSE
                                     NextStep(FALSE);
                                 END;
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ActionCreateSampleFile;
                      CaptionML=[ENU=Get Sample File;
                                 ESM=Obtener archivo de ejemplo;
                                 FRC=Obtenez un fichier d'exemple;
                                 ENC=Get Sample File];
                      ApplicationArea=#Basic,#Suite;
                      Visible=ShowGetSampleFile;
                      InFooterBar=Yes;
                      Image=Import;
                      OnAction=BEGIN
                                 OnCreateSampleFile(TempServiceConnection);
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=ActionResetLinkto;
                      CaptionML=[ENU=Remove Mapping;
                                 ESM=Quitar asignaci¢n;
                                 FRC=Supprimer le mappage;
                                 ENC=Remove Mapping];
                      ApplicationArea=#Basic,#Suite;
                      Visible=ShowResetLinks;
                      InFooterBar=Yes;
                      Image=Reuse;
                      OnAction=BEGIN
                                 ResetLinks
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 ESM=Terminar;
                                 FRC=Terminer;
                                 ENC=Finish];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Import Payroll Transactions;
                           ESM=Importar transacciones de n¢mina;
                           FRC=Bienvenue dans Importer les transactions de paie;
                           ENC=Welcome to Import Payroll Transactions];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To import payroll transactions, you first select the file from the payroll provider and then you map external accounts in the file to the relevant G/L accounts.;
                                     ESM=Para importar transacciones de n¢mina, primero se selecciona el archivo del proveedor de n¢mina y, a continuaci¢n, se asignan cuentas externas en el archivo a las cuentas de contabilidad correspondientes.;
                                     FRC=Pour importer les transactions de paie, vous devez d'abord s‚lectionner le fichier du fournisseur de paie et ensuite mapper les comptes externes du fichier avec les comptes du grand livre appropri‚s.;
                                     ENC=To import payroll transactions, you first select the file from the payroll provider and then you map external accounts in the file to the relevant G/L accounts.] }

    { 21  ;2   ;Group     ;
                CaptionML=[ENU=Let's go!;
                           ESM=Empecemos.;
                           FRC=Allons-yÿ!;
                           ENC=Let's go!];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next to start importing payroll transactions.;
                                     ESM=Seleccione Siguiente para iniciar la importaci¢n de transacciones de n¢mina.;
                                     FRC=S‚lectionnez Suivant pour commencer … importer les transactions de paie.;
                                     ENC=Choose Next to start importing payroll transactions.] }

    { 2   ;1   ;Group     ;
                Visible=ProviderStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Map the external accounts to the relevant G/L accounts.;
                                     ESM=Asigne las cuentas externas a las cuentas de contabilidad pertinentes.;
                                     FRC=Mapper les comptes externes avec les comptes du grand livre appropri‚s.;
                                     ENC=Map the external accounts to the relevant G/L accounts.] }

    { 7   ;2   ;Group     ;
                GroupType=Repeater }

    { 5   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No.";
                Visible=False }

    { 3   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Account";
                Editable=False }

    { 28  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Account";
                OnValidate=VAR
                             TempImportGLTransaction@1000 : TEMPORARY Record 1661;
                             ImportGLTransaction@1001 : Record 1661;
                           BEGIN
                             IF "G/L Account" <> '' THEN BEGIN
                               ImportGLTransaction.SETRANGE("App ID","App ID");
                               ImportGLTransaction.SETRANGE("External Account","External Account");
                               ImportGLTransaction.SETRANGE("G/L Account","G/L Account");
                               IF ImportGLTransaction.ISEMPTY THEN BEGIN
                                 ImportGLTransaction."App ID" := "App ID";
                                 ImportGLTransaction."G/L Account" := "G/L Account";
                                 ImportGLTransaction."External Account" := "External Account";
                                 ImportGLTransaction.INSERT;
                               END
                             END ELSE
                               IF xRec."G/L Account" <> '' THEN BEGIN
                                 ImportGLTransaction.SETRANGE("App ID","App ID");
                                 ImportGLTransaction.SETRANGE("External Account","External Account");
                                 ImportGLTransaction.SETRANGE("G/L Account",xRec."G/L Account");
                                 ImportGLTransaction.DELETEALL;
                               END;
                             TempImportGLTransaction := Rec;
                             SETRANGE("External Account","External Account");
                             MODIFYALL("G/L Account","G/L Account");
                             SETRANGE("External Account");
                             Rec := TempImportGLTransaction;
                             FIND;
                           END;
                            }

    { 29  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Account Name" }

    { 8   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Date";
                Editable=False }

    { 9   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                Editable=False }

    { 19  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=False }

    { 4   ;3   ;Field     ;
                Name=Map to;
                CaptionML=[ENU=Map to;
                           ESM=Asignar a;
                           FRC=Mapper …;
                           ENC=Map to];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LinktoLbl;
                Visible=False;
                Editable=false }

    { 12  ;1   ;Group     ;
                Visible=SettingsStepVisible;
                GroupType=Group }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           ESM=Eso es todo.;
                           FRC=Voil…ÿ!;
                           ENC=That's it!];
                GroupType=Group }

    { 25  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To finalize the import of payroll transactions, choose Finish.;
                                     ESM=Para completar la importaci¢n de transacciones de n¢mina, elija Terminar.;
                                     FRC=Pour terminer l'importation des transactions de paie, s‚lectionnez Terminer.;
                                     ENC=To finalize the import of payroll transactions, choose Finish.] }

  }
  CODE
  {
    VAR
      TempServiceConnection@1016 : TEMPORARY Record 1400;
      GenJournalLine@1022 : Record 81;
      TempImportGLTransaction@1021 : TEMPORARY Record 1661;
      AssistedSetup@1005 : Record 1803;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1018 : Record 2000000182;
      MediaResourcesDone@1003 : Record 2000000182;
      ClientTypeManagement@1019 : Codeunit 4;
      Step@1012 : 'Start,LinkAccounts,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      ProviderStepVisible@1010 : Boolean;
      SettingsStepVisible@1011 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=No payroll transactions have been imported.\\Are you sure you want to exit?;ESM=No se han importado transacciones de n¢mina.\\¨Est  seguro de que desea salir?;FRC=Aucune transaction de paie n''a ‚t‚ import‚e.\\Voulez-vous vraiment quitterÿ?;ENC=No payroll transactions have been imported.\\Are you sure you want to exit?';
      LinktoLbl@1007 : TextConst 'ENU=Map to;ESM=Asignar a;FRC=Mapper …;ENC=Map to';
      PayrollImportedMsg@1002 : TextConst 'ENU=The payroll transactions are imported.;ESM=Las transacciones de n¢mina se han importado.;FRC=Les transactions de paie ont … pr‚sent ‚t‚ import‚es.;ENC=The payroll transactions are imported.';
      ShowGetSampleFile@1006 : Boolean;
      ShowResetLinks@1008 : Boolean;
      ResetLinksQst@1017 : TextConst 'ENU=Do you want to reset all existing mapping suggestions?;ESM=¨Quiere restablecer todas las sugerencias de asignaci¢n existentes?;FRC=Voulez-vous r‚initialiser toutes les suggestions de mappage existantesÿ?;ENC=Do you want to reset all existing mapping suggestions?';
      IsDemoCompany@1001 : Boolean;

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::LinkAccounts:
          ShowProviderStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    VAR
      NewGenJournalLine@1001 : Record 81;
      NextLinieNo@1000 : Integer;
    BEGIN
      NextLinieNo := 0;
      NewGenJournalLine.SETRANGE("Journal Template Name",GenJournalLine."Journal Template Name");
      NewGenJournalLine.SETRANGE("Journal Batch Name",GenJournalLine."Journal Batch Name");
      IF NewGenJournalLine.FINDLAST THEN
        NextLinieNo := NewGenJournalLine."Line No.";

      IF FINDSET THEN BEGIN
        REPEAT
          NewGenJournalLine.INIT;
          NewGenJournalLine."Journal Template Name" := GenJournalLine."Journal Template Name";
          NewGenJournalLine."Journal Batch Name" := GenJournalLine."Journal Batch Name";
          NextLinieNo += 10000;
          NewGenJournalLine."Line No." := NextLinieNo;
          NewGenJournalLine.INSERT;
          NewGenJournalLine.SetUpNewLine(GenJournalLine,0,FALSE);
          NewGenJournalLine.VALIDATE("Account Type" ,NewGenJournalLine."Account Type"::"G/L Account");
          NewGenJournalLine.VALIDATE("Account No.","G/L Account");
          NewGenJournalLine.VALIDATE("Posting Date","Transaction Date");
          NewGenJournalLine.VALIDATE(Amount,Amount);
          NewGenJournalLine.VALIDATE(Description,Description);
          NewGenJournalLine.MODIFY;
        UNTIL NEXT = 0;

        GenJournalLine := NewGenJournalLine;
        AssistedSetup.Status := AssistedSetup.Status::Completed;

        MESSAGE(PayrollImportedMsg);
      END;

      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := TRUE;
      BackActionEnabled := FALSE;
      ShowGetSampleFile := IsDemoCompany AND FirstStepVisible;
    END;

    LOCAL PROCEDURE ShowProviderStep@33();
    BEGIN
      ProviderStepVisible := TRUE;
      ShowResetLinks := TRUE;
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      ProviderStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      FinalStepVisible := FALSE;
      ShowGetSampleFile := FALSE;
      ShowResetLinks := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    [Integration]
    LOCAL PROCEDURE OnImportPayrollTransactions@4(VAR TempServiceConnection@1001 : TEMPORARY Record 1400;VAR TempImportGLTransaction@1000 : TEMPORARY Record 1661);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnCreateSampleFile@3(TempServiceConnection@1000 : TEMPORARY Record 1400);
    BEGIN
    END;

    [External]
    PROCEDURE Set@5(VAR SetServiceConnection@1000 : Record 1400;SetGenJournalLine@1001 : Record 81);
    BEGIN
      TempServiceConnection := SetServiceConnection;
      GenJournalLine := SetGenJournalLine;
    END;

    LOCAL PROCEDURE ResetLinks@6();
    VAR
      ImportGLTransaction@1000 : Record 1661;
      TempImportGLTransaction@1001 : TEMPORARY Record 1661;
    BEGIN
      ImportGLTransaction.SETRANGE("App ID","App ID");
      IF ImportGLTransaction.FINDFIRST THEN
        IF CONFIRM(ResetLinksQst) THEN BEGIN
          ImportGLTransaction.DELETEALL;
          TempImportGLTransaction := Rec;
          IF FINDSET THEN
            REPEAT
              "G/L Account" := '';
              MODIFY;
            UNTIL NEXT = 0;
          Rec := TempImportGLTransaction;
          CurrPage.UPDATE;
        END;
    END;

    BEGIN
    END.
  }
}

