OBJECT Codeunit 1237 Get Json Structure
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:08:04 PM;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      HttpWebRequestMgt@1004 : Codeunit 1297;
      JsonConvert@1000 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.JsonConvert";
      GLBHttpStatusCode@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Net.HttpStatusCode";
      GLBResponseHeaders@1002 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Specialized.NameValueCollection";
      FileContent@1001 : Text;
      InvalidResponseErr@1005 : TextConst 'ENU=The response was not valid.';

    PROCEDURE GenerateStructure@2(Path@1000 : Text;VAR XMLBuffer@1001 : Record 1235);
    VAR
      TempBlob@1010 : Record 99008535;
      ResponseTempBlob@1003 : Record 99008535;
      XMLBufferWriter@1002 : Codeunit 1235;
      JsonInStream@1007 : InStream;
      XMLOutStream@1009 : OutStream;
      File@1006 : File;
    BEGIN
      IF File.OPEN(Path) THEN
        File.CREATEINSTREAM(JsonInStream)
      ELSE BEGIN
        CLEAR(ResponseTempBlob);
        ResponseTempBlob.INIT;
        ResponseTempBlob.Blob.CREATEINSTREAM(JsonInStream);
        CLEAR(HttpWebRequestMgt);
        HttpWebRequestMgt.Initialize(Path);
        HttpWebRequestMgt.SetMethod('POST');
        HttpWebRequestMgt.SetReturnType('application/json');
        HttpWebRequestMgt.SetContentType('application/x-www-form-urlencoded');
        HttpWebRequestMgt.AddHeader('Accept-Encoding','utf-8');
        HttpWebRequestMgt.GetResponse(JsonInStream,GLBHttpStatusCode,GLBResponseHeaders);
      END;

      TempBlob.INIT;
      TempBlob.Blob.CREATEOUTSTREAM(XMLOutStream);
      IF NOT JsonToXML(JsonInStream,XMLOutStream) THEN
        IF NOT JsonToXMLCreateDefaultRoot(JsonInStream,XMLOutStream) THEN
          ERROR(InvalidResponseErr);

      XMLBufferWriter.GenerateStructure(XMLBuffer,XMLOutStream);
    END;

    [TryFunction]
    [External]
    PROCEDURE JsonToXML@1(JsonInStream@1000 : InStream;VAR XMLOutStream@1001 : OutStream);
    VAR
      XmlDocument@1003 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      NewContent@1002 : Text;
    BEGIN
      WHILE JsonInStream.READ(NewContent) > 0 DO
        FileContent += NewContent;

      XmlDocument := JsonConvert.DeserializeXmlNode(FileContent);
      XmlDocument.Save(XMLOutStream);
    END;

    [TryFunction]
    [External]
    PROCEDURE JsonToXMLCreateDefaultRoot@3(JsonInStream@1005 : InStream;VAR XMLOutStream@1000 : OutStream);
    VAR
      XmlDocument@1001 : DotNet "'System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      NewContent@1002 : Text;
    BEGIN
      WHILE JsonInStream.READ(NewContent) > 0 DO
        FileContent += NewContent;

      FileContent := '{"root":' + FileContent + '}';

      XmlDocument := JsonConvert.DeserializeXmlNode(FileContent,'root');
      XmlDocument.Save(XMLOutStream);
    END;

    BEGIN
    END.
  }
}

