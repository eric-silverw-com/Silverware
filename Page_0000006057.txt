OBJECT Page 6057 Contract Line Selection
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Contract Line Selection;
               ESM=Selecci¢n l¡nea contrato;
               FRC=S‚lection ligne devis contrat;
               ENC=Contract Line Selection];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table5940;
    DataCaptionFields=Customer No.;
    PageType=Worksheet;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := TRUE;
           END;

    OnOpenPage=BEGIN
                 OKButton := FALSE;
                 SETCURRENTKEY("Customer No.","Ship-to Code");
                 FILTERGROUP(2);
                 SETRANGE("Customer No.",CustomerNo);
                 SETFILTER(Status,'<>%1',Status::Defective);
                 FILTERGROUP(0);
                 SETRANGE("Ship-to Code",ShipToCode);
                 SetSelectionFilter;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                       IF OKButton THEN BEGIN
                         ServContract.GET(ContractType,ContractNo);
                         CurrPage.SETSELECTIONFILTER(Rec);
                         ServContractLine.HideDialogBox(TRUE);
                         IF FIND('-') THEN
                           REPEAT
                             CheckServContractLine;
                           UNTIL NEXT = 0;
                         CreateServContractLines;
                         COMMIT;
                       END;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 32      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Serv. Item;
                                 ESM=&Prod. serv.;
                                 FRC=&Article service;
                                 ENC=&Serv. Item];
                      Image=ServiceItem }
      { 33      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=&Card;
                                 ESM=&Ficha;
                                 FRC=&Fiche;
                                 ENC=&Card];
                      ToolTipML=[ENU=View or edit detailed information for the service contract.;
                                 ESM=Permite ver o editar la informaci¢n detallada sobre el contrato de servicio.;
                                 FRC=Afficher ou modifier des informations d‚taill‚es pour le contrat de service.;
                                 ENC=View or edit detailed information for the service contract.];
                      ApplicationArea=#Service;
                      RunObject=Page 5980;
                      RunPageOnRec=Yes;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                CaptionML=[ENU=Selection Filter;
                           ESM=Filtro selecci¢n;
                           FRC=Filtre s‚lection;
                           ENC=Selection Filter];
                ToolTipML=[ENU=Specifies a selection filter.;
                           ESM=Especifica un filtro de selecci¢n.;
                           FRC=Sp‚cifie un filtre s‚lection.;
                           ENC=Specifies a selection filter.];
                OptionCaptionML=[ENU=All Service Items,Service Items without Contract;
                                 ESM=Todos prod. servicio,Prod. servicio sin contrato;
                                 FRC=Tous les articles de service,Articles de service sans contrat;
                                 ENC=All Service Items,Service Items without Contract];
                ApplicationArea=#Service;
                SourceExpr=SelectionFilter;
                OnValidate=BEGIN
                             SelectionFilterOnAfterValidate;
                           END;
                            }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           ESM=Especifica el n£mero de la entrada o el registro relacionado, seg£n la serie num‚rica especificada.;
                           FRC=Sp‚cifie le num‚ro de l'‚criture ou de l'enregistrement concern‚, en fonction de la s‚rie de num‚ros sp‚cifi‚e.;
                           ENC=Specifies the number of the involved entry or record, according to the specified number series.];
                ApplicationArea=#Service;
                SourceExpr="No." }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Item No.;
                           ESM=N§ producto;
                           FRC=Nø d'article;
                           ENC=Item No.];
                ToolTipML=[ENU=Specifies the item number linked to the service item.;
                           ESM=Especifica el n£mero de producto vinculado al producto de servicio.;
                           FRC=Sp‚cifie le num‚ro article associ‚ … l'article service.;
                           ENC=Specifies the item number linked to the service item.];
                ApplicationArea=#Service;
                SourceExpr="Item No." }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number of this item.;
                           ESM=Especifica el n£mero de serie de este producto.;
                           FRC=Sp‚cifie le num‚ro de s‚rie de cet article.;
                           ENC=Specifies the serial number of this item.];
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No." }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of this item.;
                           ESM=Especifica una descripci¢n de este producto.;
                           FRC=Sp‚cifie une description de cet article.;
                           ENC=Specifies a description of this item.];
                ApplicationArea=#Service;
                SourceExpr=Description }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer who owns this item.;
                           ESM=Especifica el n£mero del cliente propietario de este producto.;
                           FRC=Sp‚cifie le num‚ro du client qui possŠde cet article.;
                           ENC=Specifies the number of the customer who owns this item.];
                ApplicationArea=#Service;
                SourceExpr="Customer No." }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                           ESM=Especifica el c¢digo de una direcci¢n de env¡o alternativa si desea realizar el env¡o a otra direcci¢n diferente a la que se ha introducido autom ticamente. Este campo tambi‚n se utiliza en el caso de env¡o directo.;
                           FRC=Sp‚cifie un code pour une adresse secondaire de livraison si vous souhaitez livrer vers une autre adresse que celle qui a ‚t‚ saisie automatiquement. Ce champ est ‚galement utilis‚ en cas de livraison directe.;
                           ENC=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.];
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the vendor for this item.;
                           ESM=Especifica el n£mero del proveedor para este producto.;
                           FRC=Sp‚cifie le num‚ro du fournisseur de cet article.;
                           ENC=Specifies the number of the vendor for this item.];
                ApplicationArea=#Service;
                SourceExpr="Vendor No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses for this item.;
                           ESM=Especifica el n£mero que utiliza el proveedor para este producto.;
                           FRC=Sp‚cifie le num‚ro que le fournisseur utilise pour cet article.;
                           ENC=Specifies the number that the vendor uses for this item.];
                ApplicationArea=#Service;
                SourceExpr="Vendor Item No.";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServContract@1000 : Record 5965;
      ServContractLine@1008 : Record 5964;
      TempServItem@1001 : TEMPORARY Record 5940;
      OKButton@1002 : Boolean;
      CustomerNo@1004 : Code[20];
      ShipToCode@1005 : Code[10];
      ContractNo@1006 : Code[20];
      ContractType@1007 : Integer;
      LineNo@1009 : Integer;
      Text000@1010 : TextConst '@@@=Service Item 1 already exists in this service contract.;ENU=%1 %2 already exists in this service contract.;ESM=Ya existe %1 %2 en este Contrato de Servicio.;FRC=%1 %2 existe d‚j… dans ce contrat de services.;ENC=%1 %2 already exists in this service contract.';
      Text001@1012 : TextConst '@@@=Service Item 1 already belongs to one or more service contracts/quotes.\\Do you want to include this service item into the document?;ENU=%1 %2 already belongs to one or more service contracts/quotes.\\Do you want to include this service item into the document?;ESM=%1 %2 ya pertenece a una o m s cotizaciones/Contratos de Servicio.\\¨Desea incluir este prod. servicio en el documento?;FRC=%1 %2 appartient d‚j… … un ou plusieurs contrats de services/devis.\\Voulez-vous inclure cet article de service dans le document?;ENC=%1 %2 already belongs to one or more service contracts/quotes.\\Do you want to include this service item into the document?';
      Text002@1011 : TextConst '@@@=Service Item 1 has a different ship-to code for this customer.\\Do you want to include this service item into the document?;ENU=%1 %2 has a different ship-to code for this customer.\\Do you want to include this service item into the document?;ESM=%1 %2 tiene un C¢d. direcci¢n env¡o diferente para este cliente.\\¨Desea incluir este prod. servicio en el documento?;FRC=%1 %2 possŠde un code de livraison diff‚rent pour ce client.\\Voulez-vous inclure cet article de service dans le document?;ENC=%1 %2 has a different ship-to code for this customer.\\Do you want to include this service item into the document?';
      SelectionFilter@1013 : 'All Service Items,Service Items without Contract';

    [External]
    PROCEDURE SetSelection@1(CustNo@1000 : Code[20];ShipNo@1001 : Code[10];CtrType@1004 : Integer;CtrNo@1002 : Code[20]);
    BEGIN
      CustomerNo := CustNo;
      ShipToCode := ShipNo;
      ContractType := CtrType;
      ContractNo := CtrNo;
    END;

    LOCAL PROCEDURE FindlineNo@2() : Integer;
    BEGIN
      ServContractLine.RESET;
      ServContractLine.SETRANGE("Contract Type",ContractType);
      ServContractLine.SETRANGE("Contract No.",ContractNo);
      IF ServContractLine.FINDLAST THEN
        EXIT(ServContractLine."Line No.");

      EXIT(0);
    END;

    LOCAL PROCEDURE CheckServContractLine@3();
    BEGIN
      TempServItem := Rec;

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.");
      ServContractLine.SETRANGE("Contract No.",ServContract."Contract No.");
      ServContractLine.SETRANGE("Contract Type",ServContract."Contract Type");
      ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
      IF ServContractLine.FINDFIRST THEN BEGIN
        MESSAGE(Text000,TempServItem.TABLECAPTION,TempServItem."No.");
        EXIT;
      END;

      ServContractLine.RESET;
      ServContractLine.SETCURRENTKEY("Service Item No.","Contract Status");
      ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
      ServContractLine.SETFILTER("Contract Status",'<>%1',ServContractLine."Contract Status"::Cancelled);
      ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Contract);
      ServContractLine.SETFILTER("Contract No.",'<>%1',ServContract."Contract No.");
      IF ServContractLine.FINDFIRST THEN BEGIN
        IF NOT CONFIRM(Text001,TRUE,TempServItem.TABLECAPTION,TempServItem."No.") THEN
          EXIT;
      END ELSE BEGIN
        ServContractLine.RESET;
        ServContractLine.SETCURRENTKEY("Service Item No.");
        ServContractLine.SETRANGE("Service Item No.",TempServItem."No.");
        ServContractLine.SETRANGE("Contract Type",ServContractLine."Contract Type"::Quote);
        ServContractLine.SETFILTER("Contract No.",'<>%1',ServContract."Contract No.");
        IF ServContractLine.FINDFIRST THEN
          IF NOT CONFIRM(Text001,TRUE,TempServItem.TABLECAPTION,TempServItem."No.") THEN
            EXIT;
      END;

      IF TempServItem."Ship-to Code" <> ServContract."Ship-to Code" THEN
        IF NOT CONFIRM(Text002,FALSE,TempServItem.TABLECAPTION,TempServItem."No.") THEN
          EXIT;

      TempServItem.INSERT;
    END;

    LOCAL PROCEDURE CreateServContractLines@4();
    BEGIN
      ServContractLine.LOCKTABLE;
      LineNo := FindlineNo + 10000;
      IF TempServItem.FIND('-') THEN
        REPEAT
          ServContractLine.INIT;
          ServContractLine.HideDialogBox(TRUE);
          ServContractLine."Contract Type" := ServContract."Contract Type";
          ServContractLine."Contract No." := ServContract."Contract No.";
          ServContractLine."Line No." := LineNo;
          ServContractLine.SetupNewLine;
          ServContractLine.VALIDATE("Service Item No.",TempServItem."No.");
          ServContractLine.VALIDATE("Line Value",TempServItem."Default Contract Value");
          ServContractLine.VALIDATE("Line Discount %",TempServItem."Default Contract Discount %");
          ServContractLine.INSERT(TRUE);
          LineNo := LineNo + 10000;
        UNTIL TempServItem.NEXT = 0
    END;

    [External]
    PROCEDURE SetSelectionFilter@5();
    BEGIN
      CASE SelectionFilter OF
        SelectionFilter::"All Service Items":
          SETRANGE("No. of Active Contracts");
        SelectionFilter::"Service Items without Contract":
          SETRANGE("No. of Active Contracts",0);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SelectionFilterOnAfterValidate@19033692();
    BEGIN
      CurrPage.UPDATE;
      SetSelectionFilter;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    BEGIN
      OKButton := "No." <> '';
    END;

    BEGIN
    END.
  }
}

