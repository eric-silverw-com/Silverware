OBJECT Codeunit 5472 Graph Mgt - Vendor
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE PostalAddressToJSON@5(Vendor@1000 : Record 23) JSON : Text;
    VAR
      GraphMgtComplexTypes@1001 : Codeunit 5468;
    BEGIN
      WITH Vendor DO
        GraphMgtComplexTypes.GetPostalAddressJSON(Address,"Address 2",City,County,"Country/Region Code","Post Code",JSON);
    END;

    PROCEDURE UpdateIntegrationRecords@11(OnlyVendorsWithoutId@1000 : Boolean);
    VAR
      DummyVendor@1002 : Record 23;
      GraphMgtGeneralTools@1001 : Codeunit 5465;
      VendorRecordRef@1019 : RecordRef;
    BEGIN
      VendorRecordRef.OPEN(DATABASE::Vendor);
      GraphMgtGeneralTools.UpdateIntegrationRecords(VendorRecordRef,DummyVendor.FIELDNO(Id),OnlyVendorsWithoutId);
    END;

    PROCEDURE UpdatePostalAddress@4(PostalAddressJSON@1000 : Text;VAR Vendor@1001 : Record 23);
    VAR
      GraphMgtComplexTypes@1002 : Codeunit 5468;
      RecRef@1004 : RecordRef;
    BEGIN
      IF PostalAddressJSON = '' THEN
        EXIT;

      WITH Vendor DO BEGIN
        RecRef.GETTABLE(Vendor);
        GraphMgtComplexTypes.ApplyPostalAddressFromJSON(PostalAddressJSON,RecRef,
          FIELDNO(Address),FIELDNO("Address 2"),FIELDNO(City),FIELDNO(County),FIELDNO("Country/Region Code"),FIELDNO("Post Code"));
        RecRef.SETTABLE(Vendor);
      END;
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnItem@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    VAR
      DummyVendor@1004 : Record 23;
      GraphMgtGeneralTools@1006 : Codeunit 5465;
    BEGIN
      GraphMgtGeneralTools.HandleUpdateReferencedIdFieldOnItem(RecRef,NewId,Handled,DATABASE::Vendor,DummyVendor.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    VAR
      DummyVendor@1004 : Record 23;
      GraphMgtGeneralTools@1007 : Codeunit 5465;
    BEGIN
      GraphMgtGeneralTools.HandleGetPredefinedIdValue(Id,RecRef,Handled,DATABASE::Vendor,DummyVendor.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    LOCAL PROCEDURE HandleApiSetup@16();
    BEGIN
      UpdateIntegrationRecords(FALSE);
      UpdateIds;
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateRelatedRecordIdFields)]
    LOCAL PROCEDURE HandleUpdateRelatedRecordIdFields@3(VAR RecRef@1000 : RecordRef);
    VAR
      Vendor@1001 : Record 23;
      TempField@1003 : TEMPORARY Record 2000000041;
      GraphMgtGeneralTools@1004 : Codeunit 5465;
      UpdatedRecRef@1002 : RecordRef;
    BEGIN
      IF NOT (RecRef.NUMBER = DATABASE::Vendor) THEN
        EXIT;

      IF RecRef.ISTEMPORARY THEN
        EXIT;

      RecRef.SETTABLE(Vendor);
      Vendor.UpdateReferencedIds;

      UpdatedRecRef.GETTABLE(Vendor);
      Vendor.GetReferencedIds(TempField);
      GraphMgtGeneralTools.TransferRelatedRecordIntegrationIDs(RecRef,UpdatedRecRef,TempField);
    END;

    PROCEDURE UpdateIds@6();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF NOT Vendor.FINDSET(TRUE,FALSE) THEN
        EXIT;

      REPEAT
        Vendor.UpdateReferencedIds;
        Vendor.MODIFY(FALSE);
      UNTIL Vendor.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

