OBJECT Table 6085601 DC Document (UIC)
{
  OBJECT-PROPERTIES
  {
    Date=02/28/17;
    Time=[ 1:00:00 AM];
    Version List=DCW13.70.00.4.50;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=VAR
               DocumentUIC@1160040000 : Record 6085601;
             BEGIN
               DocumentUIC.LOCKTABLE(TRUE,FALSE);
               Code := COPYSTR(FORMAT(CREATEGUID),2,36);
             END;

    OnDelete=VAR
               DocumentPageUIC@1160040000 : Record 6085602;
               DocumentCommentLineUIC@1160040001 : Record 6085604;
             BEGIN
               DocumentPageUIC.SETRANGE("Document Code",Code);
               DocumentPageUIC.DELETEALL(TRUE);

               DocumentCommentLineUIC.SETRANGE("Table ID",DATABASE::"DC Document (UIC)");
               DocumentCommentLineUIC.SETRANGE("No.",Code);
               DocumentCommentLineUIC.DELETEALL;

               IF NOT EmailHasMoreDocuments(GetEMailServerFileName) THEN
                 ClearEmailFile;

               ClearTiffFile;
               ClearPdfFile;
             END;

    CaptionML=ENU=Document (Unidentified Company);
  }
  FIELDS
  {
    { 2   ;   ;Document Category Code;Code10      ;TableRelation="DC Document Category";
                                                   OnValidate=VAR
                                                                CopyFiles@1160040000 : Boolean;
                                                              BEGIN
                                                              END;

                                                   CaptionML=ENU=Document Category Code;
                                                   NotBlank=Yes }
    { 3   ;   ;TIFF Image File     ;BLOB          ;CaptionML=ENU=TIFF Image File }
    { 8   ;   ;No. of Pages        ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Document Page (UIC)" WHERE (Document Code=FIELD(Code)));
                                                   CaptionML=ENU=No. of Pages;
                                                   Editable=No }
    { 10  ;   ;Filename            ;Code100       ;CaptionML=ENU=Filename }
    { 20  ;   ;PDF File            ;BLOB          ;CaptionML=ENU=PDF File }
    { 25  ;   ;Imported by         ;Code50        ;CaptionML=ENU=Imported by }
    { 26  ;   ;Imported Date-Time  ;DateTime      ;CaptionML=ENU=Imported Date-Time }
    { 31  ;   ;From E-Mail Address ;Text200       ;CaptionML=ENU=From E-Mail Address }
    { 32  ;   ;From E-Mail Name    ;Text200       ;CaptionML=ENU=From E-Mail Name }
    { 33  ;   ;To E-Mail Address   ;Text200       ;CaptionML=ENU=To E-Mail Address }
    { 34  ;   ;To E-Mail Name      ;Text200       ;CaptionML=ENU=To E-Mail Name }
    { 35  ;   ;E-Mail Date         ;DateTime      ;CaptionML=ENU=E-Mail Date }
    { 36  ;   ;E-Mail Inbox Subfolder;Text200     ;CaptionML=ENU=Inbox Subfolder }
    { 37  ;   ;E-Mail Subject      ;Text200       ;CaptionML=ENU=E-Mail Subject }
    { 38  ;   ;E-Mail GUID         ;GUID          ;CaptionML=ENU=E-Mail GUID }
    { 40  ;   ;PDF File Hash       ;Text50        ;CaptionML=ENU=PDF File Hash }
    { 41  ;   ;Status Code         ;Code10        ;TableRelation="Document Status Code";
                                                   CaptionML=ENU=Status Code }
    { 42  ;   ;OCR Process Completed;DateTime     ;CaptionML=ENU=OCR Process Completed }
    { 53  ;   ;Import Day          ;Integer       ;CaptionML=ENU=Import Day }
    { 54  ;   ;Import Month        ;Integer       ;CaptionML=ENU=Import Month }
    { 55  ;   ;Import Year         ;Integer       ;CaptionML=ENU=Import Year }
    { 100 ;   ;Code                ;Code50        ;CaptionML=ENU=Code }
    { 101 ;   ;Move To Company     ;Text50        ;TableRelation=Company;
                                                   OnValidate=BEGIN
                                                                IF "Move To Company" <> '' THEN
                                                                  TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=ENU=Move to Company }
    { 102 ;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=ENU=Open,Rejected;
                                                   OptionString=Open,Rejected }
  }
  KEYS
  {
    {    ;Code                                     }
    {    ;Document Category Code                  ;Clustered=Yes }
    {    ;E-Mail GUID                              }
    {    ;Document Category Code,Status            }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text005@1160040000 : TextConst 'ENU=There are no e-mails associated to this document.';
      DCSetup@1002 : Record 6085573;
      DocumentFileInterface@1000 : Codeunit 6085636;
      GotDCSetup@1001 : Boolean;

    PROCEDURE OpenTiffImageFile@1000000015();
    VAR
      FileSysMgt@1160040000 : Codeunit 6085584;
    BEGIN
      FileSysMgt.LocalShell(GetTiffFileName);
    END;

    PROCEDURE OpenPdfFile@1000000014();
    VAR
      FileSysMgt@1160040000 : Codeunit 6085584;
    BEGIN
      FileSysMgt.LocalShell(GetPdfFileName);
    END;

    PROCEDURE OpenEMailFile@1160040004();
    VAR
      FileSysMgt@1160040001 : Codeunit 6085584;
      EmptyGuid@1160040000 : GUID;
    BEGIN
      IF "E-Mail GUID" = EmptyGuid THEN
        ERROR(Text005);

      FileSysMgt.LocalShell(GetEMailFileName);
    END;

    PROCEDURE GetTiffFileName@1000000017() : Text[1024];
    VAR
      FileSysMgt@1160040001 : Codeunit 6085584;
    BEGIN
      IF Code = '' THEN
        EXIT('');

      EXIT(FileSysMgt.GetClientFilename(GetTiffServerFileName,FALSE));
    END;

    PROCEDURE GetPdfFileName@1000000019() : Text[1024];
    VAR
      FileSysMgt@1160040000 : Codeunit 6085584;
    BEGIN
      IF Code = '' THEN
        EXIT('');

      EXIT(FileSysMgt.GetClientFilename(GetPdfServerFileName,FALSE));
    END;

    PROCEDURE GetEMailFileName@1160040000() : Text[1024];
    VAR
      FileSysMgt@1160040002 : Codeunit 6085584;
    BEGIN
      IF Code = '' THEN
        EXIT('');

      EXIT(FileSysMgt.GetClientFilename(GetEMailServerFileName,FALSE));
    END;

    PROCEDURE GetTiffServerFileName@10() : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      EXIT(DocumentFileInterface.GetTiffServerFileName(Rec))
    END;

    PROCEDURE GetPdfServerFileName@9() : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      EXIT(DocumentFileInterface.GetPdfServerFileName(Rec))
    END;

    PROCEDURE GetEMailServerFileName@8() : Text[1024];
    VAR
      FullFilename@1160040001 : Text[1024];
      FilenameGuid@1160040000 : Text[50];
    BEGIN
      EXIT(DocumentFileInterface.GetEMailServerFileName(Rec))
    END;

    PROCEDURE SetTiffFile@6(FilePath@1000 : Text[250]) : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.SetTiffFile(FilePath,Rec))
    END;

    PROCEDURE SetPdfFile@11(FilePath@1000 : Text[250]) : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.SetPdfFile(FilePath,Rec))
    END;

    PROCEDURE SetEmailFile@7(FilePath@1000 : Text[250]) : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.SetEmailFile(FilePath,Rec))
    END;

    PROCEDURE HasTiffFile@13() : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.HasTiffFile(Rec));
    END;

    PROCEDURE HasPdfFile@18() : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.HasPdfFile(Rec));
    END;

    PROCEDURE HasEmailFile@20() : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.HasEmailFile(Rec));
    END;

    PROCEDURE ClearTiffFile@17() : Boolean;
    BEGIN
      IF DocumentFileInterface.HasTiffFile(Rec) THEN
        EXIT(DocumentFileInterface.ClearTiffFile(Rec))
    END;

    PROCEDURE ClearPdfFile@16() : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.ClearPdfFile(Rec))
    END;

    PROCEDURE ClearEmailFile@14() : Boolean;
    BEGIN
      EXIT(DocumentFileInterface.ClearEmailFile(Rec))
    END;

    PROCEDURE GetEmailGUIDAsText@1160040016() : Text[50];
    BEGIN
      EXIT(COPYSTR(FORMAT("E-Mail GUID"),2,36));
    END;

    PROCEDURE EmailHasMoreDocuments@1160040019(EmailFilePath@1160040003 : Text[1024]) : Boolean;
    VAR
      DocumentUIC@1160040000 : Record 6085601;
      FileSysMgt@1160040002 : Codeunit 6085584;
    BEGIN
      DocumentUIC.SETCURRENTKEY("E-Mail GUID");
      DocumentUIC.SETRANGE("E-Mail GUID","E-Mail GUID");
      DocumentUIC.SETFILTER(Code,'<>%1',Code);
      IF DocumentUIC.FINDSET THEN
        REPEAT
          IF (EmailFilePath = DocumentUIC.GetEMailServerFileName) AND
            FILE.EXISTS(DocumentUIC.GetTiffServerFileName)
          THEN
            EXIT(TRUE);
        UNTIL DocumentUIC.NEXT = 0;
    END;

    PROCEDURE Reject@1160040001();
    BEGIN
      Status := Status::Rejected;
      "Move To Company" := '';
      MODIFY;
    END;

    PROCEDURE Reopen@1160040002();
    BEGIN
      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CreateDirectory@1160040007(FullFilename@1160040000 : Text[1024]);
    VAR
      FileSysMgt@1160040002 : Codeunit 6085584;
      Path@1160040001 : Text[1024];
    BEGIN
      Path := FileSysMgt.GetFilePath(FullFilename);

      IF NOT FileSysMgt.DirectoryExists(Path) THEN
        FileSysMgt.CreateDirectory(Path);
    END;

    PROCEDURE SetDCSetup@1160040006(NewDCSetup@1160040000 : Record 6085573);
    BEGIN
      DCSetup := NewDCSetup;
      DocumentFileInterface.SetDCSetup(DCSetup);
      GotDCSetup := TRUE;
    END;

    BEGIN
    END.
  }
}

