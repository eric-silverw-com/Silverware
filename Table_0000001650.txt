OBJECT Table 1650 Curr. Exch. Rate Update Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:33 PM;
    Version List=;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnDelete=VAR
               DataExchDef@1000 : Record 1222;
             BEGIN
               IF DataExchDef.GET("Data Exch. Def Code") THEN
                 DataExchDef.DELETE(TRUE);
             END;

    CaptionML=ENU=Curr. Exch. Rate Update Setup;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=VAR
                                                                DataExchCode@1000 : Code[20];
                                                              BEGIN
                                                                IF "Data Exch. Def Code" = '' THEN BEGIN
                                                                  DataExchCode := SuggestDataExchangeCode;
                                                                  CreateDataExchangeDefinition(DataExchCode);
                                                                  VALIDATE("Data Exch. Def Code",DataExchCode);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text250       ;CaptionML=ENU=Description }
    { 3   ;   ;Web Service URL     ;BLOB          ;CaptionML=ENU=Service URL }
    { 5   ;   ;Enabled             ;Boolean       ;OnValidate=VAR
                                                                CurrExchRateUpdateSetup@1000 : Record 1650;
                                                              BEGIN
                                                                IF Enabled THEN BEGIN
                                                                  VerifyServiceURL;
                                                                  VerifyDataExchangeLineDefinition;
                                                                  AutoUpdateExchangeRates;
                                                                  CurrExchRateUpdateSetup.SETRANGE(Enabled,TRUE);
                                                                  CurrExchRateUpdateSetup.SETFILTER(Code,'<> %1',Code);
                                                                  IF CurrExchRateUpdateSetup.FINDFIRST THEN BEGIN
                                                                    CurrExchRateUpdateSetup.Enabled := FALSE;
                                                                    CurrExchRateUpdateSetup.MODIFY;
                                                                  END;
                                                                END
                                                              END;

                                                   CaptionML=ENU=Enabled }
    { 10  ;   ;Service Provider    ;Text30        ;CaptionML=ENU=Service Provider }
    { 11  ;   ;Terms of Service    ;Text250       ;ExtendedDatatype=URL;
                                                   CaptionML=ENU=Terms of Service }
    { 20  ;   ;Data Exch. Def Code ;Code20        ;TableRelation="Data Exch. Def".Code;
                                                   CaptionML=ENU=Data Exch. Def Code }
    { 21  ;   ;Log Web Requests    ;Boolean       ;CaptionML=ENU=Log Web Requests }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DataExchangeCurrencyNosTxt@1005 : TextConst '@@@=Used to populate the Code field in Table 1222. It''s value must start or end with a number;ENU=CURRENCY0001';
      DataExchangeLineDefCodeTxt@1000 : TextConst '@@@={Locked};ENU=CurrExchange';
      DataExchangeLineDefNameTxt@1001 : TextConst 'ENU=Parent Node for Currency Code';
      DataExchangeMappingDefNameTxt@1002 : TextConst 'ENU=Mapping for Currency Exchange';
      MissingDataLineTagErr@1003 : TextConst '@@@="%1 - source XML node; %2 - parent node for caption code";ENU=%1 for %2 must not be blank.';
      MissingServiceURLErr@1004 : TextConst '@@@=%1 - Service URL;ENU=The %1 field must not be blank.';
      DailyUpdateQst@1006 : TextConst 'ENU=A job queue entry for daily update of exchange rates has been created.\\Do you want to open the Job Queue Entries window?';

    [External]
    PROCEDURE GetWebServiceURL@10(VAR ServiceURL@1002 : Text) : Text;
    VAR
      InStream@1000 : InStream;
    BEGIN
      CALCFIELDS("Web Service URL");
      IF "Web Service URL".HASVALUE THEN BEGIN
        "Web Service URL".CREATEINSTREAM(InStream);
        InStream.READ(ServiceURL);
      END;
    END;

    [External]
    PROCEDURE SetWebServiceURL@20(ServiceURL@1000 : Text);
    VAR
      WebRequestHelper@1002 : Codeunit 1299;
      OutStream@1001 : OutStream;
    BEGIN
      WebRequestHelper.IsValidUri(ServiceURL);
      WebRequestHelper.IsHttpUrl(ServiceURL);

      "Web Service URL".CREATEOUTSTREAM(OutStream);
      OutStream.WRITE(ServiceURL);
      MODIFY;
    END;

    LOCAL PROCEDURE SuggestDataExchangeCode@2() NewDataExchCode : Code[20];
    VAR
      DataExchDef@1000 : Record 1222;
    BEGIN
      NewDataExchCode := DataExchangeCurrencyNosTxt;
      WHILE DataExchDef.GET(NewDataExchCode) DO BEGIN
        IF NewDataExchCode = INCSTR(NewDataExchCode) THEN
          EXIT(Code);
        NewDataExchCode := INCSTR(NewDataExchCode);
      END;
    END;

    LOCAL PROCEDURE CreateDataExchangeDefinition@4(DataExchCode@1003 : Code[20]);
    VAR
      DataExchDef@1000 : Record 1222;
      DataExchLineDef@1001 : Record 1227;
      DataExchMapping@1002 : Record 1224;
    BEGIN
      IF DataExchDef.GET(DataExchCode) THEN
        EXIT;

      DataExchDef.INIT;
      DataExchDef.Code := DataExchCode;
      DataExchDef.Name := Code;
      DataExchDef.Type := DataExchDef.Type::"Generic Import";
      DataExchDef."Reading/Writing Codeunit" := CODEUNIT::"Import XML File to Data Exch.";
      DataExchDef.INSERT(TRUE);

      DataExchLineDef.INIT;
      DataExchLineDef."Data Exch. Def Code" := DataExchDef.Code;
      DataExchLineDef.Code := DataExchangeLineDefCodeTxt;
      DataExchLineDef.Name := DataExchangeLineDefNameTxt;
      DataExchLineDef.INSERT(TRUE);

      DataExchMapping.INIT;
      DataExchMapping."Data Exch. Def Code" := DataExchDef.Code;
      DataExchMapping."Data Exch. Line Def Code" := DataExchangeLineDefCodeTxt;
      DataExchMapping.Name := DataExchangeMappingDefNameTxt;
      DataExchMapping."Table ID" := DATABASE::"Currency Exchange Rate";
      DataExchMapping."Mapping Codeunit" := CODEUNIT::"Map Currency Exchange Rate";
      DataExchMapping.INSERT(TRUE);
    END;

    [TryFunction]
    PROCEDURE GetXMLStructure@1(VAR XMLBuffer@1000 : Record 1235;ServiceURL@1001 : Text);
    VAR
      XMLBufferWriter@1003 : Codeunit 1235;
    BEGIN
      XMLBufferWriter.GenerateStructureFromPath(XMLBuffer,ServiceURL);
    END;

    LOCAL PROCEDURE AutoUpdateExchangeRates@3();
    VAR
      JobQueueEntry@1001 : Record 472;
      DummyRecId@1000 : RecordID;
    BEGIN
      IF Enabled THEN BEGIN
        JobQueueEntry.ScheduleRecurrentJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
          CODEUNIT::"Update Currency Exchange Rates",DummyRecId);
        IF CONFIRM(DailyUpdateQst) THEN
          PAGE.RUN(PAGE::"Job Queue Entry Card",JobQueueEntry);
      END ELSE
        IF JobQueueEntry.FindJobQueueEntry(JobQueueEntry."Object Type to Run"::Codeunit,
             CODEUNIT::"Update Currency Exchange Rates")
        THEN
          JobQueueEntry.Cancel;
    END;

    [External]
    PROCEDURE VerifyDataExchangeLineDefinition@6();
    VAR
      DataExchLineDef@1000 : Record 1227;
      DataExchFieldMappingBuf@1001 : Record 1265;
    BEGIN
      DataExchLineDef.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
      DataExchLineDef.SETRANGE("Parent Code",'');
      DataExchLineDef.FINDFIRST;

      IF DataExchLineDef."Data Line Tag" = '' THEN
        ERROR(MissingDataLineTagErr,DataExchFieldMappingBuf.FIELDCAPTION(Source),DataExchangeLineDefNameTxt);
    END;

    [External]
    PROCEDURE VerifyServiceURL@5();
    BEGIN
      IF NOT "Web Service URL".HASVALUE THEN
        ERROR(MissingServiceURLErr,FIELDCAPTION("Web Service URL"));
    END;

    [External]
    PROCEDURE ShowJobQueueEntry@7();
    VAR
      JobQueueEntry@1000 : Record 472;
    BEGIN
      JobQueueEntry.SETRANGE("Object Type to Run",JobQueueEntry."Object Type to Run"::Codeunit);
      JobQueueEntry.SETRANGE("Object ID to Run",CODEUNIT::"Update Currency Exchange Rates");
      IF JobQueueEntry.FINDFIRST THEN
        PAGE.RUN(PAGE::"Job Queue Entry Card",JobQueueEntry);
    END;

    [External]
    PROCEDURE SetupService@9();
    BEGIN
      OnBeforeSetupCurrencyExchRateService(Rec);
      IF ISEMPTY THEN
        CODEUNIT.RUN(CODEUNIT::"Set Up Curr Exch Rate Service");
    END;

    [Integration]
    [External]
    PROCEDURE OnBeforeSetupCurrencyExchRateService@8(VAR CurrExchRateUpdateSetup@1000 : Record 1650);
    BEGIN
    END;

    BEGIN
    END.
  }
}

