OBJECT Page 9991 Code Coverage Setup
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:07 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Code Coverage Setup;
    SaveValues=Yes;
    OnOpenPage=BEGIN
                 SetDefaultValues;
                 CodeCoverageMgt.StartAutomaticBackup(TimeInterval,BackupPath,SummaryPath);
               END;

  }
  CONTROLS
  {
    { 1000;    ;Container ;
                Name=Container;
                ContainerType=ContentArea }

    { 1001;1   ;Field     ;
                Name=<TimeInterval>;
                CaptionML=ENU=Time Interval (minutes);
                ToolTipML=ENU=Specifies the time interval in minutes.;
                ApplicationArea=#All;
                SourceExpr=TimeInterval;
                OnValidate=VAR
                             DefaultTimeIntervalInt@1001 : Integer;
                           BEGIN
                             EVALUATE(DefaultTimeIntervalInt,DefaultTimeIntervalInMinutesTxt);
                             IF TimeInterval < DefaultTimeIntervalInt THEN
                               ERROR(TimeIntervalErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;
                            }

    { 1002;1   ;Field     ;
                Name=<BackupPath>;
                CaptionML=ENU=Backup Path;
                ToolTipML=ENU=Specifies where the backup file is saved.;
                ApplicationArea=#All;
                SourceExpr=BackupPath;
                OnValidate=BEGIN
                             IF BackupPath = '' THEN
                               ERROR(BackupPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;
                            }

    { 1   ;1   ;Field     ;
                Name=<SummaryPath>;
                CaptionML=ENU=Summary Path;
                ToolTipML=ENU=Specifies the summary path, when tracking which part of the application code has been exercised during test activity.;
                ApplicationArea=#All;
                SourceExpr=SummaryPath;
                OnValidate=BEGIN
                             IF SummaryPath = '' THEN
                               ERROR(SummaryPathErr);

                             CodeCoverageMgt.UpdateAutomaticBackupSettings(TimeInterval,BackupPath,SummaryPath);
                             MESSAGE(AppliedSettingsSuccesfullyMsg);
                           END;
                            }

  }
  CODE
  {
    VAR
      CodeCoverageMgt@1003 : Codeunit 9990;
      TimeInterval@1000 : Integer;
      BackupPath@1001 : Text[1024];
      SummaryPath@1002 : Text[1024];
      AppliedSettingsSuccesfullyMsg@1007 : TextConst 'ENU=Automatic Backup settings applied successfully.';
      BackupPathErr@1006 : TextConst 'ENU=Backup Path must have a value.';
      DefaultTimeIntervalInMinutesTxt@1008 : TextConst 'ENU=10';
      SummaryPathErr@1005 : TextConst 'ENU=Summary Path must have a value.';
      TimeIntervalErr@1004 : TextConst 'ENU=The time interval must be greater than or equal to 10.';

    PROCEDURE SetDefaultValues@2();
    BEGIN
      // Set default values for automatic backups settings, in case they don't exist
      IF TimeInterval < 10 THEN
        EVALUATE(TimeInterval,DefaultTimeIntervalInMinutesTxt);
      IF BackupPath = '' THEN
        BackupPath := APPLICATIONPATH;
      IF SummaryPath = '' THEN
        SummaryPath := APPLICATIONPATH;
    END;

    BEGIN
    END.
  }
}

