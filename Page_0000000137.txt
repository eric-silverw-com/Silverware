OBJECT Page 137 Posted Purchase Rcpt. Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:08 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Lines;
    LinksAllowed=No;
    SourceTable=Table121;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnInit=VAR
             ApplicationAreaMgmtFacade@1008 : Codeunit 9179;
           BEGIN
             IsFoundation := ApplicationAreaMgmtFacade.IsFoundationEnabled;
           END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 1900544904;2 ;Action    ;
                      Name=OrderTracking;
                      CaptionML=ENU=Order &Tracking;
                      ToolTipML=ENU=Tracks the connection of a supply to its corresponding demand. This can help you find the original demand that created a specific production order or purchase order.;
                      ApplicationArea=#Basic,#Suite;
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 1900546304;2 ;Action    ;
                      CaptionML=ENU=&Undo Receipt;
                      ToolTipML=ENU=Cancel the quantity posting on the selected posted receipt line. A corrective line is inserted under the selected receipt line. If the quantity was received in a warehouse receipt, then a corrective line is inserted in the posted warehouse receipt. The Quantity Received and Qty. Rcd. Not Invoiced fields on the related purchase order are set to zero.;
                      ApplicationArea=#Suite;
                      Image=Undo;
                      OnAction=BEGIN
                                 UndoReceiptLine;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1901741704;2 ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1902740304;2 ;Action    ;
                      Name=Comments;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Comments;
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      Name=ItemTrackingEntries;
                      CaptionML=ENU=Item &Tracking Entries;
                      ToolTipML=ENU=View serial or lot numbers that are assigned to items.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLedger;
                      OnAction=BEGIN
                                 ShowItemTrackingLines;
                               END;
                                }
      { 1903645704;2 ;Action    ;
                      Name=ItemInvoiceLines;
                      CaptionML=ENU=Item Invoice &Lines;
                      ToolTipML=ENU="View posted sales invoice lines for the item. ";
                      ApplicationArea=#Basic,#Suite;
                      Image=ItemInvoice;
                      OnAction=BEGIN
                                 PageShowItemPurchInvLines;
                               END;
                                }
      { 1905483604;2 ;Action    ;
                      Name=DocumentLineTracking;
                      CaptionML=ENU=Document &Line Tracking;
                      ToolTipML=ENU=View related open, posted, or archived documents or document lines.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Navigate;
                      OnAction=BEGIN
                                 ShowDocumentLineTracking;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the line type.;
                ApplicationArea=#Advanced;
                SourceExpr=Type }

    { 37  ;2   ;Field     ;
                Name=FilteredTypeField;
                CaptionML=ENU=Type;
                ToolTipML=ENU=Specifies the type of transaction that was posted with the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=FormatType;
                Visible=IsFoundation }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                ApplicationArea=#Suite;
                SourceExpr="No." }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the cross-referenced item number. If you enter a cross reference between yours and your vendor's or customer's item number, then this number will override the standard item number when you enter the cross-reference number on a sales or purchase document.;
                ApplicationArea=#Suite;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the item or service on the line.;
                ApplicationArea=#Suite;
                SourceExpr=Description }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code explaining why the item was returned.;
                ApplicationArea=#Suite;
                SourceExpr="Return Reason Code";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 50  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the bin where the items are picked or put away.;
                ApplicationArea=#Warehouse;
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the item or service on the line.;
                ApplicationArea=#Suite;
                BlankZero=Yes;
                SourceExpr=Quantity }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Suite;
                SourceExpr="Unit of Measure Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the name of the item or resource's unit of measure, such as piece or hour.;
                ApplicationArea=#Suite;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units of the item on the line have been posted as invoiced.;
                ApplicationArea=#Suite;
                BlankZero=Yes;
                SourceExpr="Quantity Invoiced" }

    { 48  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units of the item on the line have been received and not yet invoiced.;
                ApplicationArea=#Suite;
                SourceExpr="Qty. Rcd. Not Invoiced";
                Visible=FALSE;
                Editable=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date that you want the vendor to deliver to the ship-to address. The value in the field is used to calculate the latest date you can order the items to have them delivered on the requested receipt date. If you do not need delivery on a specific date, you can leave the field blank.;
                ApplicationArea=#Suite;
                SourceExpr="Requested Receipt Date";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date that the vendor has promised to deliver the order.;
                ApplicationArea=#OrderPromising;
                SourceExpr="Promised Receipt Date";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=ENU="Specifies the date when the item is planned to arrive in inventory. Forward calculation: planned receipt date = order date + vendor lead time (per the vendor calendar and rounded to the next working day in first the vendor calendar and then the location calendar). If no vendor calendar exists, then: planned receipt date = order date + vendor lead time (per the location calendar). Backward calculation: order date = planned receipt date - vendor lead time (per the vendor calendar and rounded to the previous working day in first the vendor calendar and then the location calendar). If no vendor calendar exists, then: order date = planned receipt date - vendor lead time (per the location calendar).";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Planned Receipt Date" }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU="Specifies the date you expect the items to be available in your warehouse. If you leave the field blank, it will be calculated as follows: Planned Receipt Date + Safety Lead Time + Inbound Warehouse Handling Time = Expected Receipt Date.";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expected Receipt Date" }

    { 46  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the related order was created.;
                ApplicationArea=#Suite;
                SourceExpr="Order Date" }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a date formula for the amount of time it takes to replenish the item.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Lead Time Calculation";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the related job.;
                ApplicationArea=#Jobs;
                SourceExpr="Job No.";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the related job task.;
                ApplicationArea=#Jobs;
                SourceExpr="Job Task No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the related production order.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Prod. Order No.";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the time it takes to make items part of available inventory, after the items have been posted as received.;
                ApplicationArea=#Warehouse;
                SourceExpr="Inbound Whse. Handling Time";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the item ledger entry that the document or journal line is applied to.;
                ApplicationArea=#Suite;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the entry as a corrective entry. You can use the field if you need to post a corrective entry to an account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Correction;
                Visible=FALSE }

  }
  CODE
  {
    VAR
      IsFoundation@1020 : Boolean;

    LOCAL PROCEDURE ShowTracking@1();
    VAR
      ItemLedgEntry@1000 : Record 32;
      TempItemLedgEntry@1002 : TEMPORARY Record 32;
      TrackingForm@1001 : Page 99000822;
    BEGIN
      TESTFIELD(Type,Type::Item);
      IF "Item Rcpt. Entry No." <> 0 THEN BEGIN
        ItemLedgEntry.GET("Item Rcpt. Entry No.");
        TrackingForm.SetItemLedgEntry(ItemLedgEntry);
      END ELSE
        TrackingForm.SetMultipleItemLedgEntries(TempItemLedgEntry,
          DATABASE::"Purch. Rcpt. Line",0,"Document No.",'',0,"Line No.");

      TrackingForm.RUNMODAL;
    END;

    LOCAL PROCEDURE UndoReceiptLine@2();
    VAR
      PurchRcptLine@1002 : Record 121;
    BEGIN
      PurchRcptLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(PurchRcptLine);
      CODEUNIT.RUN(CODEUNIT::"Undo Purchase Receipt Line",PurchRcptLine);
    END;

    LOCAL PROCEDURE PageShowItemPurchInvLines@4();
    BEGIN
      TESTFIELD(Type,Type::Item);
      ShowItemPurchInvLines;
    END;

    PROCEDURE ShowDocumentLineTracking@14();
    VAR
      DocumentLineTracking@1000 : Page 6560;
    BEGIN
      CLEAR(DocumentLineTracking);
      DocumentLineTracking.SetDoc(
        5,"Document No.","Line No.","Blanket Order No.","Blanket Order Line No.","Order No.","Order Line No.");
      DocumentLineTracking.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

