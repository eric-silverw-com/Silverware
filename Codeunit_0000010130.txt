OBJECT Codeunit 10130 Bank Reconciliation Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVNA11.00;
  }
  PROPERTIES
  {
    Permissions=TableData 10120=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    [External]
    PROCEDURE New@1020005(VAR BankAccReconciliation@1020005 : Record 273;ShareTable@1020006 : Boolean);
    VAR
      BankAccount@1020004 : Record 270;
      BankAccReconciliation2@1020003 : Record 273;
      BankRecHeader@1020002 : Record 10120;
      BankAccReconciliationCard@1020001 : Page 379;
      BankRecWorksheet@1020000 : Page 10120;
    BEGIN
      IF NOT SelectBankAccountUsingFilter(BankAccount,BankAccReconciliation) THEN
        IF NOT SelectBankAccount(BankAccount) THEN
          EXIT;

      IF NOT BankAccount.CheckLastStatementNo THEN
        EXIT;

      IF AutoMatchSelected THEN BEGIN
        BankAccReconciliation2.InsertRec(BankAccReconciliation2."Statement Type"::"Bank Reconciliation",BankAccount."No.");
        IF ShareTable THEN
          BankAccReconciliationCard.SetSharedTempTable(BankAccReconciliation);
        BankAccReconciliationCard.SETRECORD(BankAccReconciliation2);
        BankAccReconciliationCard.RUN;
      END ELSE BEGIN
        BankRecHeader.InsertRec(BankAccount."No.");
        IF ShareTable THEN
          BankRecWorksheet.SetSharedTempTable(BankAccReconciliation);
        BankRecWorksheet.SETRECORD(BankRecHeader);
        BankRecWorksheet.RUN;
      END;
    END;

    [External]
    PROCEDURE Edit@1020010(VAR BankAccReconciliation@1020004 : Record 273;ShareTable@1020005 : Boolean);
    VAR
      BankAccReconciliation2@1020003 : Record 273;
      BankRecHeader@1020002 : Record 10120;
      BankAccReconciliationCard@1020001 : Page 379;
      BankRecWorksheet@1020000 : Page 10120;
      BankAccountNo@1020007 : Code[20];
      StatementNo@1020008 : Code[20];
      StatementType@1020006 : Option;
    BEGIN
      StatementType := BankAccReconciliation."Statement Type";
      BankAccountNo := BankAccReconciliation."Bank Account No.";
      StatementNo := BankAccReconciliation."Statement No.";

      IF AutoMatchSelected AND BankAccReconciliation2.GET(StatementType,BankAccountNo,StatementNo) THEN BEGIN
        BankAccReconciliationCard.SetSharedTempTable(BankAccReconciliation);
        IF ShareTable THEN
          BankAccReconciliationCard.SETRECORD(BankAccReconciliation2);
        BankAccReconciliationCard.RUN;
      END;

      IF (NOT AutoMatchSelected) AND BankRecHeader.GET(BankAccountNo,StatementNo) THEN BEGIN
        IF ShareTable THEN
          BankRecWorksheet.SetSharedTempTable(BankAccReconciliation);
        BankRecWorksheet.SETRECORD(BankRecHeader);
        BankRecWorksheet.RUN;
      END;
    END;

    [External]
    PROCEDURE Delete@1020003(BankAccReconciliation@1020002 : Record 273);
    VAR
      BankAccReconciliation2@1020001 : Record 273;
      BankRecHeader@1020000 : Record 10120;
      BankAccountNo@1020005 : Code[20];
      StatementNo@1020004 : Code[20];
      StatementType@1020003 : Option;
    BEGIN
      StatementType := BankAccReconciliation."Statement Type";
      BankAccountNo := BankAccReconciliation."Bank Account No.";
      StatementNo := BankAccReconciliation."Statement No.";

      IF AutoMatchSelected AND BankAccReconciliation2.GET(StatementType,BankAccountNo,StatementNo) THEN
        BankAccReconciliation2.DELETE(TRUE);

      IF (NOT AutoMatchSelected) AND BankRecHeader.GET(BankAccountNo,StatementNo) THEN
        BankRecHeader.DELETE(TRUE);
    END;

    [External]
    PROCEDURE Refresh@1020000(VAR BankAccReconciliation@1020002 : Record 273);
    VAR
      BankAccReconciliation2@1020001 : Record 273;
    BEGIN
      IF AutoMatchSelected THEN
        BankAccReconciliation2.GetTempCopy(BankAccReconciliation)
      ELSE
        BankAccReconciliation2.GetTempCopyFromBankRecHeader(BankAccReconciliation);
    END;

    [External]
    PROCEDURE Post@1020002(BankAccReconciliation@1020004 : Record 273;AutoMatchCodeunitID@1020000 : Integer;LocalCodeunitID@1020001 : Integer);
    VAR
      BankAccReconciliation2@1020002 : Record 273;
      BankRecHeader@1020003 : Record 10120;
      BankAccountNo@1020007 : Code[20];
      StatementNo@1020006 : Code[20];
      StatementType@1020005 : Option;
    BEGIN
      StatementType := BankAccReconciliation."Statement Type";
      BankAccountNo := BankAccReconciliation."Bank Account No.";
      StatementNo := BankAccReconciliation."Statement No.";

      IF AutoMatchSelected AND BankAccReconciliation2.GET(StatementType,BankAccountNo,StatementNo) THEN
        CODEUNIT.RUN(AutoMatchCodeunitID,BankAccReconciliation2);

      IF (NOT AutoMatchSelected) AND BankRecHeader.GET(BankAccountNo,StatementNo) THEN
        CODEUNIT.RUN(LocalCodeunitID,BankRecHeader);
    END;

    LOCAL PROCEDURE SelectBankAccountUsingFilter@1020014(VAR BankAccount@1020000 : Record 270;VAR BankAccReconciliation@1020001 : Record 273) : Boolean;
    BEGIN
      IF BankAccReconciliation.GETFILTER("Bank Account No.") <> '' THEN
        EXIT(BankAccount.GET(BankAccReconciliation.GETRANGEMIN("Bank Account No.")));
    END;

    LOCAL PROCEDURE SelectBankAccount@1020040(VAR BankAccount@1020000 : Record 270) : Boolean;
    VAR
      BankAccountList@1020001 : Page 371;
    BEGIN
      BankAccountList.LOOKUPMODE := TRUE;
      IF BankAccountList.RUNMODAL <> ACTION::LookupOK THEN
        EXIT(FALSE);

      BankAccountList.GETRECORD(BankAccount);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE AutoMatchSelected@1020001() : Boolean;
    VAR
      GeneralLedgerSetup@1020000 : Record 98;
    BEGIN
      GeneralLedgerSetup.GET;
      EXIT(GeneralLedgerSetup."Bank Recon. with Auto. Match");
    END;

    BEGIN
    END.
  }
}

