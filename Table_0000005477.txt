OBJECT Table 5477 Purch. Inv. Entity Aggregate
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:57 PM;
    Version List=;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    OnRename=BEGIN
               IF NOT Posted THEN
                 ERROR(CannotChangeNumberOnNonPostedErr);

               IF Posted AND (NOT IsRenameAllowed) THEN
                 ERROR(CannotModifyPostedInvioceErr);

               "Last Modified Date Time" := CURRENTDATETIME;
               UpdateReferencedRecordIds;
             END;

    CaptionML=ENU=Purch. Inv. Entity Aggregate;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order;
                                                   OptionString=Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order }
    { 2   ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                UpdateVendorId;
                                                              END;

                                                   CaptionML=ENU=Buy-from Vendor No.;
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Your Reference }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Payment Terms Code }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 31  ;   ;Vendor Posting Group;Code20        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=ENU=Vendor Posting Group }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=ENU=Prices Including Tax }
    { 43  ;   ;Purchaser Code      ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Purchaser Code }
    { 44  ;   ;Order No.           ;Code20        ;OnValidate=BEGIN
                                                                UpdateOrderId;
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=ENU=Order No. }
    { 56  ;   ;Recalculate Invoice Disc.;Boolean  ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Purchase Line" WHERE (Document Type=FIELD(Document Type),
                                                                                            Document No.=FIELD(No.),
                                                                                            Recalculate Invoice Disc.=CONST(Yes)));
                                                   CaptionML=ENU=Recalculate Invoice Disc.;
                                                   Editable=No }
    { 60  ;   ;Amount              ;Decimal       ;CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;CaptionML=ENU=Amount Including Tax;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 68  ;   ;Vendor Invoice No.  ;Code35        ;CaptionML=ENU=Vendor Invoice No. }
    { 79  ;   ;Buy-from Vendor Name;Text50        ;TableRelation=Vendor.Name;
                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Buy-from Vendor Name }
    { 81  ;   ;Buy-from Address    ;Text50        ;CaptionML=ENU=Buy-from Address }
    { 82  ;   ;Buy-from Address 2  ;Text50        ;CaptionML=ENU=Buy-from Address 2 }
    { 83  ;   ;Buy-from City       ;Text30        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Buy-from City }
    { 84  ;   ;Buy-from Contact    ;Text50        ;CaptionML=ENU=Buy-from Contact }
    { 88  ;   ;Buy-from Post Code  ;Code20        ;TableRelation=IF (Buy-from Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Buy-from Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Buy-from Country/Region Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Buy-from ZIP Code }
    { 89  ;   ;Buy-from County     ;Text30        ;CaptionML=ENU=Buy-from State;
                                                   CaptionClass='5,1,' + "Buy-from Country/Region Code" }
    { 90  ;   ;Buy-from Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=ENU=Buy-from Country/Region Code }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 1304;   ;Vendor Ledger Entry No.;Integer    ;TableRelation="Vendor Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Vendor Ledger Entry No. }
    { 1305;   ;Invoice Discount Amount;Decimal    ;CaptionML=ENU=Invoice Discount Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 5052;   ;Buy-from Contact No.;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Buy-from Contact No. }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 9600;   ;Total Tax Amount    ;Decimal       ;CaptionML=ENU=Total Tax Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 9601;   ;Status              ;Option        ;CaptionML=ENU=Status;
                                                   OptionCaptionML=[@@@={Locked};
                                                                    ENU=" ,Draft,In Review,Open,Paid,Canceled,Corrective"];
                                                   OptionString=[ ,Draft,In Review,Open,Paid,Canceled,Corrective] }
    { 9602;   ;Posted              ;Boolean       ;CaptionML=ENU=Posted }
    { 9624;   ;Discount Applied Before Tax;Boolean;CaptionML=ENU=Discount Applied Before Tax }
    { 9630;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=No }
    { 9631;   ;Vendor Id           ;GUID          ;TableRelation=Vendor.Id;
                                                   OnValidate=BEGIN
                                                                UpdateVendorNo;
                                                              END;

                                                   CaptionML=ENU=Vendor Id }
    { 9632;   ;Order Id            ;GUID          ;OnValidate=BEGIN
                                                                UpdateOrderNo;
                                                              END;

                                                   CaptionML=ENU=Order Id }
  }
  KEYS
  {
    {    ;No.,Posted                              ;Clustered=Yes }
    {    ;Id                                       }
    {    ;Vendor Ledger Entry No.                  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      CannotChangeNumberOnNonPostedErr@1002 : TextConst 'ENU=The number of the invoice can not be changed.';
      CannotModifyPostedInvioceErr@1000 : TextConst '@@@={Locked};ENU=The invoice has been posted and can no longer be modified.';
      IsRenameAllowed@1001 : Boolean;

    LOCAL PROCEDURE UpdateVendorNo@1();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF ISNULLGUID("Vendor Id") THEN
        EXIT;

      Vendor.SETRANGE(Id,"Vendor Id");
      IF NOT Vendor.FINDFIRST THEN
        EXIT;

      "Buy-from Vendor No." := Vendor."No.";
    END;

    LOCAL PROCEDURE UpdateVendorId@2();
    VAR
      Vendor@1000 : Record 23;
    BEGIN
      IF "Buy-from Vendor No." = '' THEN BEGIN
        CLEAR("Vendor Id");
        EXIT;
      END;

      IF NOT Vendor.GET("Buy-from Vendor No.") THEN
        EXIT;

      "Vendor Id" := Vendor.Id;
    END;

    LOCAL PROCEDURE UpdateOrderNo@4();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      IF ISNULLGUID("Order Id") THEN
        EXIT;

      PurchaseHeader.SETRANGE(Id,"Order Id");
      PurchaseHeader.SETRANGE("Document Type",PurchaseHeader."Document Type"::Order);
      IF NOT PurchaseHeader.FINDFIRST THEN
        EXIT;

      "Order No." := PurchaseHeader."No.";
    END;

    LOCAL PROCEDURE UpdateOrderId@3();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      IF NOT PurchaseHeader.GET(PurchaseHeader."Document Type"::Order,"Order No.") THEN
        EXIT;

      "Order Id" := PurchaseHeader.Id;
    END;

    PROCEDURE UpdateReferencedRecordIds@5();
    BEGIN
      UpdateVendorId;

      IF ("Order No." <> '') AND ISNULLGUID("Order Id") THEN
        UpdateOrderId;
    END;

    PROCEDURE GetIsRenameAllowed@7() : Boolean;
    BEGIN
      EXIT(IsRenameAllowed);
    END;

    PROCEDURE SetIsRenameAllowed@6(RenameAllowed@1000 : Boolean);
    BEGIN
      IsRenameAllowed := RenameAllowed;
    END;

    BEGIN
    END.
  }
}

