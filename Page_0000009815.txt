OBJECT Page 9815 Std. Password Dialog
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Set Password;
               ESM=Establecer contrase¤a;
               FRC=D‚finir le mot de passe;
               ENC=Set Password];
    PageType=StandardDialog;
    OnInit=BEGIN
             ValidatePassword := TRUE;
             RequiresPasswordConfirmation := TRUE;
           END;

    OnOpenPage=BEGIN
                 ValidPassword := FALSE;
               END;

    OnQueryClosePage=BEGIN
                       ValidPassword := FALSE;
                       IF CloseAction = ACTION::OK THEN BEGIN
                         IF RequiresPasswordConfirmation AND (SetPassword <> ConfirmPassword) THEN
                           ERROR(PasswordMismatchErr);
                         IF EnableBlankPasswordState AND (SetPassword = '') THEN BEGIN
                           IF NOT CONFIRM(ConfirmBlankPasswordQst) THEN
                             ERROR(PasswordTooSimpleErr);
                         END ELSE BEGIN
                           IF SetPassword = '' THEN
                             ERROR(PasswordBlankIsNotAllowedErr);
                           IF ValidatePassword AND NOT IdentityManagement.ValidatePasswordStrength(SetPassword) THEN
                             ERROR(PasswordTooSimpleErr);
                         END;
                         ValidPassword := TRUE;
                       END
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=SetPassword;
                ExtendedDatatype=Masked;
                CaptionML=[ENU=Password;
                           ESM=Contrase¤a;
                           FRC=Mot de passe;
                           ENC=Password];
                ToolTipML=[ENU=Specifies the password for this task. The password must consist of 8 or more characters, at least one uppercase letter, one lowercase letter, and one number.;
                           ESM=Especifica la contrase¤a para esta tarea. La contrase¤a debe tener 8 caracteres como m¡nimo, al menos una letra en may£scula, una letra en min£scula y un n£mero.;
                           FRC=Sp‚cifie le mot de passe pour cette tƒche. Il doit ˆtre constitu‚ d'au moinsÿ8ÿcaractŠres, parmi lesquels au moins une lettre majuscule, une lettre minuscule et un chiffre.;
                           ENC=Specifies the password for this task. The password must consist of 8 or more characters, at least one uppercase letter, one lowercase letter, and one number.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SetPassword;
                OnValidate=BEGIN
                             IF ValidatePassword AND NOT IdentityManagement.ValidatePasswordStrength(SetPassword) THEN
                               ERROR(PasswordTooSimpleErr);
                           END;
                            }

    { 3   ;1   ;Field     ;
                Name=ConfirmPassword;
                ExtendedDatatype=Masked;
                CaptionML=[ENU=Confirm Password;
                           ESM=Confirmar contrase¤a;
                           FRC=Confirmer mot de passe;
                           ENC=Confirm Password];
                ToolTipML=[ENU=Specifies the password repeated.;
                           ESM=Especifica la contrase¤a repetida.;
                           FRC=Sp‚cifie le mot de passe r‚p‚t‚.;
                           ENC=Specifies the password repeated.];
                ApplicationArea=#All;
                SourceExpr=ConfirmPassword;
                Visible=RequiresPasswordConfirmation;
                OnValidate=BEGIN
                             IF RequiresPasswordConfirmation AND (SetPassword <> ConfirmPassword) THEN
                               ERROR(PasswordMismatchErr);
                           END;
                            }

  }
  CODE
  {
    VAR
      PasswordMismatchErr@1003 : TextConst 'ENU=The specified passwords are not the same.;ESM=Las contrase¤as especificadas no coinciden.;FRC=Les mots de passe sp‚cifi‚s ne sont pas identiques.;ENC=The specified passwords are not the same.';
      PasswordTooSimpleErr@1004 : TextConst 'ENU=The specified password does not meet the requirements. It must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.;ESM=La contrase¤a especificada no cumple los requisitos. La contrase¤a especificada debe tener al menos 8 caracteres e incluir, al menos, una letra en may£scula, una letra en min£scula y un n£mero.;FRC=Le mot de passe sp‚cifi‚ ne r‚pond pas aux exigences. Il doit comporter au moins 8ÿcaractŠres et ˆtre compos‚ d''au moins une lettre majuscule, une minuscule et un chiffre.;ENC=The specified password does not meet the requirements. It must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, and one number.';
      PasswordNotValidatedErr@1007 : TextConst 'ENU=The password did not validate correctly, or it was not accepted.;ESM=La contrase¤a no se ha validado correctamente o no ha sido aceptada.;FRC=Le mot de passe n''a pas ‚t‚ correctement valid‚ ou n''a pas ‚t‚ accept‚.;ENC=The password did not validate correctly, or it was not accepted.';
      PasswordBlankIsNotAllowedErr@1012 : TextConst 'ENU=You must enter a password.;ESM=Debe especificar una contrase¤a.;FRC=Vous devez entrer un mot de passe.;ENC=You must enter a password.';
      ConfirmBlankPasswordQst@1008 : TextConst 'ENU=Do you want to exit without entering a password?;ESM=¨Desea salir sin introducir una contrase¤a?;FRC=Voulez-vous quitter sans entrer de mot de passeÿ?;ENC=Do you want to exit without entering a password?';
      IdentityManagement@1002 : Codeunit 9801;
      SetPassword@1000 : Text[250] INDATASET;
      ConfirmPassword@1001 : Text[250] INDATASET;
      ValidPassword@1005 : Boolean;
      EnableBlankPasswordState@1006 : Boolean;
      ValidatePassword@1009 : Boolean;
      GetPasswordCaptionTxt@1010 : TextConst 'ENU=Enter Password;ESM=Introducir contrase¤a;FRC=Entrez mot de passe;ENC=Enter Password';
      RequiresPasswordConfirmation@1011 : Boolean;

    [External]
    PROCEDURE GetPasswordValue@1() : Text;
    BEGIN
      IF ValidPassword = TRUE THEN
        EXIT(SetPassword);

      ERROR(PasswordNotValidatedErr);
    END;

    [External]
    PROCEDURE EnableBlankPassword@2(enable@1000 : Boolean);
    BEGIN
      EnableBlankPasswordState := enable;
    END;

    [External]
    PROCEDURE EnableGetPasswordMode@3(NewValidatePassword@1000 : Boolean);
    BEGIN
      ValidatePassword := NewValidatePassword;
      CurrPage.CAPTION := GetPasswordCaptionTxt;
    END;

    [External]
    PROCEDURE DisablePasswordConfirmation@5();
    BEGIN
      RequiresPasswordConfirmation := FALSE;
    END;

    BEGIN
    END.
  }
}

