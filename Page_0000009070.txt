OBJECT Page 9070 Accounting Services Activities
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:49 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Accounting Services;
    SourceTable=Table9070;
    PageType=CardPart;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT;
                 END;

                 SETRANGE("User ID Filter",USERID);

                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
               END;

  }
  CONTROLS
  {
    { 7   ;    ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                CaptionML=ENU=Documents;
                GroupType=CueGroup }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies incoming documents that are assigned to you.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="My Incoming Documents" }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies sales invoices that are not posted or only partially posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ongoing Sales Invoices";
                DrillDownPageID=Sales Invoice List }

    { 8   ;1   ;Group     ;
                CaptionML=ENU=Camera;
                Visible=HasCamera;
                GroupType=CueGroup;
                ActionList=ACTIONS
                {
                  { 6       ;    ;Action    ;
                                  Name=CreateIncomingDocumentFromCamera;
                                  CaptionML=ENU=Create Incoming Doc. from Camera;
                                  ToolTipML=ENU=Specifies if you want to create an incoming document, by taking a photo of the document with your mobile device camera. The photo will be attached to the new document.;
                                  ApplicationArea=#Basic,#Suite;
                                  Image=TileCamera;
                                  OnAction=VAR
                                             CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                                           BEGIN
                                             IF NOT HasCamera THEN
                                               EXIT;

                                             CameraOptions := CameraOptions.CameraOptions;
                                             CameraOptions.Quality := 100; // 100%
                                             CameraProvider.RequestPictureAsync(CameraOptions);
                                           END;
                                            }
                }
                 }

    { 2   ;1   ;Group     ;
                CaptionML=ENU=Approvals;
                GroupType=CueGroup }

    { 1   ;2   ;Field     ;
                ToolTipML=ENU=Specifies requests for certain accounting activities that you must approve for other users before they can proceed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Requests to Approve" }

    { 10  ;1   ;Group     ;
                CaptionML=ENU=My User Tasks;
                GroupType=CueGroup }

    { 9   ;2   ;Field     ;
                CaptionML=ENU=Pending User Tasks;
                ToolTipML=ENU=Specifies the number of pending tasks that are assigned to you.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pending Tasks";
                DrillDownPageID=User Task List;
                Image=Checklist }

  }
  CODE
  {
    VAR
      CameraProvider@1001 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1000 : Boolean;

    EVENT CameraProvider@1001::PictureAvailable@10(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    VAR
      IncomingDocument@1002 : Record 130;
    BEGIN
      IncomingDocument.CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

