OBJECT Page 36641 Order Lines Status Factbox
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:13 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Sales Lines Status;
    SourceTable=Table37;
    SourceTableView=SORTING(Document Type,Type,No.,Variant Code,Drop Shipment,Location Code,Shipment Date)
                    WHERE(Document Type=FILTER(Order|Return Order));
    PageType=ListPart;
    OnAfterGetRecord=BEGIN
                       GetLastShipmentInvoice;
                       DefaultFromSalesHeader;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1020002;2;Field     ;
                ToolTipML=ENU=Specifies the type of the document.;
                SourceExpr="Document Type";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU="Specifies the type of the record on the document line. ";
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No." }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description relating to the order line.;
                SourceExpr=Description;
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                Lookup=No;
                CaptionML=ENU=Order No.;
                ToolTipML=ENU=Specifies the number of the order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                OnDrillDown=BEGIN
                              GetOrder;
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  IF PAGE.RUNMODAL(PAGE::"Sales Order",SalesHeader) = ACTION::LookupOK THEN;
                                "Document Type"::"Return Order":
                                  IF PAGE.RUNMODAL(PAGE::"Sales Return Order",SalesHeader) = ACTION::LookupOK THEN;
                              END;
                            END;
                             }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Order Date;
                ToolTipML=ENU=Specifies the date of the order.;
                SourceExpr=SalesHeader."Order Date";
                Visible=FALSE }

    { 1020006;2;Field     ;
                ToolTipML=ENU=Specifies the requested delivery date.;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE }

    { 1020008;2;Field     ;
                ToolTipML=ENU=Specifies the promised delivery date for the order.;
                SourceExpr="Promised Delivery Date";
                Visible=FALSE }

    { 1020012;2;Field     ;
                ToolTipML=ENU=Specifies the planned date that the shipment will be delivered at the customer's address.;
                SourceExpr="Planned Delivery Date";
                Visible=FALSE }

    { 1020014;2;Field     ;
                ToolTipML=ENU=Specifies the date that the shipment should ship from the warehouse.;
                SourceExpr="Planned Shipment Date";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Next Shipment Date;
                ToolTipML=ENU=Specifies the next data a shipment is planned for the order.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date" }

    { 1020010;2;Field     ;
                ToolTipML=ENU="Specifies the shipping time for the order. ";
                SourceExpr="Shipping Time";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU="Specifies the item's unit of measure. ";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure" }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity associated with the order.;
                SourceExpr=Quantity;
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many units on the order line have not yet been shipped.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Quantity" }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the reserved quantity associated with the order.;
                SourceExpr="Reserved Quantity";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many of the units in the Quantity field have been posted as shipped.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Quantity Shipped" }

    { 1020000;2;Field     ;
                ToolTipML=ENU=Specifies whether all the items on the order have been shipped or, in the case of inbound items, completely received.;
                SourceExpr="Completely Shipped";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Last Shipment Date;
                ToolTipML=ENU=Specifies the date of the last shipment.;
                SourceExpr=LastShipmentDate;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastShipment;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Shipments",SalesShipmentHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastRetReceipt;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Return Receipts",RetReceiptHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how many of the units in the Quantity field have been posted as invoiced.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Quantity Invoiced" }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Last Invoice Date;
                ToolTipML=ENU=Specifies the date of the last invoice.;
                SourceExpr=LastInvoiceDate;
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastInvoice;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Invoices",SalesInvoiceHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastCrMemo;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memos",RetCreditMemoHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 1020004;2;Field     ;
                CaptionML=ENU=Status;
                ToolTipML=ENU=Specifies the status of the order: Open or Released.;
                SourceExpr=SalesHeader.Status;
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=On Hold;
                ToolTipML=ENU=Specifies lines on orders that are on hold.;
                SourceExpr=SalesHeader."On Hold";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      SalesHeader@1020000 : Record 36;
      SalesShipmentHeader@1020001 : Record 110;
      SalesInvoiceHeader@1020002 : Record 112;
      RetReceiptHeader@1020006 : Record 6660;
      RetCreditMemoHeader@1020005 : Record 114;
      LastShipmentDate@1020003 : Date;
      LastInvoiceDate@1020004 : Date;
      Text000@1020007 : TextConst 'ENU=Warning:  There are orphan sales line records for %1 %2.';

    [External]
    PROCEDURE DefaultFromSalesHeader@1();
    BEGIN
      GetOrder;
      IF "Shipment Date" = 0D THEN
        "Shipment Date" := SalesHeader."Shipment Date";
      IF "Requested Delivery Date" = 0D THEN
        "Requested Delivery Date" := SalesHeader."Requested Delivery Date";
      IF "Promised Delivery Date" = 0D THEN
        "Promised Delivery Date" := SalesHeader."Promised Delivery Date";
      IF CALCDATE("Shipping Time",WORKDATE) = WORKDATE THEN
        "Shipping Time" := SalesHeader."Shipping Time";
    END;

    [External]
    PROCEDURE GetLastShipmentInvoice@3();
    BEGIN
      // Calculate values for this row
      // Get order first
      GetOrder;
      // Get shipment and Invoice if they exist
      CASE "Document Type" OF
        "Document Type"::Order:
          BEGIN
            IF GetLastShipment THEN
              LastShipmentDate := SalesShipmentHeader."Shipment Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastInvoice THEN
              LastInvoiceDate := SalesInvoiceHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        "Document Type"::"Return Order":
          BEGIN
            IF GetLastRetReceipt THEN
              LastShipmentDate := RetReceiptHeader."Posting Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastCrMemo THEN
              LastInvoiceDate := RetCreditMemoHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        ELSE
          BEGIN
          LastShipmentDate := 0D;
          LastInvoiceDate := 0D;
        END;
      END;
    END;

    [External]
    PROCEDURE GetOrder@8();
    BEGIN
      IF (SalesHeader."Document Type" <> "Document Type") OR (SalesHeader."No." <> "Document No.") THEN
        IF NOT SalesHeader.GET("Document Type","Document No.") THEN
          MESSAGE(Text000,"Document Type","Document No.");
    END;

    [External]
    PROCEDURE GetLastShipment@4() : Boolean;
    BEGIN
      SalesShipmentHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesShipmentHeader.SETRANGE("Order No.","Document No.");
      EXIT(SalesShipmentHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastInvoice@5() : Boolean;
    BEGIN
      SalesInvoiceHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesInvoiceHeader.SETRANGE("Order No.","Document No.");
      EXIT(SalesInvoiceHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastRetReceipt@6() : Boolean;
    BEGIN
      RetReceiptHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetReceiptHeader.SETRANGE("Return Order No.","Document No.");
      EXIT(RetReceiptHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastCrMemo@7() : Boolean;
    BEGIN
      RetCreditMemoHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetCreditMemoHeader.SETRANGE("Return Order No.","Document No.");
      EXIT(RetCreditMemoHeader.FINDLAST);
    END;

    BEGIN
    END.
  }
}

