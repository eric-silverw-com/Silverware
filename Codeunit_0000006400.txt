OBJECT Codeunit 6400 Flow Service Management
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Permissions=TableData 1543=r;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FlowUrlProdTxt@1008 : TextConst '@@@={Locked};ENU=https://flow.microsoft.com/;ESM=https://flow.microsoft.com/;FRC=https://flow.microsoft.com/;ENC=https://flow.microsoft.com/';
      FlowUrlTip1Txt@1022 : TextConst '@@@={Locked};ENU=https://tip1.flow.microsoft.com/;ESM=https://tip1.flow.microsoft.com/;FRC=https://tip1.flow.microsoft.com/;ENC=https://tip1.flow.microsoft.com/';
      FlowUrlTip2Txt@1023 : TextConst '@@@={Locked};ENU=https://tip2.flow.microsoft.com/;ESM=https://tip2.flow.microsoft.com/;FRC=https://tip2.flow.microsoft.com/;ENC=https://tip2.flow.microsoft.com/';
      FlowARMResourceUrlTxt@1000 : TextConst '@@@={Locked};ENU=https://management.core.windows.net/;ESM=https://management.core.windows.net/;FRC=https://management.core.windows.net/;ENC=https://management.core.windows.net/';
      AzureADGraphResourceUrlTxt@1018 : TextConst '@@@={Locked};ENU=https://graph.windows.net;ESM=https://graph.windows.net;FRC=https://graph.windows.net;ENC=https://graph.windows.net';
      MicrosoftGraphResourceUrlTxt@1009 : TextConst '@@@={Locked};ENU=https://graph.microsoft.com;ESM=https://graph.microsoft.com;FRC=https://graph.microsoft.com;ENC=https://graph.microsoft.com';
      FlowEnvironmentsProdApiTxt@1005 : TextConst '@@@={Locked};ENU="https://management.azure.com/providers/Microsoft.ProcessSimple/environments?api-version=2016-11-01";ESM="https://management.azure.com/providers/Microsoft.ProcessSimple/environments?api-version=2016-11-01";FRC="https://management.azure.com/providers/Microsoft.ProcessSimple/environments?api-version=2016-11-01";ENC="https://management.azure.com/providers/Microsoft.ProcessSimple/environments?api-version=2016-11-01"';
      FlowEnvironmentsTip1ApiTxt@1029 : TextConst '@@@={Locked};ENU="https://tip1.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";ESM="https://tip1.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";FRC="https://tip1.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";ENC="https://tip1.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01"';
      FlowEnvironmentsTip2ApiTxt@1030 : TextConst '@@@={Locked};ENU="https://tip2.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";ESM="https://tip2.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";FRC="https://tip2.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01";ENC="https://tip2.api.powerapps.com/providers/Microsoft.PowerApps/environments?api-version=2016-11-01"';
      GenericErr@1001 : TextConst 'ENU=An error occured while trying to access the Flow service. Please try again or contact your system administrator if the error persists.;ESM=Se ha producido un error al intentar acceder al servicio Flow. Vuelva a intentarlo o p¢ngase en contacto con el administrador del sistema si el error persiste.;FRC=Une erreur s''est produite lors de la tentative d''accŠs au service Flow. R‚essayez ou contactez l''administrateur systŠme si l''erreur persiste.;ENC=An error occured while trying to access the Flow service. Please try again or contact your system administrator if the error persists.';
      FlowResourceNameTxt@1002 : TextConst 'ENU=Flow Services;ESM=Servicios de Flow;FRC=Services Flow;ENC=Flow Services';
      FlowTemplatePageSizeTxt@1003 : TextConst '@@@={Locked};ENU=4;ESM=4;FRC=4;ENC=4';
      FlowTemplateDestinationNewTxt@1004 : TextConst '@@@={Locked};ENU=new;ESM=new;FRC=new;ENC=new';
      FlowTemplateDestinationDetailsTxt@1011 : TextConst '@@@={Locked};ENU=details;ESM=details;FRC=details;ENC=details';
      AzureAdMgt@1012 : Codeunit 6300;
      DotNetString@1013 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.String";
      FlowPPEErr@1006 : TextConst 'ENU=Microsoft Flow integration is not supported outside of a PROD environment.;ESM=No se admite la integraci¢n de Microsoft Flow fuera de un entorno de producci¢n.;FRC=L''int‚gration de Microsoft Flow n''est pas prise en charge en-dehors d''un environnement de production.;ENC=Microsoft Flow integration is not supported outside of a PROD environment.';
      FlowAccessDeniedErr@1007 : TextConst 'ENU=Windows Azure Service Management API permissions need to be enabled for Flow in the Azure Portal. Contact your system administrator.;ESM=Se tienen que habilitar los permisos de API de administraci¢n de servicios de Windows Azure para Flow en Azure Portal. P¢ngase en contacto con el administrador del sistema.;FRC=Les autorisations d''API de gestion des services Windows Azure doivent ˆtre activ‚es pour les flux dans le portail Azure. Contactez votre administrateur systŠme.;ENC=Windows Azure Service Management API permissions need to be enabled for Flow in the Azure Portal. Contact your system administrator.';
      FlowLinkUrlFormatTxt@1015 : TextConst '@@@={Locked};ENU=%1manage/environments/%2/flows/%3/details;ESM=%1manage/environments/%2/flows/%3/details;FRC=%1manage/environments/%2/flows/%3/details;ENC=%1manage/environments/%2/flows/%3/details';
      FlowManageLinkUrlFormatTxt@1017 : TextConst '@@@={Locked};ENU=%1manage/environments/%2/flows/;ESM=%1manage/environments/%2/flows/;FRC=%1manage/environments/%2/flows/;ENC=%1manage/environments/%2/flows/';
      FlowLinkInvalidFlowIdErr@1016 : TextConst 'ENU=An invalid Flow ID was provided.;ESM=Se ha indicado un id. de Flow no v lido.;FRC=Un code Flow non valide a ‚t‚ fourni.;ENC=An invalid Flow ID was provided.';
      TemplateFilterTxt@1027 : TextConst '@@@={Locked};ENU=Microsoft Dynamics 365 Business Central;ESM=Microsoft Dynamics 365 Business Central;FRC=Microsoft Dynamics 365 Business Central;ENC=Microsoft Dynamics 365 Business Central';
      SalesFilterTxt@1019 : TextConst '@@@={Locked};ENU=Sales;ESM=Sales;FRC=Sales;ENC=Sales';
      PurchasingFilterTxt@1020 : TextConst '@@@={Locked};ENU=Purchase;ESM=Purchase;FRC=Purchase;ENC=Purchase';
      JournalFilterTxt@1021 : TextConst '@@@={Locked};ENU=General Journal;ESM=General Journal;FRC=General Journal;ENC=General Journal';
      CustomerFilterTxt@1024 : TextConst '@@@={Locked};ENU=Customer;ESM=Customer;FRC=Customer;ENC=Customer';
      ItemFilterTxt@1025 : TextConst '@@@={Locked};ENU=Item;ESM=Item;FRC=Item;ENC=Item';
      VendorFilterTxt@1026 : TextConst '@@@={Locked};ENU=Vendor;ESM=Vendor;FRC=Vendor;ENC=Vendor';
      JObject@1028 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";

    [External]
    PROCEDURE GetFlowUrl@12() : Text;
    VAR
      FlowUrl@1001 : Text;
    BEGIN
      IF TryGetFlowUrl(FlowUrl) THEN
        EXIT(FlowUrl);

      EXIT(FlowUrlProdTxt);
    END;

    [External]
    PROCEDURE GetFlowEnvironmentsApi@11() : Text;
    VAR
      FlowEnvironmentsApi@1001 : Text;
    BEGIN
      IF TryGetFlowEnvironmentsApi(FlowEnvironmentsApi) THEN
        EXIT(FlowEnvironmentsApi);

      EXIT(FlowEnvironmentsProdApiTxt);
    END;

    PROCEDURE GetLocale@26() : Text;
    VAR
      CultureInfo@1000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo";
      TextInfo@1001 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.TextInfo";
    BEGIN
      CultureInfo := CultureInfo.CultureInfo(GLOBALLANGUAGE);
      TextInfo := CultureInfo.TextInfo;
      EXIT(LOWERCASE(TextInfo.CultureName));
    END;

    [External]
    PROCEDURE GetFlowDetailsUrl@8(FlowId@1000 : GUID) FlowDetailsUrl : Text;
    VAR
      TypeHelper@1002 : Codeunit 10;
    BEGIN
      IF ISNULLGUID(FlowId) THEN
        ERROR(FlowLinkInvalidFlowIdErr);

      FlowDetailsUrl := STRSUBSTNO(FlowLinkUrlFormatTxt,GetFlowUrl,GetFlowEnvironmentID,TypeHelper.GetGuidAsString(FlowId));
    END;

    [External]
    PROCEDURE GetFlowManageUrl@10() Url : Text;
    BEGIN
      Url := STRSUBSTNO(FlowManageLinkUrlFormatTxt,GetFlowUrl,GetFlowEnvironmentID);
    END;

    [External]
    PROCEDURE GetFlowARMResourceUrl@5() : Text;
    BEGIN
      EXIT(FlowARMResourceUrlTxt);
    END;

    [External]
    PROCEDURE GetAzureADGraphhResourceUrl@4() : Text;
    BEGIN
      EXIT(AzureADGraphResourceUrlTxt);
    END;

    [External]
    PROCEDURE GetMicrosoftGraphhResourceUrl@31() : Text;
    BEGIN
      EXIT(MicrosoftGraphResourceUrlTxt);
    END;

    [External]
    PROCEDURE GetFlowResourceName@9() : Text;
    BEGIN
      EXIT(FlowResourceNameTxt);
    END;

    [External]
    PROCEDURE GetGenericError@7() : Text;
    BEGIN
      EXIT(GenericErr);
    END;

    [External]
    PROCEDURE GetFlowEnvironmentID@6() FlowEnvironmentId : Text;
    VAR
      FlowUserEnvironmentConfig@1000 : Record 1545;
    BEGIN
      IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN
        FlowEnvironmentId := FlowUserEnvironmentConfig."Environment ID"
      ELSE BEGIN
        SetSelectedFlowEnvironmentIDToDefault;
        IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN
          FlowEnvironmentId := FlowUserEnvironmentConfig."Environment ID"
      END;
    END;

    [External]
    PROCEDURE GetFlowTemplatePageSize@13() : Text;
    BEGIN
      EXIT(FlowTemplatePageSizeTxt);
    END;

    [External]
    PROCEDURE GetFlowTemplateDestinationNew@14() : Text;
    BEGIN
      EXIT(FlowTemplateDestinationNewTxt);
    END;

    [External]
    PROCEDURE GetFlowTemplateDestinationDetails@15() : Text;
    BEGIN
      EXIT(FlowTemplateDestinationDetailsTxt);
    END;

    PROCEDURE IsUserReadyForFlow@24() : Boolean;
    BEGIN
      IF NOT AzureAdMgt.IsAzureADAppSetupDone THEN
        EXIT(FALSE);

      EXIT(NOT DotNetString.IsNullOrWhiteSpace(AzureAdMgt.GetAccessToken(GetFlowARMResourceUrl,GetFlowResourceName,FALSE)));
    END;

    [External]
    PROCEDURE IsPPE@1() : Boolean;
    VAR
      EnvironmentMgt@1000 : Codeunit 9005;
    BEGIN
      EXIT(EnvironmentMgt.IsPPE);
    END;

    PROCEDURE GetFlowPPEError@2() : Text;
    BEGIN
      EXIT(FlowPPEErr);
    END;

    PROCEDURE GetTemplateFilter@32() : Text;
    BEGIN
      // Gets the default text value that filters Flow templates when opening page 6400.
      EXIT(TemplateFilterTxt);
    END;

    [External]
    PROCEDURE GetSalesTemplateFilter@16() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Sales pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + SalesFilterTxt);
    END;

    [External]
    PROCEDURE GetPurchasingTemplateFilter@17() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Purchasing pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + PurchasingFilterTxt);
    END;

    [External]
    PROCEDURE GetJournalTemplateFilter@18() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for General Journal pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + JournalFilterTxt);
    END;

    [External]
    PROCEDURE GetCustomerTemplateFilter@20() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Customer pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + CustomerFilterTxt);
    END;

    [External]
    PROCEDURE GetItemTemplateFilter@21() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Item pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + ItemFilterTxt);
    END;

    [External]
    PROCEDURE GetVendorTemplateFilter@22() : Text;
    BEGIN
      // Gets a text value that filters Flow templates for Vendor pages when opening page 6400.
      EXIT(TemplateFilterTxt + ' ' + VendorFilterTxt);
    END;

    PROCEDURE GetSelectedFlowEnvironmentName@39() FlowEnvironmentName : Text;
    VAR
      FlowUserEnvironmentConfig@1000 : Record 1545;
    BEGIN
      IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN
        FlowEnvironmentName := FlowUserEnvironmentConfig."Environment Display Name"
      ELSE BEGIN
        SetSelectedFlowEnvironmentIDToDefault;
        IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN
          FlowEnvironmentName := FlowUserEnvironmentConfig."Environment Display Name"
      END;
    END;

    PROCEDURE GetEnvironments@25(VAR TempFlowUserEnvironmentBuffer@1010 : TEMPORARY Record 1544);
    VAR
      WebRequestHelper@1000 : Codeunit 1299;
      ResponseText@1001 : Text;
    BEGIN
      // Gets a list of Flow user environments from the Flow API.
      IF NOT WebRequestHelper.GetResponseText(
           'GET',GetFlowEnvironmentsApi,AzureAdMgt.GetAccessToken(FlowARMResourceUrlTxt,FlowResourceNameTxt,FALSE),ResponseText)
      THEN
        ERROR(GenericErr);

      ParseResponseTextForEnvironments(ResponseText,TempFlowUserEnvironmentBuffer);
    END;

    PROCEDURE ParseResponseTextForEnvironments@34(ResponseText@1001 : Text;VAR TempFlowUserEnvironmentBuffer@1010 : TEMPORARY Record 1544);
    VAR
      FlowUserEnvironmentConfig@1011 : Record 1545;
      Current@1002 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.Generic.KeyValuePair`2";
      JObj@1005 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      JObjProp@1009 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JObject";
      ObjectEnumerator@1004 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      JArray@1007 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JArray";
      ArrayEnumerator@1006 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Collections.IEnumerator";
      JToken@1003 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JToken";
      JProperty@1008 : DotNet "'Newtonsoft.Json'.Newtonsoft.Json.Linq.JProperty";
    BEGIN
      // Parse the ResponseText from Flow environments api for a list of environments
      ObjectEnumerator := JObject.Parse(ResponseText).GetEnumerator;

      WHILE ObjectEnumerator.MoveNext DO BEGIN
        Current := ObjectEnumerator.Current;

        IF FORMAT(Current.Key) = 'value' THEN BEGIN
          JArray := Current.Value;
          ArrayEnumerator := JArray.GetEnumerator;

          WHILE ArrayEnumerator.MoveNext DO BEGIN
            JObj := ArrayEnumerator.Current;
            JObjProp := JObj.SelectToken('properties');

            IF NOT ISNULL(JObjProp) THEN BEGIN
              JProperty := JObjProp.Property('provisioningState');

              // only interested in those that succeeded
              IF LOWERCASE(FORMAT(JProperty.Value)) = 'succeeded' THEN BEGIN
                JToken := JObj.SelectToken('name');
                JProperty := JObjProp.Property('displayName');

                TempFlowUserEnvironmentBuffer.INIT;
                TempFlowUserEnvironmentBuffer."Environment ID" := JToken.ToString;
                TempFlowUserEnvironmentBuffer."Environment Display Name" := FORMAT(JProperty.Value);

                // mark current environment as enabled/selected if it is currently the user selected environment
                FlowUserEnvironmentConfig.RESET;
                FlowUserEnvironmentConfig.SETRANGE("Environment ID",JToken.ToString);
                FlowUserEnvironmentConfig.SETRANGE("User Security ID",USERSECURITYID);
                TempFlowUserEnvironmentBuffer.Enabled := FlowUserEnvironmentConfig.FINDFIRST;

                // check if environment is the default
                JProperty := JObjProp.Property('isDefault');
                IF LOWERCASE(FORMAT(JProperty.Value)) = 'true' THEN
                  TempFlowUserEnvironmentBuffer.Default := TRUE;

                TempFlowUserEnvironmentBuffer.INSERT;
              END;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE SaveFlowUserEnvironmentSelection@28(VAR TempFlowUserEnvironmentBuffer@1000 : TEMPORARY Record 1544);
    VAR
      FlowUserEnvironmentConfig@1001 : Record 1545;
    BEGIN
      // User previously selected environment so update
      IF FlowUserEnvironmentConfig.GET(USERSECURITYID) THEN BEGIN
        FlowUserEnvironmentConfig."Environment ID" := TempFlowUserEnvironmentBuffer."Environment ID";
        FlowUserEnvironmentConfig."Environment Display Name" := TempFlowUserEnvironmentBuffer."Environment Display Name";
        FlowUserEnvironmentConfig.MODIFY;

        EXIT;
      END;

      // User has no previous selection so add new one
      FlowUserEnvironmentConfig.INIT;
      FlowUserEnvironmentConfig."User Security ID" := USERSECURITYID;
      FlowUserEnvironmentConfig."Environment ID" := TempFlowUserEnvironmentBuffer."Environment ID";
      FlowUserEnvironmentConfig."Environment Display Name" := TempFlowUserEnvironmentBuffer."Environment Display Name";
      FlowUserEnvironmentConfig.INSERT;
    END;

    PROCEDURE SetSelectedFlowEnvironmentIDToDefault@27();
    VAR
      TempFlowUserEnvironmentBuffer@1000 : TEMPORARY Record 1544;
      WebRequestHelper@1002 : Codeunit 1299;
      ResponseText@1001 : Text;
      PostResult@1003 : Boolean;
    BEGIN
      GetEnvironments(TempFlowUserEnvironmentBuffer);
      TempFlowUserEnvironmentBuffer.SETRANGE(Default,TRUE);
      IF TempFlowUserEnvironmentBuffer.FINDFIRST THEN
        SaveFlowUserEnvironmentSelection(TempFlowUserEnvironmentBuffer)
      ELSE BEGIN
        // No environment found so make a post call to create default environment. Post call returns error but actually creates environment
        PostResult := WebRequestHelper.GetResponseText(
            'POST',GetFlowEnvironmentsApi,AzureAdMgt.GetAccessToken(FlowARMResourceUrlTxt,FlowResourceNameTxt,FALSE),ResponseText);

        IF NOT PostResult THEN
          ; // Do nothing. Need to store the result of the POST call so that error from POST call doesn't bubble up. May need to look at this later.

        // we should have environments now so go ahead and set selected environment
        GetEnvironments(TempFlowUserEnvironmentBuffer);
        TempFlowUserEnvironmentBuffer.SETRANGE(Default,TRUE);
        IF TempFlowUserEnvironmentBuffer.FINDFIRST THEN
          SaveFlowUserEnvironmentSelection(TempFlowUserEnvironmentBuffer)
      END;
    END;

    PROCEDURE HasUserSelectedFlowEnvironment@35() : Boolean;
    VAR
      FlowUserEnvironmentConfig@1000 : Record 1545;
    BEGIN
      EXIT(FlowUserEnvironmentConfig.GET(USERSECURITYID));
    END;

    [EventSubscriber(Page,6302,OnOAuthAccessDenied)]
    LOCAL PROCEDURE CheckOAuthAccessDenied@3(description@1000 : Text;resourceFriendlyName@1001 : Text);
    BEGIN
      IF STRPOS(resourceFriendlyName,FlowResourceNameTxt) > 0 THEN BEGIN
        IF STRPOS(description,'AADSTS65005') > 0 THEN
          ERROR(FlowAccessDeniedErr);
      END;
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetFlowUrl@19(VAR FlowUrl@1001 : Text);
    VAR
      FlowServiceConfiguration@1000 : Record 1543;
    BEGIN
      FlowUrl := FlowUrlProdTxt;
      IF FlowServiceConfiguration.FINDFIRST THEN
        CASE FlowServiceConfiguration."Flow Service" OF
          FlowServiceConfiguration."Flow Service"::"Testing Service (TIP 1)":
            FlowUrl := FlowUrlTip1Txt;
          FlowServiceConfiguration."Flow Service"::"Testing Service (TIP 2)":
            FlowUrl := FlowUrlTip2Txt;
        END;
    END;

    [TryFunction]
    LOCAL PROCEDURE TryGetFlowEnvironmentsApi@29(VAR FlowEnvironmentsApi@1001 : Text);
    VAR
      FlowServiceConfiguration@1000 : Record 1543;
    BEGIN
      FlowEnvironmentsApi := FlowEnvironmentsProdApiTxt;
      IF FlowServiceConfiguration.FINDFIRST THEN
        CASE FlowServiceConfiguration."Flow Service" OF
          FlowServiceConfiguration."Flow Service"::"Testing Service (TIP 1)":
            FlowEnvironmentsApi := FlowEnvironmentsTip1ApiTxt;
          FlowServiceConfiguration."Flow Service"::"Testing Service (TIP 2)":
            FlowEnvironmentsApi := FlowEnvironmentsTip2ApiTxt;
        END;
    END;

    BEGIN
    {
      // Manages access to Microsoft Flow service API
    }
    END.
  }
}

