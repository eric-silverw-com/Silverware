OBJECT Table 9 Country/Region
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00,NAVNA13.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               VATRegNoFormat@1000 : Record 381;
             BEGIN
               VATRegNoFormat.SETFILTER("Country/Region Code",Code);
               VATRegNoFormat.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    CaptionML=[ENU=Country/Region;
               ESM=Pa¡s/regi¢n;
               FRC=Pays/r‚gion;
               ENC=Country/Region];
    LookupPageID=Page10;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 6   ;   ;EU Country/Region Code;Code10      ;CaptionML=[ENU=EU Country/Region Code;
                                                              ESM=C¢d. pa¡s/regi¢n UE;
                                                              FRC=Code pays/r‚gion Union Europ‚enne;
                                                              ENC=EU Country/Region Code] }
    { 7   ;   ;Intrastat Code      ;Code10        ;CaptionML=[ENU=Intrastat Code;
                                                              ESM=C¢d. Intrastat;
                                                              FRC=Code Intrastat;
                                                              ENC=Intrastat Code] }
    { 8   ;   ;Address Format      ;Option        ;InitValue=City+Post Code;
                                                   OnValidate=BEGIN
                                                                IF xRec."Address Format" <> "Address Format" THEN BEGIN
                                                                  IF "Address Format" = "Address Format"::Custom THEN
                                                                    InitAddressFormat;
                                                                  IF xRec."Address Format" = xRec."Address Format"::Custom THEN
                                                                    ClearCustomAddressFormat;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Address Format;
                                                              ESM=Formato direcci¢n;
                                                              FRC=Format d'adresse;
                                                              ENC=Address Format];
                                                   OptionCaptionML=[ENU=ZIP Code+City,City+ZIP Code,City+State+ZIP Code,Blank Line+ZIP Code+City,,City+State+New Line+ZIP Code,ZIP Code+City+State,,,,,,,Custom;
                                                                    ESM=C.P.+Municipio/Ciudad,Municipio/Ciudad+C.P.,Municipio/Ciudad+Provincia+C.P.,L¡nea en blanco+C.P.+Municipio/Ciudad,,Municipio/Ciudad+Provincia+L¡nea nueva+C.P.,C.P.+Municipio/Ciudad+Provincia,,,,,,,Personalizado;
                                                                    FRC=Code postal+Ville,Ville+Code postal,Ville+Comt‚+Code postal,Ligne vide+Code postal+Ville,,Ville+Comt‚+Nouvelle ligne+Code postal,Code postal+Ville+Comt‚,,,,,,,Personnalis‚;
                                                                    ENC=Postal/ZIP Code+City,City+Postal/ZIP Code,City+Province/State+Postal/ZIP Code,Blank Line+Postal/ZIP Code+City,,City+Province/State+New Line+Postal/ZIP Code,Postal/ZIP Code+City+Province/State,,,,,,,Custom];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,,City+County+New Line+Post Code,Post Code+City+County,,,,,,,Custom }
    { 9   ;   ;Contact Address Format;Option      ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Contact Address Format;
                                                              ESM=Formato direcci¢n contacto;
                                                              FRC=Format adresse contact;
                                                              ENC=Contact Address Format];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last;
                                                                    ESM=Primero,Despu‚s empresa,éltimo;
                                                                    FRC=Premier,AprŠs nom de compagnie,Dernier;
                                                                    ENC=First,After Company Name,Last];
                                                   OptionString=First,After Company Name,Last }
    { 10  ;   ;VAT Scheme          ;Code10        ;CaptionML=[ENU=Tax Scheme;
                                                              ESM=Esquema de IVA;
                                                              FRC=R‚gime de TVA;
                                                              ENC=Tax Scheme] }
    { 11  ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              ESM=Fecha y hora de £ltima modificaci¢n;
                                                              FRC=Date-heure derniŠre modification;
                                                              ENC=Last Modified Date Time];
                                                   Editable=No }
    { 12  ;   ;County Name         ;Text30        ;CaptionML=[ENU=State Name;
                                                              ESM=Nombre de la provincia;
                                                              FRC=Nom du comt‚;
                                                              ENC=Province/State Name] }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=Id] }
    { 27000;  ;SAT Country Code    ;Code10        ;TableRelation="SAT Country Code";
                                                   CaptionML=[ENU=SAT Country Code;
                                                              ESM=C¢digo de pa¡s de SAT;
                                                              FRC=Code pays SAT;
                                                              ENC=SAT Country Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;EU Country/Region Code                   }
    {    ;Intrastat Code                           }
    {    ;Name                                     }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,VAT Scheme                     }
  }
  CODE
  {
    VAR
      CountryRegionNotFilledErr@1000 : TextConst 'ENU=You must specify a country or region.;ESM=Debe especificar un pa¡s o regi¢n.;FRC=Vous devez sp‚cifier un pays ou une r‚gion.;ENC=You must specify a country or region.';

    PROCEDURE IsEUCountry@74(CountryRegionCode@1000 : Code[10]) : Boolean;
    VAR
      CountryRegion@1003 : Record 9;
    BEGIN
      IF CountryRegionCode = '' THEN
        ERROR(CountryRegionNotFilledErr);

      IF NOT CountryRegion.GET(CountryRegionCode) THEN
        ERROR(CountryRegionNotFilledErr);

      EXIT(CountryRegion."EU Country/Region Code" <> '');
    END;

    PROCEDURE GetNameInCurrentLanguage@75() : Text[50];
    VAR
      CountryRegionTranslation@1001 : Record 11;
      Language@1002 : Record 8;
    BEGIN
      IF CountryRegionTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(CountryRegionTranslation.Name);
      EXIT(Name);
    END;

    [External]
    PROCEDURE CreateAddressFormat@3(CountryCode@1000 : Code[10];LinePosition@1001 : Integer;FieldID@1002 : Integer) : Integer;
    VAR
      CustomAddressFormat@1003 : Record 725;
    BEGIN
      CustomAddressFormat.INIT;
      CustomAddressFormat."Country/Region Code" := Code;
      CustomAddressFormat."Field ID" := FieldID;
      CustomAddressFormat."Line Position" := LinePosition - 1;
      CustomAddressFormat.INSERT;

      IF FieldID <> 0 THEN
        CreateAddressFormatLine(CountryCode,1,FieldID,CustomAddressFormat."Line No.");

      CustomAddressFormat.BuildAddressFormat;
      CustomAddressFormat.MODIFY;

      EXIT(CustomAddressFormat."Line No.");
    END;

    [External]
    PROCEDURE CreateAddressFormatLine@1(CountryCode@1002 : Code[10];FieldPosition@1003 : Integer;FieldID@1000 : Integer;LineNo@1005 : Integer);
    VAR
      CustomAddressFormatLine@1004 : Record 726;
    BEGIN
      CustomAddressFormatLine.INIT;
      CustomAddressFormatLine."Country/Region Code" := CountryCode;
      CustomAddressFormatLine."Line No." := LineNo;
      CustomAddressFormatLine."Field Position" := FieldPosition - 1;
      CustomAddressFormatLine.VALIDATE("Field ID",FieldID);
      CustomAddressFormatLine.INSERT;
    END;

    PROCEDURE InitAddressFormat@4();
    VAR
      CompanyInformation@1002 : Record 79;
      CustomAddressFormat@1000 : Record 725;
      LineNo@1001 : Integer;
    BEGIN
      CreateAddressFormat(Code,1,CompanyInformation.FIELDNO(Name));
      CreateAddressFormat(Code,2,CompanyInformation.FIELDNO("Name 2"));
      CreateAddressFormat(Code,3,CompanyInformation.FIELDNO("Contact Person"));
      CreateAddressFormat(Code,4,CompanyInformation.FIELDNO(Address));
      CreateAddressFormat(Code,5,CompanyInformation.FIELDNO("Address 2"));
      CASE xRec."Address Format" OF
        xRec."Address Format"::"City+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
        xRec."Address Format"::"Post Code+City",
        xRec."Address Format"::"Blank Line+Post Code+City":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO("Post Code"),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(City),LineNo);
          END;
        xRec."Address Format"::"City+County+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(County),LineNo);
            CreateAddressFormatLine(Code,3,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
      END;
      CustomAddressFormat.GET(Code,LineNo);
      CustomAddressFormat.BuildAddressFormat;
      CustomAddressFormat.MODIFY;
    END;

    LOCAL PROCEDURE ClearCustomAddressFormat@2();
    VAR
      CustomAddressFormat@1000 : Record 725;
    BEGIN
      CustomAddressFormat.SETRANGE("Country/Region Code",Code);
      CustomAddressFormat.DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

