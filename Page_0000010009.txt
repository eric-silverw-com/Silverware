OBJECT Page 10009 Customer Order Header Status
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVNA11.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Customer Order Header Status;
               ESM=Estado cabecera ped. cliente;
               FRC=êtat en-tàte de la commande client;
               ENC=Customer Order Header Status];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table36;
    SourceTableView=SORTING(Document Type,Sell-to Customer No.,No.)
                    WHERE(Document Type=FILTER(Order|Return Order));
    PageType=List;
    OnInit=BEGIN
             "On HoldEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 OnCreditManagementForm(TRUE);
                 UpdateTotal;
               END;

    OnAfterGetRecord=BEGIN
                       GetLastShipmentInvoice;
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  AfterGetCurrentRecord;
                END;

    OnModifyRecord=BEGIN
                     UpdateTotal;
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1020004;2;Field     ;
                ToolTipML=[ENU=Specifies the type of the document.;
                           ESM=Especifica el tipo del documento.;
                           FRC=SpÇcifie le type du document.;
                           ENC=Specifies the type of the document.];
                SourceExpr="Document Type";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the record.;
                           ESM=Especifica el n£mero del registro.;
                           FRC=SpÇcifie le numÇro de l'enregistrement.;
                           ENC=Specifies the number of the record.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No.";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  IF PAGE.RUNMODAL(PAGE::"Sales Order",Rec) = ACTION::LookupOK THEN;
                                "Document Type"::"Return Order":
                                  IF PAGE.RUNMODAL(PAGE::"Sales Return Order",Rec) = ACTION::LookupOK THEN;
                              END;
                            END;
                             }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's reference. The content will be printed on sales documents.;
                           ESM=Especifica la referencia del cliente. El contenido se imprimir† en los documentos de venta.;
                           FRC=SpÇcifie la rÇfÇrence du client. Le contenu sera imprimÇ sur les documents de vente.;
                           ENC=Specifies the customer's reference. The content will be printed on sales documents.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Your Reference" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the related sales order was created.;
                           ESM=Especifica la fecha de creaci¢n del pedido de venta relacionado.;
                           FRC=SpÇcifie la date de crÇation du document de vente associÇ.;
                           ENC=Specifies the date on which the related sales order was created.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Date";
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Last Shipment Date;
                           ESM=Èlt. fecha env°o;
                           FRC=Date de derniäre livraison;
                           ENC=Last Shipment Date];
                ToolTipML=[ENU=Specifies the date when the order was last posted as shipped.;
                           ESM=Especifica la fecha en la que la orden se registr¢ como enviada.;
                           FRC=SpÇcifie la date Ö laquelle la commande a ÇtÇ reportÇe pour la derniäre fois en tant que livrÇe.;
                           ENC=Specifies the date when the order was last posted as shipped.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LastShipmentDate;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastShipment;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Shipments",SalesShipmentHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastRetReceipt;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Return Receipts",RetReceiptHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 1020006;2;Field     ;
                ToolTipML=[ENU=Specifies the requested delivery date for the customer order.;
                           ESM=Especifica la fecha de entrega solicitada para la orden de cliente.;
                           FRC=SpÇcifie la date de livraison demandÇe pour la commande client.;
                           ENC=Specifies the requested delivery date for the customer order.];
                SourceExpr="Requested Delivery Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1020008;2;Field     ;
                ToolTipML=[ENU=Specifies the promised delivery date for the customer order.;
                           ESM=Especifica la fecha de entrega prometida para la orden de cliente.;
                           FRC=SpÇcifie la date de livraison promise pour la commande client.;
                           ENC=Specifies the promised delivery date for the customer order.];
                SourceExpr="Promised Delivery Date";
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Next Shipment Date;
                           ESM=Siguiente fecha env°o;
                           FRC=Prochaine date de livraison;
                           ENC=Next Shipment Date];
                ToolTipML=[ENU=Specifies the next data a shipment is planned for the order.;
                           ESM=Especifica la siguiente fecha de planificaci¢n de env°o de la orden.;
                           FRC=SpÇcifie la date suivante Ö laquelle une livraison est planifiÇe pour la commande.;
                           ENC=Specifies the next data a shipment is planned for the order.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Editable=FALSE }

    { 1020010;2;Field     ;
                ToolTipML=[ENU=Specifies the shipping time for the order. This is the time it takes from when the order is shipped from the warehouse, to when the order is delivered to the customer's address.;
                           ESM=Especifica el tiempo de env°o de la orden. Se trata del tiempo que transcurre desde que se env°a la orden desde el almacÇn hasta que se entrega en la direcci¢n del cliente.;
                           FRC=SpÇcifie le dÇlai de livraison pour la commande. Il s'agit du dÇlai entre le moment oó la commande est livrÇe Ö partir de l'entrepìt et le moment oó elle est livrÇe Ö l'adresse du client.;
                           ENC=Specifies the shipping time for the order. This is the time it takes from when the order is shipped from the warehouse, to when the order is delivered to the customer's address.];
                SourceExpr="Shipping Time";
                Visible=FALSE;
                Editable=FALSE }

    { 1020002;2;Field     ;
                ToolTipML=[ENU=Specifies whether all the items on the order have been shipped or, in the case of inbound items, completely received.;
                           ESM=Especifica si todos los productos de la orden se han enviado o, en el caso de productos de entrada, se han recibido completamente.;
                           FRC=SpÇcifie si tous les articles de la commande ont ÇtÇ livrÇs ou, dans le cas d'articles entrants, complätement reáus.;
                           ENC=Specifies whether all the items on the order have been shipped or, in the case of inbound items, completely received.];
                SourceExpr="Completely Shipped";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Last Invoice Date;
                           ESM=Ult. fecha factura;
                           FRC=Date de la derniäre facture;
                           ENC=Last Invoice Date];
                ToolTipML=[ENU=Specifies the date when the order was last posted as invoiced.;
                           ESM=Especifica la fecha en la que la orden se registr¢ como facturada por £ltima vez.;
                           FRC=SpÇcifie la date Ö laquelle la commande a ÇtÇ reportÇe pour la derniäre fois en tant que facturÇe.;
                           ENC=Specifies the date when the order was last posted as invoiced.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LastInvoiceDate;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastInvoice;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Invoices",SalesInvoiceHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastCrMemo;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memos",RetCreditMemoHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Open Amount;
                           ESM=Imp. abierto;
                           FRC=Montant ouvert;
                           ENC=Open Amount];
                ToolTipML=[ENU=Specifies the outstanding amount that is calculated, based on the Sales Line table and the Outstanding Amount ($) field.;
                           ESM=Especifica el importe pendiente calculado, en funci¢n de la tabla L°n. venta y el campo Importe pendiente ($).;
                           FRC=SpÇcifie le montant non payÇ calculÇ sur la base de la table Ligne vente et du champ Montant non payÇ ($).;
                           ENC=Specifies the outstanding amount that is calculated, based on the Sales Line table and the Outstanding Amount ($) field.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstanding Amount ($)";
                Editable=FALSE }

    { 1020000;2;Field     ;
                ToolTipML=[ENU=Specifies the status of the document.;
                           ESM=Especifica el estado del documento.;
                           FRC=SpÇcifie l'Çtat du document.;
                           ENC=Specifies the status of the document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the document was put on hold when it was posted, for example because payment of the resulting customer ledger entries is overdue.;
                           ESM=Especifica si el documento se puso en espera cuando se registr¢, por ejemplo, porque venci¢ el pago de los movimientos de contabilidad resultantes del cliente.;
                           FRC=SpÇcifie si le document a ÇtÇ placÇ en attente lors de son report, par exemple, en raison du fait que le paiement des Çcritures client rÇsultantes est Çchu.;
                           ENC=Specifies if the document was put on hold when it was posted, for example because payment of the resulting customer ledger entries is overdue.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="On Hold";
                Editable="On HoldEditable" }

    { 20  ;1   ;Group      }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Total Open Amount On Hold;
                           ESM=Total imp. abierto en espera;
                           FRC=Montant ouvert total en attente;
                           ENC=Total Open Amount On Hold];
                ToolTipML=[ENU=Specifies the total amount on open documents that are on hold.;
                           ESM=Especifica el importe total en los documentos abiertos que est†n en espera.;
                           FRC=SpÇcifie le montant total sur les documents ouverts qui sont en attente.;
                           ENC=Specifies the total amount on open documents that are on hold.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalOpenAmountOnHold;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Total Open Amount;
                           ESM=Total imp. abierto;
                           FRC=Montant ouvert total;
                           ENC=Total Open Amount];
                ToolTipML=[ENU=Specifies the total amount on open documents.;
                           ESM=Especifica el importe total en los documentos abiertos.;
                           FRC=SpÇcifie le montant total sur les documents ouverts.;
                           ENC=Specifies the total amount on open documents.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalOpenAmount;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900316107;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9084;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1904036807;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document Type=FILTER(Order|Return Order),
                            Document No.=FIELD(No.);
                PagePartID=Page36641;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1904036507;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page36642;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                PartType=Page }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                Editable=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesHeader@1020000 : Record 36;
      SalesShipmentHeader@1020001 : Record 110;
      SalesInvoiceHeader@1020002 : Record 112;
      RetReceiptHeader@1020009 : Record 6660;
      RetCreditMemoHeader@1020010 : Record 114;
      LastShipmentDate@1020004 : Date;
      LastInvoiceDate@1020005 : Date;
      TotalOpenAmount@1020007 : Decimal;
      TotalOpenAmountOnHold@1020008 : Decimal;
      "On HoldEditable"@19058110 : Boolean INDATASET;

    [External]
    PROCEDURE OnCreditManagementForm@1(SetOnCreditManagementForm@1020000 : Boolean);
    BEGIN
      // Make certain Fields editable
      "On HoldEditable" := SetOnCreditManagementForm;
    END;

    [External]
    PROCEDURE UpdateTotal@2();
    BEGIN
      TotalOpenAmount := 0;
      TotalOpenAmountOnHold := 0;
      SalesHeader.COPY(Rec);
      IF SalesHeader.FIND('-') THEN
        REPEAT
          SalesHeader.CALCFIELDS("Outstanding Amount ($)");
          TotalOpenAmount := TotalOpenAmount + SalesHeader."Outstanding Amount ($)";
          IF SalesHeader."On Hold" <> '' THEN
            TotalOpenAmountOnHold := TotalOpenAmountOnHold + SalesHeader."Outstanding Amount ($)";
        UNTIL SalesHeader.NEXT = 0;
    END;

    [External]
    PROCEDURE GetLastShipmentInvoice@3();
    BEGIN
      // Calculate values for this row
      CASE "Document Type" OF
        "Document Type"::Order:
          BEGIN
            IF GetLastShipment THEN
              LastShipmentDate := SalesShipmentHeader."Shipment Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastInvoice THEN
              LastInvoiceDate := SalesInvoiceHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        "Document Type"::"Return Order":
          BEGIN
            IF GetLastRetReceipt THEN
              LastShipmentDate := RetReceiptHeader."Posting Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastCrMemo THEN
              LastInvoiceDate := RetCreditMemoHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        ELSE
          BEGIN
          LastShipmentDate := 0D;
          LastInvoiceDate := 0D;
        END;
      END;
    END;

    [External]
    PROCEDURE GetLastShipment@4() : Boolean;
    BEGIN
      SalesShipmentHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesShipmentHeader.SETRANGE("Order No.","No.");
      EXIT(SalesShipmentHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastInvoice@5() : Boolean;
    BEGIN
      SalesInvoiceHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesInvoiceHeader.SETRANGE("Order No.","No.");
      EXIT(SalesInvoiceHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastRetReceipt@6() : Boolean;
    BEGIN
      RetReceiptHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetReceiptHeader.SETRANGE("Return Order No.","No.");
      EXIT(RetReceiptHeader.FINDLAST);
    END;

    [External]
    PROCEDURE GetLastCrMemo@7() : Boolean;
    BEGIN
      RetCreditMemoHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetCreditMemoHeader.SETRANGE("Return Order No.","No.");
      EXIT(RetCreditMemoHeader.FINDLAST);
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateTotal;
    END;

    BEGIN
    END.
  }
}

