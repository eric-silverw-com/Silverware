OBJECT Report 91 Export Consolidation
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Consolidation;
               ESM=Exportar consolidaci¢n;
               FRC=Exporter fichier consolidation;
               ENC=Export Consolidation];
    ApplicationArea=#Suite;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   TransferPerDay := TRUE;
                 END;

    OnPreReport=VAR
                  FileMgt@1000 : Codeunit 419;
                BEGIN
                  DimSelectionBuf.CompareDimText(3,REPORT::"Export Consolidation",'',ColumnDim,Text007);
                  ServerFileName := FileMgt.ServerTempFileName('xml');
                  IsWebClient;
                END;

    OnPostReport=VAR
                   FileManagement@1000 : Codeunit 419;
                 BEGIN
                   IF IsWebClient THEN BEGIN
                     IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
                       ClientFileName := ClientFileName + '.xml'
                     ELSE
                       ClientFileName := ClientFileName + '.txt';

                     FileManagement.DownloadHandler(ServerFileName,'','','',ClientFileName);
                   END ELSE
                     FileManagement.DownloadToFile(ServerFileName,ClientFileName);
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 6710;    ;DataItem;                    ;
               DataItemTable=Table15;
               DataItemTableView=SORTING(No.)
                                 WHERE(Account Type=CONST(Posting));
               OnPreDataItem=BEGIN
                               IF ServerFileName = '' THEN
                                 ERROR(Text000);
                               IF ConsolidStartDate = 0D THEN
                                 ERROR(Text001);
                               IF ConsolidEndDate = 0D THEN
                                 ERROR(Text002);

                               CheckClosingDates(ConsolidStartDate,ConsolidEndDate,TransferPerDay);

                               IF NORMALDATE(ConsolidEndDate) - NORMALDATE(ConsolidStartDate) + 1 > 500 THEN
                                 ERROR(Text003);

                               IF Dim.FIND('-') THEN BEGIN
                                 REPEAT
                                   TempDim.INIT;
                                   TempDim := Dim;
                                   TempDim.INSERT;
                                 UNTIL Dim.NEXT = 0;
                               END;
                               IF DimVal.FIND('-') THEN BEGIN
                                 REPEAT
                                   TempDimVal.INIT;
                                   TempDimVal := DimVal;
                                   TempDimVal.INSERT;
                                 UNTIL DimVal.NEXT = 0;
                               END;

                               SelectedDim.SETRANGE("User ID",USERID);
                               SelectedDim.SETRANGE("Object Type",3);
                               SelectedDim.SETRANGE("Object ID",REPORT::"Export Consolidation");
                               IF SelectedDim.FIND('-') THEN BEGIN
                                 REPEAT
                                   TempSelectedDim.INIT;
                                   TempSelectedDim := SelectedDim;
                                   TempDim.SETRANGE("Consolidation Code",SelectedDim."Dimension Code");
                                   IF TempDim.FINDFIRST THEN
                                     TempSelectedDim."Dimension Code" := TempDim.Code;
                                   TempSelectedDim.INSERT;
                                 UNTIL SelectedDim.NEXT = 0;
                               END;
                               TempDim.RESET;

                               IF FileFormat = FileFormat::"Version 3.70 or Earlier (.txt)" THEN BEGIN
                                 CLEAR(GLEntryFile);
                                 GLEntryFile.TEXTMODE := TRUE;
                                 GLEntryFile.WRITEMODE := TRUE;
                                 GLEntryFile.CREATE(ServerFileName);
                                 GLEntryFile.WRITE(
                                   STRSUBSTNO(
                                     '<01>#1############################ #2####### #3####### #4#',
                                     COMPANYNAME,ConsolidStartDate,ConsolidEndDate,FORMAT(TransferPerDay,0,2)));
                               END;

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  Window.UPDATE(2,'');
                                  IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
                                    Consolidate.InsertGLAccount("G/L Account");
                                END;

               OnPostDataItem=BEGIN
                                IF FileFormat = FileFormat::"Version 3.70 or Earlier (.txt)" THEN
                                  GLEntryFile.CLOSE;
                              END;
                               }

    { 7069;1   ;DataItem;                    ;
               DataItemTable=Table17;
               DataItemTableView=SORTING(G/L Account No.,Posting Date);
               OnPreDataItem=BEGIN
                               SETRANGE("Posting Date",ConsolidStartDate,ConsolidEndDate);

                               TempDimBufIn.SETRANGE("Table ID",DATABASE::"G/L Entry");
                               TempDimBufOut.SETRANGE("Table ID",DATABASE::"G/L Entry");

                               IF ConsolidStartDate = NORMALDATE(ConsolidStartDate) THEN
                                 CheckClosingPostings("G/L Account"."No.",ConsolidStartDate,ConsolidEndDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(2,"Posting Date");
                                  SETRANGE("Posting Date","Posting Date");

                                  IF NOT TempSelectedDim.FINDFIRST THEN BEGIN
                                    CALCSUMS(
                                      Amount,"Debit Amount","Credit Amount",
                                      "Add.-Currency Debit Amount","Add.-Currency Credit Amount");
                                    IF (Amount <> 0) OR ("Debit Amount" <> 0) OR ("Credit Amount" <> 0) THEN BEGIN
                                      TempGLEntry.RESET;
                                      TempGLEntry.DELETEALL;
                                      TempDimBufOut.RESET;
                                      TempDimBufOut.DELETEALL;
                                      TempGLEntry := "G/L Entry";
                                      TempGLEntry.INSERT;
                                      IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
                                        Consolidate.InsertGLEntry(TempGLEntry)
                                      ELSE BEGIN
                                        UpdateExportedInfo(TempGLEntry);
                                        WriteFile(TempGLEntry,TempDimBufOut);
                                      END;
                                    END;
                                    FIND('+');
                                  END ELSE BEGIN
                                    TempGLEntry.RESET;
                                    TempGLEntry.DELETEALL;
                                    DimBufMgt.DeleteAllDimensions;
                                    REPEAT
                                      TempDimBufIn.RESET;
                                      TempDimBufIn.DELETEALL;
                                      DimSetEntry.RESET;
                                      DimSetEntry.SETRANGE("Dimension Set ID","Dimension Set ID");
                                      IF DimSetEntry.FINDSET THEN BEGIN
                                        REPEAT
                                          IF TempSelectedDim.GET(USERID,3,REPORT::"Export Consolidation",'',DimSetEntry."Dimension Code") THEN BEGIN
                                            TempDimBufIn.INIT;
                                            TempDimBufIn."Table ID" := DATABASE::"G/L Entry";
                                            TempDimBufIn."Entry No." := "Entry No.";
                                            IF TempDim.GET(DimSetEntry."Dimension Code") THEN
                                              IF TempDim."Consolidation Code" <> '' THEN
                                                TempDimBufIn."Dimension Code" := TempDim."Consolidation Code"
                                              ELSE
                                                TempDimBufIn."Dimension Code" := TempDim.Code
                                            ELSE
                                              TempDimBufIn."Dimension Code" := DimSetEntry."Dimension Code";
                                            IF TempDimVal.GET(DimSetEntry."Dimension Code",DimSetEntry."Dimension Value Code") THEN
                                              IF TempDimVal."Consolidation Code" <> '' THEN
                                                TempDimBufIn."Dimension Value Code" := TempDimVal."Consolidation Code"
                                              ELSE
                                                TempDimBufIn."Dimension Value Code" := TempDimVal.Code
                                            ELSE
                                              TempDimBufIn."Dimension Value Code" := DimSetEntry."Dimension Value Code";
                                            TempDimBufIn.INSERT;
                                          END;
                                        UNTIL DimSetEntry.NEXT = 0;
                                      END;
                                      UpdateTempGLEntry(TempDimBufIn);
                                    UNTIL NEXT = 0;

                                    TempGLEntry.RESET;
                                    IF TempGLEntry.FINDSET THEN BEGIN
                                      REPEAT
                                        TempDimBufOut.RESET;
                                        TempDimBufOut.DELETEALL;
                                        DimBufMgt.GetDimensions(TempGLEntry."Entry No.",TempDimBufOut);
                                        TempDimBufOut.SETRANGE("Entry No.",TempGLEntry."Entry No.");
                                        IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN BEGIN
                                          IF (TempGLEntry."Debit Amount" <> 0) OR (TempGLEntry."Credit Amount" <> 0) THEN
                                            WriteFile(TempGLEntry,TempDimBufOut);
                                        END ELSE BEGIN
                                          UpdateExportedInfo(TempGLEntry);
                                          IF TempGLEntry.Amount <> 0 THEN
                                            WriteFile(TempGLEntry,TempDimBufOut);
                                        END;
                                      UNTIL TempGLEntry.NEXT = 0;
                                    END;
                                  END;

                                  SETRANGE("Posting Date",ConsolidStartDate,ConsolidEndDate);
                                END;

               DataItemLink=G/L Account No.=FIELD(No.) }

    { 8685;    ;DataItem;                    ;
               DataItemTable=Table330;
               DataItemTableView=SORTING(Currency Code,Starting Date);
               OnPreDataItem=BEGIN
                               IF FileFormat = FileFormat::"Version 3.70 or Earlier (.txt)" THEN
                                 CurrReport.BREAK;
                               GLSetup.GET;
                               IF GLSetup."Additional Reporting Currency" = '' THEN
                                 SETRANGE("Currency Code",ParentCurrencyCode)
                               ELSE
                                 SETFILTER("Currency Code",'%1|%2',ParentCurrencyCode,GLSetup."Additional Reporting Currency");
                               SETRANGE("Starting Date",0D,ConsolidEndDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  Consolidate.InsertExchRate("Currency Exchange Rate");
                                END;

               OnPostDataItem=BEGIN
                                IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN BEGIN
                                  Consolidate.SetGlobals(
                                    ProductVersion,FormatVersion,COMPANYNAME,
                                    GLSetup."LCY Code",GLSetup."Additional Reporting Currency",ParentCurrencyCode,
                                    0,ConsolidStartDate,ConsolidEndDate);
                                  Consolidate.SetGlobals(
                                    ProductVersion,FormatVersion,COMPANYNAME,
                                    GLSetup."LCY Code",GLSetup."Additional Reporting Currency",ParentCurrencyCode,
                                    Consolidate.CalcCheckSum,ConsolidStartDate,ConsolidEndDate);
                                  Consolidate.ExportToXML(ServerFileName);
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 9   ;2   ;Field     ;
                  Name=FileFormat;
                  CaptionML=[ENU=File Format;
                             ESM=Formato de archivo;
                             FRC=Format de fichier;
                             ENC=File Format];
                  ToolTipML=[ENU=Specifies the file format that you want to use for the consolidation. If the parent company that will perform the consolidation also has Dynamics NAV 4.0 or later versions, select the .xml format. Otherwise, select the .txt format.;
                             ESM=Especifica el formato de archivo que desea utilizar para la consolidaci¢n. Si la empresa principal que va a realizar la consolidaci¢n tambin tiene Dynamics NAV 4.0 o una versi¢n posterior, seleccione el formato .xml. En caso contrario, seleccione el formato .txt.;
                             FRC=Spcifie le format de fichier  utiliser pour la consolidation. Si la compagnie parent qui effectue la consolidation dispose galement de Dynamics NAVÿ4.0 ou d'une version ultrieure, slectionnez le format .xml. Sinon, choisissez le format .txt.;
                             ENC=Specifies the file format that you want to use for the consolidation. If the parent company that will perform the consolidation also has Dynamics NAV 4.0 or later versions, select the .xml format. Otherwise, select the .txt format.];
                  OptionCaptionML=[ENU=Version 4.00 or Later (.xml),Version 3.70 or Earlier (.txt);
                                   ESM=Versi¢n 4.00 o posterior (.xml),Versi¢n 3.70 o anterior (.txt);
                                   FRC=Version 4.00 ou ultrieure (.xml),Version 3.70 ou antrieure (.txt);
                                   ENC=Version 4.00 or Later (.xml),Version 3.70 or Earlier (.txt)];
                  ApplicationArea=#Suite;
                  SourceExpr=FileFormat }

      { 1   ;2   ;Field     ;
                  Name=ClientFileNameControl;
                  CaptionML=[ENU=File Name;
                             ESM=Nombre archivo;
                             FRC=Nom de fichier;
                             ENC=File Name];
                  ToolTipML=[ENU=Specifies the name of the file to be exported from a business unit to a consolidated company.;
                             ESM=Especifica el nombre del archivo que se va a exportar de una unidad de negocio a una empresa consolidada.;
                             FRC=Spcifie le nom du fichier  exporter d'une unit fonctionnelle vers une compagnie consolide.;
                             ENC=Specifies the name of the file to be exported from a business unit to a consolidated company.];
                  ApplicationArea=#Suite;
                  SourceExpr=ClientFileName;
                  OnAssistEdit=VAR
                                 FileManagement@1000 : Codeunit 419;
                               BEGIN
                                 IF NOT IsWebClient THEN BEGIN
                                   IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
                                     ClientFileName := FileManagement.SaveFileDialog(Text011,ClientFileName,FileManagement.GetToFilterText('','.xml'))
                                   ELSE
                                     ClientFileName := FileManagement.SaveFileDialog(Text008,ClientFileName,FileManagement.GetToFilterText('','.txt'));
                                 END ELSE
                                   ERROR(EnterFileNameErr);
                               END;
                                }

      { 22  ;2   ;Group     ;
                  CaptionML=[ENU=Consolidation Period;
                             ESM=Periodo consolidaci¢n;
                             FRC=Priode de consolidation;
                             ENC=Consolidation Period] }

      { 2   ;3   ;Field     ;
                  Name=StartDate;
                  CaptionML=[ENU=Starting Date;
                             ESM=Fecha inicial;
                             FRC=Date dbut;
                             ENC=Starting Date];
                  ToolTipML=[ENU=Specifies the first date in the period from which entries will be exported. If you use a closing date, the starting date and ending date must be the same.;
                             ESM=Especifica la £ltima fecha del periodo del que se exportar n los movimientos. Si utiliza una fecha de cierre, la fecha inicial y la fecha final deben ser la misma.;
                             FRC=Spcifie la premire date de la priode  partir de laquelle les critures seront exportes. Si vous utilisez une date de fermeture, la date dbut et la date fin doivent tre identiques.;
                             ENC=Specifies the first date in the period from which entries will be exported. If you use a closing date, the starting date and ending date must be the same.];
                  ApplicationArea=#Suite;
                  ClosingDates=Yes;
                  SourceExpr=ConsolidStartDate }

      { 3   ;3   ;Field     ;
                  Name=EndDate;
                  CaptionML=[ENU=Ending Date;
                             ESM=Fecha final;
                             FRC=Date fin;
                             ENC=Ending Date];
                  ToolTipML=[ENU=Specifies the last date in the period from which entries will be exported.;
                             ESM=Especifica la £ltima fecha del periodo del que se exportar n los movimientos.;
                             FRC=Spcifie la dernire date de la priode  partir de laquelle les critures seront exportes.;
                             ENC=Specifies the last date in the period from which entries will be exported.];
                  ApplicationArea=#Suite;
                  ClosingDates=Yes;
                  SourceExpr=ConsolidEndDate }

      { 7   ;2   ;Group     ;
                  CaptionML=[ENU=Copy Field Contents;
                             ESM=Copiar contenidos;
                             FRC=Copier contenu du champ;
                             ENC=Copy Field Contents] }

      { 5   ;3   ;Field     ;
                  CaptionML=[ENU=Copy Dimensions;
                             ESM=Copiar dimensiones;
                             FRC=Copier dimensions;
                             ENC=Copy Dimensions];
                  ToolTipML=[ENU=Specifies if you want the entries to be classified by dimensions when they are transferred.;
                             ESM=Especifica si desea que los movimientos se clasifiquen por dimensiones cuando se transfieran.;
                             FRC=Spcifie si vous souhaitez que les critures soient classes par axe analytique lors de leur transfert.;
                             ENC=Specifies if you want the entries to be classified by dimensions when they are transferred.];
                  ApplicationArea=#Dimensions;
                  SourceExpr=ColumnDim;
                  Editable=FALSE;
                  OnAssistEdit=BEGIN
                                 DimSelectionBuf.SetDimSelectionMultiple(3,REPORT::"Export Consolidation",ColumnDim);
                               END;
                                }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Parent Currency Code;
                             ESM=C¢d. divisa ppal.;
                             FRC=Code devise parent;
                             ENC=Parent Currency Code];
                  ToolTipML=[ENU=Specifies the currency code of the company that will perform the consolidation.;
                             ESM=Especifica el c¢digo de divisa de la empresa que va a realizar la consolidaci¢n.;
                             FRC=Spcifie le code devise de la compagnie qui procdera  la consolidation.;
                             ENC=Specifies the currency code of the company that will perform the consolidation.];
                  ApplicationArea=#Suite;
                  SourceExpr=ParentCurrencyCode;
                  TableRelation=Currency }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ProductVersion@1036 : TextConst 'ENU=4.00;ESM=4.00;FRC=4.00;ENC=4.00';
      FormatVersion@1037 : TextConst 'ENU=1.00;ESM=1.00;FRC=1.00;ENC=1.00';
      Text000@1000 : TextConst 'ENU=Enter the file name.;ESM=Introduzca el nombre del archivo.;FRC=Entrez le nom du fichier.;ENC=Enter the file name.';
      Text001@1001 : TextConst 'ENU=Enter the starting date for the consolidation period.;ESM=Introduzca la fecha inicial del periodo de consolidaci¢n.;FRC=Veuillez entrer la date dbut de la priode de consolidation.;ENC=Enter the starting date for the consolidation period.';
      Text002@1002 : TextConst 'ENU=Enter the ending date for the consolidation period.;ESM=Introduzca la fecha final del periodo de consolidaci¢n.;FRC=Veuillez entrer la date de fin de la priode de consolidation.;ENC=Enter the ending date for the consolidation period.';
      Text003@1003 : TextConst 'ENU=The export can include a maximum of 500 days.;ESM=No se pueden exportar m s de 500 d¡as.;FRC=L''exportation peut inclure un maximum de 500 jours.;ENC=The export can include a maximum of 500 days.';
      Text004@1004 : TextConst 'ENU=Processing the chart of accounts...\\;ESM=Procesando el cat logo de cuentas......\\;FRC=Traitement du plan comptable...\\;ENC=Processing the chart of accounts...\\';
      Text005@1005 : TextConst 'ENU=No.             #1##########\;ESM=N£mero          #1##########\;FRC=Nø              #1##########\;ENC=No.             #1##########\';
      Text006@1006 : TextConst 'ENU=Date            #2######;ESM=Fecha           #2######;FRC=Date            #2######;ENC=Date            #2######';
      Text007@1007 : TextConst 'ENU=Copy Dimensions;ESM=Copiar dimensiones;FRC=Copier dimensions;ENC=Copy Dimensions';
      Text008@1008 : TextConst 'ENU=Export to Text File;ESM=Exp. a fichero texto;FRC=Exporter en fichier texte;ENC=Export to Text File';
      Text009@1009 : TextConst 'ENU="A G/L Entry with posting date on a closing date (%1) was found while exporting nonclosing entries. G/L Account No. = %2.";ESM="Se encontr¢ un movimiento de contabilidad cuya fecha de registro es una fecha de cierre (%1) al exportar movimientos no cerrados. N§ cuenta = %2.";FRC="Une criture avec une date de report sur une date de fermeture (%1) a t trouve lors de l''exportation des critures hors fermeture. Nø compte du grand livre = %2.";ENC="A G/L Entry with posting date on a closing date (%1) was found while exporting nonclosing entries. G/L Account No. = %2."';
      Text010@1010 : TextConst 'ENU=When using closing dates, the starting and ending dates must be the same.;ESM=Usando fech. cerradas, el principio y final de las fech. debe ser el mismo.;FRC=Lorsque vous utilisez des dates de fermeture, la date de dbut et la date de fin doivent tre identiques.;ENC=When using closing dates, the starting and ending dates must be the same.';
      TempGLEntry@1011 : TEMPORARY Record 17;
      DimSetEntry@1012 : Record 480;
      Dim@1013 : Record 348;
      DimVal@1014 : Record 349;
      TempDim@1015 : TEMPORARY Record 348;
      TempDimVal@1016 : TEMPORARY Record 349;
      SelectedDim@1017 : Record 369;
      TempSelectedDim@1018 : TEMPORARY Record 369;
      TempDimBufIn@1019 : TEMPORARY Record 360;
      TempDimBufOut@1020 : TEMPORARY Record 360;
      DimSelectionBuf@1021 : Record 368;
      GLSetup@1038 : Record 98;
      DimBufMgt@1022 : Codeunit 411;
      Consolidate@1035 : Codeunit 432;
      FileManagement@1039 : Codeunit 419;
      Window@1023 : Dialog;
      GLEntryFile@1024 : File;
      ServerFileName@1025 : Text;
      FileFormat@1031 : 'Version 4.00 or Later (.xml),Version 3.70 or Earlier (.txt)';
      ConsolidStartDate@1026 : Date;
      ConsolidEndDate@1027 : Date;
      TransferPerDay@1028 : Boolean;
      TransferPerDayReq@1029 : Boolean;
      ColumnDim@1030 : Text[250];
      ParentCurrencyCode@1032 : Code[10];
      Text011@1033 : TextConst 'ENU=Export to XML File;ESM=Exportar a archivo XML;FRC=Exporter vers fichier XML;ENC=Export to XML File';
      ClientFileName@1040 : Text;
      EnterFileNameErr@1034 : TextConst 'ENU=Enter a file name.;ESM=Introduzca un nombre de archivo.;FRC=Entrez un nom de fichier.;ENC=Enter a file name.';

    LOCAL PROCEDURE WriteFile@1(VAR GLEntry2@1000 : Record 17;VAR DimBuf@1001 : Record 360);
    VAR
      GLEntryNo@1002 : Integer;
    BEGIN
      IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
        GLEntryNo := Consolidate.InsertGLEntry(GLEntry2)
      ELSE
        GLEntryFile.WRITE(
          STRSUBSTNO(
            '<02>#1################## #2####### #3####################',
            GLEntry2."G/L Account No.",
            GLEntry2."Posting Date",
            GLEntry2.Amount));

      IF DimBuf.FIND('-') THEN BEGIN
        REPEAT
          IF FileFormat = FileFormat::"Version 4.00 or Later (.xml)" THEN
            Consolidate.InsertEntryDim(DimBuf,GLEntryNo)
          ELSE
            GLEntryFile.WRITE(
              STRSUBSTNO(
                '<03>#1################## #2##################',
                DimBuf."Dimension Code",
                DimBuf."Dimension Value Code"));
        UNTIL DimBuf.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE UpdateTempGLEntry@6(VAR TempDimBuf@1002 : TEMPORARY Record 360);
    VAR
      DimEntryNo@1000 : Integer;
    BEGIN
      DimEntryNo := DimBufMgt.FindDimensions(TempDimBuf);
      IF (NOT TempDimBuf.ISEMPTY) AND (DimEntryNo = 0) THEN BEGIN
        TempGLEntry := "G/L Entry";
        TempGLEntry."Entry No." := DimBufMgt.InsertDimensions(TempDimBuf);
        TempGLEntry.INSERT;
      END ELSE
        IF TempGLEntry.GET(DimEntryNo) THEN BEGIN
          TempGLEntry.Amount := TempGLEntry.Amount + "G/L Entry".Amount;
          TempGLEntry."Debit Amount" := TempGLEntry."Debit Amount" + "G/L Entry"."Debit Amount";
          TempGLEntry."Credit Amount" := TempGLEntry."Credit Amount" + "G/L Entry"."Credit Amount";
          TempGLEntry."Additional-Currency Amount" :=
            TempGLEntry."Additional-Currency Amount" + "G/L Entry"."Additional-Currency Amount";
          TempGLEntry."Add.-Currency Debit Amount" :=
            TempGLEntry."Add.-Currency Debit Amount" + "G/L Entry"."Add.-Currency Debit Amount";
          TempGLEntry."Add.-Currency Credit Amount" :=
            TempGLEntry."Add.-Currency Credit Amount" + "G/L Entry"."Add.-Currency Credit Amount";
          TempGLEntry.MODIFY;
        END ELSE BEGIN
          TempGLEntry := "G/L Entry";
          TempGLEntry."Entry No." := DimEntryNo;
          TempGLEntry.INSERT;
        END;
    END;

    LOCAL PROCEDURE UpdateExportedInfo@2(VAR GLEntry3@1000 : Record 17);
    BEGIN
      WITH GLEntry3 DO BEGIN
        IF Amount < 0 THEN BEGIN
          "G/L Account".TESTFIELD("Consol. Credit Acc.");
          "G/L Account No." := "G/L Account"."Consol. Credit Acc.";
        END ELSE BEGIN
          "G/L Account".TESTFIELD("Consol. Debit Acc.");
          "G/L Account No." := "G/L Account"."Consol. Debit Acc.";
        END;
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE CheckClosingPostings@5(GLAccNo@1000 : Code[20];StartDate@1001 : Date;EndDate@1002 : Date);
    VAR
      GLEntry@1003 : Record 17;
      AccountingPeriod@1004 : Record 50;
    BEGIN
      AccountingPeriod.SETCURRENTKEY("New Fiscal Year","Date Locked");
      AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
      AccountingPeriod.SETRANGE("Date Locked",TRUE);
      AccountingPeriod.SETRANGE("Starting Date",StartDate + 1,EndDate);
      IF AccountingPeriod.FIND('-') THEN BEGIN
        GLEntry.SETRANGE("G/L Account No.",GLAccNo);
        REPEAT
          GLEntry.SETRANGE("Posting Date",CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
          IF NOT GLEntry.ISEMPTY THEN
            ERROR(
              Text009,
              GLEntry.GETFILTER("Posting Date"),
              GLAccNo);
        UNTIL AccountingPeriod.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CheckClosingDates@20(StartDate@1000 : Date;EndDate@1001 : Date;VAR TransferPerDay@1002 : Boolean);
    BEGIN
      IF (StartDate = CLOSINGDATE(StartDate)) OR
         (EndDate = CLOSINGDATE(EndDate))
      THEN BEGIN
        IF StartDate <> EndDate THEN
          ERROR(Text010);
        TransferPerDay := FALSE;
      END ELSE
        TransferPerDay := TransferPerDayReq;
    END;

    [External]
    PROCEDURE InitializeRequest@3(NewFileFormat@1000 : Option;NewFileName@1001 : Text);
    BEGIN
      FileFormat := NewFileFormat;
      ClientFileName := NewFileName;
    END;

    LOCAL PROCEDURE IsWebClient@4() : Boolean;
    BEGIN
      EXIT(FileManagement.IsWebClient);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

