OBJECT Page 5337 CRM Coupled Fields
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:59 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Dynamics 365 for Sales Coupled Fields;
    SourceTable=Table5333;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    ShowFilter=No;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the field's name in Dynamics 365 for Sales.;
                ApplicationArea=#Suite;
                SourceExpr="Field Name" }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the field's name in Dynamics 365 for Sales.;
                ApplicationArea=#Suite;
                SourceExpr=Value }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the field's value in Dynamics 365 for Sales.;
                ApplicationArea=#Suite;
                SourceExpr="Integration Value" }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the direction of data integration.;
                ApplicationArea=#Suite;
                SourceExpr=Direction }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether to validate the field's value in Business Central.;
                ApplicationArea=#Suite;
                SourceExpr="Validate Field" }

  }
  CODE
  {

    PROCEDURE SetSourceRecord@1(CouplingRecordBuffer@1000 : Record 5332);
    VAR
      IntegrationFieldMapping@1004 : Record 5336;
      CRMRecordRef@1001 : RecordRef;
      NAVRecordRef@1003 : RecordRef;
      RecordID@1002 : RecordID;
      CRMRecordIsSet@1005 : Boolean;
    BEGIN
      RecordID := CouplingRecordBuffer."NAV Record ID";
      NAVRecordRef := RecordID.GETRECORD;
      NAVRecordRef.FIND;

      CRMRecordIsSet := NOT ISNULLGUID(CouplingRecordBuffer."CRM ID");
      IF CRMRecordIsSet THEN BEGIN
        CRMRecordRef.OPEN(CouplingRecordBuffer."CRM Table ID");
        FindCRMRecRefByPK(CRMRecordRef,CouplingRecordBuffer."CRM ID");
      END;

      DELETEALL;
      IntegrationFieldMapping.RESET;
      IntegrationFieldMapping.SETRANGE("Integration Table Mapping Name",CouplingRecordBuffer."CRM Table Name");
      IF IntegrationFieldMapping.FINDSET THEN
        REPEAT
          INIT;
          CASE IntegrationFieldMapping.Direction OF
            IntegrationFieldMapping.Direction::Bidirectional,
            IntegrationFieldMapping.Direction::ToIntegrationTable:
              "Field Name" :=
                GetFieldCaption(CouplingRecordBuffer."CRM Table ID",IntegrationFieldMapping."Integration Table Field No.");
            IntegrationFieldMapping.Direction::FromIntegrationTable:
              "Field Name" :=
                GetFieldCaption(CouplingRecordBuffer."NAV Table ID",IntegrationFieldMapping."Field No.");
          END;
          IF IntegrationFieldMapping."Field No." <> 0 THEN
            Value := GetFieldValue(NAVRecordRef,IntegrationFieldMapping."Field No.");
          IF CRMRecordIsSet AND (IntegrationFieldMapping."Integration Table Field No." <> 0) THEN
            "Integration Value" := GetFieldValue(CRMRecordRef,IntegrationFieldMapping."Integration Table Field No.");
          Direction := IntegrationFieldMapping.Direction;
          "Validate Field" := IntegrationFieldMapping."Validate Field";
          INSERT;
        UNTIL IntegrationFieldMapping.NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@2(TableNo@1000 : Integer;FieldNo@1001 : Integer) FieldCaption : Text[50];
    VAR
      FieldRef@1002 : FieldRef;
      RecRef@1003 : RecordRef;
    BEGIN
      RecRef.OPEN(TableNo);
      FieldRef := RecRef.FIELD(FieldNo);
      FieldCaption := COPYSTR(FieldRef.CAPTION,1,MAXSTRLEN(FieldCaption));
      RecRef.CLOSE;
    END;

    LOCAL PROCEDURE GetFieldValue@3(RecordRef@1000 : RecordRef;FieldNo@1001 : Integer) : Text[250];
    VAR
      FieldRef@1002 : FieldRef;
    BEGIN
      FieldRef := RecordRef.FIELD(FieldNo);
      EXIT(COPYSTR(FORMAT(FieldRef.VALUE),1,250));
    END;

    LOCAL PROCEDURE FindCRMRecRefByPK@5(VAR RecordRef@1000 : RecordRef;CRMId@1001 : GUID) : Boolean;
    VAR
      FieldRef@1002 : FieldRef;
      PrimaryKeyRef@1003 : KeyRef;
    BEGIN
      PrimaryKeyRef := RecordRef.KEYINDEX(1);
      FieldRef := PrimaryKeyRef.FIELDINDEX(1);
      FieldRef.SETRANGE(CRMId);
      EXIT(RecordRef.FINDFIRST);
    END;

    BEGIN
    END.
  }
}

