OBJECT Page 1815 Pmt. App. Workflow Setup Wzrd.
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:43 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Approval Workflow Setup;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table1804;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnInit=BEGIN
             IF NOT GET THEN BEGIN
               INIT;
               INSERT;
             END;
             LoadTopBanners;
             CurrentBatchIsLabel := STRSUBSTNO(CurrentBatchTxt,"Journal Batch Name");
           END;

    OnOpenPage=BEGIN
                 ShowIntroStep;
                 IF "For All Batches" THEN
                   BatchSelection := BatchSelection::"All Batches"
                 ELSE
                   BatchSelection := BatchSelection::"Current Batch Only";

                 ShowCurrentBatch := NOT "For All Batches";
               END;

    OnQueryClosePage=VAR
                       AssistedSetup@1001 : Record 1803;
                     BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.GetStatus(PAGE::"Pmt. App. Workflow Setup Wzrd.") = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 8       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=PreviousPage;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Suite;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=NextPage;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Suite;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Suite;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1000 : Record 1803;
                                 ApprovalWorkflowSetupMgt@1001 : Codeunit 1804;
                               BEGIN
                                 ApprovalWorkflowSetupMgt.ApplyPaymantJrnlWizardUserInput(Rec);
                                 AssistedSetup.SetStatus(PAGE::"Pmt. App. Workflow Setup Wzrd.",AssistedSetup.Status::Completed);

                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 11  ;1   ;Group     ;
                Name=Step1;
                CaptionML=ENU="";
                Visible=IntroVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                Name=Para1.1;
                CaptionML=ENU=Welcome to Payment Journal Line Approval Workflow Setup;
                GroupType=Group }

    { 19  ;3   ;Group     ;
                Name=Para1.1.1;
                CaptionML=ENU="";
                GroupType=Group;
                InstructionalTextML=ENU=You can create approval workflow that notifies an approver when a user sends payment journal lines for approval. }

    { 21  ;2   ;Group     ;
                Name=Para1.2;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to specify the approver and other basic settings. }

    { 67  ;1   ;Group     ;
                Name=Step2;
                CaptionML=ENU="";
                Visible=ApproverSelectionVisible;
                GroupType=Group }

    { 5   ;2   ;Group     ;
                Name=Para2.1;
                CaptionML=ENU=" ";
                GroupType=Group;
                InstructionalTextML=ENU=Choose who is authorized to approve or reject the payment journal lines. }

    { 2   ;3   ;Field     ;
                CaptionML=ENU=Approver;
                ApplicationArea=#Suite;
                SourceExpr="Approver ID";
                LookupPageID=Approval User Setup;
                OnValidate=BEGIN
                             CanEnableNext;
                           END;
                            }

    { 16  ;2   ;Group     ;
                Name=Para2.2;
                CaptionML=ENU=" ";
                GroupType=Group;
                InstructionalTextML=ENU=Choose if the approval workflow applies to all journal batches or to the current journal batch only. }

    { 12  ;3   ;Field     ;
                CaptionML=ENU=Approval workflow applies to;
                ApplicationArea=#Suite;
                SourceExpr=BatchSelection;
                OnValidate=BEGIN
                             "For All Batches" := BatchSelection = BatchSelection::"All Batches";
                             ShowCurrentBatch := NOT "For All Batches";
                           END;
                            }

    { 3   ;3   ;Group     ;
                Visible=ShowCurrentBatch;
                GroupType=Group }

    { 4   ;4   ;Field     ;
                DrillDown=Yes;
                ApplicationArea=#Suite;
                SourceExpr=CurrentBatchIsLabel;
                Editable=FALSE;
                Style=StandardAccent;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              CurrPage.UPDATE;
                            END;

                ShowCaption=No }

    { 10  ;1   ;Group     ;
                Name=Step10;
                CaptionML=ENU="";
                Visible=DoneVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                Name=Para10.1;
                CaptionML=ENU=Payment Journal Approval Workflow Overview;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                Name=Overview;
                ApplicationArea=#Suite;
                SourceExpr=SummaryText;
                Editable=FALSE;
                MultiLine=Yes;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 6   ;2   ;Group     ;
                Name=Para10.2;
                CaptionML=ENU=That's it!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to enable the workflow with the specified settings. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1020 : Record 2000000182;
      MediaResourcesDone@1019 : Record 2000000182;
      ClientTypeManagement@1021 : Codeunit 4;
      Step@1015 : 'Intro,Approver Selection,Done';
      BatchSelection@1008 : 'Current Batch Only,All Batches';
      BackEnabled@1014 : Boolean;
      NextEnabled@1013 : Boolean;
      FinishEnabled@1010 : Boolean;
      TopBannerVisible@1042 : Boolean;
      IntroVisible@1001 : Boolean;
      ApproverSelectionVisible@1000 : Boolean;
      BatchSelectionVisible@1003 : Boolean;
      DoneVisible@1004 : Boolean;
      NAVNotSetUpQst@1007 : TextConst 'ENU=Payment Journal Approval has not been set up.\\Are you sure that you want to exit?';
      MandatoryApproverErr@1002 : TextConst '@@@="%1 = User Name";ENU=You must select an approver before continuing.';
      MandatoryBatchErr@1006 : TextConst '@@@="%1 = User Name";ENU=You must select a batch before continuing.';
      CurrentBatchTxt@1009 : TextConst '@@@="%1 = Batch name. Example - Current Batch is BANK.";ENU=Current Batch is %1.';
      ShowCurrentBatch@1005 : Boolean;
      CurrentBatchIsLabel@1011 : Text;
      SummaryText@1012 : Text;
      OverviewTemplateTxt@1016 : TextConst '@@@="%1 = User Name, %2 = batch name or all batches. Example - An approval request will be sent to the user NAVUSER when the approval request is snt to all batches. ";ENU=An approval request will be sent to the user %1 for approving journal lines in %2.';
      AllBatchesTxt@1017 : TextConst 'ENU=all batches';
      BatchNameTxt@1018 : TextConst '@@@="%1 = Batch name";ENU=batch %1';

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE BEGIN
        IF ApproverSelectionVisible THEN
          ValidateApprover;
        IF BatchSelectionVisible THEN
          ValidateBatchSelection;
        Step := Step + 1;
      END;

      CASE Step OF
        Step::Intro:
          ShowIntroStep;
        Step::"Approver Selection":
          ShowApprovalUserSelectionStep;
        Step::Done:
          ShowDoneStep;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ShowIntroStep@1();
    BEGIN
      ResetWizardControls;
      IntroVisible := TRUE;
      BackEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowApprovalUserSelectionStep@9();
    BEGIN
      ResetWizardControls;
      ApproverSelectionVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowDoneStep@6();
    BEGIN
      ResetWizardControls;
      DoneVisible := TRUE;
      NextEnabled := FALSE;
      FinishEnabled := TRUE;

      IF "For All Batches" THEN
        SummaryText := STRSUBSTNO(OverviewTemplateTxt,"Approver ID",AllBatchesTxt)
      ELSE
        SummaryText := STRSUBSTNO(OverviewTemplateTxt,"Approver ID",STRSUBSTNO(BatchNameTxt,"Journal Batch Name"));

      SummaryText := CONVERTSTR(SummaryText,'\','/');
    END;

    LOCAL PROCEDURE ResetWizardControls@10();
    BEGIN
      // Buttons
      BackEnabled := TRUE;
      NextEnabled := TRUE;
      FinishEnabled := FALSE;

      // Tabs
      IntroVisible := FALSE;
      ApproverSelectionVisible := FALSE;
      BatchSelectionVisible := FALSE;
      DoneVisible := FALSE;
    END;

    LOCAL PROCEDURE ValidateApprover@11();
    BEGIN
      IF "Approver ID" = '' THEN
        ERROR(MandatoryApproverErr);
    END;

    LOCAL PROCEDURE ValidateBatchSelection@7();
    BEGIN
      IF NOT "For All Batches" THEN
        IF "Journal Batch Name" = '' THEN
          ERROR(MandatoryBatchErr);
    END;

    LOCAL PROCEDURE CanEnableNext@32();
    BEGIN
      NextEnabled := TRUE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    BEGIN
    END.
  }
}

