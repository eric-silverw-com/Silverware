OBJECT Page 9803 Permissions
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Permissions;
               ESM=Permisos;
               FRC=Autorisations;
               ENC=Permissions];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2000000005;
    PopulateAllFields=Yes;
    DataCaptionFields=Object Type,Object Name;
    PageType=List;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Read,Insert,Modify,Delete,Execute;
                                ESM=Nuevo,Procesar,Informe,Leer,Insertar,Modificar,Eliminar,Ejecutar;
                                FRC=Nouveau,Traitement,Rapport,Lire,Ins‚rer,Modifier,Supprimer,Ex‚cuter;
                                ENC=New,Process,Report,Read,Insert,Modify,Delete,Execute];
    ShowFilter=No;
    OnOpenPage=VAR
                 PermissionSet@1000 : Record 2000000004;
               BEGIN
                 IF CurrentRoleID = '' THEN
                   IF GETFILTER("Role ID") <> '' THEN
                     CurrentRoleID := GETRANGEMIN("Role ID")
                   ELSE
                     IF PermissionSet.FINDFIRST THEN
                       CurrentRoleID := PermissionSet."Role ID";
                 RESET;
                 FillTempPermissions;
               END;

    OnAfterGetRecord=BEGIN
                       SetObjectZeroName(Rec);
                       ZeroObjStyleExpr := "Object ID" = 0;
                       IsValidatedObjectID := FALSE;
                       IsNewRecord := FALSE;
                     END;

    OnNewRecord=BEGIN
                  ActivateControls;
                  PermissionRecExists := FALSE;
                  IsNewRecord := TRUE;
                  IsValidatedObjectID := FALSE;
                END;

    OnInsertRecord=VAR
                     Permission@1000 : Record 2000000005;
                   BEGIN
                     IF ("Object ID" = 0) AND ((Show = Show::All) OR IsValidatedObjectID) THEN
                       EXIT(FALSE);
                     IF ("Execute Permission" = "Execute Permission"::" ") AND
                        ("Read Permission" = "Read Permission"::" ") AND
                        ("Insert Permission" = "Insert Permission"::" ") AND
                        ("Modify Permission" = "Modify Permission"::" ") AND
                        ("Delete Permission" = "Delete Permission"::" ")
                     THEN
                       EXIT(FALSE);

                     IF "Object Type" = "Object Type"::"Table Data" THEN
                       "Execute Permission" := "Execute Permission"::" "
                     ELSE BEGIN
                       "Read Permission" := "Read Permission"::" ";
                       "Insert Permission" := "Insert Permission"::" ";
                       "Modify Permission" := "Modify Permission"::" ";
                       "Delete Permission" := "Delete Permission"::" ";
                     END;
                     Permission := Rec;
                     Permission.INSERT;
                     Rec := Permission;
                     SetObjectZeroName(Rec);
                     PermissionRecExists := TRUE;
                     IsNewRecord := FALSE;
                     ZeroObjStyleExpr := "Object ID" = 0;
                     EXIT(TRUE);
                   END;

    OnModifyRecord=BEGIN
                     ModifyRecord(Rec);
                     PermissionRecExists := TRUE;
                     IsNewRecord := FALSE;
                     EXIT(MODIFY);
                   END;

    OnDeleteRecord=VAR
                     Permission@1000 : Record 2000000005;
                   BEGIN
                     IF (Show = Show::All) AND ("Object ID" <> 0) THEN
                       EXIT(FALSE);
                     Permission := Rec;
                     Permission.FIND;
                     EXIT(Permission.DELETE);
                   END;

    OnAfterGetCurrRecord=VAR
                           Permission@1000 : Record 2000000005;
                         BEGIN
                           ActivateControls;
                           SetObjectZeroName(Rec);
                           IF NOT IsNewRecord THEN BEGIN
                             Permission := Rec;
                             PermissionRecExists := Permission.FIND;
                           END ELSE
                             PermissionRecExists := FALSE;
                           AllowChangePrimaryKey := NOT PermissionRecExists AND (Show = Show::"Only In Permission Set");
                           ZeroObjStyleExpr := PermissionRecExists AND ("Object ID" = 0);
                         END;

    ActionList=ACTIONS
    {
      { 12      ;    ;ActionContainer;
                      CaptionML=[ENU=Set Permission;
                                 ESM=Establecer permiso;
                                 FRC=D‚finir l'autorisation;
                                 ENC=Set Permission];
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 38  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General];
                GroupType=Group }

    { 42  ;2   ;Group     ;
                GroupType=Group }

    { 39  ;3   ;Field     ;
                Name=CurrentRoleID;
                CaptionML=[ENU=Permission Set;
                           ESM=Conjunto de permisos;
                           FRC=Ensemble d'autorisations;
                           ENC=Permission Set];
                ToolTipML=[ENU=Specifies the permission set that the permission belongs to.;
                           ESM=Especifica el conjunto de permisos al que pertenece el permiso.;
                           FRC=Sp‚cifie l'ensemble d'autorisations auquel l'autorisation appartient.;
                           ENC=Specifies the permission set that the permission belongs to.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentRoleID;
                Importance=Promoted;
                Editable=FALSE;
                OnValidate=BEGIN
                             FillTempPermissions;
                           END;
                            }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=AllPermission;
                           ESM=Todos los permisos;
                           FRC=ToutesLesAutorisations;
                           ENC=AllPermission];
                GroupType=Repeater }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of object that the permissions apply to in the current database.;
                           ESM=Especifica el tipo de objeto que aplican los permisos en la base de datos actual.;
                           FRC=Sp‚cifie le type d'objet auquel les autorisations s'appliquent dans la base de donn‚es active.;
                           ENC=Specifies the type of object that the permissions apply to in the current database.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object Type";
                Enabled=AllowChangePrimaryKey;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr;
                OnValidate=BEGIN
                             ActivateControls;
                             SetObjectZeroName(Rec);
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the object to which the permissions apply.;
                           ESM=Especifica el id. del objeto al que se aplican los permisos.;
                           FRC=Sp‚cifie le code de l'objet auquel les autorisations s'appliquent.;
                           ENC=Specifies the ID of the object to which the permissions apply.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Object ID";
                Enabled=AllowChangePrimaryKey;
                LookupPageID=All Objects with Caption;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr;
                OnValidate=BEGIN
                             IsValidatedObjectID := FALSE;
                             ActivateControls;
                             SetObjectZeroName(Rec);
                           END;
                            }

    { 9   ;2   ;Field     ;
                Name=ObjectName;
                CaptionML=[ENU=Object Name;
                           ESM=Nombre de objeto;
                           FRC=Nom de l'objet;
                           ENC=Object Name];
                ToolTipML=[ENU=Specifies the name of the object to which the permissions apply.;
                           ESM=Especifica el nombre del objeto al que se aplican los permisos.;
                           FRC=Sp‚cifie le nom de l'objet auquel les autorisations s'appliquent.;
                           ENC=Specifies the name of the object to which the permissions apply.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ObjectName;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has read permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have read permission.;
                           ESM=Especifica la informaci¢n sobre si el conjunto de permisos tiene permiso de lectura para este objeto. El valor del campo puede ser S¡, Indirecto o puede estar en blanco. Indirecto significa que se otorga permiso solo a trav‚s de otro objeto. Si el campo est  vac¡o, el conjunto de permisos no tiene permiso de lectura.;
                           FRC="Indique si l'ensemble d'autorisations est en mode Lecture pour cet objet. Le champ peut ˆtre videÿ; il peut ‚galement comporter une valeur de type Oui et Indirecte. Indirecte d‚signe une autorisation uniquement par le biais d'un autre objet. Si le champ est vide, cela signifie que l'ensemble des autorisations n'inclut pas l'accŠs en mode Lecture.";
                           ENC=Specifies information about whether the permission set has read permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have read permission.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Read Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has insert permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have insert permission.;
                           ESM=Especifica la informaci¢n sobre si el conjunto de permisos tiene permiso de inserci¢n para este objeto. El valor del campo puede ser S¡, Indirecto o puede estar en blanco. Indirecto significa que se otorga permiso solo a trav‚s de otro objeto. Si el campo est  vac¡o, el conjunto de permisos no tiene permiso de inserci¢n.;
                           FRC="Sp‚cifie si l'ensemble d'autorisations est en mode Insertion pour cet objet. Le champ peut ˆtre videÿ; il peut ‚galement comporter une valeur de type Oui et Indirecte. Indirecte d‚signe une autorisation uniquement par le biais d'un autre objet. Si le champ est vide, cela signifie que l'ensemble des autorisations n'inclut pas l'accŠs en mode Insertion.";
                           ENC=Specifies information about whether the permission set has insert permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have insert permission.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Insert Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has modify permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have modify permission.;
                           ESM=Especifica la informaci¢n sobre si el conjunto de permisos tiene permiso de modificaci¢n para este objeto. El valor del campo puede ser S¡, Indirecto o puede estar en blanco. Indirecto significa que se otorga permiso solo a trav‚s de otro objeto. Si el campo est  vac¡o, el conjunto de permisos no tiene permiso de modificaci¢n.;
                           FRC="Sp‚cifie si l'ensemble d'autorisations est en mode Modification pour cet objet. Le champ peut ˆtre videÿ; il peut ‚galement comporter une valeur de type Oui et Indirecte. Indirecte d‚signe une autorisation uniquement par le biais d'un autre objet. Si le champ est vide, cela signifie que l'ensemble des autorisations n'inclut pas l'accŠs en mode Modification.";
                           ENC=Specifies information about whether the permission set has modify permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have modify permission.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Modify Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has delete permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have delete permission.;
                           ESM=Especifica la informaci¢n sobre si el conjunto de permisos tiene permiso de eliminaci¢n para este objeto. El valor del campo puede ser S¡, Indirecto o puede estar en blanco. Indirecto significa que se otorga permiso solo a trav‚s de otro objeto. Si el campo est  vac¡o, el conjunto de permisos no tiene permiso de eliminaci¢n.;
                           FRC="Sp‚cifie si l'ensemble d'autorisations est en mode Suppression pour cet objet. Le champ peut ˆtre videÿ; il peut ‚galement comporter une valeur de type Oui et Indirecte. Indirecte d‚signe une autorisation uniquement par le biais d'un autre objet. Si le champ est vide, cela signifie que l'ensemble des autorisations n'inclut pas l'accŠs en mode Suppression.";
                           ENC=Specifies information about whether the permission set has delete permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have delete permission.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Delete Permission";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about whether the permission set has execute permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have execute permission.;
                           ESM=Especifica la informaci¢n sobre si el conjunto de permisos tiene permiso de ejecuci¢n para este objeto. El valor del campo puede ser S¡, Indirecto o puede estar en blanco. Indirecto significa que se otorga permiso solo a trav‚s de otro objeto. Si el campo est  vac¡o, el conjunto de permisos no tiene permiso de ejecuci¢n.;
                           FRC="Sp‚cifie si le jeu d'autorisations est en mode Ex‚cution pour cet objet. Le champ peut ˆtre videÿ; il peut ‚galement comporter une valeur de type Oui et Indirecte. Indirecte d‚signe une autorisation uniquement par le biais d'un autre objet. Si le champ est vide, cela signifie que l'ensemble des autorisations n'inclut pas l'accŠs en mode Ex‚cution.";
                           ENC=Specifies information about whether the permission set has execute permission to this object. The values for the field are blank, Yes, and Indirect. Indirect means permission only through another object. If the field is empty, the permission set does not have execute permission.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Execute Permission";
                Enabled=NOT IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the security filter that is being applied to this permission set to limit the access that this permission set has to the data contained in this table.;
                           ESM=Especifica el filtro de seguridad que se est  aplicando a este conjunto de permisos para limitar el acceso que este tiene a los datos incluidos en esta tabla.;
                           FRC=Sp‚cifie le filtre de s‚curit‚ appliqu‚ … cet ensemble d'autorisations pour limiter l'accŠs dudit ensemble aux donn‚es stock‚es dans cette table.;
                           ENC=Specifies the security filter that is being applied to this permission set to limit the access that this permission set has to the data contained in this table.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Security Filter";
                Enabled=IsTableData;
                Style=Strong;
                StyleExpr=ZeroObjStyleExpr;
                OnAssistEdit=VAR
                               PermissionPagesMgt@1000 : Codeunit 9001;
                               OutputSecurityFilter@1001 : Text;
                             BEGIN
                               IF PermissionPagesMgt.ShowSecurityFilterForPermission(OutputSecurityFilter,Rec) THEN
                                 EVALUATE("Security Filter",OutputSecurityFilter);
                             END;
                              }

  }
  CODE
  {
    VAR
      CurrentRoleID@1000 : Code[20];
      Show@1002 : 'Only In Permission Set,All';
      IsTableData@1001 : Boolean INDATASET;
      IsNewRecord@1010 : Boolean;
      IsValidatedObjectID@1012 : Boolean;
      PermissionRecExists@1008 : Boolean;
      AllowChangePrimaryKey@1004 : Boolean;
      AllObjTxt@1009 : TextConst '@@@="%1= type name, e.g. Table Data or Report or Page";ENU=All objects of type %1;ESM=Todos los objetos del tipo %1;FRC=Tous les objets de type %1;ENC=All objects of type %1';
      ZeroObjStyleExpr@1011 : Boolean;
      ObjectName@1005 : Text;

    LOCAL PROCEDURE FillTempPermissions@1003();
    VAR
      TempPermission@1000 : TEMPORARY Record 2000000005;
      Permission@1002 : Record 2000000005;
    BEGIN
      TempPermission.COPY(Rec,TRUE);
      TempPermission.RESET;
      TempPermission.DELETEALL;
      FILTERGROUP(2);
      SETRANGE("Role ID",CurrentRoleID);
      Permission.SETRANGE("Role ID",CurrentRoleID);
      FILTERGROUP(0);

      IF Permission.FIND('-') THEN
        REPEAT
          TempPermission := Permission;
          TempPermission.INSERT;
        UNTIL Permission.NEXT = 0;

      IF Show = Show::All THEN
        FillTempPermissionsForAllObjects(TempPermission);
      IsNewRecord := FALSE;
      IF FIND('=<>') THEN;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE FillTempPermissionsForAllObjects@5(VAR Permission@1005 : Record 2000000005);
    VAR
      TempPermission@1007 : TEMPORARY Record 2000000005;
      AllObj@1006 : Record 2000000038;
    BEGIN
      AllObj.SETRANGE("Object Type");
      TempPermission.COPY(Permission,TRUE);
      TempPermission.INIT;
      IF AllObj.FINDSET THEN
        REPEAT
          TempPermission."Object Type" := AllObj."Object Type";
          TempPermission."Object ID" := AllObj."Object ID";
          TempPermission."Read Permission" := "Read Permission"::" ";
          TempPermission."Insert Permission" := "Insert Permission"::" ";
          TempPermission."Modify Permission" := "Modify Permission"::" ";
          TempPermission."Delete Permission" := "Delete Permission"::" ";
          TempPermission."Execute Permission" := "Execute Permission"::" ";
          SetObjectZeroName(TempPermission);
          IF TempPermission.INSERT THEN;
        UNTIL AllObj.NEXT = 0;
    END;

    LOCAL PROCEDURE ActivateControls@1();
    BEGIN
      IsTableData := "Object Type" = "Object Type"::"Table Data"
    END;

    LOCAL PROCEDURE ModifyRecord@59(VAR ModifiedPermission@1000 : Record 2000000005);
    VAR
      Permission@1001 : Record 2000000005;
      IsNewPermission@1003 : Boolean;
    BEGIN
      Permission.LOCKTABLE;
      IsNewPermission :=
        NOT Permission.GET(ModifiedPermission."Role ID",ModifiedPermission."Object Type",ModifiedPermission."Object ID");
      IF IsNewPermission THEN BEGIN
        Permission.TRANSFERFIELDS(ModifiedPermission,TRUE);
        Permission.INSERT;
      END ELSE BEGIN
        Permission.TRANSFERFIELDS(ModifiedPermission,FALSE);
        Permission.MODIFY;
      END;

      IF (Permission."Read Permission" = 0) AND
         (Permission."Insert Permission" = 0) AND
         (Permission."Modify Permission" = 0) AND
         (Permission."Delete Permission" = 0) AND
         (Permission."Execute Permission" = 0)
      THEN BEGIN
        Permission.DELETE;
        IF Show = Show::"Only In Permission Set" THEN
          ModifiedPermission.DELETE;
        IsNewPermission := FALSE;
      END;
    END;

    LOCAL PROCEDURE SetObjectZeroName@9(VAR Permission@1000 : Record 2000000005);
    BEGIN
      IF Permission."Object ID" <> 0 THEN BEGIN
        Permission.CALCFIELDS("Object Name");
        ObjectName := Permission."Object Name";
      END ELSE
        ObjectName := COPYSTR(STRSUBSTNO(AllObjTxt,Permission."Object Type"),1,MAXSTRLEN(Permission."Object Name"));
    END;

    BEGIN
    END.
  }
}

