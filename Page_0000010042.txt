OBJECT Page 10042 Sales Stats.
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVNA13.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Statistics;
               ESM=Estad¡sticas ventas;
               FRC=Statistiques de ventes;
               ENC=Sales Statistics];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table36;
    PageType=Document;
    OnOpenPage=BEGIN
                 SalesSetup.GET;
                 AllowInvDisc :=
                   NOT (SalesSetup."Calc. Inv. Discount" AND CustInvDiscRecExists("Invoice Disc. Code"));
                 AllowVATDifference :=
                   SalesSetup."Allow VAT Difference" AND
                   NOT ("Document Type" IN ["Document Type"::Quote,"Document Type"::"Blanket Order"]);
                 CurrPage.EDITABLE :=
                   AllowVATDifference OR AllowInvDisc;
                 TaxArea.GET("Tax Area Code");
                 SetVATSpecification;
               END;

    OnAfterGetRecord=VAR
                       SalesLine@1000 : Record 37;
                       TempSalesLine@1001 : TEMPORARY Record 37;
                       TempSalesTaxAmtLine@1020002 : TEMPORARY Record 10011;
                     BEGIN
                       CurrPage.CAPTION(STRSUBSTNO(Text000,"Document Type"));
                       IF PrevNo = "No." THEN
                         EXIT;
                       PrevNo := "No.";
                       FILTERGROUP(2);
                       SETRANGE("No.",PrevNo);
                       FILTERGROUP(0);
                       CLEAR(SalesLine);
                       CLEAR(TotalSalesLine);
                       CLEAR(TotalSalesLineLCY);
                       CLEAR(SalesPost);
                       CLEAR(TaxAmount);
                       SalesTaxCalculate.StartSalesTaxCalculation;
                       SalesLine.SETRANGE("Document Type","Document Type");
                       SalesLine.SETRANGE("Document No.","No.");
                       SalesLine.SETFILTER(Type,'>0');
                       SalesLine.SETFILTER(Quantity,'<>0');
                       IF SalesLine.FIND('-') THEN
                         REPEAT
                           TempSalesLine.COPY(SalesLine);
                           TempSalesLine.INSERT;
                           IF NOT TaxArea."Use External Tax Engine" THEN
                             SalesTaxCalculate.AddSalesLine(TempSalesLine);
                         UNTIL SalesLine.NEXT = 0;
                       TempSalesTaxLine.DELETEALL;

                       OnBeforeCalculateSalesTaxSalesStats(Rec,TempSalesTaxLine,TempSalesTaxAmtLine,SalesTaxCalculationOverridden);

                       IF NOT SalesTaxCalculationOverridden THEN BEGIN
                         IF TaxArea."Use External Tax Engine" THEN
                           SalesTaxCalculate.CallExternalTaxEngineForSales(Rec,TRUE)
                         ELSE
                           SalesTaxCalculate.EndSalesTaxCalculation("Posting Date");

                         SalesTaxCalculate.GetSalesTaxAmountLineTable(TempSalesTaxLine);
                         SalesTaxCalculate.DistTaxOverSalesLines(TempSalesLine);
                       END;

                       SalesPost.SumSalesLinesTemp(
                         Rec,TempSalesLine,0,TotalSalesLine,TotalSalesLineLCY,
                         TaxAmount,TaxAmountText,ProfitLCY,ProfitPct,TotalAdjCostLCY);

                       IF "Prices Including VAT" THEN BEGIN
                         TotalAmount2 := TotalSalesLine.Amount;
                         TotalAmount1 := TotalAmount2 + TaxAmount;
                         TotalSalesLine."Line Amount" := TotalAmount1 + TotalSalesLine."Inv. Discount Amount";
                       END ELSE BEGIN
                         TotalAmount1 := TotalSalesLine.Amount;
                         TotalAmount2 := TotalSalesLine."Amount Including VAT";
                       END;

                       IF NOT SalesTaxCalculationOverridden THEN
                         SalesTaxCalculate.GetSummarizedSalesTaxTable(TempSalesTaxAmtLine);
                       UpdateTaxBreakdown(TempSalesTaxAmtLine,TRUE);
                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);
                       IF Cust."Credit Limit (LCY)" = 0 THEN
                         CreditLimitLCYExpendedPct := 0
                       ELSE
                         IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0 THEN
                           CreditLimitLCYExpendedPct := 0
                         ELSE
                           IF Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1 THEN
                             CreditLimitLCYExpendedPct := 10000
                           ELSE
                             CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);

                       TempSalesTaxLine.MODIFYALL(Modified,FALSE);
                       SetVATSpecification;
                       OnActivateForm;
                     END;

    OnQueryClosePage=BEGIN
                       GetVATSpecification;
                       IF TempSalesTaxLine.GetAnyLineModified THEN
                         UpdateVATOnSalesLines;
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 129 ;2   ;Field     ;
                CaptionML=[ENU=Amount;
                           ESM=Importe;
                           FRC=Montant;
                           ENC=Amount];
                ToolTipML=[ENU=Specifies the net amount of all the lines on the sales document.;
                           ESM=Especifica el importe neto de todas las l¡neas del documento de venta.;
                           FRC=Sp‚cifie le montant net de toutes les lignes sur le document vente.;
                           ENC=Specifies the net amount of all the lines on the sales document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Line Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text002,FALSE);
                Editable=FALSE }

    { 93  ;2   ;Field     ;
                CaptionML=[ENU=Inv. Discount Amount;
                           ESM=Importe dto. factura;
                           FRC=Montant d'escompte sur facture;
                           ENC=Inv. Discount Amount];
                ToolTipML=[ENU=Specifies the invoice discount amount for the sales document.;
                           ESM=Especifica el importe de descuento en factura para el documento de venta.;
                           FRC=Sp‚cifie le montant d'escompte de la facture du document de vente.;
                           ENC=Specifies the invoice discount amount for the sales document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateInvDiscAmount;
                           END;
                            }

    { 80  ;2   ;Field     ;
                CaptionML=[ENU=Total;
                           ESM=Total;
                           FRC=Total;
                           ENC=Total];
                ToolTipML=[ENU=Specifies the total amount less any invoice discount amount (excluding tax) for the sales document.;
                           ESM=Especifica el importe total del documento de venta, menos cualquier importe de descuento en factura (sin impuestos).;
                           FRC=Sp‚cifie le montant total, hors taxe et sans escompte facture, du document vente.;
                           ENC=Specifies the total amount less any invoice discount amount (excluding tax) for the sales document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount1;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,FALSE);
                Editable=FALSE;
                OnValidate=BEGIN
                             UpdateTotalAmount;
                           END;
                            }

    { 75  ;2   ;Field     ;
                CaptionML=[ENU=Tax Amount;
                           ESM=Imp. impto.;
                           FRC=Montant de la taxe;
                           ENC=Tax Amount];
                ToolTipML=[ENU=Specifies the total tax amount that has been calculated for all the lines in the sales document.;
                           ESM=Especifica el importe total de impuestos que se ha calculado para todas las l¡neas del documento de venta.;
                           FRC=Sp‚cifie le montant total de la taxe qui a ‚t‚ calcul‚e pour toutes les lignes du document vente.;
                           ENC=Specifies the total tax amount that has been calculated for all the lines in the sales document.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TaxAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                Editable=FALSE }

    { 76  ;2   ;Field     ;
                CaptionML=[ENU=Total Incl. Tax;
                           ESM=Total impto. incl.;
                           FRC=Total incluant taxe;
                           ENC=Total Incl. Tax];
                ToolTipML=[ENU=Specifies the total amount including tax that will be posted to the customer's account for all the lines in the sales document. This is the amount that the customer owes based on this sales document. If the document is a credit memo, it is the amount that you owe to the customer.;
                           ESM=Especifica el importe total, con impuestos incluidos, que se registrar  en la cuenta del cliente para todas las l¡neas del documento de venta. Se trata del importe que debe el cliente seg£n este documento de venta. Si el documento es una nota de cr‚dito, es el importe que se debe al cliente.;
                           FRC=Sp‚cifie le montant total, avec taxe, qui sera report‚ sur le compte du client pour toutes les lignes du document vente. C'est le montant d– par le client sur la base de ce document vente. Si le document est une note de cr‚dit, ce montant est celui que vous devez au client.;
                           ENC=Specifies the total amount including tax that will be posted to the customer's account for all the lines in the sales document. This is the amount that the customer owes based on this sales document. If the document is a credit memo, it is the amount that you owe to the customer.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalAmount2;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=GetCaptionClass(Text001,TRUE);
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Sales ($);
                           ESM=Ventas ($);
                           FRC=Ventes ($);
                           ENC=Sales ($)];
                ToolTipML=[ENU=Specifies your total sales turnover in the fiscal year. It is calculated from amounts excluding tax on all completed and open sales invoices and credit memos.;
                           ESM=Especifica el total de facturaci¢n de ventas en el ejercicio. Se calcula a partir de los importes sin impuestos de todas las facturas y las notas de cr‚dito de venta abiertas y completadas.;
                           FRC=Sp‚cifie votre chiffre d'affaires total au cours de l'exercice financier. Il est calcul‚ … partir des montants hors taxe sur toutes les notes de cr‚dit et factures vente termin‚es et ouvertes.;
                           ENC=Specifies your total sales turnover in the fiscal year. It is calculated from amounts excluding tax on all completed and open sales invoices and credit memos.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalSalesLineLCY.Amount;
                AutoFormatType=1;
                Editable=FALSE }

    { 79  ;2   ;Field     ;
                CaptionML=[ENU=Profit ($);
                           ESM=Bf§ bruto ($);
                           FRC=Profit ($);
                           ENC=Profit ($)];
                ToolTipML=[ENU=Specifies the original profit that was associated with the sales when they were originally posted.;
                           ESM=Especifica el beneficio original asociado a las ventas cuando se registraron originalmente.;
                           FRC=Sp‚cifie le profit initial qui ‚tait associ‚ aux ventes lors de leur report initial.;
                           ENC=Specifies the original profit that was associated with the sales when they were originally posted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ProfitLCY;
                AutoFormatType=1;
                Editable=FALSE }

    { 81  ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           ESM=% Bf§ bruto;
                           FRC=% profit;
                           ENC=Profit %];
                ToolTipML=[ENU=Specifies the original profit percentage that was associated with the sales when they were originally posted.;
                           ESM=Especifica el porcentaje de beneficio original asociado a las ventas cuando se registraron originalmente.;
                           FRC=Sp‚cifie le pourcentage initial de profit qui ‚tait associ‚ aux ventes lors de leur report initial.;
                           ENC=Specifies the original profit percentage that was associated with the sales when they were originally posted.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct;
                Editable=FALSE }

    { 95  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESM=Cantidad;
                           FRC=Quantit‚;
                           ENC=Quantity];
                ToolTipML=[ENU=Specifies the total quantity of G/L account entries, items, and/or resources in the sales document. If the amount is rounded, because the Invoice Rounding check box is selected in the Sales & Receivables Setup window, this field will contain the quantity of items in the sales document plus one.;
                           ESM=Especifica la cantidad total de movimientos de contabilidad, productos o recursos que figuran en el documento de venta. Si el importe se redondea, porque la casilla Redondeo factura est  activada en la ventana Configuraci¢n de ventas y cobros, este campo mostrar  la cantidad de productos que figuran en el documento de venta m s uno.;
                           FRC=Sp‚cifie la quantit‚ totale des ‚critures compte du grand livre, des articles et/ou des ressources dans le document de vente. Si le montant est arrondi parce que la case … cocher Arrondissement facture est s‚lectionn‚e dans la table Configuration des ventes & des comptes … recevoir, ce champ indique la quantit‚ d'articles dans le document de vente, plus un.;
                           ENC=Specifies the total quantity of G/L account entries, items, and/or resources in the sales document. If the amount is rounded, because the Invoice Rounding check box is selected in the Sales & Receivables Setup window, this field will contain the quantity of items in the sales document plus one.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine.Quantity;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                CaptionML=[ENU=Parcels;
                           ESM=Lotes;
                           FRC=Colis;
                           ENC=Parcels];
                ToolTipML=[ENU=Specifies the number of parcels on the document.;
                           ESM=Especifica el n£mero de lotes en el documento.;
                           FRC=Sp‚cifie le nombre de colis sur le document.;
                           ENC=Specifies the number of parcels on the document.];
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Units per Parcel";
                Editable=FALSE }

    { 91  ;2   ;Field     ;
                CaptionML=[ENU=Net Weight;
                           ESM=Peso neto;
                           FRC=Poids net;
                           ENC=Net Weight];
                ToolTipML=[ENU=Specifies the total net weight of the items in the sales document.;
                           ESM=Especifica el peso neto total de los productos que figuran en el documento de venta.;
                           FRC=Sp‚cifie le poids net total des articles du document vente.;
                           ENC=Specifies the total net weight of the items in the sales document.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Net Weight";
                Editable=FALSE }

    { 82  ;2   ;Field     ;
                CaptionML=[ENU=Gross Weight;
                           ESM=Peso bruto;
                           FRC=Poids brut;
                           ENC=Gross Weight];
                ToolTipML=[ENU=Specifies the gross weight of items listed on the document.;
                           ESM=Especifica el peso bruto de los productos que figuran en el documento.;
                           FRC=Sp‚cifie le poids brut total des articles r‚pertori‚s sur le document.;
                           ENC=Specifies the gross weight of items listed on the document.];
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Gross Weight";
                Editable=FALSE }

    { 71  ;2   ;Field     ;
                CaptionML=[ENU=Volume;
                           ESM=Volumen;
                           FRC=Volume;
                           ENC=Volume];
                ToolTipML=[ENU=Specifies the volume of the items in the sales order.;
                           ESM=Especifica el volumen de los productos que figuran en la orden de venta.;
                           FRC=Sp‚cifie le volume des articles dans le document de vente.;
                           ENC=Specifies the volume of the items in the sales order.];
                DecimalPlaces=0:5;
                SourceExpr=TotalSalesLine."Unit Volume";
                Editable=FALSE }

    { 1020001;2;Field     ;
                Name=BreakdownTitle;
                ApplicationArea=#Basic,#Suite;
                CaptionClass=FORMAT(BreakdownTitle);
                Editable=FALSE }

    { 1020005;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BreakdownAmt[1];
                CaptionClass=FORMAT(BreakdownLabel[1]);
                Editable=FALSE }

    { 1020006;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BreakdownAmt[2];
                CaptionClass=FORMAT(BreakdownLabel[2]);
                Editable=FALSE }

    { 1020007;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BreakdownAmt[3];
                CaptionClass=FORMAT(BreakdownLabel[3]);
                Editable=FALSE }

    { 1020009;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BreakdownAmt[4];
                CaptionClass=FORMAT(BreakdownLabel[4]);
                Editable=FALSE }

    { 5   ;1   ;Part      ;
                Name=SubForm;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page10040;
                PartType=Page }

    { 1903289601;1;Group  ;
                CaptionML=[ENU=Customer;
                           ESM=Cliente;
                           FRC=Client;
                           ENC=Customer] }

    { 67  ;2   ;Field     ;
                CaptionML=[ENU=Balance ($);
                           ESM=Saldo ($);
                           FRC=Solde ($);
                           ENC=Balance ($)];
                ToolTipML=[ENU="Specifies the customer's balance. ";
                           ESM="Especifica el saldo del cliente. ";
                           FRC="Sp‚cifie le solde du client. ";
                           ENC="Specifies the customer's balance. "];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 68  ;2   ;Field     ;
                CaptionML=[ENU=Credit Limit ($);
                           ESM=Cr‚dito m x. ($);
                           FRC=Limite de cr‚dit ($);
                           ENC=Credit Limit ($)];
                ToolTipML=[ENU=Specifies the customer's credit limit, in dollars.;
                           ESM=Especifica el l¡mite de cr‚dito del cliente, en pesos.;
                           FRC=Sp‚cifie la limite de cr‚dit du client, en dollars.;
                           ENC=Specifies the customer's credit limit, in dollars.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=[ENU=Expended % of Credit Limit ($);
                           ESM=% L¡mite cr‚dito usado ($);
                           FRC=% limite de cr‚dit ‚tendue ($);
                           ENC=Expended % of Credit Limit ($)];
                ToolTipML=[ENU=Specifies the Expended Percentage of Credit Limit ($).;
                           ESM=Especifica el porcentaje empleado del l¡mite de cr‚dito ($).;
                           FRC=Sp‚cifie le pourcentage de limite de cr‚dit ‚tendue ($).;
                           ENC=Specifies the Expended Percentage of Credit Limit ($).];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Sales %1 Statistics;ESM=Estad¡sticas %1 ventas;FRC=Statistiques %1 vente;ENC=Sales %1 Statistics';
      Text001@1001 : TextConst 'ENU=Total;ESM=Total;FRC=Total;ENC=Total';
      Text002@1002 : TextConst 'ENU=Amount;ESM=Importe;FRC=Montant;ENC=Amount';
      Text003@1003 : TextConst 'ENU=%1 must not be 0.;ESM=%1 no debe ser 0.;FRC=%1 ne doit pas ˆtre 0.;ENC=%1 must not be 0.';
      Text004@1004 : TextConst 'ENU=%1 must not be greater than %2.;ESM=%1 no debe ser m s grande que %2.;FRC=%1 ne doit pas ˆtre sup‚rieur(e) … %2.;ENC=%1 must not be greater than %2.';
      Text005@1005 : TextConst 'ENU=You cannot change the invoice discount because there is a %1 record for %2 %3.;ESM=No puede cambiar el dto. factura porque hay un %1 registro para %2 %3.;FRC=Vous ne pouvez pas modifier l''escompte de la facture car il existe un enregistrement %1 pour %2 %3.;ENC=You cannot change the invoice discount because there is a %1 record for %2 %3.';
      TotalSalesLine@1006 : Record 37;
      TotalSalesLineLCY@1007 : Record 37;
      Cust@1008 : Record 18;
      TempSalesTaxLine@1009 : TEMPORARY Record 10011;
      SalesSetup@1010 : Record 311;
      TaxArea@1020001 : Record 318;
      SalesTaxDifference@1020009 : Record 10012;
      SalesPost@1011 : Codeunit 80;
      SalesTaxCalculate@1020000 : Codeunit 398;
      TotalAmount1@1012 : Decimal;
      TotalAmount2@1013 : Decimal;
      TaxAmount@1014 : Decimal;
      TaxAmountText@1015 : Text[30];
      ProfitLCY@1016 : Decimal;
      ProfitPct@1017 : Decimal;
      TotalAdjCostLCY@1022 : Decimal;
      CreditLimitLCYExpendedPct@1018 : Decimal;
      PrevNo@1019 : Code[20];
      AllowInvDisc@1020 : Boolean;
      AllowVATDifference@1021 : Boolean;
      BreakdownTitle@1020005 : Text[35];
      BreakdownLabel@1020004 : ARRAY [4] OF Text[30];
      BreakdownAmt@1020003 : ARRAY [4] OF Decimal;
      BrkIdx@1020002 : Integer;
      Text006@1020008 : TextConst 'ENU=Tax Breakdown:;ESM=Desglose imptos.:;FRC=Ventilation fiscale :;ENC=Tax Breakdown:';
      Text007@1020007 : TextConst 'ENU=Sales Tax Breakdown:;ESM=An lisis impto. vtas.:;FRC=Ventilation de la taxe de vente :;ENC=Sales Tax Breakdown:';
      Text008@1020006 : TextConst 'ENU=Other Taxes;ESM=Otros impuestos;FRC=Autres taxes;ENC=Other Taxes';
      SalesTaxCalculationOverridden@1020010 : Boolean;

    LOCAL PROCEDURE UpdateHeaderInfo@5();
    VAR
      CurrExchRate@1000 : Record 330;
      UseDate@1001 : Date;
    BEGIN
      TotalAmount1 :=
        TotalSalesLine."Line Amount" - TotalSalesLine."Inv. Discount Amount";
      IF NOT SalesTaxCalculationOverridden THEN
        TaxAmount := TempSalesTaxLine.GetTotalTaxAmountFCY;
      IF "Prices Including VAT" THEN
        TotalAmount2 := TotalSalesLine.Amount
      ELSE
        TotalAmount2 := TotalAmount1 + TaxAmount;

      IF "Prices Including VAT" THEN
        TotalSalesLineLCY.Amount := TotalAmount2
      ELSE
        TotalSalesLineLCY.Amount := TotalAmount1;
      IF "Currency Code" <> '' THEN BEGIN
        IF "Document Type" = "Document Type"::Quote THEN
          UseDate := WORKDATE
        ELSE
          UseDate := "Posting Date";
        TotalSalesLineLCY.Amount :=
          CurrExchRate.ExchangeAmtFCYToLCY(
            UseDate,"Currency Code",TotalSalesLineLCY.Amount,"Currency Factor");
      END;
      ProfitLCY := TotalSalesLineLCY.Amount - TotalSalesLineLCY."Unit Cost (LCY)";
      IF TotalSalesLineLCY.Amount = 0 THEN
        ProfitPct := 0
      ELSE
        ProfitPct := ROUND(100 * ProfitLCY / TotalSalesLineLCY.Amount,0.01);
    END;

    LOCAL PROCEDURE GetVATSpecification@21();
    BEGIN
      CurrPage.SubForm.PAGE.GetTempTaxAmountLine(TempSalesTaxLine);
      UpdateHeaderInfo;
    END;

    LOCAL PROCEDURE SetVATSpecification@11();
    BEGIN
      CurrPage.SubForm.PAGE.SetTempTaxAmountLine(TempSalesTaxLine);
      CurrPage.SubForm.PAGE.InitGlobals(
        "Currency Code",AllowVATDifference,AllowVATDifference,
        "Prices Including VAT",AllowInvDisc,"VAT Base Discount %");
    END;

    LOCAL PROCEDURE UpdateTotalAmount@16();
    VAR
      SaveTotalAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      IF "Prices Including VAT" THEN BEGIN
        SaveTotalAmount := TotalAmount1;
        UpdateInvDiscAmount;
        TotalAmount1 := SaveTotalAmount;
      END;
      WITH TotalSalesLine DO
        "Inv. Discount Amount" := "Line Amount" - TotalAmount1;
      UpdateInvDiscAmount;
    END;

    LOCAL PROCEDURE UpdateInvDiscAmount@3();
    VAR
      InvDiscBaseAmount@1000 : Decimal;
    BEGIN
      CheckAllowInvDisc;
      InvDiscBaseAmount := TempSalesTaxLine.GetTotalInvDiscBaseAmount(FALSE,"Currency Code");
      IF InvDiscBaseAmount = 0 THEN
        ERROR(Text003,TempSalesTaxLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      IF TotalSalesLine."Inv. Discount Amount" / InvDiscBaseAmount > 1 THEN
        ERROR(
          Text004,
          TotalSalesLine.FIELDCAPTION("Inv. Discount Amount"),
          TempSalesTaxLine.FIELDCAPTION("Inv. Disc. Base Amount"));

      TempSalesTaxLine.SetInvoiceDiscountAmount(
        TotalSalesLine."Inv. Discount Amount","Currency Code","Prices Including VAT","VAT Base Discount %");
      CurrPage.SubForm.PAGE.SetTempTaxAmountLine(TempSalesTaxLine);
      UpdateHeaderInfo;

      "Invoice Discount Calculation" := "Invoice Discount Calculation"::Amount;
      "Invoice Discount Value" := TotalSalesLine."Inv. Discount Amount";
      MODIFY;
      UpdateVATOnSalesLines;
    END;

    LOCAL PROCEDURE GetCaptionClass@2(FieldCaption@1000 : Text[100];ReverseCaption@1001 : Boolean) : Text[80];
    BEGIN
      IF "Prices Including VAT" XOR ReverseCaption THEN
        EXIT('2,1,' + FieldCaption);

      EXIT('2,0,' + FieldCaption);
    END;

    LOCAL PROCEDURE UpdateVATOnSalesLines@1();
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      GetVATSpecification;

      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type","Document Type");
      SalesLine.SETRANGE("Document No.","No.");
      SalesLine.FINDFIRST;

      IF TempSalesTaxLine.GetAnyLineModified THEN BEGIN
        SalesTaxCalculate.StartSalesTaxCalculation;
        SalesTaxCalculate.PutSalesTaxAmountLineTable(
          TempSalesTaxLine,
          SalesTaxDifference."Document Product Area"::Sales,
          "Document Type","No.");
        SalesTaxCalculate.DistTaxOverSalesLines(SalesLine);
        SalesTaxCalculate.SaveTaxDifferences;
      END;

      PrevNo := '';
    END;

    LOCAL PROCEDURE CustInvDiscRecExists@4(InvDiscCode@1000 : Code[20]) : Boolean;
    VAR
      CustInvDisc@1001 : Record 19;
    BEGIN
      CustInvDisc.SETRANGE(Code,InvDiscCode);
      EXIT(CustInvDisc.FINDFIRST);
    END;

    LOCAL PROCEDURE CheckAllowInvDisc@8();
    VAR
      CustInvDisc@1000 : Record 19;
    BEGIN
      IF NOT AllowInvDisc THEN
        ERROR(
          Text005,
          CustInvDisc.TABLECAPTION,FIELDCAPTION("Invoice Disc. Code"),"Invoice Disc. Code");
    END;

    LOCAL PROCEDURE UpdateTaxBreakdown@1480000(VAR TempSalesTaxAmtLine@1020002 : TEMPORARY Record 10011;UpdateTaxAmount@1480000 : Boolean);
    VAR
      PrevPrintOrder@1020001 : Integer;
      PrevTaxPercent@1020000 : Decimal;
    BEGIN
      CLEAR(BreakdownLabel);
      CLEAR(BreakdownAmt);
      BrkIdx := 0;
      PrevPrintOrder := 0;
      PrevTaxPercent := 0;
      IF TaxArea."Country/Region" = TaxArea."Country/Region"::CA THEN
        BreakdownTitle := Text006
      ELSE
        BreakdownTitle := Text007;
      WITH TempSalesTaxAmtLine DO BEGIN
        RESET;
        SETCURRENTKEY("Print Order","Tax Area Code for Key","Tax Jurisdiction Code");
        IF FIND('-') THEN
          REPEAT
            IF ("Print Order" = 0) OR
               ("Print Order" <> PrevPrintOrder) OR
               ("Tax %" <> PrevTaxPercent)
            THEN BEGIN
              BrkIdx := BrkIdx + 1;
              IF BrkIdx > ARRAYLEN(BreakdownAmt) THEN BEGIN
                BrkIdx := BrkIdx - 1;
                BreakdownLabel[BrkIdx] := Text008;
              END ELSE
                BreakdownLabel[BrkIdx] := STRSUBSTNO("Print Description","Tax %");
            END;
            BreakdownAmt[BrkIdx] := BreakdownAmt[BrkIdx] + "Tax Amount";
            IF UpdateTaxAmount THEN
              TaxAmount := TaxAmount + "Tax Amount"
            ELSE
              BreakdownAmt[BrkIdx] := BreakdownAmt[BrkIdx] + "Tax Difference";
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE OnActivateForm@1020000();
    BEGIN
      IF "No." = PrevNo THEN
        GetVATSpecification;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCalculateSalesTaxSalesStats@1020001(VAR SalesHeader@1020000 : Record 36;VAR SalesTaxAmountLine@1020001 : Record 10011;VAR SalesTaxAmountLine2@1020002 : Record 10011;VAR SalesTaxCalculationOverridden@1020003 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

