OBJECT Codeunit 2103 O365 Sales Cancel Invoice
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    TableNo=472;
    OnRun=BEGIN
            SendInvoiceCancelationEmailFromJobQueue(Rec);
          END;

  }
  CODE
  {
    VAR
      CancelPostedInvoiceQst@1002 : TextConst 'ENU=The invoice will be canceled and a cancelation email will be sent to the customer.\ \Do you want to continue?;ESM=La factura se cancelar  y se enviar  un correo electr¢nico de cancelaci¢n al cliente.\ \¨Desea continuar?;FRC=La facture sera annul‚e et un courriel d''annulation sera envoy‚ au client.\ \Voulez-vous continuer?;ENC=The invoice will be cancelled and a cancellation email will be sent to the customer.\ \Do you want to continue?';
      CancelPostedInvoiceMsg@1000 : TextConst 'ENU=The invoice has been canceled and an email has been sent to the customer.;ESM=Se ha cancelado la factura y se ha enviado un correo electr¢nico al cliente.;FRC=La facture a ‚t‚ annul‚e et un courriel a ‚t‚ envoy‚ au client.;ENC=The invoice has been cancelled and an email has been sent to the customer.';
      OpenPaymentsQst@1001 : TextConst 'ENU=You cannot cancel an invoice that is partially or fully paid. Do you want to see payments for this invoice so you can remove them?;ESM=No puede cancelar una factura que se pag¢ total o parcialmente. ¨Quiere ver los pagos de esta factura para poder eliminarlos?;FRC=Vous ne pouvez pas annuler une facture qui est entiŠrement ou partiellement pay‚e. Voulez-vous visualiser les paiements pour cette facture afin de pouvoir les supprimerÿ?;ENC=You cannot cancel an invoice that is partially or fully paid. Do you want to see payments for this invoice so you can remove them?';
      EmailNotSentErr@1004 : TextConst 'ENU=Customer Email does not exist. Invoice has been canceled but a cancelation email has not been sent to the customer.;ESM=El correo electr¢nico del cliente no existe. Se ha cancelado la factura pero no se ha enviado ning£n mensaje de cancelaci¢n al cliente.;FRC=Le courriel client n''existe pas. La facture a ‚t‚ annul‚e, mais aucun courriel d''annulation n''a ‚t‚ envoy‚ au client.;ENC=Customer Email does not exist. Invoice has been cancelled but a cancellation email has not been sent to the customer.';
      EmailSubjectTxt@1006 : TextConst 'ENU=Your invoice has been canceled.;ESM=Se ha cancelado la factura.;FRC=Votre facture a ‚t‚ annul‚e.;ENC=Your invoice has been cancelled.';
      AlreadyCanceledErr@1007 : TextConst 'ENU=You cannot cancel this invoice because it has already been canceled.;ESM=No puede cancelar esta factura porque ya se ha cancelado.;FRC=Vous ne pouvez pas annuler cette facture, car elle a d‚j… ‚t‚ annul‚e.;ENC=You cannot cancel this invoice because it has already been cancelled.';
      GreetingTxt@1005 : TextConst '@@@=%1 - customer name;ENU=Hello %1,;ESM=Hola %1:;FRC=Bonjour %1,;ENC=Hello %1,';
      CanceletionEmailBodyTxt@1003 : TextConst 'ENU=Thank you for your business. Your invoice has been canceled.;ESM=Gracias por confiar en nosotros. Se ha cancelado la factura.;FRC=Merci de votre collaboration. Votre facture a ‚t‚ annul‚e.;ENC=Thank you for your business. Your invoice has been cancelled.';
      CancelationEmailSubjectTxt@1008 : TextConst '@@@="%1 = Invoice No,%2 = Currency code, %3 = Total amount including tax , %4 = Due date";ENU="Invoice %1 of amount %2%3, that was due on %4 has been canceled. ";ESM="Se ha cancelado la factura %1 por un importe de %2%3 que venci¢ el %4. ";FRC="La facture %1 du montant %2%3, qui ‚tait ‚chue le %4 a ‚t‚ annul‚e. ";ENC="Invoice %1 of amount %2%3, that was due on %4 has been cancelled. "';
      SentInvoiceCategoryLbl@1011 : TextConst '@@@={Locked};ENU=AL Sent Invoice;ESM=AL Sent Invoice;FRC=AL Sent Invoice;ENC=AL Sent Invoice';
      InvoiceCancelledTelemetryTxt@1009 : TextConst '@@@={Locked};ENU=Invoice cancelled.;ESM=Invoice cancelled.;FRC=Invoice cancelled.;ENC=Invoice cancelled.';

    PROCEDURE CancelInvoice@1(VAR SalesInvoiceHeader@1002 : Record 112);
    VAR
      CorrectPostedSalesInvoice@1003 : Codeunit 1303;
      O365SalesInvoicePayment@1000 : Codeunit 2105;
      GraphMail@1001 : Codeunit 405;
    BEGIN
      IF IsInvoiceCanceled(SalesInvoiceHeader) THEN
        ERROR(AlreadyCanceledErr);

      IF IsInvoiceFullyOrPartiallyPaid(SalesInvoiceHeader) THEN BEGIN
        IF CONFIRM(OpenPaymentsQst) THEN
          O365SalesInvoicePayment.ShowHistory(SalesInvoiceHeader."No.");
        EXIT;
      END;

      CorrectPostedSalesInvoice.TestCorrectInvoiceIsAllowed(SalesInvoiceHeader,TRUE);
      IF CONFIRM(CancelPostedInvoiceQst) THEN BEGIN
        CODEUNIT.RUN(CODEUNIT::"O365 Setup Email");
        COMMIT;
        IF CorrectPostedSalesInvoice.CancelPostedInvoice(SalesInvoiceHeader) THEN BEGIN
          SENDTRACETAG('0000242',SentInvoiceCategoryLbl,VERBOSITY::Normal,
            InvoiceCancelledTelemetryTxt,DATACLASSIFICATION::SystemMetadata);

          VerifyEmailAddress(SalesInvoiceHeader);
          IF GraphMail.IsEnabled AND GraphMail.HasConfiguration THEN
            SendInvoiceCancelationEmail(SalesInvoiceHeader)
          ELSE
            SendEmailInBackground(SalesInvoiceHeader);

          MESSAGE(CancelPostedInvoiceMsg);
        END;
      END;
    END;

    LOCAL PROCEDURE SendEmailInBackground@2(SalesInvoiceHeader@1000 : Record 112);
    VAR
      JobQueueEntry@1002 : Record 472;
    BEGIN
      JobQueueEntry.INIT;
      JobQueueEntry."Object Type to Run" := JobQueueEntry."Object Type to Run"::Codeunit;
      JobQueueEntry."Object ID to Run" := CODEUNIT::"O365 Sales Cancel Invoice";
      JobQueueEntry."Maximum No. of Attempts to Run" := 3;
      JobQueueEntry."Record ID to Process" := SalesInvoiceHeader.RECORDID;
      CODEUNIT.RUN(CODEUNIT::"Job Queue - Enqueue",JobQueueEntry);
    END;

    PROCEDURE SendInvoiceCancelationEmail@11(SalesInvoiceHeader@1000 : Record 112);
    VAR
      ReportSelections@1004 : Record 77;
      DocumentMailing@1007 : Codeunit 260;
      RecordVariant@1009 : Variant;
      CustomerAddress@1005 : Text[250];
      ServerEmailBodyFilePath@1006 : Text[250];
      EmailBodyTxt@1002 : Text;
    BEGIN
      IF NOT IsInvoiceCanceled(SalesInvoiceHeader) THEN
        EXIT;

      RecordVariant := SalesInvoiceHeader;
      CustomerAddress := GetEmailAddress(SalesInvoiceHeader);
      EmailBodyTxt := GetEmailBody(SalesInvoiceHeader);
      ReportSelections.GetEmailBodyCustomText(
        ServerEmailBodyFilePath,2,RecordVariant,SalesInvoiceHeader."Bill-to Customer No.",
        CustomerAddress,EmailBodyTxt);
      DocumentMailing.EmailFileWithSubjectAndReportUsage(
        '','',ServerEmailBodyFilePath,EmailSubjectTxt,SalesInvoiceHeader."No.",CustomerAddress,
        SalesInvoiceHeader.GetDocTypeTxt,TRUE,2);
    END;

    LOCAL PROCEDURE SendInvoiceCancelationEmailFromJobQueue@3(JobQueueEntry@1000 : Record 472);
    VAR
      SalesInvoiceHeader@1001 : Record 112;
    BEGIN
      IF NOT SalesInvoiceHeader.GET(JobQueueEntry."Record ID to Process") THEN
        EXIT;

      SendInvoiceCancelationEmail(SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE GetCustomerEmailAddress@4(SalesInvoiceHeader@1000 : Record 112) : Text[80];
    VAR
      Customer@1001 : Record 18;
    BEGIN
      IF Customer.GET(SalesInvoiceHeader."Sell-to Customer No.") THEN
        EXIT(Customer."E-Mail");
    END;

    LOCAL PROCEDURE GetDocumentEmailAddress@58(VAR SalesInvoiceHeader@1000 : Record 112) : Text[250];
    VAR
      EmailParameter@1002 : Record 9510;
    BEGIN
      IF EmailParameter.GET(
           SalesInvoiceHeader."No.",EmailParameter."Document Type"::Invoice,EmailParameter."Parameter Type"::Address)
      THEN
        EXIT(EmailParameter."Parameter Value");
      EXIT('');
    END;

    PROCEDURE GetEmailAddress@26(VAR SalesInvoiceHeader@1002 : Record 112) : Text[250];
    VAR
      EmailAddress@1000 : Text[250];
    BEGIN
      EmailAddress := GetDocumentEmailAddress(SalesInvoiceHeader);
      IF EmailAddress <> '' THEN
        EXIT(EmailAddress);

      EmailAddress := GetCustomerEmailAddress(SalesInvoiceHeader);
      EXIT(EmailAddress);
    END;

    PROCEDURE GetEmailSubject@7(VAR SalesInvoiceHeader@1002 : Record 112) : Text[250];
    VAR
      EmailSubject@1000 : Text[250];
    BEGIN
      SalesInvoiceHeader.CALCFIELDS("Amount Including VAT");
      EmailSubject := STRSUBSTNO(
          CancelationEmailSubjectTxt,SalesInvoiceHeader."No.",ResolveCurrency(SalesInvoiceHeader."Currency Code"),
          SalesInvoiceHeader."Amount Including VAT",SalesInvoiceHeader."Due Date");
      EXIT(EmailSubject);
    END;

    LOCAL PROCEDURE IsInvoiceFullyOrPartiallyPaid@5(SalesInvoiceHeader@1000 : Record 112) IsPaid : Boolean;
    BEGIN
      SalesInvoiceHeader.CALCFIELDS("Amount Including VAT");
      SalesInvoiceHeader.CALCFIELDS("Remaining Amount");
      IsPaid := SalesInvoiceHeader."Amount Including VAT" <> SalesInvoiceHeader."Remaining Amount";
    END;

    [External]
    PROCEDURE IsInvoiceCanceled@8(SalesInvoiceHeader@1000 : Record 112) : Boolean;
    VAR
      CancelledDocument@1001 : Record 1900;
    BEGIN
      EXIT(CancelledDocument.FindSalesCancelledInvoice(SalesInvoiceHeader."No."));
    END;

    LOCAL PROCEDURE VerifyEmailAddress@21(SalesInvoiceHeader@1000 : Record 112);
    BEGIN
      IF GetEmailAddress(SalesInvoiceHeader) = '' THEN
        ERROR(EmailNotSentErr);
    END;

    LOCAL PROCEDURE ResolveCurrency@6(CurrencyCode@1000 : Code[10]) : Text;
    VAR
      GeneralLedgerSetup@1003 : Record 98;
    BEGIN
      IF CurrencyCode = '' THEN BEGIN
        GeneralLedgerSetup.GET;
        EXIT(GeneralLedgerSetup."LCY Code" + ' ');
      END;
      EXIT(CurrencyCode + ' ');
    END;

    LOCAL PROCEDURE GetEmailBody@9(SalesInvoiceHeader@1002 : Record 112) : Text;
    VAR
      CR@1000 : Text[1];
      EmailBodyTxt@1001 : Text;
    BEGIN
      CR[1] := 10;

      // Create cancel invoice body message
      EmailBodyTxt := STRSUBSTNO(GreetingTxt,SalesInvoiceHeader."Sell-to Customer Name") + CR + CR + CanceletionEmailBodyTxt;

      EXIT(EmailBodyTxt)
    END;

    BEGIN
    END.
  }
}

