OBJECT Table 6086360 EM Dimension
{
  OBJECT-PROPERTIES
  {
    Date=07/02/18;
    Time=[ 1:00:00 AM];
    Version List=EMW16.00.10.2.60.06;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TestNotPosted;
               UpdateRecordDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code","Dimension Value Code");
             END;

    OnModify=BEGIN
               TestNotPosted;
               UpdateRecordDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code","Dimension Value Code");
             END;

    OnDelete=VAR
               GLSetup@1160040000 : Record 98;
               Expense@1160040001 : Record 6086320;
               Mileage@1160040002 : Record 6086338;
             BEGIN
               TestNotPosted;
               UpdateRecordDimValue("Table ID","Document Type","Document No.","Doc. Ref. No.","Dimension Code",'');
             END;

    OnRename=BEGIN
               ERROR(Text002,TABLECAPTION);
             END;

    CaptionML=ENU=Dimension;
    LookupPageID=Page6086356;
    DrillDownPageID=Page6086356;
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;CaptionML=ENU=Table ID }
    { 2   ;   ;Document Type       ;Option        ;CaptionML=ENU=Document Type;
                                                   OptionCaptionML=ENU=Budget,Settlement;
                                                   OptionString=Budget,Settlement }
    { 3   ;   ;Document No.        ;Code20        ;CaptionML=ENU=Document No. }
    { 4   ;   ;Doc. Ref. No.       ;Integer       ;TableRelation=IF (Table ID=CONST(6086320)) Expense
                                                                 ELSE IF (Table ID=CONST(6086338)) Mileage;
                                                   CaptionML=ENU=Doc. Ref. No. }
    { 10  ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=VAR
                                                                DimMgt@1160040000 : Codeunit 408;
                                                              BEGIN
                                                                IF "Dimension Code" = '' THEN
                                                                  EXIT;

                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=ENU=Dimension Code }
    { 11  ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=VAR
                                                                DimMgt@1160040000 : Codeunit 408;
                                                              BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=ENU=Dimension Value Code;
                                                   NotBlank=Yes }
    { 12  ;   ;Field Code          ;Code20        ;TableRelation="Field Type" WHERE (Standard Field=CONST(No),
                                                                                     Source Table No.=FILTER(<>349));
                                                   OnValidate=VAR
                                                                FieldType@1160040000 : Record 6086345;
                                                              BEGIN
                                                                FieldType.GET("Field Code");
                                                              END;

                                                   CaptionML=ENU=Field Code }
    { 20  ;   ;Field Value         ;Text250       ;TableRelation="Lookup Value".Code WHERE (Field Type Code=FIELD(Field Code));
                                                   OnValidate=VAR
                                                                FieldType@1160040000 : Record 6086345;
                                                                DateParserMgt@1001 : Codeunit 6085586;
                                                                DT@1160040003 : DateTime;
                                                                Dec@1160040002 : Decimal;
                                                                Int@1160040001 : Integer;
                                                                Bool@1160040004 : Boolean;
                                                              BEGIN
                                                                IF "Field Value" = '' THEN
                                                                  EXIT;

                                                                FieldType.GET("Field Code");

                                                                CASE FieldType.Type OF
                                                                  FieldType.Type::Integer:
                                                                    EVALUATE(Int,"Field Value",9);
                                                                  FieldType.Type::Date:
                                                                    BEGIN
                                                                      DateParserMgt.ParseUTC("Field Value");
                                                                      "Field Value" := FORMAT(DateParserMgt.GetDate,9);
                                                                    END;
                                                                  FieldType.Type::Decimal:
                                                                    EVALUATE(Dec,"Field Value",9);
                                                                  FieldType.Type::Address:
                                                                    EVALUATE(DT,"Field Value",9);
                                                                  FieldType.Type::Boolean:
                                                                    EVALUATE(Bool,"Field Value",9);
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=ENU=Field Value }
  }
  KEYS
  {
    {    ;Table ID,Document Type,Document No.,Doc. Ref. No.,Dimension Code,Field Code;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      SpecifyParentFieldErr@1160040000 : TextConst 'ENU=You must first specify a value for %1.';
      Text002@1160040002 : TextConst 'ENU=You cannot rename a %1.';
      IgnorePostedCheck@1160040001 : Boolean;

    LOCAL PROCEDURE TestNotPosted@37();
    VAR
      Expense@1160040000 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
      ExpHeader@1160040002 : Record 6086339;
    BEGIN
      IF IgnorePostedCheck THEN
        EXIT;

      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET("Doc. Ref. No.");
            Expense.TESTFIELD(Posted,FALSE);
          END;

        DATABASE::Mileage:
          BEGIN
            Mileage.GET("Doc. Ref. No.");
            Mileage.TESTFIELD(Posted,FALSE);
          END;

        DATABASE::"Expense Header":
          BEGIN
            ExpHeader.GET("Document Type","Document No.");
            ExpHeader.TESTFIELD(Posted,FALSE);
          END;
      END;
    END;

    PROCEDURE LookupFieldValue@1160040005(VAR Text@1160040003 : Text[1024]) : Boolean;
    VAR
      FieldType@1160040000 : Record 6086345;
      LookupValue@1160040001 : Record 6086347;
      EMDim@1160040002 : Record 6086360;
    BEGIN
      LookupValue.SETRANGE("Field Type Code","Field Code");

      FieldType.GET("Field Code");
      IF FieldType.GetParentFieldTypeCode <> '' THEN BEGIN
        IF NOT EMDim.GET(DATABASE::Expense,"Document Type","Document No.","Doc. Ref. No.",'',FieldType.GetParentFieldTypeCode) THEN
          ERROR(SpecifyParentFieldErr,FieldType.GetParentFieldTypeCode);

        EMDim.GET(DATABASE::Expense,"Document Type","Document No.","Doc. Ref. No.",'',FieldType.GetParentFieldTypeCode);
        LookupValue.SETRANGE("Parent Field Type Code",EMDim."Field Value");
      END;

      IF PAGE.RUNMODAL(0,LookupValue) = ACTION::LookupOK THEN BEGIN
        Text := LookupValue.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE GetFieldFromDim@1160040000(Dim@1160040000 : Code[20]) : Code[20];
    VAR
      FieldType@1160040001 : Record 6086345;
    BEGIN
      EXIT(FieldType.GetFieldFromDim(Dim));
    END;

    PROCEDURE UpdateRecordDimValue@1160040001(TableID@1160040004 : Integer;DocumentType@1160040009 : Integer;DocumentNo@1160040010 : Code[20];DocRefNo@1160040005 : Integer;DimCode@1160040006 : Code[20];DimValCode@1160040007 : Code[20]);
    VAR
      GLSetup@1160040003 : Record 98;
      Expense@1160040002 : Record 6086320;
      Mileage@1160040001 : Record 6086338;
      ExpHeader@1160040008 : Record 6086339;
    BEGIN
      GLSetup.GET;
      IF NOT (DimCode IN [GLSetup."Global Dimension 1 Code",GLSetup."Global Dimension 2 Code"]) THEN
        EXIT;

      CASE "Table ID" OF
        DATABASE::Expense:
          BEGIN
            Expense.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              Expense."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              Expense."Global Dimension 2 Code" := DimValCode;
            Expense.MODIFY;
          END;

        DATABASE::Mileage:
          BEGIN
            Mileage.GET(DocRefNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              Mileage."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              Mileage."Global Dimension 2 Code" := DimValCode;
            Mileage.MODIFY;
          END;

        DATABASE::"Expense Header":
          BEGIN
            ExpHeader.GET(DocumentType,DocumentNo);
            IF DimCode = GLSetup."Global Dimension 1 Code" THEN
              ExpHeader."Global Dimension 1 Code" := DimValCode;
            IF DimCode = GLSetup."Global Dimension 2 Code" THEN
              ExpHeader."Global Dimension 2 Code" := DimValCode;
            ExpHeader.MODIFY;
          END;

      END;
    END;

    PROCEDURE EMDimUpdated@1160040002(VAR EMDim@1160040000 : Record 6086360;TableID@1160040005 : Integer;DocType@1160040004 : Integer;DocNo@1160040003 : Code[20];DocRefNo@1160040002 : Integer) : Boolean;
    VAR
      xEMDim@1160040001 : Record 6086360;
      EmOnlineMgt@1160040006 : Codeunit 6086305;
    BEGIN
      EMDim.RESET;
      EMDim.SETRANGE("Table ID",TableID);
      EMDim.SETRANGE("Document Type",DocType);
      EMDim.SETRANGE("Document No.",DocNo);
      EMDim.SETRANGE("Doc. Ref. No.",DocRefNo);

      xEMDim.RESET;
      xEMDim.SETRANGE("Table ID",TableID);
      xEMDim.SETRANGE("Document Type",DocType);
      xEMDim.SETRANGE("Document No.",DocNo);
      xEMDim.SETRANGE("Doc. Ref. No.",DocRefNo);

      IF EMDim.FINDSET THEN
        REPEAT
          IF NOT xEMDim.GET(TableID,DocType,DocNo,DocRefNo,EMDim."Dimension Code",EMDim."Field Code") THEN
            EXIT(TRUE);

          IF (EMDim."Dimension Value Code" <> xEMDim."Dimension Value Code") OR (EMDim."Field Value" <> xEMDim."Field Value") THEN
            EXIT(TRUE);
        UNTIL EMDim.NEXT = 0;

      IF xEMDim.FINDSET THEN
        REPEAT
          IF NOT EMDim.GET(TableID,DocType,DocNo,DocRefNo,xEMDim."Dimension Code",xEMDim."Field Code") THEN
            EXIT(TRUE);
        UNTIL xEMDim.NEXT = 0;
    END;

    PROCEDURE IsConfiguredField@1160040003(Table@1160040003 : Integer;FldCode@1160040002 : Code[20]) : Boolean;
    VAR
      FieldType@1160040000 : Record 6086345;
      ConfiguredField@1160040001 : Record 6086346;
    BEGIN
      EXIT(ConfiguredField.IsConfiguredFieldForTable(Table,FieldType.GetFieldFromDim(FldCode)));
    END;

    PROCEDURE IgnoreTestPosted@1160040004(NewIgnorePostedCheck@1160040000 : Boolean);
    BEGIN
      IgnorePostedCheck := NewIgnorePostedCheck;
    END;

    BEGIN
    END.
  }
}

