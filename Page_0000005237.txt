OBJECT Page 5237 Employee Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:58 PM;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 5222=m;
    CaptionML=ENU=Employee Ledger Entries;
    ApplicationArea=#BasicHR;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5222;
    PageType=List;
    UsageCategory=History;
    ActionList=ACTIONS
    {
      { 22      ;0   ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 21      ;1   ;ActionGroup;
                      CaptionML=ENU=Ent&ry;
                      Image=Entry }
      { 18      ;2   ;Action    ;
                      CaptionML=ENU=Applied E&ntries;
                      ToolTipML=ENU=View the ledger entries that have been applied to this record.;
                      ApplicationArea=#BasicHR;
                      RunObject=Page 63;
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      Scope=Repeater }
      { 17      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Image=Dimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 15      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Detailed &Ledger Entries;
                      ToolTipML=ENU=View a summary of the all posted entries and adjustments related to a specific employee ledger entry;
                      ApplicationArea=#BasicHR;
                      RunObject=Page 5238;
                      RunPageView=SORTING(Employee Ledger Entry No.,Posting Date);
                      RunPageLink=Employee Ledger Entry No.=FIELD(Entry No.),
                                  Employee No.=FIELD(Employee No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      Scope=Repeater }
      { 30      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=ENU=&Navigate;
                      ToolTipML=ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                      ApplicationArea=#BasicHR;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000 : Page 344;
                               BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
      { 14      ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 12      ;2   ;Action    ;
                      Name=ActionApplyEntries;
                      ShortCutKey=Shift+F11;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                      ApplicationArea=#BasicHR;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 EmployeeLedgerEntry@1001 : Record 5222;
                                 EmplEntryApplyPostedEntries@1000 : Codeunit 224;
                               BEGIN
                                 EmployeeLedgerEntry.COPY(Rec);
                                 EmplEntryApplyPostedEntries.ApplyEmplEntryFormEntry(EmployeeLedgerEntry);
                                 Rec := EmployeeLedgerEntry;
                                 GET("Entry No.");
                                 CurrPage.UPDATE;
                               END;
                                }
      { 9       ;2   ;Separator  }
      { 8       ;2   ;Action    ;
                      Name=UnapplyEntries;
                      Ellipsis=Yes;
                      CaptionML=ENU=Unapply Entries;
                      ToolTipML=ENU=Unselect one or more ledger entries that you want to unapply this record.;
                      ApplicationArea=#BasicHR;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=UnApply;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 EmplEntryApplyPostedEntries@1000 : Codeunit 224;
                               BEGIN
                                 EmplEntryApplyPostedEntries.UnApplyEmplLedgEntry("Entry No.");
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=CreatePayment;
                      CaptionML=ENU=Create Payment;
                      ToolTipML=ENU=Create a payment journal based on the selected entries.;
                      ApplicationArea=#BasicHR;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SuggestVendorPayments;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EmployeeLedgerEntry@1000 : Record 5222;
                                 GenJournalBatch@1001 : Record 232;
                                 GenJnlManagement@1002 : Codeunit 230;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(EmployeeLedgerEntry);
                                 IF CreateEmployeePayment.RUNMODAL = ACTION::OK THEN BEGIN
                                   CreateEmployeePayment.MakeGenJnlLines(EmployeeLedgerEntry);
                                   GetBatchRecord(GenJournalBatch);
                                   GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                                   CLEAR(CreateEmployeePayment);
                                 END ELSE
                                   CLEAR(CreateEmployeePayment);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=ReverseTransaction;
                      Ellipsis=Yes;
                      CaptionML=ENU=Reverse Transaction;
                      ToolTipML=ENU=Reverse an erroneous employee ledger entry.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ReverseRegister;
                      Scope=Repeater;
                      OnAction=VAR
                                 ReversalEntry@1000 : Record 179;
                               BEGIN
                                 CLEAR(ReversalEntry);
                                 IF Reversed THEN
                                   ReversalEntry.AlreadyReversedEntry(TABLECAPTION,"Entry No.");
                                 IF "Journal Batch Name" = '' THEN
                                   ReversalEntry.TestFieldError;
                                 TESTFIELD("Transaction No.");
                                 ReversalEntry.ReverseTransaction("Transaction No.");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the employee entry's posting date.;
                ApplicationArea=#BasicHR;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the document type that the employee entry belongs to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the employee entry's document number.;
                ApplicationArea=#BasicHR;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the employee that the entry is linked to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Employee No.";
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the message exported to the payment file when you use the Export Payments to File function in the Payment Journal window.;
                ApplicationArea=#BasicHR;
                SourceExpr="Message to Recipient" }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the employee entry.;
                ApplicationArea=#BasicHR;
                SourceExpr=Description;
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the payment method that was used to make the payment that resulted in the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Payment Method Code" }

    { 11  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of the original entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Original Amount" }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount that the entry originally consisted of, in $.;
                ApplicationArea=#BasicHR;
                SourceExpr="Original Amt. (LCY)";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr=Amount }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of the entry in $.;
                ApplicationArea=#BasicHR;
                SourceExpr="Amount (LCY)";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount that remains to be applied to before the entry is totally applied to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Remaining Amount" }

    { 27  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount that remains to be applied to before the entry is totally applied to.;
                ApplicationArea=#BasicHR;
                SourceExpr="Remaining Amt. (LCY)" }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of balancing account that is used for the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Bal. Account Type";
                Visible=FALSE;
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the balancing account that is used for the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Bal. Account No.";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the amount on the entry has been fully paid or there is still a remaining amount that must be applied to.;
                ApplicationArea=#BasicHR;
                SourceExpr=Open;
                Editable=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount to apply.;
                ApplicationArea=#BasicHR;
                SourceExpr="Amount to Apply";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#BasicHR;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                ToolTipML=ENU=Specifies whether the entry will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#BasicHR;
                SourceExpr="Applying Entry";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies that the entry was created as a result of exporting a payment journal line.;
                ApplicationArea=#BasicHR;
                SourceExpr="Exported to Payment File";
                Visible=FALSE;
                Editable=TRUE }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the payment of the employee document.;
                ApplicationArea=#BasicHR;
                SourceExpr="Payment Reference";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the entry number that is assigned to the entry.;
                ApplicationArea=#BasicHR;
                SourceExpr="Entry No.";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CreateEmployeePayment@1000 : Page 1191;

    LOCAL PROCEDURE GetBatchRecord@1(VAR GenJournalBatch@1002 : Record 232);
    VAR
      GenJournalTemplate@1001 : Record 80;
      JournalTemplateName@1000 : Code[10];
      JournalBatchName@1003 : Code[10];
    BEGIN
      GenJournalTemplate.RESET;
      GenJournalTemplate.SETRANGE(Type,GenJournalTemplate.Type::Payments);
      GenJournalTemplate.SETRANGE(Recurring,FALSE);
      IF GenJournalTemplate.FINDFIRST THEN
        JournalTemplateName := GenJournalTemplate.Name;

      JournalBatchName := CreateEmployeePayment.GetBatchNumber;

      GenJournalTemplate.GET(JournalTemplateName);
      GenJournalBatch.GET(JournalTemplateName,JournalBatchName);
    END;

    BEGIN
    END.
  }
}

