OBJECT Page 6033 Service Invoice Statistics
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:22 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Service Invoice Statistics;
    LinksAllowed=No;
    SourceTable=Table5992;
    PageType=ListPlus;
    OnAfterGetRecord=VAR
                       CostCalcMgt@1000 : Codeunit 5836;
                     BEGIN
                       CLEARALL;

                       IF "Currency Code" = '' THEN
                         currency.InitRoundingPrecision
                       ELSE
                         currency.GET("Currency Code");

                       ServInvLine.SETRANGE("Document No.","No.");

                       IF ServInvLine.FIND('-') THEN
                         REPEAT
                           CustAmount := CustAmount + ServInvLine.Amount;
                           AmountInclVAT := AmountInclVAT + ServInvLine."Amount Including VAT";
                           IF "Prices Including VAT" THEN
                             InvDiscAmount := InvDiscAmount + ServInvLine."Inv. Discount Amount" / (1 + ServInvLine."VAT %" / 100)
                           ELSE
                             InvDiscAmount := InvDiscAmount + ServInvLine."Inv. Discount Amount";
                           CostLCY := CostLCY + (ServInvLine.Quantity * ServInvLine."Unit Cost (LCY)");
                           LineQty := LineQty + ServInvLine.Quantity;
                           TotalNetWeight := TotalNetWeight + (ServInvLine.Quantity * ServInvLine."Net Weight");
                           TotalGrossWeight := TotalGrossWeight + (ServInvLine.Quantity * ServInvLine."Gross Weight");
                           TotalVolume := TotalVolume + (ServInvLine.Quantity * ServInvLine."Unit Volume");
                           IF ServInvLine."Units per Parcel" > 0 THEN
                             TotalParcels := TotalParcels + ROUND(ServInvLine.Quantity / ServInvLine."Units per Parcel",1,'>');
                           IF ServInvLine."VAT %" <> VATPercentage THEN
                             IF VATPercentage = 0 THEN
                               VATPercentage := ServInvLine."VAT %"
                             ELSE
                               VATPercentage := -1;
                           TotalAdjCostLCY := TotalAdjCostLCY + CostCalcMgt.CalcServInvLineCostLCY(ServInvLine);
                         UNTIL ServInvLine.NEXT = 0;
                       VATAmount := AmountInclVAT - CustAmount;
                       InvDiscAmount := ROUND(InvDiscAmount,currency."Amount Rounding Precision");

                       IF VATPercentage <= 0 THEN
                         VATAmountText := Text000
                       ELSE
                         VATAmountText := STRSUBSTNO(Text001,VATPercentage);

                       IF "Currency Code" = '' THEN
                         AmountLCY := CustAmount
                       ELSE
                         AmountLCY :=
                           CurrExchRate.ExchangeAmtFCYToLCY(
                             WORKDATE,"Currency Code",CustAmount,"Currency Factor");

                       ProfitLCY := AmountLCY - CostLCY;
                       IF AmountLCY <> 0 THEN
                         ProfitPct := ROUND(100 * ProfitLCY / AmountLCY,0.1);

                       AdjProfitLCY := AmountLCY - TotalAdjCostLCY;
                       IF AmountLCY <> 0 THEN
                         AdjProfitPct := ROUND(100 * AdjProfitLCY / AmountLCY,0.1);

                       IF Cust.GET("Bill-to Customer No.") THEN
                         Cust.CALCFIELDS("Balance (LCY)")
                       ELSE
                         CLEAR(Cust);

                       CASE TRUE OF
                         Cust."Credit Limit (LCY)" = 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" < 0:
                           CreditLimitLCYExpendedPct := 0;
                         Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" > 1:
                           CreditLimitLCYExpendedPct := 10000;
                         ELSE
                           CreditLimitLCYExpendedPct := ROUND(Cust."Balance (LCY)" / Cust."Credit Limit (LCY)" * 10000,1);
                       END;

                       ServInvLine.CalcVATAmountLines(Rec,TempVATAmountLine);
                       CurrPage.Subform.PAGE.SetTempVATAmountLine(TempVATAmountLine);
                       CurrPage.Subform.PAGE.InitGlobals("Currency Code",FALSE,FALSE,FALSE,FALSE,"VAT Base Discount %");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 36  ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                Name=Amount;
                CaptionML=ENU=Amount;
                ToolTipML=ENU="Specifies the net amount of all the lines in the posted service invoice. ";
                ApplicationArea=#Service;
                SourceExpr=CustAmount + InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Inv. Discount Amount;
                ToolTipML=ENU=Specifies the invoice discount amount for the entire service invoice. If there is a check mark in the Calc. Inv. Discount field in the Sales & Receivables Setup window, the discount was calculated automatically.;
                ApplicationArea=#Service;
                SourceExpr=InvDiscAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 12  ;2   ;Field     ;
                CaptionML=ENU=Total;
                ToolTipML=ENU=Specifies the total net amount less any invoice discount amount for the posted service invoice. The amount does not include Tax.;
                ApplicationArea=#Service;
                SourceExpr=CustAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Tax Amount;
                ToolTipML=ENU=Specifies the total Tax amount on the posted service invoice.;
                ApplicationArea=#Service;
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code";
                CaptionClass=FORMAT(VATAmountText) }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Total Incl. Tax;
                ToolTipML=ENU=Specifies the total amount, including Tax, that has been posted as invoiced to the customer's account.;
                ApplicationArea=#Service;
                SourceExpr=AmountInclVAT;
                AutoFormatType=1;
                AutoFormatExpr="Currency Code" }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Sales ($);
                ToolTipML=ENU=Specifies your total service sales turnover in the fiscal year. It is calculated from amounts excluding Tax on all completed and open service sales invoices and credit memos.;
                ApplicationArea=#Service;
                SourceExpr=AmountLCY;
                AutoFormatType=1 }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Original Profit ($);
                ToolTipML=ENU=Specifies the amount of profit on the service invoice (in $), prior to any item cost adjustments. The program calculates the amount as the difference between the values in the Amount and the Original Cost ($) fields.;
                ApplicationArea=#Service;
                SourceExpr=ProfitLCY;
                AutoFormatType=1 }

    { 35  ;2   ;Field     ;
                CaptionML=ENU=Adjusted Profit ($);
                ToolTipML=ENU="Specifies the amount of profit for the service invoice, in $, adjusted for any changes in the original item costs. ";
                ApplicationArea=#Service;
                SourceExpr=AdjProfitLCY;
                AutoFormatType=1 }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Original Profit %;
                ToolTipML=ENU=Specifies the profit amount for the invoiced quantity, expressed in percentage, prior to any item cost adjustments on the service order.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=ProfitPct }

    { 39  ;2   ;Field     ;
                CaptionML=ENU=Adjusted Profit %;
                ToolTipML=ENU=Specifies the amount of the adjusted profit on the service invoice, expressed as percentage of the amount in the Amount field.;
                ApplicationArea=#Service;
                DecimalPlaces=1:1;
                SourceExpr=AdjProfitPct }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Quantity;
                ToolTipML=ENU=Specifies the quantity of all G/L account entries, costs, items and/or resource hours in the posted service invoice.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=LineQty }

    { 13  ;2   ;Field     ;
                CaptionML=ENU=Parcels;
                ToolTipML=ENU=Specifies the total number of parcels that were invoiced.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalParcels }

    { 7   ;2   ;Field     ;
                CaptionML=ENU=Net Weight;
                ToolTipML=ENU=Specifies the total net weight of the invoiced items.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalNetWeight }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Gross Weight;
                ToolTipML=ENU=Specifies the total gross weight of the invoiced items.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalGrossWeight }

    { 17  ;2   ;Field     ;
                CaptionML=ENU=Volume;
                ToolTipML=ENU=Specifies the total volume of the invoiced items.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=TotalVolume }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Original Cost ($);
                ToolTipML=ENU=Specifies the total cost (in $) of the G/L account entries, costs, items and/or resources on the posted service credit memo. The cost was calculated as a product of unit cost multiplied by quantity of the relevant items, resources and/or costs on the posted credit memo.;
                ApplicationArea=#Service;
                SourceExpr=CostLCY;
                AutoFormatType=1 }

    { 43  ;2   ;Field     ;
                CaptionML=ENU=Adjusted Cost ($);
                ToolTipML=ENU=Specifies the total cost, in $, of the items in the posted service invoice, adjusted for any changes in the original costs of these items.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY;
                AutoFormatType=1 }

    { 41  ;2   ;Field     ;
                Name=CostAdjmtAmountLCY;
                CaptionML=ENU=Cost Adjmt. Amount ($);
                ToolTipML=ENU=Specifies the difference between the original cost and the total adjusted cost of the items in the posted service invoice.;
                ApplicationArea=#Service;
                SourceExpr=TotalAdjCostLCY - CostLCY;
                AutoFormatType=1;
                OnLookup=BEGIN
                           LookupAdjmtValueEntries;
                         END;
                          }

    { 18  ;1   ;Part      ;
                Name=Subform;
                ApplicationArea=#Service;
                PagePartID=Page576;
                Editable=FALSE;
                PartType=Page }

    { 1903289601;1;Group  ;
                CaptionML=ENU=Customer }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Balance ($);
                ToolTipML=ENU=Specifies the balance in $ on the customer's account.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Balance (LCY)";
                AutoFormatType=1 }

    { 21  ;2   ;Field     ;
                Name=CreditLimitLCY;
                CaptionML=ENU=Credit Limit ($);
                ToolTipML=ENU=Specifies information about the customer's credit limit.;
                ApplicationArea=#Service;
                SourceExpr=Cust."Credit Limit (LCY)";
                AutoFormatType=1 }

    { 37  ;2   ;Field     ;
                ExtendedDatatype=Ratio;
                CaptionML=ENU=Expended % of Credit Limit ($);
                ToolTipML=ENU=Specifies the expended percentage of the credit limit in ($).;
                ApplicationArea=#Service;
                SourceExpr=CreditLimitLCYExpendedPct }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Tax Amount';
      Text001@1001 : TextConst 'ENU=%1% Tax';
      CurrExchRate@1002 : Record 330;
      ServInvLine@1003 : Record 5993;
      Cust@1004 : Record 18;
      TempVATAmountLine@1005 : TEMPORARY Record 290;
      currency@1022 : Record 4;
      CustAmount@1006 : Decimal;
      AmountInclVAT@1007 : Decimal;
      InvDiscAmount@1008 : Decimal;
      VATAmount@1009 : Decimal;
      CostLCY@1010 : Decimal;
      ProfitLCY@1011 : Decimal;
      ProfitPct@1012 : Decimal;
      AdjProfitLCY@1024 : Decimal;
      AdjProfitPct@1023 : Decimal;
      TotalAdjCostLCY@1025 : Decimal;
      LineQty@1013 : Decimal;
      TotalNetWeight@1014 : Decimal;
      TotalGrossWeight@1015 : Decimal;
      TotalVolume@1016 : Decimal;
      TotalParcels@1017 : Decimal;
      AmountLCY@1018 : Decimal;
      CreditLimitLCYExpendedPct@1019 : Decimal;
      VATPercentage@1020 : Decimal;
      VATAmountText@1021 : Text[30];

    BEGIN
    END.
  }
}

