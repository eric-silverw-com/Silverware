OBJECT Table 355 Dimension Set ID Filter Line
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:15 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Dimension Set ID Filter Line;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code }
    { 2   ;   ;Dimension Code      ;Code20        ;CaptionML=ENU=Dimension Code }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=ENU=Line No. }
    { 4   ;   ;Dimension Value Filter Part;Text250;CaptionML=ENU=Dimension Value Filter Part }
  }
  KEYS
  {
    {    ;Code,Dimension Code,Line No.            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE SetDimensionValueFilter@1(DimensionValueFilter@1002 : Text);
    VAR
      ChunkLength@1001 : Integer;
      i@1003 : Integer;
    BEGIN
      IF "Dimension Code" = '' THEN
        EXIT;
      ChunkLength := MAXSTRLEN("Dimension Value Filter Part");
      RESET;
      SETRANGE(Code,Code);
      SETRANGE("Dimension Code","Dimension Code");
      DELETEALL;
      INIT;
      Code := Code;
      "Dimension Code" := "Dimension Code";
      FOR i := 1 TO ((STRLEN(DimensionValueFilter) DIV ChunkLength) + 1) DO BEGIN
        "Line No." := i;
        "Dimension Value Filter Part" := COPYSTR(DimensionValueFilter,(i - 1) * ChunkLength + 1,i * ChunkLength);
        INSERT;
      END;
    END;

    [External]
    PROCEDURE GetDimensionValueFilter@2(NewCode@1002 : Code[20];NewDimensionCode@1001 : Code[20]) DimensionValueFilter : Text;
    VAR
      DimensionSetIDFilterLine@1000 : Record 355;
    BEGIN
      DimensionSetIDFilterLine := Rec;
      DimensionSetIDFilterLine.COPYFILTERS(Rec);
      RESET;
      SETRANGE(Code,NewCode);
      SETRANGE("Dimension Code",NewDimensionCode);
      IF FINDSET THEN BEGIN
        DimensionValueFilter := "Dimension Value Filter Part";
        IF DimensionSetIDFilterLine.NEXT <> 0 THEN
          REPEAT
            DimensionValueFilter += "Dimension Value Filter Part";
          UNTIL NEXT = 0;
      END;
      Rec := DimensionSetIDFilterLine;
      COPYFILTERS(DimensionSetIDFilterLine);
    END;

    BEGIN
    END.
  }
}

