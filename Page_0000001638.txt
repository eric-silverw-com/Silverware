OBJECT Page 1638 Booking Items
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Bookings Not Invoiced;
               ESM=Reservas no facturadas;
               FRC=R‚servations non factur‚es;
               ENC=Bookings Not Invoiced];
    LinksAllowed=No;
    SourceTable=Table6707;
    PageType=List;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Invoicing;
                                ESM=Nuevo,Procesar,Informe,Facturaci¢n;
                                FRC=Nouveau,Traiter,Rapport,Facturation;
                                ENC=New,Process,Report,Invoicing];
    OnAfterGetRecord=VAR
                       OutlookSynchTypeConv@1000 : Codeunit 5302;
                     BEGIN
                       StartDate := OutlookSynchTypeConv.UTC2LocalDT(GetStartDate);
                       CustomerName := "Customer Name";
                       IF CustomerName = '' THEN
                         CustomerName := NoCustomerSelectedTxt;
                     END;

    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Invoice;
                      CaptionML=[ENU=Create Invoice;
                                 ESM=Crear factura;
                                 FRC=Cr‚er facture;
                                 ENC=Create Invoice];
                      ToolTipML=[ENU=Create a new sales invoice for the selected booking.;
                                 ESM=Crea una nueva factura de venta para la reserva seleccionada.;
                                 FRC=Cr‚ez une facture vente pour la r‚servation s‚lectionn‚e.;
                                 ENC=Create a new sales invoice for the selected booking.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NewSalesInvoice;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=VAR
                                 TempBookingItem@1001 : TEMPORARY Record 6707;
                                 SalesHeader@1000 : Record 36;
                                 CountCust@1004 : Integer;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 GetSelectedRecords(TempBookingItem);

                                 IF TempBookingItem.FINDSET THEN
                                   REPEAT
                                     IF InvoiceItemsForCustomer(TempBookingItem,SalesHeader) THEN
                                       CountCust += 1;
                                   UNTIL TempBookingItem.NEXT = 0;

                                 OutputAction(CountCust,SalesHeader);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Invoice Customer;
                      CaptionML=[ENU=Create Invoice for Customer;
                                 ESM=Crear factura para el cliente;
                                 FRC=Cr‚er une facture pour le client;
                                 ENC=Create Invoice for Customer];
                      ToolTipML=[ENU=Create a new sales invoice for all items booked by the customer on the selected booking.;
                                 ESM=Permite crear una nueva factura de venta para todos los productos reservados por el cliente en la reserva seleccionada.;
                                 FRC=Cr‚ez une facture vente pour tous les articles r‚serv‚s par le client sur la r‚servation s‚lectionn‚e.;
                                 ENC=Create a new sales invoice for all items booked by the customer on the selected booking.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=SuggestCustomerBill;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 SalesHeader@1000 : Record 36;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 IF InvoiceItemsForCustomer(Rec,SalesHeader) THEN
                                   OutputAction(1,SalesHeader);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=MarkInvoiced;
                      CaptionML=[ENU=Mark as Invoiced;
                                 ESM=Marcar como facturado;
                                 FRC=Marquer comme factur‚e;
                                 ENC=Mark as Invoiced];
                      ToolTipML=[ENU=Mark the bookings that you have selected as invoiced. This removes the bookings from this view.;
                                 ESM=Marca las reservas que ha seleccionado como facturadas. Esto quita las reservas de esta vista.;
                                 FRC=Marquez les r‚servations que vous avez s‚lectionn‚es comme factur‚es. Ceci supprime les r‚servations de cette vue.;
                                 ENC=Mark the bookings that you have selected as invoiced. This removes the bookings from this view.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ClearLog;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=VAR
                                 BookingItem@1001 : Record 6707;
                                 TempBookingItem@1004 : TEMPORARY Record 6707;
                                 InstructionMgt@1000 : Codeunit 1330;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 IF InstructionMgt.ShowConfirm(ConfirmMarkQst,InstructionMgt.MarkBookingAsInvoicedWarningCode) THEN BEGIN
                                   GetSelectedRecords(TempBookingItem);
                                   IF TempBookingItem.FINDSET THEN
                                     REPEAT
                                       BookingItem.GET(TempBookingItem.Id);
                                       BookingItem."Invoice Status" := BookingItem."Invoice Status"::open;
                                       BookingItem.MODIFY;
                                       RemoveFromView(TempBookingItem);
                                     UNTIL TempBookingItem.NEXT = 0;
                                 END;

                                 CurrPage.UPDATE;
                               END;

                      Gesture=None }
      { 12      ;1   ;Action    ;
                      Name=InvoiceAll;
                      CaptionML=[ENU=Invoice All;
                                 ESM=Facturar todo;
                                 FRC=Facturer tout;
                                 ENC=Invoice All];
                      ToolTipML=[ENU=Create a new sales invoice for all non-invoiced bookings.;
                                 ESM=Crea una nueva factura de venta para todas las reservas no facturadas.;
                                 FRC=Cr‚ez une facture vente pour toutes les r‚servations non factur‚es.;
                                 ENC=Create a new sales invoice for all non-invoiced bookings.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NewSalesInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 TempBookingItem@1000 : TEMPORARY Record 6707;
                                 SalesHeader@1001 : Record 36;
                                 CountCust@1002 : Integer;
                               BEGIN
                                 IF NOT ActionAllowed THEN
                                   EXIT;

                                 TempBookingItem.COPY(Rec,TRUE);

                                 TempBookingItem.SETFILTER("Customer Name",'<>''''');
                                 IF TempBookingItem.FINDSET THEN
                                   REPEAT
                                     IF InvoiceItemsForCustomer(TempBookingItem,SalesHeader) THEN
                                       CountCust += 1;
                                   UNTIL TempBookingItem.NEXT = 0;

                                 OutputAction(CountCust,SalesHeader);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Start Date;
                           ESM=Fecha de inicio;
                           FRC=Date d‚but;
                           ENC=Start Date];
                ToolTipML=[ENU=Specifies the start date and time of the booking.;
                           ESM=Especifica la fecha y hora de inicio de la reserva.;
                           FRC=Sp‚cifie la date et l'heure de d‚but de la r‚servation.;
                           ENC=Specifies the start date and time of the booking.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartDate }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the duration of the booking that is not yet invoiced.;
                           ESM=Especifica la duraci¢n de la reserva que a£n no se ha facturado.;
                           FRC=Sp‚cifie la dur‚e de la r‚servation qui n'est pas encore factur‚e.;
                           ENC=Specifies the duration of the booking that is not yet invoiced.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Duration }

    { 5   ;2   ;Field     ;
                Name=Customer;
                CaptionML=[ENU=Customer;
                           ESM=Cliente;
                           FRC=Client;
                           ENC=Customer];
                ToolTipML=[ENU=Specifies the name of the customer that the booking is for.;
                           ESM=Especifica el nombre del cliente que es destinatario de la reserva.;
                           FRC=Sp‚cifie le nom du client auquel est destin‚e la r‚servation.;
                           ENC=Specifies the name of the customer that the booking is for.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CustomerName;
                OnDrillDown=VAR
                              Customer@1000 : Record 18;
                            BEGIN
                              IF Customer.FindByEmail(Customer,"Customer Email") THEN
                                PAGE.RUN(PAGE::"Customer Card",Customer);
                            END;
                             }

    { 3   ;2   ;Field     ;
                Name=Service;
                ToolTipML=[ENU=Specifies the subject of the booking.;
                           ESM=Especifica el asunto de la reserva.;
                           FRC=Sp‚cifie l'objet de la r‚servation.;
                           ENC=Specifies the subject of the booking.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Service Name";
                OnDrillDown=VAR
                              BookingServiceMapping@1000 : Record 6706;
                              Item@1001 : Record 27;
                            BEGIN
                              IF BookingServiceMapping.GET("Service ID") THEN
                                IF Item.GET(BookingServiceMapping."Item No.") THEN
                                  PAGE.RUN(PAGE::"Item Card",Item);
                            END;
                             }

  }
  CODE
  {
    VAR
      ConfirmMarkQst@1002 : TextConst 'ENU=The appointments that you mark as invoiced will be removed from this view. You will no longer be able to manage them in this window. Do you want to continue?;ESM=Se quitar n de esta vista las citas que marque como facturadas. Ya no podr  administrarlas en esta ventana. ¨Confirma que desea continuar?;FRC=Les rendez-vous que vous marquez comme factur‚s seront supprim‚s de cette vue. Vous ne pourrez plus les g‚rer dans cette fenˆtre. Voulez-vous continuerÿ?;ENC=The appointments that you mark as invoiced will be removed from this view. You will no longer be able to manage them in this window. Do you want to continue?';
      InvoicePostQst@1003 : TextConst 'ENU=Sales invoices have been created but have not been posted or sent. Would you like to view your list of unposted sales invoices?;ESM=Se han creado las facturas de venta pero no se han registrado o enviado. ¨Desea ver su lista de facturas de venta sin registrar?;FRC=Les factures vente ont ‚t‚ cr‚‚es, mais elles n''ont pas ‚t‚ report‚es ni envoy‚es. Souhaitez-vous afficher la liste des factures vente non report‚es?;ENC=Sales invoices have been created but have not been posted or sent. Would you like to view your list of unposted sales invoices?';
      AlreadyInvoicedMsg@1000 : TextConst 'ENU=The selected appointments have already been invoiced.;ESM=Las citas seleccionadas ya se han facturado.;FRC=Les rendez-vous s‚lectionn‚s ont d‚j… ‚t‚ factur‚s.;ENC=The selected appointments have already been invoiced.';
      StartDate@1004 : DateTime;
      NoCustomerSelectedMsg@1001 : TextConst 'ENU=A customer must be selected to create an invoice for the booking. Select a customer for the booking in the Bookings app, then re-open this page.;ESM=Debe seleccionar un cliente para crear una factura para la reserva. Elija un cliente para la reserva en la aplicaci¢n Bookings y despu‚s vuelva a abrir esta p gina.;FRC=Un client doit ˆtre s‚lectionn‚ pour cr‚er une facture pour la r‚servation. S‚lectionnez un client pour la r‚servation dans l''application Bookings, puis rouvrez cette page.;ENC=A customer must be selected to create an invoice for the booking. Select a customer for the booking in the Bookings app, then re-open this page.';
      NoCustomerSelectedTxt@1006 : TextConst '@@@=Indicates that a customer was not selected for the Bookings appointment.;ENU=<No customer selected>;ESM=<No se ha seleccionado ning£n cliente>;FRC=<Aucun client s‚lectionn‚>;ENC=<No customer selected>';
      CustomerName@1007 : Text;

    LOCAL PROCEDURE ActionAllowed@10() Allowed : Boolean;
    BEGIN
      Allowed := CheckActionAllowed;
      IF "Customer Name" = '' THEN BEGIN
        MESSAGE(NoCustomerSelectedMsg);
        Allowed := FALSE;
      END;
    END;

    PROCEDURE GetSelectedRecords@3(VAR TempBookingItem@1000 : TEMPORARY Record 6707);
    BEGIN
      IF MARKEDONLY THEN BEGIN
        TempBookingItem.COPY(Rec,TRUE);
        TempBookingItem.MARKEDONLY(TRUE);
      END ELSE BEGIN
        TempBookingItem.COPY(Rec,TRUE);
        CurrPage.SETSELECTIONFILTER(TempBookingItem);
      END;
    END;

    LOCAL PROCEDURE InvoiceItemsForCustomer@12(VAR TempBookingItem@1000 : TEMPORARY Record 6707;VAR SalesHeader@1002 : Record 36) InvoiceCreated : Boolean;
    VAR
      BookingManager@1001 : Codeunit 6721;
    BEGIN
      InvoiceCreated := BookingManager.InvoiceItemsForCustomer(Rec,TempBookingItem,SalesHeader);
    END;

    LOCAL PROCEDURE OutputAction@38(CountCust@1000 : Integer;SalesHeader@1002 : Record 36);
    VAR
      PageManagement@1001 : Codeunit 700;
      RecordRef@1003 : RecordRef;
    BEGIN
      RecordRef.GETTABLE(SalesHeader);
      CASE CountCust OF
        0:
          MESSAGE(AlreadyInvoicedMsg);
        1:
          PAGE.RUN(PageManagement.GetConditionalCardPageID(RecordRef),SalesHeader);
        ELSE
          IF CONFIRM(InvoicePostQst) THEN
            PAGE.RUN(PageManagement.GetConditionalListPageID(RecordRef),SalesHeader);
      END;
    END;

    LOCAL PROCEDURE RemoveFromView@4(VAR TempBookingItem@1000 : TEMPORARY Record 6707);
    BEGIN
      GET(TempBookingItem.Id);
      DELETE;
    END;

    BEGIN
    END.
  }
}

