OBJECT Table 112 Sales Invoice Header
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:05 PM;
    Version List=;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Sell-to Customer Name;
    OnDelete=VAR
               PostedDeferralHeader@1002 : Record 1704;
               PostSalesDelete@1003 : Codeunit 363;
               DeferralUtilities@1001 : Codeunit 1720;
             BEGIN
               PostSalesDelete.IsDocumentDeletionAllowed("Posting Date");
               TESTFIELD("No. Printed");
               LOCKTABLE;
               PostSalesDelete.DeleteSalesInvLines(Rec);

               SalesCommentLine.SETRANGE("Document Type",SalesCommentLine."Document Type"::"Posted Invoice");
               SalesCommentLine.SETRANGE("No.","No.");
               SalesCommentLine.DELETEALL;

               ApprovalsMgmt.DeletePostedApprovalEntries(RECORDID);
               PostedDeferralHeader.DeleteForDoc(DeferralUtilities.GetSalesDeferralDocType,'','',
                 SalesCommentLine."Document Type"::"Posted Invoice","No.");
             END;

    CaptionML=ENU=Sales Invoice Header;
    LookupPageID=Page143;
    DrillDownPageID=Page143;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Sell-to Customer No.;
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=ENU=No. }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=ENU=Bill-to Customer No.;
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=ENU=Name }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=ENU=Name 2 }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=ENU=Address }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=ENU=Address 2 }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=City }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=ENU=Contact }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=ENU=Customer PO No. }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   CaptionML=ENU=Ship-to Code }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=ENU=Ship-to Name }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=ENU=Ship-to Name 2 }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=ENU=Ship-to Address }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=ENU=Ship-to Address 2 }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to City }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=ENU=Ship-to Contact }
    { 19  ;   ;Order Date          ;Date          ;CaptionML=ENU=Order Date }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=ENU=Posting Date }
    { 21  ;   ;Shipment Date       ;Date          ;CaptionML=ENU=Shipment Date }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=ENU=Posting Description }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=ENU=Payment Terms Code }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=ENU=Due Date }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=ENU=Payment Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=ENU=Pmt. Discount Date }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=ENU=Shipment Method Code }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=ENU=Location Code }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=ENU=Shortcut Dimension 1 Code;
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=ENU=Shortcut Dimension 2 Code;
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code20      ;TableRelation="Customer Posting Group";
                                                   CaptionML=ENU=Customer Posting Group;
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Currency Code;
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=ENU=Currency Factor;
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=ENU=Customer Price Group }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=ENU=Prices Including Tax }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=ENU=Invoice Disc. Code }
    { 40  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=ENU=Customer Disc. Group }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=ENU=Language Code }
    { 43  ;   ;Salesperson Code    ;Code20        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=ENU=Salesperson Code }
    { 44  ;   ;Order No.           ;Code20        ;AccessByPermission=TableData 110=R;
                                                   CaptionML=ENU=Order No. }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Posted Invoice),
                                                                                                 No.=FIELD(No.),
                                                                                                 Document Line No.=CONST(0)));
                                                   CaptionML=ENU=Comment;
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=ENU=No. Printed;
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=ENU=On Hold }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=ENU=Applies-to Doc. Type;
                                                   OptionCaptionML=ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              CustLedgEntry.SETCURRENTKEY("Document No.");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              PAGE.RUN(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=ENU=Applies-to Doc. No. }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=ENU=Bal. Account No. }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Invoice Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Invoice Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Amount Including Tax;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=ENU=Tax Registration No. }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=ENU=Reason Code }
    { 74  ;   ;Gen. Bus. Posting Group;Code20     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=ENU=Gen. Bus. Posting Group }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=ENU=EU 3-Party Trade }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=ENU=Transaction Type }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=ENU=Transport Method }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Tax Country/Region Code }
    { 79  ;   ;Sell-to Customer Name;Text50       ;CaptionML=ENU=Sell-to Customer Name }
    { 80  ;   ;Sell-to Customer Name 2;Text50     ;CaptionML=ENU=Sell-to Customer Name 2 }
    { 81  ;   ;Sell-to Address     ;Text50        ;CaptionML=ENU=Sell-to Address }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;CaptionML=ENU=Sell-to Address 2 }
    { 83  ;   ;Sell-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Sell-to City }
    { 84  ;   ;Sell-to Contact     ;Text50        ;CaptionML=ENU=Sell-to Contact }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=ZIP Code }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=ENU=State;
                                                   CaptionClass='5,1,' + "Bill-to Country/Region Code" }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Country/Region Code }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Sell-to ZIP Code }
    { 89  ;   ;Sell-to County      ;Text30        ;CaptionML=ENU=Sell-to State;
                                                   CaptionClass='5,1,' + "Sell-to Country/Region Code" }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Sell-to Country/Region Code }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Ship-to ZIP Code }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=ENU=Ship-to State;
                                                   CaptionClass='5,1,' + "Ship-to Country/Region Code" }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=ENU=Ship-to Country/Region Code }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=ENU=Bal. Account Type;
                                                   OptionCaptionML=ENU=G/L Account,Bank Account;
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=ENU=Exit Point }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=ENU=Correction }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 100 ;   ;External Document No.;Code35       ;CaptionML=ENU=External Document No. }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=ENU=Area }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=ENU=Transaction Specification }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=ENU=Payment Method Code }
    { 105 ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   AccessByPermission=TableData 5790=R;
                                                   CaptionML=ENU=Shipping Agent Code }
    { 106 ;   ;Package Tracking No.;Text30        ;CaptionML=ENU=Package Tracking No. }
    { 107 ;   ;Pre-Assigned No. Series;Code20     ;TableRelation="No. Series";
                                                   CaptionML=ENU=Pre-Assigned No. Series }
    { 108 ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 110 ;   ;Order No. Series    ;Code20        ;TableRelation="No. Series";
                                                   CaptionML=ENU=Order No. Series }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=ENU=Pre-Assigned No. }
    { 112 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=ENU=User ID }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=ENU=Source Code }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=ENU=Tax Area Code }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=ENU=Tax Liable }
    { 116 ;   ;VAT Bus. Posting Group;Code20      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=ENU=Tax Bus. Posting Group }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=ENU=VAT Base Discount %;
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 121 ;   ;Invoice Discount Calculation;Option;CaptionML=ENU=Invoice Discount Calculation;
                                                   OptionCaptionML=ENU=None,%,Amount;
                                                   OptionString=None,%,Amount }
    { 122 ;   ;Invoice Discount Value;Decimal     ;CaptionML=ENU=Invoice Discount Value;
                                                   AutoFormatType=1 }
    { 131 ;   ;Prepayment No. Series;Code20       ;TableRelation="No. Series";
                                                   CaptionML=ENU=Prepayment No. Series }
    { 136 ;   ;Prepayment Invoice  ;Boolean       ;CaptionML=ENU=Prepayment Invoice }
    { 137 ;   ;Prepayment Order No.;Code20        ;CaptionML=ENU=Prepayment Order No. }
    { 151 ;   ;Quote No.           ;Code20        ;CaptionML=ENU=Quote No.;
                                                   Editable=No }
    { 166 ;   ;Last Email Sent Time;DateTime      ;FieldClass=FlowField;
                                                   CalcFormula=Max("O365 Document Sent History"."Created Date-Time" WHERE (Document Type=CONST(Invoice),
                                                                                                                           Document No.=FIELD(No.),
                                                                                                                           Posted=CONST(Yes)));
                                                   CaptionML=ENU=Last Email Sent Time }
    { 167 ;   ;Last Email Sent Status;Option      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("O365 Document Sent History"."Job Last Status" WHERE (Document Type=CONST(Invoice),
                                                                                                                            Document No.=FIELD(No.),
                                                                                                                            Posted=CONST(Yes),
                                                                                                                            Created Date-Time=FIELD(Last Email Sent Time)));
                                                   CaptionML=ENU=Last Email Sent Status;
                                                   OptionCaptionML=ENU=Not Sent,In Process,Finished,Error;
                                                   OptionString=Not Sent,In Process,Finished,Error }
    { 168 ;   ;Sent as Email       ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("O365 Document Sent History" WHERE (Document Type=CONST(Invoice),
                                                                                                         Document No.=FIELD(No.),
                                                                                                         Posted=CONST(Yes),
                                                                                                         Job Last Status=CONST(Finished)));
                                                   CaptionML=ENU=Sent as Email }
    { 169 ;   ;Last Email Notif Cleared;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("O365 Document Sent History".NotificationCleared WHERE (Document Type=CONST(Invoice),
                                                                                                                              Document No.=FIELD(No.),
                                                                                                                              Posted=CONST(Yes),
                                                                                                                              Created Date-Time=FIELD(Last Email Sent Time)));
                                                   CaptionML=ENU=Last Email Notif Cleared }
    { 171 ;   ;Sell-to Phone No.   ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=ENU=Sell-to Phone No. }
    { 172 ;   ;Sell-to E-Mail      ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email }
    { 176 ;   ;Payment Instructions;BLOB          ;CaptionML=ENU=Payment Instructions }
    { 177 ;   ;Payment Instructions Name;Text20   ;DataClassification=CustomerContent;
                                                   CaptionML=ENU=Payment Instructions Name }
    { 200 ;   ;Work Description    ;BLOB          ;CaptionML=ENU=Work Description }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=ENU=Dimension Set ID;
                                                   Editable=No }
    { 600 ;   ;Payment Service Set ID;Integer     ;CaptionML=ENU=Payment Service Set ID }
    { 710 ;   ;Document Exchange Identifier;Text50;CaptionML=ENU=Document Exchange Identifier }
    { 711 ;   ;Document Exchange Status;Option    ;CaptionML=ENU=Document Exchange Status;
                                                   OptionCaptionML=ENU=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient;
                                                   OptionString=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient }
    { 712 ;   ;Doc. Exch. Original Identifier;Text50;
                                                   CaptionML=ENU=Doc. Exch. Original Identifier }
    { 720 ;   ;Coupled to CRM      ;Boolean       ;CaptionML=ENU=Coupled to Dynamics 365 for Sales }
    { 1200;   ;Direct Debit Mandate ID;Code35     ;TableRelation="SEPA Direct Debit Mandate" WHERE (Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=ENU=Direct Debit Mandate ID }
    { 1302;   ;Closed              ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=-Exist("Cust. Ledger Entry" WHERE (Entry No.=FIELD(Cust. Ledger Entry No.),
                                                                                                  Open=FILTER(Yes)));
                                                   CaptionML=ENU=Closed;
                                                   Editable=No }
    { 1303;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Cust. Ledger Entry No.)));
                                                   CaptionML=ENU=Remaining Amount;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 1304;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Cust. Ledger Entry No.;
                                                   Editable=No }
    { 1305;   ;Invoice Discount Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Invoice Line"."Inv. Discount Amount" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=ENU=Invoice Discount Amount;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 1310;   ;Cancelled           ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cancelled Document" WHERE (Source ID=CONST(112),
                                                                                                 Cancelled Doc. No.=FIELD(No.)));
                                                   CaptionML=ENU=Canceled;
                                                   Editable=No }
    { 1311;   ;Corrective          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cancelled Document" WHERE (Source ID=CONST(114),
                                                                                                 Cancelled By Doc. No.=FIELD(No.)));
                                                   CaptionML=ENU=Corrective;
                                                   Editable=No }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=ENU=Campaign No. }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Sell-to Contact No. }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=ENU=Bill-to Contact No. }
    { 5055;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=ENU=Opportunity No. }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=ENU=Responsibility Center }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=ENU=Allow Line Disc. }
    { 7200;   ;Get Shipment Used   ;Boolean       ;CaptionML=ENU=Get Shipment Used }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 10005;  ;Ship-to UPS Zone    ;Code2         ;CaptionML=ENU=Ship-to UPS Zone }
    { 10015;  ;Tax Exemption No.   ;Text30        ;CaptionML=ENU=Tax Exemption No. }
    { 10018;  ;STE Transaction ID  ;Text20        ;CaptionML=ENU=STE Transaction ID;
                                                   Editable=No }
    { 10019;  ;Electronic Document Sent;Boolean   ;CaptionML=ENU=Electronic Document Sent;
                                                   Editable=No }
    { 10020;  ;Original Document XML;BLOB         ;CaptionML=ENU=Original Document XML }
    { 10021;  ;No. of E-Documents Sent;Integer    ;CaptionML=ENU=No. of E-Documents Sent;
                                                   Editable=No }
    { 10022;  ;Original String     ;BLOB          ;CaptionML=ENU=Original String }
    { 10023;  ;Digital Stamp SAT   ;BLOB          ;CaptionML=ENU=Digital Stamp SAT }
    { 10024;  ;Certificate Serial No.;Text250     ;CaptionML=ENU=Certificate Serial No.;
                                                   Editable=No }
    { 10025;  ;Signed Document XML ;BLOB          ;CaptionML=ENU=Signed Document XML }
    { 10026;  ;Digital Stamp PAC   ;BLOB          ;CaptionML=ENU=Digital Stamp PAC }
    { 10030;  ;Electronic Document Status;Option  ;CaptionML=ENU=Electronic Document Status;
                                                   OptionCaptionML=ENU=" ,Stamp Received,Sent,Canceled,Stamp Request Error,Cancel Error";
                                                   OptionString=[ ,Stamp Received,Sent,Canceled,Stamp Request Error,Cancel Error];
                                                   Editable=No }
    { 10031;  ;Date/Time Stamped   ;Text50        ;CaptionML=ENU=Date/Time Stamped;
                                                   Editable=No }
    { 10032;  ;Date/Time Sent      ;Text50        ;CaptionML=ENU=Date/Time Sent;
                                                   Editable=No }
    { 10033;  ;Date/Time Canceled  ;Text50        ;CaptionML=ENU=Date/Time Canceled;
                                                   Editable=No }
    { 10035;  ;Error Code          ;Code10        ;CaptionML=ENU=Error Code;
                                                   Editable=No }
    { 10036;  ;Error Description   ;Text250       ;CaptionML=ENU=Error Description;
                                                   Editable=No }
    { 10040;  ;PAC Web Service Name;Text50        ;CaptionML=ENU=PAC Web Service Name;
                                                   Editable=No }
    { 10041;  ;QR Code             ;BLOB          ;CaptionML=ENU=QR Code }
    { 10042;  ;Fiscal Invoice Number PAC;Text50   ;CaptionML=ENU=Fiscal Invoice Number PAC;
                                                   Editable=No }
    { 10043;  ;Date/Time First Req. Sent;Text50   ;CaptionML=ENU=Date/Time First Req. Sent;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Order No.                                }
    {    ;Pre-Assigned No.                         }
    {    ;Sell-to Customer No.,External Document No.;
                                                   MaintainSQLIndex=No }
    {    ;Sell-to Customer No.,Order Date         ;MaintainSQLIndex=No }
    {    ;Sell-to Customer No.                     }
    {    ;Prepayment Order No.,Prepayment Invoice  }
    {    ;Bill-to Customer No.                     }
    {    ;Posting Date                             }
    {    ;Document Exchange Status                 }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Sell-to Customer No.,Bill-to Customer No.,Posting Date,Posting Description }
    { 2   ;Brick               ;No.,Sell-to Customer Name,Amount,Due Date,Amount Including VAT }
  }
  CODE
  {
    VAR
      SalesCommentLine@1001 : Record 44;
      SalesSetup@1007 : Record 311;
      CustLedgEntry@1003 : Record 21;
      DimMgt@1005 : Codeunit 408;
      ApprovalsMgmt@1008 : Codeunit 1535;
      UserSetupMgt@1002 : Codeunit 5700;
      Text10000@1020000 : TextConst 'ENU=There is no electronic stamp for document no. %1.';
      DocTxt@1000 : TextConst 'ENU=Invoice';
      EInvoiceMgt@1020002 : Codeunit 10145;
      PaymentReference@1214 : Text;
      PaymentReferenceLbl@1215 : Text;

    PROCEDURE SendRecords@12();
    VAR
      DocumentSendingProfile@1001 : Record 60;
      DummyReportSelections@1000 : Record 77;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeSendRecords(DummyReportSelections,Rec,DocTxt,IsHandled);
      IF NOT IsHandled THEN BEGIN
        EInvoiceMgt.EDocPrintValidation(0,"No.");
        DocumentSendingProfile.SendCustomerRecords(
          DummyReportSelections.Usage::"S.Invoice",Rec,DocTxt,"Bill-to Customer No.","No.",
          FIELDNO("Bill-to Customer No."),FIELDNO("No."));
      END;
    END;

    [External]
    PROCEDURE SendProfile@72(VAR DocumentSendingProfile@1000 : Record 60);
    VAR
      DummyReportSelections@1003 : Record 77;
      IsHandled@1001 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeSendProfile(DummyReportSelections,Rec,DocTxt,IsHandled);
      IF NOT IsHandled THEN
        DocumentSendingProfile.Send(
          DummyReportSelections.Usage::"S.Invoice",Rec,"No.","Bill-to Customer No.",
          DocTxt,FIELDNO("Bill-to Customer No."),FIELDNO("No."));
    END;

    [External]
    PROCEDURE PrintRecords@1(ShowRequestPage@1000 : Boolean);
    VAR
      DocumentSendingProfile@1002 : Record 60;
      DummyReportSelections@1001 : Record 77;
      IsHandled@1003 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforePrintRecords(DummyReportSelections,Rec,ShowRequestPage,IsHandled);
      IF NOT IsHandled THEN BEGIN
        EInvoiceMgt.EDocPrintValidation(0,"No.");
        DocumentSendingProfile.TrySendToPrinter(
          DummyReportSelections.Usage::"S.Invoice",Rec,FIELDNO("Bill-to Customer No."),ShowRequestPage);
      END;
    END;

    PROCEDURE EmailRecords@17(ShowDialog@1000 : Boolean);
    VAR
      DocumentSendingProfile@1003 : Record 60;
      DummyReportSelections@1001 : Record 77;
      IsHandled@1002 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeEmailRecords(DummyReportSelections,Rec,DocTxt,ShowDialog,IsHandled);
      IF NOT IsHandled THEN BEGIN
        EInvoiceMgt.EDocPrintValidation(0,"No.");
        DocumentSendingProfile.TrySendToEMail(
          DummyReportSelections.Usage::"S.Invoice",Rec,FIELDNO("No."),DocTxt,FIELDNO("Bill-to Customer No."),ShowDialog);
      END;
    END;

    PROCEDURE GetDocTypeTxt@140() : Text[50];
    BEGIN
      EXIT(DocTxt);
    END;

    [External]
    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    [External]
    PROCEDURE LookupAdjmtValueEntries@3();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Invoice");
      ValueEntry.SETRANGE(Adjustment,TRUE);
      PAGE.RUNMODAL(0,ValueEntry);
    END;

    [External]
    PROCEDURE GetCustomerVATRegistrationNumber@14() : Text;
    BEGIN
      EXIT("VAT Registration No.");
    END;

    [External]
    PROCEDURE GetCustomerVATRegistrationNumberLbl@15() : Text;
    BEGIN
      IF "VAT Registration No." = '' THEN
        EXIT('');
      EXIT(FIELDCAPTION("VAT Registration No."));
    END;

    [External]
    PROCEDURE GetCustomerGlobalLocationNumber@8() : Text;
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF Customer.GET("Sell-to Customer No.") THEN
        EXIT(Customer.GLN);
      EXIT('');
    END;

    [External]
    PROCEDURE GetCustomerGlobalLocationNumberLbl@10() : Text;
    VAR
      Customer@1000 : Record 18;
    BEGIN
      IF Customer.GET("Sell-to Customer No.") THEN
        EXIT(Customer.FIELDCAPTION(GLN));
      EXIT('');
    END;

    [External]
    PROCEDURE GetPaymentReference@9() : Text;
    BEGIN
      OnGetPaymentReference(PaymentReference);
      EXIT(PaymentReference);
    END;

    [External]
    PROCEDURE GetPaymentReferenceLbl@11() : Text;
    BEGIN
      OnGetPaymentReferenceLbl(PaymentReferenceLbl);
      EXIT(PaymentReferenceLbl);
    END;

    [External]
    PROCEDURE GetLegalStatement@60() : Text;
    BEGIN
      SalesSetup.GET;
      EXIT(SalesSetup.GetLegalStatement);
    END;

    [External]
    PROCEDURE GetRemainingAmount@6() : Decimal;
    VAR
      CustLedgerEntry@1000 : Record 21;
    BEGIN
      CustLedgerEntry.SETRANGE("Customer No.","Bill-to Customer No.");
      CustLedgerEntry.SETRANGE("Posting Date","Posting Date");
      CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
      CustLedgerEntry.SETRANGE("Document No.","No.");
      CustLedgerEntry.SETAUTOCALCFIELDS("Remaining Amount");

      IF NOT CustLedgerEntry.FINDFIRST THEN
        EXIT(0);

      EXIT(CustLedgerEntry."Remaining Amount");
    END;

    [External]
    PROCEDURE ShowDimensions@4();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    [External]
    PROCEDURE SetSecurityFilterOnRespCenter@5();
    BEGIN
      IF UserSetupMgt.GetSalesFilter <> '' THEN BEGIN
        FILTERGROUP(2);
        SETRANGE("Responsibility Center",UserSetupMgt.GetSalesFilter);
        FILTERGROUP(0);
      END;
    END;

    [External]
    PROCEDURE ExportEDocument@1020000();
    VAR
      TempBlob@1020000 : Record 99008535;
      RBMgt@1020001 : Codeunit 419;
    BEGIN
      CALCFIELDS("Signed Document XML");
      IF "Signed Document XML".HASVALUE THEN BEGIN
        TempBlob.Blob := "Signed Document XML";
        RBMgt.BLOBExport(TempBlob,"No." + '.xml',TRUE);
      END ELSE
        ERROR(Text10000,"No.");
    END;

    [External]
    PROCEDURE RequestStampEDocument@1020001();
    VAR
      EInvoiceMgt@1020001 : Codeunit 10145;
      LoCRecRef@1020000 : RecordRef;
    BEGIN
      LoCRecRef.GETTABLE(Rec);
      EInvoiceMgt.RequestStampDocument(LoCRecRef,"Prepayment Invoice");
    END;

    [External]
    PROCEDURE CancelEDocument@1020002();
    VAR
      EInvoiceMgt@1020001 : Codeunit 10145;
      LoCRecRef@1020000 : RecordRef;
    BEGIN
      LoCRecRef.GETTABLE(Rec);
      EInvoiceMgt.CancelDocument(LoCRecRef);
    END;

    [External]
    PROCEDURE GetDocExchStatusStyle@13() : Text;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT('Standard');
        "Document Exchange Status"::"Sent to Document Exchange Service":
          EXIT('Ambiguous');
        "Document Exchange Status"::"Delivered to Recipient":
          EXIT('Favorable');
        ELSE
          EXIT('Unfavorable');
      END;
    END;

    [External]
    PROCEDURE ShowActivityLog@116();
    VAR
      ActivityLog@1000 : Record 710;
    BEGIN
      ActivityLog.ShowEntries(RECORDID);
    END;

    [External]
    PROCEDURE GetSelectedPaymentsText@84() : Text;
    VAR
      PaymentServiceSetup@1000 : Record 1060;
    BEGIN
      EXIT(PaymentServiceSetup.GetSelectedPaymentsText("Payment Service Set ID"));
    END;

    [External]
    PROCEDURE GetWorkDescription@113() : Text;
    BEGIN
      CALCFIELDS("Work Description");
      EXIT(GetWorkDescriptionWorkDescriptionCalculated);
    END;

    [External]
    PROCEDURE GetWorkDescriptionWorkDescriptionCalculated@7() : Text;
    VAR
      TempBlob@1000 : TEMPORARY Record 99008535;
      CR@1004 : Text[1];
    BEGIN
      IF NOT "Work Description".HASVALUE THEN
        EXIT('');

      CR[1] := 10;
      TempBlob.Blob := "Work Description";
      EXIT(TempBlob.ReadAsText(CR,TEXTENCODING::Windows));
    END;

    [External]
    PROCEDURE GetCurrencySymbol@145() : Text[10];
    VAR
      GeneralLedgerSetup@1000 : Record 98;
      Currency@1001 : Record 4;
    BEGIN
      IF GeneralLedgerSetup.GET THEN
        IF ("Currency Code" = '') OR ("Currency Code" = GeneralLedgerSetup."LCY Code") THEN
          EXIT(GeneralLedgerSetup.GetCurrencySymbol);

      IF Currency.GET("Currency Code") THEN
        EXIT(Currency.GetCurrencySymbol);

      EXIT("Currency Code");
    END;

    [External]
    PROCEDURE DocExchangeStatusIsSent@18() : Boolean;
    BEGIN
      EXIT("Document Exchange Status" <> "Document Exchange Status"::"Not Sent");
    END;

    [External]
    PROCEDURE ShowCanceledOrCorrCrMemo@22();
    BEGIN
      CALCFIELDS(Cancelled,Corrective);
      CASE TRUE OF
        Cancelled:
          ShowCorrectiveCreditMemo;
        Corrective:
          ShowCancelledCreditMemo;
      END;
    END;

    [External]
    PROCEDURE ShowCorrectiveCreditMemo@19();
    VAR
      CancelledDocument@1000 : Record 1900;
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      CALCFIELDS(Cancelled);
      IF NOT Cancelled THEN
        EXIT;

      IF CancelledDocument.FindSalesCancelledInvoice("No.") THEN BEGIN
        SalesCrMemoHeader.GET(CancelledDocument."Cancelled By Doc. No.");
        PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      END;
    END;

    [External]
    PROCEDURE ShowCancelledCreditMemo@20();
    VAR
      CancelledDocument@1000 : Record 1900;
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      CALCFIELDS(Corrective);
      IF NOT Corrective THEN
        EXIT;

      IF CancelledDocument.FindSalesCorrectiveInvoice("No.") THEN BEGIN
        SalesCrMemoHeader.GET(CancelledDocument."Cancelled Doc. No.");
        PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      END;
    END;

    [External]
    PROCEDURE GetDefaultEmailDocumentName@21() : Text[150];
    BEGIN
      EXIT(DocTxt);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeEmailRecords@25(ReportSelections@1003 : Record 77;SalesInvoiceHeader@1002 : Record 112;DocTxt@1004 : Text;ShowDialog@1001 : Boolean;VAR IsHandled@1000 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforePrintRecords@24(ReportSelections@1003 : Record 77;SalesInvoiceHeader@1002 : Record 112;ShowRequestPage@1001 : Boolean;VAR IsHandled@1000 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeSendProfile@23(ReportSelections@1003 : Record 77;SalesInvoiceHeader@1002 : Record 112;DocTxt@1001 : Text;VAR IsHandled@1000 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeSendRecords@16(ReportSelections@1000 : Record 77;SalesInvoiceHeader@1001 : Record 112;DocTxt@1002 : Text;VAR IsHandled@1003 : Boolean);
    BEGIN
    END;

    [Integration(TRUE)]
    LOCAL PROCEDURE OnGetPaymentReference@1214(VAR PaymentReference@1213 : Text);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnGetPaymentReferenceLbl@1213(VAR PaymentReferenceLbl@1213 : Text);
    BEGIN
    END;

    BEGIN
    END.
  }
}

