OBJECT Page 1611 Office Customer Details
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:41 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Details;
    SourceTable=Table18;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       PastDue := CalcOverdueBalance;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the payment amount that the customer owes for completed sales. This value is also known as the customer's balance.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Balance (LCY)";
                OnDrillDown=BEGIN
                              OpenCustomerLedgerEntries(FALSE);
                            END;
                             }

    { 5   ;1   ;Field     ;
                Name=Past Due;
                CaptionML=ENU=Past Due;
                ToolTipML=ENU=Specifies the amount of the customer's balance that is overdue for payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PastDue;
                Style=Unfavorable;
                StyleExpr=PastDue > 0 }

    { 4   ;1   ;Field     ;
                Name=LTD Sales;
                CaptionML=ENU=LTD Sales;
                ToolTipML=ENU=Specifies the total life-to-date sales for the customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetTotalSales }

    { 3   ;1   ;Field     ;
                Name=YTD Sales;
                CaptionML=ENU=YTD Sales;
                ToolTipML=ENU=Specifies the total year-to-date sales for the customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetYTDSales;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      CustomerMgt@1025 : Codeunit 1302;
      PastDue@1004 : Decimal;

    LOCAL PROCEDURE GetTotalSales@6() : Decimal;
    BEGIN
      EXIT(CustomerMgt.GetTotalSales("No."));
    END;

    LOCAL PROCEDURE GetYTDSales@1() : Decimal;
    BEGIN
      EXIT(CustomerMgt.GetYTDSales("No."));
    END;

    BEGIN
    END.
  }
}

