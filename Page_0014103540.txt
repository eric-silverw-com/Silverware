OBJECT Page 14103540 Choose New Dimension
{
  OBJECT-PROPERTIES
  {
    Date=04/30/18;
    Time=[ 3:48:49 PM];
    Modified=Yes;
    Version List=VLDM3.00,VLDM4.11-HF,VLDM4.12,VLDM4.14;
  }
  PROPERTIES
  {
    PageType=Card;
    OnInit=BEGIN
             CurrPage.LOOKUPMODE := TRUE;
           END;

    OnOpenPage=VAR
                 RecRef@1000000000 : RecordRef;
               BEGIN
                 //CAN_MY VLDM4.15 ++
                 IF NOT PassParameter THEN
                   Visibility := TRUE
                 ELSE
                   Visibility := FALSE;
                 //CAN_MY VLDM4.15 --
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;Action    ;
                      CaptionML=ENU=Help;
                      Promoted=Yes;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DimensionMgtSetup.GET;
                                 DimensionMgtSetup.SupportWebsite(2, 14103540);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 4   ;2   ;Field     ;
                CaptionML=ENU=Dimension;
                SourceExpr=Dimensions.Code;
                TableRelation=Dimension;
                OnValidate=BEGIN
                             DimensionValue.SETRANGE("Dimension Code", Dimensions.Code);

                             //DM4.11-HF
                             IF PostedDoc THEN
                               GetInvHdrDimValue(DocNo,TabId)
                             ELSE
                               GetDimValue;//DM4.07
                           END;
                            }

    { 1000000000;2;Field  ;
                CaptionML=ENU=Existing Dimension Value;
                SourceExpr=ExistingDimVal;
                Visible=Visibility;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=New Dimension Value;
                SourceExpr=DimensionValue.Code;
                OnValidate=BEGIN
                             IF DimensionValue.Code <> '' THEN
                               DimensionValue.GET(Dimensions.Code, DimensionValue.Code);
                           END;

                OnLookup=BEGIN
                           CLEAR(DimensionValueList);
                           IF (DimensionValue.GETFILTER("Dimension Code") = '') OR (Dimensions.Code = '') THEN
                             ERROR('You must choose a Dimension first.');
                           DimensionValueList.SETTABLEVIEW(DimensionValue);
                           DimensionValueList.LOOKUPMODE(TRUE);
                           DimensionValueList.EDITABLE(FALSE);
                           IF DimensionValueList.RUNMODAL = ACTION::LookupOK THEN
                             DimensionValueList.GETRECORD(DimensionValue);
                         END;
                          }

  }
  CODE
  {
    VAR
      Dimensions@1000000000 : Record 348;
      DimensionValue@1000000001 : Record 349;
      DimensionMgtSetup@1000000003 : Record 14103540;
      DimensionValueList@1000000002 : Page 560;
      ExistingDimVal@1000000004 : Code[20];
      DimSetID@1000000006 : Integer;
      PostedSalesInvHdr@1000000005 : Record 112;
      PostedSalesShipment@1000000013 : Record 110;
      PostedSalesCrMemoHeader@1000000014 : Record 114;
      PostedPurchInvHdr@1000000007 : Record 122;
      PostedPurchRcptHeader@1000000015 : Record 120;
      PostedPurchCrMemoHdr@1000000016 : Record 124;
      GLEntry@1000000017 : Record 17;
      FromInv@1000000008 : Boolean;
      DocNo@1000000009 : Code[20];
      InvDimSetId@1000000010 : Integer;
      TabId@1000000011 : Integer;
      PostedDoc@1000000012 : Boolean;
      ServiceShipmentHeader@1000000018 : Record 5990;
      ServiceShipmentLine@1000000019 : Record 5991;
      ServiceInvoiceHeader@1000000020 : Record 5992;
      ServiceInvoiceLine@1000000021 : Record 5993;
      ServiceCrMemoHeader@1000000022 : Record 5994;
      ServiceCrMemoLine@1000000023 : Record 5995;
      SelectValue@1000000024 : ' ,Item';
      DimensionManagement@1000000025 : Codeunit 14103540;
      Visibility@1000000026 : Boolean;
      PassParameter@1000000028 : Boolean;

    PROCEDURE ReturnValues@1000000000(VAR Dim@1000000000 : Code[20];VAR DimValue@1000000001 : Code[20]);
    BEGIN
      Dim := Dimensions.Code;
      DimValue := DimensionValue.Code;
    END;

    PROCEDURE SetDimensionSetID@1000000001(DimensionSetID@1000000001 : Integer);
    BEGIN
      DimSetID := DimensionSetID //DM4.07>>
    END;

    PROCEDURE GetDimValue@1000000003();
    VAR
      DimensionSetEntry@1000000000 : Record 480;
    BEGIN
      //DM4.07>>
      IF Dimensions.Code <> '' THEN BEGIN
        DimensionSetEntry.RESET;
        DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",DimSetID);
        DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
        IF DimensionSetEntry.FINDFIRST THEN
          ExistingDimVal := DimensionSetEntry."Dimension Value Code"
        ELSE
         ExistingDimVal :='';
      END ELSE
      ExistingDimVal:=''
      //DM4.07<<
    END;

    PROCEDURE GetInvHdrDimValue@1000000005(VAR DocNo@1000000003 : Code[20];VAR Tabid@1000000002 : Integer);
    VAR
      DimensionSetEntry@1000000001 : Record 480;
      TableID@1000000000 : Integer;
    BEGIN
      CLEAR(InvDimSetId);

      IF Dimensions.Code <> '' THEN BEGIN
          CASE Tabid OF
          17:
            BEGIN
              GLEntry.RESET;
              GLEntry.SETRANGE("Document No.",DocNo);
              IF GLEntry.FINDLAST THEN BEGIN
                InvDimSetId := GLEntry."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
            END;
          END;

          110:
            BEGIN
              IF PostedSalesShipment.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedSalesShipment."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
          END;
          112:
            BEGIN
              IF PostedSalesInvHdr.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedSalesInvHdr."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
            END;
          END;
          114:
            BEGIN
              IF PostedSalesCrMemoHeader.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedSalesCrMemoHeader."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
            END;
          END;

          120:
            BEGIN
              IF PostedPurchRcptHeader.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedPurchRcptHeader."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;

          122:
            BEGIN
              IF PostedPurchInvHdr.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedPurchInvHdr."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;
          124:
            BEGIN
              IF PostedPurchCrMemoHdr.GET(DocNo) THEN  BEGIN
                InvDimSetId := PostedPurchCrMemoHdr."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;
      //VLDM4.12++ Service Module
          5990:
            BEGIN
              IF ServiceShipmentHeader.GET(DocNo) THEN  BEGIN
                InvDimSetId := ServiceShipmentHeader."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;

          5992:
            BEGIN
              IF ServiceInvoiceHeader.GET(DocNo) THEN  BEGIN
                InvDimSetId := ServiceInvoiceHeader."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;

          5994:
            BEGIN
              IF ServiceCrMemoHeader.GET(DocNo) THEN  BEGIN
                InvDimSetId := ServiceCrMemoHeader."Dimension Set ID";
                  DimensionSetEntry.RESET;
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Set ID",InvDimSetId);
                  DimensionSetEntry.SETRANGE(DimensionSetEntry."Dimension Code",Dimensions.Code);
                  IF DimensionSetEntry.FINDFIRST THEN
                    ExistingDimVal := DimensionSetEntry."Dimension Value Code"
                  ELSE
                    ExistingDimVal :='';
             END;
           END;
      //VLDM4.12-- Service Module
         END;
        END;
    END;

    PROCEDURE GetDocNo@1000000002(VAR InvDocNo@1000000000 : Code[20];VAR TableID@1000000001 : Integer;VAR ForPostDoc@1000000002 : Boolean);
    BEGIN
      DocNo    := InvDocNo;
      TabId    := TableID ;
      PostedDoc:= ForPostDoc;
    END;

    PROCEDURE GetVisibilityforPrePosted@1000000004(VisibilityPara@1000000000 : Boolean);
    BEGIN
      PassParameter := VisibilityPara;//CAN_MY VLDM4.15 16-04-18
    END;

    BEGIN
    {
      Vertical Leap - Dimension Management
      DM4.11-HF :- New Function added GetInvHdrDimValue to support to show existing Dimensions.
    }
    END.
  }
}

