OBJECT Codeunit 10340 EFT Values
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      BatchHashTotal@1020005 : Decimal;
      TotalBatchDebit@1020004 : Decimal;
      TotalBatchCredit@1020003 : Decimal;
      FileHashTotal@1020008 : Decimal;
      TotalFileDebit@1020009 : Decimal;
      TotalFileCredit@1020010 : Decimal;
      FileEntryAddendaCount@1020011 : Integer;
      SequenceNumber@1020000 : Integer;
      TraceNumber@1020001 : Integer;
      BatchNumber@1020002 : Integer;
      EntryAddendaCount@1020006 : Integer;
      BatchCount@1020007 : Integer;
      NoOfRecords@1020012 : Integer;
      NumberOfCustInfoRec@1020013 : Integer;
      Transactions@1020014 : Integer;
      DataExchEntryNo@1020015 : Integer;
      IsParent@1020016 : Boolean;
      ParentDefCode@1020017 : Code[20];
      EFTFileIsCreated@1020018 : Boolean;
      IATFileIsCreated@1020019 : Boolean;

    PROCEDURE GetSequenceNo@1020000() SequenceNo : Integer;
    BEGIN
      SequenceNo := SequenceNumber;
    END;

    PROCEDURE SetSequenceNo@1020001(SequenceNo@1020000 : Integer);
    BEGIN
      SequenceNumber := SequenceNo;
    END;

    PROCEDURE GetTraceNo@1020002() TraceNo : Integer;
    BEGIN
      TraceNo := TraceNumber;
    END;

    PROCEDURE SetTraceNo@1020003(TraceNo@1020000 : Integer);
    BEGIN
      TraceNumber := TraceNo;
    END;

    PROCEDURE GetFileHashTotal@1020004() FileHashTot : Decimal;
    BEGIN
      FileHashTot := FileHashTotal;
    END;

    PROCEDURE SetFileHashTotal@1020005(FileHashTot@1020000 : Decimal);
    BEGIN
      FileHashTotal := FileHashTot;
    END;

    PROCEDURE GetTotalFileDebit@1020006() TotalFileDr : Decimal;
    BEGIN
      TotalFileDr := TotalFileDebit;
    END;

    PROCEDURE SetTotalFileDebit@1020007(TotalFileDr@1020000 : Decimal);
    BEGIN
      TotalFileDebit := TotalFileDr;
    END;

    PROCEDURE GetTotalFileCredit@1020008() TotalFileCr : Decimal;
    BEGIN
      TotalFileCr := TotalFileCredit;
    END;

    PROCEDURE SetTotalFileCredit@1020009(TotalFileCr@1020000 : Decimal);
    BEGIN
      TotalFileCredit := TotalFileCr;
    END;

    PROCEDURE GetFileEntryAddendaCount@1020010() FileEntryAddendaCt : Integer;
    BEGIN
      FileEntryAddendaCt := FileEntryAddendaCount;
    END;

    PROCEDURE SetFileEntryAddendaCount@1020011(FileEntryAddendaCt@1020000 : Integer);
    BEGIN
      FileEntryAddendaCount := FileEntryAddendaCt;
    END;

    PROCEDURE GetBatchCount@1020012() BatchCt : Integer;
    BEGIN
      BatchCt := BatchCount;
    END;

    PROCEDURE SetBatchCount@1020013(BatchCt@1020000 : Integer);
    BEGIN
      BatchCount := BatchCt;
    END;

    PROCEDURE GetBatchNo@1020014() BatchNo : Integer;
    BEGIN
      BatchNo := BatchNumber;
    END;

    PROCEDURE SetBatchNo@1020015(BatchNo@1020000 : Integer);
    BEGIN
      BatchNumber := BatchNo;
    END;

    PROCEDURE GetBatchHashTotal@1020016() BatchHashTot : Decimal;
    BEGIN
      BatchHashTot := BatchHashTotal;
    END;

    PROCEDURE SetBatchHashTotal@1020017(BatchHashTot@1020000 : Decimal);
    BEGIN
      BatchHashTotal := BatchHashTot;
    END;

    PROCEDURE GetTotalBatchDebit@1020018() TotalBatchDr : Decimal;
    BEGIN
      TotalBatchDr := TotalBatchDebit;
    END;

    PROCEDURE SetTotalBatchDebit@1020019(TotalBatchDr@1020000 : Decimal);
    BEGIN
      TotalBatchDebit := TotalBatchDr;
    END;

    PROCEDURE GetTotalBatchCredit@1020020() TotalBatchCr : Decimal;
    BEGIN
      TotalBatchCr := TotalBatchCredit;
    END;

    PROCEDURE SetTotalBatchCredit@1020021(TotalBatchCr@1020000 : Decimal);
    BEGIN
      TotalBatchCredit := TotalBatchCr;
    END;

    PROCEDURE GetEntryAddendaCount@1020022() EntryAddendaCt : Integer;
    BEGIN
      EntryAddendaCt := EntryAddendaCount;
    END;

    PROCEDURE SetEntryAddendaCount@1020023(EntryAddendaCt@1020000 : Integer);
    BEGIN
      EntryAddendaCount := EntryAddendaCt;
    END;

    PROCEDURE GetNoOfRec@1020024() NoOfRec : Integer;
    BEGIN
      NoOfRec := NoOfRecords;
    END;

    PROCEDURE SetNoOfRec@1020025(NoOfRec@1020000 : Integer);
    BEGIN
      NoOfRecords := NoOfRec;
    END;

    PROCEDURE GetNoOfCustInfoRec@1020026() NoOfCustInfoRec : Integer;
    BEGIN
      NoOfCustInfoRec := NumberOfCustInfoRec;
    END;

    PROCEDURE SetNoOfCustInfoRec@1020027(NoOfCustInfoRec@1020000 : Integer);
    BEGIN
      NumberOfCustInfoRec := NoOfCustInfoRec;
    END;

    PROCEDURE GetTransactions@1020028() Trxs : Integer;
    BEGIN
      Trxs := Transactions;
    END;

    PROCEDURE SetTransactions@1020029(Trxs@1020000 : Integer);
    BEGIN
      Transactions := Trxs;
    END;

    PROCEDURE GetPaymentAmt@1020030(TempEFTExportWorkset@1020000 : TEMPORARY Record 10811) : Decimal;
    BEGIN
      IF TempEFTExportWorkset."Account Type" = TempEFTExportWorkset."Account Type"::"Bank Account" THEN
        EXIT(TempEFTExportWorkset."Amount (LCY)");

      EXIT(-TempEFTExportWorkset."Amount (LCY)");
    END;

    PROCEDURE GetDataExchEntryNo@1020032() DataExchEntryNumber : Integer;
    BEGIN
      DataExchEntryNumber := DataExchEntryNo;
    END;

    PROCEDURE SetDataExchEntryNo@1020031(DataExchEntryNumber@1020000 : Integer);
    BEGIN
      DataExchEntryNo := DataExchEntryNumber;
    END;

    PROCEDURE GetParentDefCode@1020033() ParentDefinitionCode : Code[20];
    BEGIN
      ParentDefinitionCode := ParentDefCode;
    END;

    PROCEDURE SetParentDefCode@1020034(ParentDefinitionCode@1020000 : Code[20]);
    BEGIN
      ParentDefCode := ParentDefinitionCode;
    END;

    PROCEDURE GetParentBoolean@1020035() IsAParent : Boolean;
    BEGIN
      IsAParent := IsParent;
    END;

    PROCEDURE SetParentBoolean@1020036(SetParent@1020000 : Boolean);
    BEGIN
      IsParent := SetParent;
    END;

    PROCEDURE GetIATFileCreated@1020037() IATIsCreated : Boolean;
    BEGIN
      IATIsCreated := IATFileIsCreated;
    END;

    PROCEDURE SetIATFileCreated@1020038(SetIATFile@1020000 : Boolean);
    BEGIN
      IATFileIsCreated := SetIATFile;
    END;

    PROCEDURE GetEFTFileCreated@1020039() EFTIsCreated : Boolean;
    BEGIN
      EFTIsCreated := EFTFileIsCreated;
    END;

    PROCEDURE SetEFTFileCreated@1020040(SetEFTFile@1020000 : Boolean);
    BEGIN
      EFTFileIsCreated := SetEFTFile;
    END;

    BEGIN
    END.
  }
}

