OBJECT Report 1322 Standard Purchase - Order
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:13:06 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Purchase - Order;
    EnableHyperlinks=Yes;
    OnInitReport=BEGIN
                   GLSetup.GET;
                   CompanyInfo.GET;
                   PurchSetup.GET;
                   CompanyInfo.CALCFIELDS(Picture);
                 END;

    OnPreReport=BEGIN
                  IF NOT CurrReport.USEREQUESTPAGE THEN
                    InitLogInteraction;
                END;

    OnPostReport=BEGIN
                   IF LogInteraction AND NOT IsReportInPreviewMode THEN
                     IF "Purchase Header".FINDSET THEN
                       REPEAT
                         SegManagement.LogDocument(
                           13,"Purchase Header"."No.",0,0,DATABASE::Vendor,"Purchase Header"."Buy-from Vendor No.",
                           "Purchase Header"."Purchaser Code",'',"Purchase Header"."Posting Description",'');
                       UNTIL "Purchase Header".NEXT = 0;
                 END;

    PreviewMode=PrintLayout;
    DefaultLayout=Word;
    WordMergeDataItem=Purchase Header;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=ENU=Standard Purchase - Order;
               OnAfterGetRecord=BEGIN
                                  TotalAmount := 0;
                                  TotalSubTotal := 0;
                                  TaxAmount := 0;
                                  TotalInvoiceDiscountAmount := 0;
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  CLEAR(BreakdownTitle);
                                  CLEAR(BreakdownLabel);
                                  CLEAR(BreakdownAmt);

                                  FormatAddressFields("Purchase Header");
                                  FormatDocumentFields("Purchase Header");

                                  IF NOT IsReportInPreviewMode THEN BEGIN
                                    CODEUNIT.RUN(CODEUNIT::"Purch.Header-Printed","Purchase Header");
                                    IF ArchiveDocument THEN
                                      ArchiveManagement.StorePurchDocument("Purchase Header",LogInteraction);
                                  END;

                                  TotalTaxLabel := TaxLbl;
                                  IF "Tax Area Code" <> '' THEN BEGIN
                                    TaxArea.GET("Tax Area Code");
                                    CASE TaxArea."Country/Region" OF
                                      TaxArea."Country/Region"::US:
                                        TotalTaxLabel := TotalSalesTaxLbl;
                                      TaxArea."Country/Region"::CA:
                                        TotalTaxLabel := TotalTaxLbl;
                                    END;
                                    UseExternalTaxEngine := TaxArea."Use External Tax Engine";
                                    SalesTaxCalc.StartSalesTaxCalculation;
                                  END;

                                  IF "Posting Date" <> 0D THEN
                                    UseDate := "Posting Date"
                                  ELSE
                                    UseDate := WORKDATE;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 117 ;1   ;Column  ;CompanyAddress1     ;
               SourceExpr=CompanyAddr[1] }

    { 114 ;1   ;Column  ;CompanyAddress2     ;
               SourceExpr=CompanyAddr[2] }

    { 113 ;1   ;Column  ;CompanyAddress3     ;
               SourceExpr=CompanyAddr[3] }

    { 111 ;1   ;Column  ;CompanyAddress4     ;
               SourceExpr=CompanyAddr[4] }

    { 109 ;1   ;Column  ;CompanyAddress5     ;
               SourceExpr=CompanyAddr[5] }

    { 108 ;1   ;Column  ;CompanyAddress6     ;
               SourceExpr=CompanyAddr[6] }

    { 40  ;1   ;Column  ;CompanyHomePage_Lbl ;
               SourceExpr=HomePageCaptionLbl }

    { 107 ;1   ;Column  ;CompanyHomePage     ;
               SourceExpr=CompanyInfo."Home Page" }

    { 54  ;1   ;Column  ;CompanyEmail_Lbl    ;
               SourceExpr=EmailIDCaptionLbl }

    { 104 ;1   ;Column  ;CompanyEMail        ;
               SourceExpr=CompanyInfo."E-Mail" }

    { 147 ;1   ;Column  ;CompanyPicture      ;
               SourceExpr=CompanyInfo.Picture }

    { 103 ;1   ;Column  ;CompanyPhoneNo      ;
               SourceExpr=CompanyInfo."Phone No." }

    { 102 ;1   ;Column  ;CompanyPhoneNo_Lbl  ;
               SourceExpr=CompanyInfoPhoneNoCaptionLbl }

    { 101 ;1   ;Column  ;CompanyGiroNo       ;
               SourceExpr=CompanyInfo."Giro No." }

    { 100 ;1   ;Column  ;CompanyGiroNo_Lbl   ;
               SourceExpr=CompanyInfoGiroNoCaptionLbl }

    { 99  ;1   ;Column  ;CompanyBankName     ;
               SourceExpr=CompanyInfo."Bank Name" }

    { 97  ;1   ;Column  ;CompanyBankName_Lbl ;
               SourceExpr=CompanyInfoBankNameCaptionLbl }

    { 152 ;1   ;Column  ;CompanyBankBranchNo ;
               SourceExpr=CompanyInfo."Bank Branch No." }

    { 182 ;1   ;Column  ;CompanyBankBranchNo_Lbl;
               SourceExpr=CompanyInfo.FIELDCAPTION("Bank Branch No.") }

    { 48  ;1   ;Column  ;CompanyBankAccountNo;
               SourceExpr=CompanyInfo."Bank Account No." }

    { 47  ;1   ;Column  ;CompanyBankAccountNo_Lbl;
               SourceExpr=CompanyInfoBankAccNoCaptionLbl }

    { 25  ;1   ;Column  ;CompanyIBAN         ;
               SourceExpr=CompanyInfo.IBAN }

    { 106 ;1   ;Column  ;CompanyIBAN_Lbl     ;
               SourceExpr=CompanyInfo.FIELDCAPTION(IBAN) }

    { 186 ;1   ;Column  ;CompanySWIFT        ;
               SourceExpr=CompanyInfo."SWIFT Code" }

    { 187 ;1   ;Column  ;CompanySWIFT_Lbl    ;
               SourceExpr=CompanyInfo.FIELDCAPTION("SWIFT Code") }

    { 23  ;1   ;Column  ;CompanyLogoPosition ;
               SourceExpr=CompanyLogoPosition }

    { 19  ;1   ;Column  ;CompanyRegistrationNumber;
               SourceExpr=CompanyInfo.GetRegistrationNumber }

    { 168 ;1   ;Column  ;CompanyRegistrationNumber_Lbl;
               SourceExpr=CompanyInfo.GetRegistrationNumberLbl }

    { 17  ;1   ;Column  ;CompanyVATRegNo     ;
               SourceExpr=CompanyInfo.GetVATRegistrationNumber }

    { 21  ;1   ;Column  ;CompanyVATRegNo_Lbl ;
               SourceExpr=CompanyInfo.GetVATRegistrationNumberLbl }

    { 14  ;1   ;Column  ;CompanyVATRegistrationNo;
               SourceExpr=CompanyInfo.GetVATRegistrationNumber }

    { 11  ;1   ;Column  ;CompanyVATRegistrationNo_Lbl;
               SourceExpr=CompanyInfo.GetVATRegistrationNumberLbl }

    { 9   ;1   ;Column  ;CompanyLegalOffice  ;
               SourceExpr=CompanyInfo.GetLegalOffice }

    { 7   ;1   ;Column  ;CompanyLegalOffice_Lbl;
               SourceExpr=CompanyInfo.GetLegalOfficeLbl }

    { 173 ;1   ;Column  ;CompanyCustomGiro   ;
               SourceExpr=CompanyInfo.GetCustomGiro }

    { 5   ;1   ;Column  ;CompanyCustomGiro_Lbl;
               SourceExpr=CompanyInfo.GetCustomGiroLbl }

    { 245 ;1   ;Column  ;DocType_PurchHeader ;
               SourceExpr="Document Type" }

    { 246 ;1   ;Column  ;No_PurchHeader      ;
               SourceExpr="No." }

    { 3   ;1   ;Column  ;DocumentTitle_Lbl   ;
               SourceExpr=DocumentTitleLbl }

    { 45  ;1   ;Column  ;Amount_Lbl          ;
               SourceExpr=AmountCaptionLbl }

    { 78  ;1   ;Column  ;PurchLineInvDiscAmt_Lbl;
               SourceExpr=PurchLineInvDiscAmtCaptionLbl }

    { 105 ;1   ;Column  ;Subtotal_Lbl        ;
               SourceExpr=SubtotalCaptionLbl }

    { 86  ;1   ;Column  ;VATAmtLineVAT_Lbl   ;
               SourceExpr=VATAmtLineVATCaptionLbl }

    { 88  ;1   ;Column  ;VATAmtLineVATAmt_Lbl;
               SourceExpr=VATAmtLineVATAmtCaptionLbl }

    { 31  ;1   ;Column  ;VATAmtSpec_Lbl      ;
               SourceExpr=VATAmtSpecCaptionLbl }

    { 130 ;1   ;Column  ;VATIdentifier_Lbl   ;
               SourceExpr=VATIdentifierCaptionLbl }

    { 134 ;1   ;Column  ;VATAmtLineInvDiscBaseAmt_Lbl;
               SourceExpr=VATAmtLineInvDiscBaseAmtCaptionLbl }

    { 135 ;1   ;Column  ;VATAmtLineLineAmt_Lbl;
               SourceExpr=VATAmtLineLineAmtCaptionLbl }

    { 150 ;1   ;Column  ;VALVATBaseLCY_Lbl   ;
               SourceExpr=VALVATBaseLCYCaptionLbl }

    { 167 ;1   ;Column  ;Total_Lbl           ;
               SourceExpr=TotalCaptionLbl }

    { 110 ;1   ;Column  ;PaymentTermsDesc_Lbl;
               SourceExpr=PaymentTermsDescCaptionLbl }

    { 112 ;1   ;Column  ;ShipmentMethodDesc_Lbl;
               SourceExpr=ShipmentMethodDescCaptionLbl }

    { 220 ;1   ;Column  ;PrepymtTermsDesc_Lbl;
               SourceExpr=PrepymtTermsDescCaptionLbl }

    { 57  ;1   ;Column  ;HomePage_Lbl        ;
               SourceExpr=HomePageCaptionLbl }

    { 58  ;1   ;Column  ;EmailID_Lbl         ;
               SourceExpr=EmailIDCaptionLbl }

    { 16  ;1   ;Column  ;AllowInvoiceDisc_Lbl;
               SourceExpr=AllowInvoiceDiscCaptionLbl }

    { 2   ;1   ;Column  ;CurrRepPageNo       ;
               SourceExpr=STRSUBSTNO(PageLbl,FORMAT(CurrReport.PAGENO)) }

    { 28  ;1   ;Column  ;DocumentDate        ;
               SourceExpr=FORMAT("Document Date",0,4) }

    { 49  ;1   ;Column  ;DueDate             ;
               SourceExpr=FORMAT("Due Date",0,4) }

    { 55  ;1   ;Column  ;ExptRecptDt_PurchaseHeader;
               SourceExpr=FORMAT("Expected Receipt Date",0,4) }

    { 60  ;1   ;Column  ;OrderDate_PurchaseHeader;
               SourceExpr=FORMAT("Order Date",0,4) }

    { 29  ;1   ;Column  ;VATNoText           ;
               SourceExpr=VATNoText }

    { 30  ;1   ;Column  ;VATRegNo_PurchHeader;
               SourceExpr="VAT Registration No." }

    { 33  ;1   ;Column  ;PurchaserText       ;
               SourceExpr=PurchaserText }

    { 34  ;1   ;Column  ;SalesPurchPersonName;
               SourceExpr=SalespersonPurchaser.Name }

    { 37  ;1   ;Column  ;ReferenceText       ;
               SourceExpr=ReferenceText }

    { 38  ;1   ;Column  ;YourRef_PurchHeader ;
               SourceExpr="Your Reference" }

    { 115 ;1   ;Column  ;BuyFrmVendNo_PurchHeader;
               SourceExpr="Buy-from Vendor No." }

    { 90  ;1   ;Column  ;BuyFromAddr1        ;
               SourceExpr=BuyFromAddr[1] }

    { 91  ;1   ;Column  ;BuyFromAddr2        ;
               SourceExpr=BuyFromAddr[2] }

    { 92  ;1   ;Column  ;BuyFromAddr3        ;
               SourceExpr=BuyFromAddr[3] }

    { 93  ;1   ;Column  ;BuyFromAddr4        ;
               SourceExpr=BuyFromAddr[4] }

    { 125 ;1   ;Column  ;BuyFromAddr5        ;
               SourceExpr=BuyFromAddr[5] }

    { 126 ;1   ;Column  ;BuyFromAddr6        ;
               SourceExpr=BuyFromAddr[6] }

    { 127 ;1   ;Column  ;BuyFromAddr7        ;
               SourceExpr=BuyFromAddr[7] }

    { 128 ;1   ;Column  ;BuyFromAddr8        ;
               SourceExpr=BuyFromAddr[8] }

    { 121 ;1   ;Column  ;PricesIncludingVAT_Lbl;
               SourceExpr=PricesIncludingVATCaptionLbl }

    { 82  ;1   ;Column  ;PricesInclVAT_PurchHeader;
               SourceExpr="Prices Including VAT" }

    { 221 ;1   ;Column  ;OutputNo            ;
               SourceExpr=OutputNo }

    { 222 ;1   ;Column  ;VATBaseDisc_PurchHeader;
               SourceExpr="VAT Base Discount %" }

    { 223 ;1   ;Column  ;PricesInclVATtxt    ;
               SourceExpr=PricesInclVATtxtLbl }

    { 42  ;1   ;Column  ;PaymentTermsDesc    ;
               SourceExpr=PaymentTerms.Description }

    { 41  ;1   ;Column  ;ShipmentMethodDesc  ;
               SourceExpr=ShipmentMethod.Description }

    { 51  ;1   ;Column  ;PrepmtPaymentTermsDesc;
               SourceExpr=PrepmtPaymentTerms.Description }

    { 56  ;1   ;Column  ;DimText             ;
               SourceExpr=DimText }

    { 35  ;1   ;Column  ;OrderNo_Lbl         ;
               SourceExpr=OrderNoCaptionLbl }

    { 224 ;1   ;Column  ;Page_Lbl            ;
               SourceExpr=PageCaptionLbl }

    { 53  ;1   ;Column  ;DocumentDate_Lbl    ;
               SourceExpr=DocumentDateCaptionLbl }

    { 69  ;1   ;Column  ;BuyFrmVendNo_PurchHeader_Lbl;
               SourceExpr=FIELDCAPTION("Buy-from Vendor No.") }

    { 70  ;1   ;Column  ;PricesInclVAT_PurchHeader_Lbl;
               SourceExpr=FIELDCAPTION("Prices Including VAT") }

    { 18  ;1   ;Column  ;Receiveby_Lbl       ;
               SourceExpr=ReceivebyCaptionLbl }

    { 20  ;1   ;Column  ;Buyer_Lbl           ;
               SourceExpr=BuyerCaptionLbl }

    { 154 ;1   ;Column  ;PayToVendNo_PurchHeader;
               SourceExpr="Pay-to Vendor No." }

    { 149 ;1   ;Column  ;VendAddr8           ;
               SourceExpr=VendAddr[8] }

    { 145 ;1   ;Column  ;VendAddr7           ;
               SourceExpr=VendAddr[7] }

    { 140 ;1   ;Column  ;VendAddr6           ;
               SourceExpr=VendAddr[6] }

    { 136 ;1   ;Column  ;VendAddr5           ;
               SourceExpr=VendAddr[5] }

    { 133 ;1   ;Column  ;VendAddr4           ;
               SourceExpr=VendAddr[4] }

    { 132 ;1   ;Column  ;VendAddr3           ;
               SourceExpr=VendAddr[3] }

    { 131 ;1   ;Column  ;VendAddr2           ;
               SourceExpr=VendAddr[2] }

    { 24  ;1   ;Column  ;VendAddr1           ;
               SourceExpr=VendAddr[1] }

    { 22  ;1   ;Column  ;PaymentDetails_Lbl  ;
               SourceExpr=PaymentDetailsCaptionLbl }

    { 13  ;1   ;Column  ;VendNo_Lbl          ;
               SourceExpr=VendNoCaptionLbl }

    { 52  ;1   ;Column  ;SellToCustNo_PurchHeader;
               SourceExpr="Sell-to Customer No." }

    { 46  ;1   ;Column  ;ShipToAddr1         ;
               SourceExpr=ShipToAddr[1] }

    { 39  ;1   ;Column  ;ShipToAddr2         ;
               SourceExpr=ShipToAddr[2] }

    { 36  ;1   ;Column  ;ShipToAddr3         ;
               SourceExpr=ShipToAddr[3] }

    { 27  ;1   ;Column  ;ShipToAddr4         ;
               SourceExpr=ShipToAddr[4] }

    { 26  ;1   ;Column  ;ShipToAddr5         ;
               SourceExpr=ShipToAddr[5] }

    { 15  ;1   ;Column  ;ShipToAddr6         ;
               SourceExpr=ShipToAddr[6] }

    { 12  ;1   ;Column  ;ShipToAddr7         ;
               SourceExpr=ShipToAddr[7] }

    { 10  ;1   ;Column  ;ShipToAddr8         ;
               SourceExpr=ShipToAddr[8] }

    { 8   ;1   ;Column  ;ShiptoAddress_Lbl   ;
               SourceExpr=ShiptoAddressCaptionLbl }

    { 6   ;1   ;Column  ;SellToCustNo_PurchHeader_Lbl;
               SourceExpr=FIELDCAPTION("Sell-to Customer No.") }

    { 50  ;1   ;Column  ;ItemNumber_Lbl      ;
               SourceExpr=ItemNumberCaptionLbl }

    { 83  ;1   ;Column  ;ItemDescription_Lbl ;
               SourceExpr=ItemDescriptionCaptionLbl }

    { 116 ;1   ;Column  ;ItemQuantity_Lbl    ;
               SourceExpr=ItemQuantityCaptionLbl }

    { 118 ;1   ;Column  ;ItemUnit_Lbl        ;
               SourceExpr=ItemUnitCaptionLbl }

    { 119 ;1   ;Column  ;ItemUnitPrice_Lbl   ;
               SourceExpr=ItemUnitPriceCaptionLbl }

    { 120 ;1   ;Column  ;ItemLineAmount_Lbl  ;
               SourceExpr=ItemLineAmountCaptionLbl }

    { 137 ;1   ;Column  ;ToCaption_Lbl       ;
               SourceExpr=ToCaptionLbl }

    { 129 ;1   ;Column  ;VendorIDCaption_Lbl ;
               SourceExpr=VendorIDCaptionLbl }

    { 98  ;1   ;Column  ;ConfirmToCaption_Lbl;
               SourceExpr=ConfirmToCaptionLbl }

    { 96  ;1   ;Column  ;PurchOrderCaption_Lbl;
               SourceExpr=PurchOrderCaptionLbl }

    { 95  ;1   ;Column  ;PurchOrderNumCaption_Lbl;
               SourceExpr=PurchOrderNumCaptionLbl }

    { 85  ;1   ;Column  ;PurchOrderDateCaption_Lbl;
               SourceExpr=PurchOrderDateCaptionLbl }

    { 247 ;1   ;Column  ;TaxIdentTypeCaption_Lbl;
               SourceExpr=TaxIdentTypeCaptionLbl }

    { 1020012;1;Column  ;InvoiceDiscountCaption_Lbl;
               SourceExpr=InvoiceDiscountCaptionLbl }

    { 1020014;1;Column  ;TotalPriceCaption_Lbl;
               SourceExpr=TotalPriceCaptionLbl }

    { 1020013;1;Column  ;TotalTaxLabel       ;
               SourceExpr=TotalTaxLabel }

    { 1020002;1;Column  ;Tax_Lbl             ;
               SourceExpr=TaxLbl }

    { 166 ;1   ;Column  ;OrderDate_Lbl       ;
               SourceExpr=OrderDateLbl }

    { 139 ;1   ;Column  ;VendorInvoiceNo_Lbl ;
               SourceExpr=VendorInvoiceNoLbl }

    { 160 ;1   ;Column  ;VendorInvoiceNo     ;
               SourceExpr="Vendor Invoice No." }

    { 161 ;1   ;Column  ;VendorOrderNo_Lbl   ;
               SourceExpr=VendorOrderNoLbl }

    { 162 ;1   ;Column  ;VendorOrderNo       ;
               SourceExpr="Vendor Order No." }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               NumberOfLines := COUNT;
                               OnLineNumber := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  AllowInvDisctxt := FORMAT("Allow Invoice Disc.");
                                  TotalSubTotal += "Line Amount";
                                  TotalInvoiceDiscountAmount -= "Inv. Discount Amount";
                                  TotalAmount += Amount;
                                  IF "Cross-Reference No." <> '' THEN
                                    "No." := "Cross-Reference No.";

                                  FormatDocument.SetPurchaseLine("Purchase Line",FormattedQuanitity,FormattedDirectUnitCost);

                                  OnLineNumber := OnLineNumber + 1;

                                  IF ("Purchase Header"."Tax Area Code" <> '') AND NOT UseExternalTaxEngine THEN
                                    SalesTaxCalc.AddPurchLine("Purchase Line");

                                  IF Type = 0 THEN BEGIN
                                    "Unit of Measure" := '';
                                    "Line Amount" := 0;
                                    "Inv. Discount Amount" := 0;
                                    Quantity := 0;
                                  END;

                                  IF OnLineNumber = NumberOfLines THEN
                                    IF "Purchase Header"."Tax Area Code" <> '' THEN BEGIN
                                      IF UseExternalTaxEngine THEN
                                        SalesTaxCalc.CallExternalTaxEngineForPurch("Purchase Header",TRUE)
                                      ELSE
                                        SalesTaxCalc.EndSalesTaxCalculation(UseDate);
                                      SalesTaxCalc.GetSummarizedSalesTaxTable(TempSalesTaxAmtLine);
                                      BrkIdx := 0;
                                      PrevPrintOrder := 0;
                                      PrevTaxPercent := 0;
                                      TaxAmount := 0;

                                      TempSalesTaxAmtLine.RESET;
                                      TempSalesTaxAmtLine.SETCURRENTKEY("Print Order","Tax Area Code for Key","Tax Jurisdiction Code");
                                      IF TempSalesTaxAmtLine.FIND('-') THEN
                                        REPEAT
                                          IF (TempSalesTaxAmtLine."Print Order" = 0) OR
                                             (TempSalesTaxAmtLine."Print Order" <> PrevPrintOrder) OR
                                             (TempSalesTaxAmtLine."Tax %" <> PrevTaxPercent)
                                          THEN BEGIN
                                            BrkIdx := BrkIdx + 1;
                                            IF BrkIdx > 1 THEN BEGIN
                                              IF TaxArea."Country/Region" = TaxArea."Country/Region"::CA THEN
                                                BreakdownTitle := TaxBreakdownLbl
                                              ELSE
                                                BreakdownTitle := SalesTaxBreakdownLbl;
                                            END;
                                            IF BrkIdx > ARRAYLEN(BreakdownAmt) THEN BEGIN
                                              BrkIdx := BrkIdx - 1;
                                              BreakdownLabel[BrkIdx] := OtherTaxesLbl;
                                            END ELSE
                                              BreakdownLabel[BrkIdx] := STRSUBSTNO(TempSalesTaxAmtLine."Print Description",TempSalesTaxAmtLine."Tax %");
                                          END;
                                          BreakdownAmt[BrkIdx] := BreakdownAmt[BrkIdx] + TempSalesTaxAmtLine."Tax Amount";
                                          TaxAmount := TaxAmount + TempSalesTaxAmtLine."Tax Amount";
                                        UNTIL TempSalesTaxAmtLine.NEXT = 0;

                                      IF BrkIdx = 1 THEN BEGIN
                                        CLEAR(BreakdownLabel);
                                        CLEAR(BreakdownAmt);
                                      END;
                                    END;
                                END;

               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 226 ;2   ;Column  ;LineNo_PurchLine    ;
               SourceExpr="Line No." }

    { 227 ;2   ;Column  ;AllowInvDisctxt     ;
               SourceExpr=AllowInvDisctxt }

    { 225 ;2   ;Column  ;Type_PurchLine      ;
               SourceExpr=FORMAT(Type,0,2) }

    { 62  ;2   ;Column  ;No_PurchLine        ;
               SourceExpr="No." }

    { 63  ;2   ;Column  ;Desc_PurchLine      ;
               SourceExpr=Description }

    { 64  ;2   ;Column  ;Qty_PurchLine       ;
               SourceExpr=FormattedQuanitity }

    { 65  ;2   ;Column  ;UOM_PurchLine       ;
               SourceExpr="Unit of Measure" }

    { 66  ;2   ;Column  ;DirUnitCost_PurchLine;
               SourceExpr=FormattedDirectUnitCost;
               AutoFormatType=2;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 67  ;2   ;Column  ;LineDisc_PurchLine  ;
               SourceExpr="Line Discount %" }

    { 68  ;2   ;Column  ;LineAmt_PurchLine   ;
               SourceExpr="Line Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 84  ;2   ;Column  ;AllowInvDisc_PurchLine;
               SourceExpr="Allow Invoice Disc." }

    { 89  ;2   ;Column  ;VATIdentifier_PurchLine;
               SourceExpr="VAT Identifier" }

    { 79  ;2   ;Column  ;InvDiscAmt_PurchLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Currency Code" }

    { 141 ;2   ;Column  ;TotalInclVAT        ;
               SourceExpr="Line Amount" - "Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 43  ;2   ;Column  ;DirectUniCost_Lbl   ;
               SourceExpr=DirectUniCostCaptionLbl }

    { 44  ;2   ;Column  ;PurchLineLineDisc_Lbl;
               SourceExpr=PurchLineLineDiscCaptionLbl }

    { 80  ;2   ;Column  ;VATDiscountAmount_Lbl;
               SourceExpr=VATDiscountAmountCaptionLbl }

    { 72  ;2   ;Column  ;No_PurchLine_Lbl    ;
               SourceExpr=FIELDCAPTION("No.") }

    { 73  ;2   ;Column  ;Desc_PurchLine_Lbl  ;
               SourceExpr=FIELDCAPTION(Description) }

    { 74  ;2   ;Column  ;Qty_PurchLine_Lbl   ;
               SourceExpr=FIELDCAPTION(Quantity) }

    { 76  ;2   ;Column  ;UOM_PurchLine_Lbl   ;
               SourceExpr=ItemUnitOfMeasureCaptionLbl }

    { 77  ;2   ;Column  ;VATIdentifier_PurchLine_Lbl;
               SourceExpr=FIELDCAPTION("VAT Identifier") }

    { 81  ;2   ;Column  ;AmountIncludingVAT  ;
               SourceExpr="Amount Including VAT" }

    { 1020001;2;Column  ;LineAmtTaxAmtInvDiscountAmt;
               SourceExpr="Line Amount" + TaxAmount - "Inv. Discount Amount" }

    { 165 ;2   ;Column  ;UnitPrice_PurchLine ;
               SourceExpr="Unit Price (LCY)" }

    { 176 ;2   ;Column  ;UnitPrice_PurchLine_Lbl;
               SourceExpr=UnitPriceLbl }

    { 164 ;2   ;Column  ;JobNo_PurchLine     ;
               SourceExpr="Job No." }

    { 177 ;2   ;Column  ;JobNo_PurchLine_Lbl ;
               SourceExpr=JobNoLbl }

    { 163 ;2   ;Column  ;JobTaskNo_PurchLine ;
               SourceExpr="Job Task No." }

    { 178 ;2   ;Column  ;JobTaskNo_PurchLine_Lbl;
               SourceExpr=JobTaskNoLbl }

    { 59  ;1   ;DataItem;Totals              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=VAR
                                  TempPrepmtPurchLine@1000 : TEMPORARY Record 39;
                                BEGIN
                                  CLEAR(TempPurchLine);
                                  CLEAR(PurchPost);
                                  TempPurchLine.DELETEALL;
                                  TempVATAmountLine.DELETEALL;
                                  PurchPost.GetPurchLines("Purchase Header",TempPurchLine,0);
                                  TempPurchLine.CalcVATAmountLines(0,"Purchase Header",TempPurchLine,TempVATAmountLine);
                                  TempPurchLine.UpdateVATOnLines(0,"Purchase Header",TempPurchLine,TempVATAmountLine);
                                  VATAmount := TempVATAmountLine.GetTotalVATAmount;
                                  VATBaseAmount := TempVATAmountLine.GetTotalVATBase;
                                  VATDiscountAmount :=
                                    TempVATAmountLine.GetTotalVATDiscount("Purchase Header"."Currency Code","Purchase Header"."Prices Including VAT");
                                  TotalAmountInclVAT := TempVATAmountLine.GetTotalAmountInclVAT;

                                  TempPrepaymentInvLineBuffer.DELETEALL;
                                  PurchasePostPrepayments.GetPurchLines("Purchase Header",0,TempPrepmtPurchLine);
                                  IF NOT TempPrepmtPurchLine.ISEMPTY THEN BEGIN
                                    PurchasePostPrepayments.GetPurchLinesToDeduct("Purchase Header",TempPurchLine);
                                    IF NOT TempPurchLine.ISEMPTY THEN
                                      PurchasePostPrepayments.CalcVATAmountLines("Purchase Header",TempPurchLine,TempPrePmtVATAmountLineDeduct,1);
                                  END;
                                  PurchasePostPrepayments.CalcVATAmountLines("Purchase Header",TempPrepmtPurchLine,TempPrepmtVATAmountLine,0);
                                  TempPrepmtVATAmountLine.DeductVATAmountLine(TempPrePmtVATAmountLineDeduct);
                                  PurchasePostPrepayments.UpdateVATOnLines("Purchase Header",TempPrepmtPurchLine,TempPrepmtVATAmountLine,0);
                                  PurchasePostPrepayments.BuildInvLineBuffer2("Purchase Header",TempPrepmtPurchLine,0,TempPrepaymentInvLineBuffer);
                                  PrepmtVATAmount := TempPrepmtVATAmountLine.GetTotalVATAmount;
                                  PrepmtVATBaseAmount := TempPrepmtVATAmountLine.GetTotalVATBase;
                                  PrepmtTotalAmountInclVAT := TempPrepmtVATAmountLine.GetTotalAmountInclVAT;

                                  TotalAmount := TotalSubTotal + TotalInvoiceDiscountAmount + TaxAmount;
                                END;
                                 }

    { 94  ;2   ;Column  ;VATAmountText       ;
               SourceExpr=TempVATAmountLine.VATAmountText }

    { 87  ;2   ;Column  ;TotalVATAmount      ;
               SourceExpr=VATAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 75  ;2   ;Column  ;TotalVATDiscountAmount;
               SourceExpr=-VATDiscountAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 71  ;2   ;Column  ;TotalVATBaseAmount  ;
               SourceExpr=VATBaseAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 61  ;2   ;Column  ;TotalAmountInclVAT  ;
               SourceExpr=TotalAmountInclVAT;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 158 ;2   ;Column  ;TotalInclVATText    ;
               SourceExpr=TotalInclVATText }

    { 157 ;2   ;Column  ;TotalExclVATText    ;
               SourceExpr=TotalExclVATText }

    { 124 ;2   ;Column  ;TotalSubTotal       ;
               SourceExpr=TotalSubTotal;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 123 ;2   ;Column  ;TotalInvoiceDiscountAmount;
               SourceExpr=TotalInvoiceDiscountAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 122 ;2   ;Column  ;TotalAmount         ;
               SourceExpr=TotalAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 32  ;2   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 1020015;2;Column  ;TaxAmount           ;
               SourceExpr=TaxAmount }

    { 1030000;1;DataItem;TaxBreakdown        ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1030009;2;Column  ;BreakdownTitle      ;
               SourceExpr=BreakdownTitle }

    { 1030008;2;Column  ;BreakdownLabel1     ;
               SourceExpr=BreakdownLabel[1] }

    { 1030007;2;Column  ;BreakdownAmt1       ;
               SourceExpr=FormatBreakdownAmounts(BreakdownLabel[1],BreakdownAmt[1]) }

    { 1030006;2;Column  ;BreakdownLabel2     ;
               SourceExpr=BreakdownLabel[2] }

    { 1030005;2;Column  ;BreakdownAmt2       ;
               SourceExpr=FormatBreakdownAmounts(BreakdownLabel[2],BreakdownAmt[2]) }

    { 1030004;2;Column  ;BreakdownLabel3     ;
               SourceExpr=BreakdownLabel[3] }

    { 1030003;2;Column  ;BreakdownAmt3       ;
               SourceExpr=FormatBreakdownAmounts(BreakdownLabel[3],BreakdownAmt[3]) }

    { 1030002;2;Column  ;BreakdownAmt4       ;
               SourceExpr=FormatBreakdownAmounts(BreakdownLabel[4],BreakdownAmt[4]) }

    { 1030001;2;Column  ;BreakdownLabel4     ;
               SourceExpr=BreakdownLabel[4] }

    { 6558;1   ;DataItem;VATCounter          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF VATAmount = 0 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,TempVATAmountLine.COUNT);
                               CurrReport.CREATETOTALS(
                                 TempVATAmountLine."Line Amount",TempVATAmountLine."Inv. Disc. Base Amount",
                                 TempVATAmountLine."Invoice Discount Amount",TempVATAmountLine."VAT Base",TempVATAmountLine."VAT Amount");
                             END;

               OnAfterGetRecord=BEGIN
                                  TempVATAmountLine.GetLine(Number);
                                END;
                                 }

    { 159 ;2   ;Column  ;VATAmtLineVATBase   ;
               SourceExpr=TempVATAmountLine."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 156 ;2   ;Column  ;VATAmtLineVATAmt    ;
               SourceExpr=TempVATAmountLine."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 155 ;2   ;Column  ;VATAmtLineLineAmt   ;
               SourceExpr=TempVATAmountLine."Line Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 153 ;2   ;Column  ;VATAmtLineInvDiscBaseAmt;
               SourceExpr=TempVATAmountLine."Inv. Disc. Base Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 151 ;2   ;Column  ;VATAmtLineInvDiscAmt;
               SourceExpr=TempVATAmountLine."Invoice Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 148 ;2   ;Column  ;VATAmtLineVAT       ;
               DecimalPlaces=0:5;
               SourceExpr=TempVATAmountLine."VAT %" }

    { 146 ;2   ;Column  ;VATAmtLineVATIdentifier;
               SourceExpr=TempVATAmountLine."VAT Identifier" }

    { 2038;1   ;DataItem;VATCounterLCY       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF (NOT GLSetup."Print VAT specification in LCY") OR
                                  ("Purchase Header"."Currency Code" = '') OR
                                  (TempVATAmountLine.GetTotalVATAmount = 0)
                               THEN
                                 CurrReport.BREAK;

                               SETRANGE(Number,1,TempVATAmountLine.COUNT);

                               IF GLSetup."LCY Code" = '' THEN
                                 VALSpecLCYHeader := VATAmountSpecificationLbl + LocalCurrentyLbl
                               ELSE
                                 VALSpecLCYHeader := VATAmountSpecificationLbl + FORMAT(GLSetup."LCY Code");

                               CurrExchRate.FindCurrency("Purchase Header"."Posting Date","Purchase Header"."Currency Code",1);
                               VALExchRate := STRSUBSTNO(ExchangeRateLbl,CurrExchRate."Relational Exch. Rate Amount",CurrExchRate."Exchange Rate Amount");
                             END;

               OnAfterGetRecord=BEGIN
                                  TempVATAmountLine.GetLine(Number);
                                  VALVATBaseLCY :=
                                    TempVATAmountLine.GetBaseLCY(
                                      "Purchase Header"."Posting Date","Purchase Header"."Currency Code","Purchase Header"."Currency Factor");
                                  VALVATAmountLCY :=
                                    TempVATAmountLine.GetAmountLCY(
                                      "Purchase Header"."Posting Date","Purchase Header"."Currency Code","Purchase Header"."Currency Factor");
                                END;
                                 }

    { 195 ;2   ;Column  ;VALExchRate         ;
               SourceExpr=VALExchRate }

    { 194 ;2   ;Column  ;VALSpecLCYHeader    ;
               SourceExpr=VALSpecLCYHeader }

    { 192 ;2   ;Column  ;VALVATAmountLCY     ;
               SourceExpr=VALVATAmountLCY;
               AutoFormatType=1 }

    { 190 ;2   ;Column  ;VALVATBaseLCY       ;
               SourceExpr=VALVATBaseLCY;
               AutoFormatType=1 }

    { 1849;1   ;DataItem;PrepmtLoop          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(1..));
               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    IF NOT TempPrepaymentInvLineBuffer.FIND('-') THEN
                                      CurrReport.BREAK;
                                  END ELSE
                                    IF TempPrepaymentInvLineBuffer.NEXT = 0 THEN
                                      CurrReport.BREAK;

                                  IF "Purchase Header"."Prices Including VAT" THEN
                                    PrepmtLineAmount := TempPrepaymentInvLineBuffer."Amount Incl. VAT"
                                  ELSE
                                    PrepmtLineAmount := TempPrepaymentInvLineBuffer.Amount;
                                END;
                                 }

    { 175 ;2   ;Column  ;PrepmtLineAmount    ;
               SourceExpr=PrepmtLineAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 172 ;2   ;Column  ;PrepmtInvBufGLAccNo ;
               SourceExpr=TempPrepaymentInvLineBuffer."G/L Account No." }

    { 174 ;2   ;Column  ;PrepmtInvBufDesc    ;
               SourceExpr=TempPrepaymentInvLineBuffer.Description }

    { 144 ;2   ;Column  ;TotalInclVATText2   ;
               SourceExpr=TotalInclVATText }

    { 143 ;2   ;Column  ;TotalExclVATText2   ;
               SourceExpr=TotalExclVATText }

    { 183 ;2   ;Column  ;PrepmtInvBufAmt     ;
               SourceExpr=TempPrepaymentInvLineBuffer.Amount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 184 ;2   ;Column  ;PrepmtVATAmountText ;
               SourceExpr=TempPrepmtVATAmountLine.VATAmountText }

    { 185 ;2   ;Column  ;PrepmtVATAmount     ;
               SourceExpr=PrepmtVATAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 191 ;2   ;Column  ;PrepmtTotalAmountInclVAT;
               SourceExpr=PrepmtTotalAmountInclVAT;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 193 ;2   ;Column  ;PrepmtVATBaseAmount ;
               SourceExpr=PrepmtVATBaseAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 169 ;2   ;Column  ;PrepmtInvBuDescCaption;
               SourceExpr=PrepmtInvBuDescCaptionLbl }

    { 170 ;2   ;Column  ;PrepmtInvBufGLAccNoCaption;
               SourceExpr=PrepmtInvBufGLAccNoCaptionLbl }

    { 171 ;2   ;Column  ;PrepaymentSpecCaption;
               SourceExpr=PrepaymentSpecCaptionLbl }

    { 3388;1   ;DataItem;PrepmtVATCounter    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,TempPrepmtVATAmountLine.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  TempPrepmtVATAmountLine.GetLine(Number);
                                END;
                                 }

    { 205 ;2   ;Column  ;PrepmtVATAmtLineVATAmt;
               SourceExpr=TempPrepmtVATAmountLine."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 206 ;2   ;Column  ;PrepmtVATAmtLineVATBase;
               SourceExpr=TempPrepmtVATAmountLine."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 207 ;2   ;Column  ;PrepmtVATAmtLineLineAmt;
               SourceExpr=TempPrepmtVATAmountLine."Line Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 208 ;2   ;Column  ;PrepmtVATAmtLineVAT ;
               DecimalPlaces=0:5;
               SourceExpr=TempPrepmtVATAmountLine."VAT %" }

    { 198 ;2   ;Column  ;PrepmtVATAmtLineVATId;
               SourceExpr=TempPrepmtVATAmountLine."VAT Identifier" }

    { 203 ;2   ;Column  ;PrepymtVATAmtSpecCaption;
               SourceExpr=PrepymtVATAmtSpecCaptionLbl }

    { 209 ;1   ;DataItem;LetterText          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 210 ;2   ;Column  ;GreetingText        ;
               SourceExpr=GreetingLbl }

    { 211 ;2   ;Column  ;BodyText            ;
               SourceExpr=BodyLbl }

    { 212 ;2   ;Column  ;ClosingText         ;
               SourceExpr=ClosingLbl }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               LogInteractionEnable := TRUE;
               ArchiveDocument := PurchSetup."Archive Orders";
             END;

      OnOpenPage=BEGIN
                   LogInteractionEnable := LogInteraction;
                 END;

    }
    CONTROLS
    {
      { 6   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 5   ;1   ;Group     ;
                  CaptionML=ENU=Options }

      { 2   ;2   ;Field     ;
                  Name=ArchiveDocument;
                  CaptionML=ENU=Archive Document;
                  ToolTipML=ENU=Specifies whether to archive the order.;
                  ApplicationArea=#Suite;
                  SourceExpr=ArchiveDocument }

      { 1   ;2   ;Field     ;
                  Name=LogInteraction;
                  CaptionML=ENU=Log Interaction;
                  ToolTipML=ENU=Specifies if you want to log this interaction.;
                  ApplicationArea=#Suite;
                  SourceExpr=LogInteraction;
                  Enabled=LogInteractionEnable }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PageLbl@1040 : TextConst '@@@="%1 = Page No.";ENU=Page %1';
      VATAmountSpecificationLbl@1039 : TextConst 'ENU="Tax Amount Specification in "';
      LocalCurrentyLbl@1038 : TextConst 'ENU=Local Currency';
      ExchangeRateLbl@1037 : TextConst '@@@="%1 = CurrExchRate.""Relational Exch. Rate Amount"", %2 = CurrExchRate.""Exchange Rate Amount""";ENU=Exchange rate: %1/%2';
      CompanyInfoPhoneNoCaptionLbl@1036 : TextConst 'ENU=Phone No.';
      CompanyInfoGiroNoCaptionLbl@1034 : TextConst 'ENU=Giro No.';
      CompanyInfoBankNameCaptionLbl@1033 : TextConst 'ENU=Bank';
      CompanyInfoBankAccNoCaptionLbl@1032 : TextConst 'ENU=Account No.';
      OrderNoCaptionLbl@1031 : TextConst 'ENU=Order No.';
      PageCaptionLbl@1030 : TextConst 'ENU=Page';
      DocumentDateCaptionLbl@1029 : TextConst 'ENU=Document Date';
      DirectUniCostCaptionLbl@1027 : TextConst 'ENU=Unit Price';
      PurchLineLineDiscCaptionLbl@1026 : TextConst 'ENU=Discount %';
      VATDiscountAmountCaptionLbl@1025 : TextConst 'ENU=Payment Discount on Tax';
      PaymentDetailsCaptionLbl@1023 : TextConst 'ENU=Payment Details';
      VendNoCaptionLbl@1022 : TextConst 'ENU=Vendor No.';
      ShiptoAddressCaptionLbl@1021 : TextConst 'ENU=Ship-to Address';
      PrepmtInvBuDescCaptionLbl@1020 : TextConst 'ENU=Description';
      PrepmtInvBufGLAccNoCaptionLbl@1019 : TextConst 'ENU=G/L Account No.';
      PrepaymentSpecCaptionLbl@1018 : TextConst 'ENU=Prepayment Specification';
      PrepymtVATAmtSpecCaptionLbl@1017 : TextConst 'ENU=Prepayment Tax Amount Specification';
      AmountCaptionLbl@1016 : TextConst 'ENU=Amount';
      PurchLineInvDiscAmtCaptionLbl@1015 : TextConst 'ENU=Invoice Discount Amount';
      SubtotalCaptionLbl@1014 : TextConst 'ENU=Subtotal';
      VATAmtLineVATCaptionLbl@1013 : TextConst 'ENU=Tax %';
      VATAmtLineVATAmtCaptionLbl@1012 : TextConst 'ENU=Tax Amount';
      VATAmtSpecCaptionLbl@1011 : TextConst 'ENU=Tax Amount Specification';
      VATIdentifierCaptionLbl@1010 : TextConst 'ENU=Tax Identifier';
      VATAmtLineInvDiscBaseAmtCaptionLbl@1009 : TextConst 'ENU=Invoice Discount Base Amount';
      VATAmtLineLineAmtCaptionLbl@1008 : TextConst 'ENU=Line Amount';
      VALVATBaseLCYCaptionLbl@1007 : TextConst 'ENU=Tax Base';
      PricesInclVATtxtLbl@1048 : TextConst 'ENU=Prices Including Tax';
      TotalCaptionLbl@1006 : TextConst 'ENU=Total';
      PaymentTermsDescCaptionLbl@1005 : TextConst 'ENU=Payment Terms';
      ShipmentMethodDescCaptionLbl@1004 : TextConst 'ENU=Shipment Method';
      PrepymtTermsDescCaptionLbl@1003 : TextConst 'ENU=Prepmt. Payment Terms';
      HomePageCaptionLbl@1002 : TextConst 'ENU=Home Page';
      EmailIDCaptionLbl@1001 : TextConst 'ENU=Email';
      AllowInvoiceDiscCaptionLbl@1000 : TextConst 'ENU=Allow Invoice Discount';
      GLSetup@1106 : Record 98;
      CompanyInfo@1105 : Record 79;
      ShipmentMethod@1104 : Record 10;
      PaymentTerms@1103 : Record 3;
      PrepmtPaymentTerms@1102 : Record 3;
      SalespersonPurchaser@1101 : Record 13;
      TempVATAmountLine@1100 : TEMPORARY Record 290;
      TempPrepmtVATAmountLine@1099 : TEMPORARY Record 290;
      TempPurchLine@1097 : TEMPORARY Record 39;
      TempPrepaymentInvLineBuffer@1093 : TEMPORARY Record 461;
      TempPrePmtVATAmountLineDeduct@1035 : TEMPORARY Record 290;
      TempSalesTaxAmtLine@1020001 : TEMPORARY Record 10011;
      TaxArea@1020011 : Record 318;
      RespCenter@1092 : Record 5714;
      Language@1091 : Record 8;
      CurrExchRate@1090 : Record 330;
      PurchSetup@1089 : Record 312;
      FormatAddr@1087 : Codeunit 365;
      FormatDocument@1086 : Codeunit 368;
      PurchPost@1085 : Codeunit 90;
      SegManagement@1083 : Codeunit 5051;
      PurchasePostPrepayments@1028 : Codeunit 444;
      ArchiveManagement@1065 : Codeunit 5063;
      SalesTaxCalc@1020013 : Codeunit 398;
      VendAddr@1081 : ARRAY [8] OF Text[90];
      ShipToAddr@1080 : ARRAY [8] OF Text[90];
      CompanyAddr@1079 : ARRAY [8] OF Text[90];
      BuyFromAddr@1078 : ARRAY [8] OF Text[90];
      PurchaserText@1077 : Text[30];
      VATNoText@1076 : Text[80];
      ReferenceText@1075 : Text[80];
      TotalText@1074 : Text[50];
      TotalInclVATText@1073 : Text[50];
      TotalExclVATText@1072 : Text[50];
      FormattedQuanitity@1064 : Text;
      FormattedDirectUnitCost@1070 : Text;
      OutputNo@1067 : Integer;
      DimText@1066 : Text[120];
      LogInteraction@1061 : Boolean;
      VATAmount@1060 : Decimal;
      VATBaseAmount@1059 : Decimal;
      VATDiscountAmount@1058 : Decimal;
      TotalAmountInclVAT@1057 : Decimal;
      VALVATBaseLCY@1056 : Decimal;
      VALVATAmountLCY@1055 : Decimal;
      VALSpecLCYHeader@1054 : Text[80];
      VALExchRate@1053 : Text[50];
      PrepmtVATAmount@1052 : Decimal;
      PrepmtVATBaseAmount@1051 : Decimal;
      PrepmtTotalAmountInclVAT@1050 : Decimal;
      PrepmtLineAmount@1049 : Decimal;
      AllowInvDisctxt@1047 : Text[30];
      LogInteractionEnable@1024 : Boolean INDATASET;
      TotalSubTotal@1044 : Decimal;
      TotalAmount@1043 : Decimal;
      TotalInvoiceDiscountAmount@1042 : Decimal;
      DocumentTitleLbl@1068 : TextConst 'ENU=Purchase Order';
      TaxAmount@1020000 : Decimal;
      CompanyLogoPosition@1069 : Integer;
      ReceivebyCaptionLbl@1071 : TextConst 'ENU=Receive By';
      BuyerCaptionLbl@1107 : TextConst 'ENU=Buyer';
      ItemNumberCaptionLbl@1108 : TextConst 'ENU=Item No.';
      ItemDescriptionCaptionLbl@1109 : TextConst 'ENU=Description';
      ItemQuantityCaptionLbl@1110 : TextConst 'ENU=Quantity';
      ItemUnitCaptionLbl@1111 : TextConst 'ENU=Unit';
      ItemUnitPriceCaptionLbl@1112 : TextConst 'ENU=Unit Price';
      ItemLineAmountCaptionLbl@1113 : TextConst 'ENU=Line Amount';
      PricesIncludingVATCaptionLbl@1114 : TextConst 'ENU=Prices Including Tax';
      ItemUnitOfMeasureCaptionLbl@1115 : TextConst 'ENU=Unit';
      ToCaptionLbl@1123 : TextConst 'ENU=To:';
      VendorIDCaptionLbl@1122 : TextConst 'ENU=Vendor ID';
      ConfirmToCaptionLbl@1121 : TextConst 'ENU=Confirm To';
      PurchOrderCaptionLbl@1120 : TextConst 'ENU=PURCHASE ORDER';
      PurchOrderNumCaptionLbl@1119 : TextConst 'ENU=Purchase Order Number:';
      PurchOrderDateCaptionLbl@1118 : TextConst 'ENU=Purchase Order Date:';
      TaxIdentTypeCaptionLbl@1117 : TextConst 'ENU=Tax Ident. Type';
      TotalPriceCaptionLbl@1126 : TextConst 'ENU=Total Price';
      ArchiveDocument@1063 : Boolean;
      VendorOrderNoLbl@1082 : TextConst 'ENU=Vendor Order No.';
      VendorInvoiceNoLbl@1084 : TextConst 'ENU=Vendor Invoice No.';
      InvoiceDiscountCaptionLbl@1124 : TextConst 'ENU=Invoice Discount';
      SalesTaxBreakdownLbl@1020007 : TextConst 'ENU=Sales Tax Breakdown';
      OtherTaxesLbl@1020006 : TextConst 'ENU=Other Taxes';
      TotalSalesTaxLbl@1020005 : TextConst 'ENU=Total Sales Tax';
      TotalTaxLbl@1020003 : TextConst 'ENU=Total Tax';
      TaxLbl@1020002 : TextConst 'ENU=Tax';
      TotalTaxLabel@1020010 : Text[30];
      BreakdownTitle@1020009 : Text[30];
      BreakdownLabel@1020008 : ARRAY [4] OF Text[30];
      UseExternalTaxEngine@1020012 : Boolean;
      NumberOfLines@1020015 : Integer;
      OnLineNumber@1020014 : Integer;
      UseDate@1020019 : Date;
      BrkIdx@1020020 : Integer;
      PrevPrintOrder@1020022 : Integer;
      PrevTaxPercent@1020021 : Decimal;
      TaxBreakdownLbl@1020023 : TextConst 'ENU=Tax Breakdown';
      BreakdownAmt@1020004 : ARRAY [4] OF Decimal;
      GreetingLbl@1020024 : TextConst 'ENU=Hello';
      ClosingLbl@1020018 : TextConst 'ENU=Sincerely';
      BodyLbl@1020016 : TextConst 'ENU=The purchase order is attached to this message.';
      OrderDateLbl@1020017 : TextConst 'ENU=Order Date';
      UnitPriceLbl@1020027 : TextConst 'ENU=Unit Price ($)';
      JobNoLbl@1020026 : TextConst 'ENU=Job No.';
      JobTaskNoLbl@1020025 : TextConst 'ENU=Job Task No.';

    [External]
    PROCEDURE InitializeRequest@4(LogInteractionParam@1003 : Boolean);
    BEGIN
      LogInteraction := LogInteractionParam;
    END;

    LOCAL PROCEDURE IsReportInPreviewMode@7() : Boolean;
    VAR
      MailManagement@1000 : Codeunit 9520;
    BEGIN
      EXIT(CurrReport.PREVIEW OR MailManagement.IsHandlingGetEmailBody);
    END;

    LOCAL PROCEDURE FormatAddressFields@1(VAR PurchaseHeader@1000 : Record 38);
    BEGIN
      FormatAddr.GetCompanyAddr(PurchaseHeader."Responsibility Center",RespCenter,CompanyInfo,CompanyAddr);
      FormatAddr.PurchHeaderBuyFrom(BuyFromAddr,PurchaseHeader);
      IF PurchaseHeader."Buy-from Vendor No." <> PurchaseHeader."Pay-to Vendor No." THEN
        FormatAddr.PurchHeaderPayTo(VendAddr,PurchaseHeader);
      FormatAddr.PurchHeaderShipTo(ShipToAddr,PurchaseHeader);
    END;

    LOCAL PROCEDURE FormatDocumentFields@2(PurchaseHeader@1000 : Record 38);
    BEGIN
      WITH PurchaseHeader DO BEGIN
        FormatDocument.SetTotalLabels("Currency Code",TotalText,TotalInclVATText,TotalExclVATText);
        FormatDocument.SetPurchaser(SalespersonPurchaser,"Purchaser Code",PurchaserText);
        FormatDocument.SetPaymentTerms(PaymentTerms,"Payment Terms Code","Language Code");
        FormatDocument.SetPaymentTerms(PrepmtPaymentTerms,"Prepmt. Payment Terms Code","Language Code");
        FormatDocument.SetShipmentMethod(ShipmentMethod,"Shipment Method Code","Language Code");

        ReferenceText := FormatDocument.SetText("Your Reference" <> '',FIELDCAPTION("Your Reference"));
        VATNoText := FormatDocument.SetText("VAT Registration No." <> '',FIELDCAPTION("VAT Registration No."));
      END;
    END;

    LOCAL PROCEDURE InitLogInteraction@5();
    BEGIN
      LogInteraction := SegManagement.FindInteractTmplCode(13) <> '';
    END;

    LOCAL PROCEDURE FormatBreakdownAmounts@1020000(BreakdownLabel@1020000 : Text;BreakdownAmount@1020001 : Decimal) : Text;
    VAR
      BreakdownTextAmount@1030000 : Text;
    BEGIN
      // If the breakdown label is blank, the breakdown amount should be blank too.
      // This enables the NA report layout to serve both CA and US.
      IF BreakdownLabel <> '' THEN
        BreakdownTextAmount := FORMAT(BreakdownAmount,0,'<Precision,2><Standard Format,0>')
      ELSE
        BreakdownTextAmount := '';

      EXIT(BreakdownTextAmount);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns="http://schemas.microsoft.com/sqlserver/reporting/2016/01/reportdefinition" xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>0e09a881-a901-4d62-8056-25c4b83b9294</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
  WORDLAYOUT
  {
    UEsDBBQABgAIAAAAIQD768Nq2QEAACsMAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzJZNb9swDIbvA/YfDF2HWGkPwzDE6aHdjluBZcCuqg==
    RDvC9AWRaZt/P8lOvKFLa2Oe214C2CLf96Hp0Fxd3FtT3EJE7V3FzsolK8BJr7RrKvZ983nxgRVIwilhvIOK7QHZxfrtm9VmHwCLlO2wYlui8JFzlFuwAksfwKWT2kcrKF3Ghg==
    ByF/igb4+XL5nkvvCBwtKGuw9eoKarEzVHy6T7c7kuAaVlx2cdmqYtrm/Hyfn8yIYPBBigjBaCkonfNbpx5wLQ5MZcpsY3CrA75LAY845JPHDQ55X9PDjFpBcS0ifRE2RfE7Hw==
    FVde7mzKLJ+WOcHp61pL6POzWoheAmLqkjVlf2KFdkf+Uxxyh+TtD2u4JrDX0Qc8m4zTi2Y9iKShf4YjGc6fm6HtB9LeAP7/bnS6w/ZAlBLmADgoDyLcwc232Sj+EB8Eqb0n5w==
    aY5u9NKDEODUTAxH5UGELQgFcfpf8i+CTnhUH2bx74RH1j99HEyrfwb/kfXXyXIjbgzMQXCQHoRojEcUcf8cH6yj13ioF57avzlefnz3LK9mjvdEr+JFprSMQvc7faS1Mk9Zpg==
    yHaZSctt/Ieyj7tozl6EUVtM75ikJ9cHec1VoE5483bVX/8CAAD//wMAUEsDBBQABgAIAAAAIQAekRq37wAAAE4CAAALAAgCX3JlbHMvLnJlbHMgogQCKKAAAgAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAArJLBasMwDEDvg/2D0b1R2sEYo04vY9DbGNkHCFtJTBPb2GrX/v082NgCXelhR8vS05PQenOcRnXglF3wGpZVDYq9Cdb5XsNb+7x4AJWFvKUxeNZw4gyb5vZm/cojSSnKgw==
    i1kVis8aBpH4iJjNwBPlKkT25acLaSIpz9RjJLOjnnFV1/eYfjOgmTHV1mpIW3sHqj1FvoYdus4ZfgpmP7GXMy2Qj8Lesl3EVOqTuDKNain1LBpsMC8lnJFirAoa8LzR6nqjvw==
    p8WJhSwJoQmJL/t8ZlwSWv7niuYZPzbvIVm0X+FvG5xdQfMBAAD//wMAUEsDBBQABgAIAAAAIQBU+GRCYwEAAO4HAAAcAAgBd29yZC9fcmVscy9kb2N1bWVudC54bWwucmVscw==
    IKIEASigAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALxVy07DMBC8I/EPke/ESYDyUJNeEFKvECSubrx5iMSO7C2Qvw==
    xzTk0VJZHFyOOxvPjGad9XL12dTeOyhdSRGT0A+IByKTvBJFTF7Sx4tb4mlkgrNaCohJB5qskvOz5RPUDM0hXVat9gyL0DEpEdt7SnVWQsO0L1sQppNL1TA0pSpoy7I3VgCNgg==
    YEHVnIMke5zemsdErbnRT7sW/sIt87zK4EFm2wYEHpGgJTAOyjAyVQAazl0d+oaI0OP64aVLA0UttWaqG76ZrAwdyn9aNlNOPWnsajPV0Ulf2+RvXMqD4ELi3MCAWMcSufSQSw==
    gSnb1DCZGCGbC6cmsq1G2bwatdGE708orRCayJrJf7ux/jgLtwOSeHBLRsgaidNMviXn66OvrTO5dqn/AZtnQDS7eZbDDLQmEZx+kVqTuHK6s37FMCA2C3envwz2t8RpBmjOzg==
    Ftau7MHRBN17pZMvAAAA//8DAFBLAwQUAAYACABGlW9M4oPR/HEQAAAj9wAAEQAAAHdvcmQvZG9jdW1lbnQueG1s7V3bcuu2Ff0Vj/qQJ0e4EoAnTobXnDNzTuIenySd6XQytA==
    RNtqJFJD0rd0+mV96Cf1FwpeTUqUTcmQTEl8scwLQGBvrIW9ABD833/++90Pj7Ppyb0XRpPAPx/Ab8HgxPNHwXji35wP7uLrUz44iWLXH7vTwPfOB09eNPjh++8ezsbB6G7m+Q==
    8YnMwI/OHuaj88FtHM/PhsNodOvN3Ojb2WQUBlFwHX87CmbD4Pp6MvKGD0E4HiIAQfrfPAxGXhTJp5muf+9Ggzy72XJuwdzz5cXrIJy5sTwMb4YzN/zjbn4qc5+78eRqMp3ETw==
    Mm+gFdkEsg6hf5ZncVoWKElylhUo/ylShG2emyWxcgukTxyG3lSWIfCj28n8uRqb5iYv3haZ3L9UifvZdFC6AJK3+cAK3Qf585xhm+KPs0SzaVbyl3OEoIVHkizKFG2KUH9mUQ==
    kpk78Z8fvJFpKsaFdL0M0GIG85u3OefHMLibP+c2eVtuH/0/yrwSXK+RV+7katWitxXm8tadSwTORmcfb/wgdK+mskTSZSfS6idJsx4kjHMVjJ+S3/hqmv9chPk/l/HT1Dt5OA==
    u3en54OvSfofw4lsQ8P8+m/ymmxJktzk4dNc5u7excHzdUMWR3JgehTMi4x8yXhJilEwDcIiycNZ9GeeUzR3R176f5rP1LuON0x6FcRxMNswcTi5ud30wRM/moy9D29K/etGqQ==
    h0uGv5p+cp+Cu7j00fXk0as48VMQ/FE8ChA9zfJ6Ekbxl0D6FiaHUzc/er5oBtO7mV+5XpxIb/GDD4bs3MqjX7MjWCli2ciSJpX8eyN/ZSZZk0IC87yItfMQc9R0ftX95flh7Q==
    WXEoL8vOefxFFhEIDi1oD/JTX8PknE0ocIxBdnNe1vCDV20TGJEy6+KWUfa3OPqtWorC/uNHt0yX3zkvinORPpzbmg7gYHUZL5JTTEeQgfIuy7t276Zx5eY05/wBNSh/8NwkEg==
    gbnFZOOYTnzv0/20bAdFAdPkyW9e3BcqmbmmTSU7Vp9oHOc/Wd7udOJGRcq//OTen50ML+7C0a0beb8nj/LC4aUMR+JAH49DSbW/f7qaFnhyb+opL9MgLxz/XubwcwLNIcSoaA==
    yJNxkeQUMiJbFQOgqMp8KrF9G0xlkjw6vHDDsgUKaFCb64ZJOSGIWbrNBLYcTecO0THVy1ov5OLGrjHxE5PJnOahJxnhszufy2PZ42Sdjx+B82+SkOI5lBg/+a48ik59917GZQ==
    8yCMo+FL9Rt+kzjzUQaRt+eDoczxTJrkN0lNX9LEf5tNk8r8Hf4jvbZg4uL0kqXlhZT14iD0Psbe7KN1PviXA3VKsaWfmthBp8S0tVNuW/YphJYlBBFMc9i/Cx95j3FumNLn8g==
    H9sfX4TZHfLIDPxYho0KQY0JwsB8DdSOzphJdwCCxPFBcG2HYVmHaO5NZZ8vfVJ0gY01SK3w/ZJf0qqn+b+QuzRyWYoSgsO6xYclJI+ATtPOY+0uaZGy8u4ndKQNE+oaRbGMFw==
    pXFmExn4fdBlQFEUIWxPcsbdkxMGs8THUAm/QQipBKMmWCt6o4JbFtYNh0JMOKXCppaGJKSRbtoEkEOgt6qN95XZ2uELGpqtWZvg66fgUoa4qd4dbtLanylvQ7DE31fdVCO6Nw==
    EdmbQ6b3t+krsdR2iCnpe74G6njpFBLGmAyiKOmJqRJ35TbueamzvFTx0ga0tBu0msk4sv+Uh4pqEEsJxlIpkXY6iVnCxlJaAcs0CDccYTIHCdmCbWIjaIFDwOuClXvMdhazCw==
    nlobt3siGZCqrhkiSDXYEurH0DVXjdzjfOs4byy4AiGBeiHRHSGhiK2QxIFAMjbpyWpJR/Rc1d2YpOKlPdERigBLAZaAA0JrBViuAyQQZxBwQEyo6YZh2Q6lhOg21QQ+BMAumA==
    uQdtZ0G74KlDFRJYCdIhh0KqCID6Ib4GHYF7mO+tjsC9juiOjlBDVhJhHBJMMGsXlxwDW1Vs3JNVZ2OSipf2REgoQiwRgHANo3aANbHJHYIIFIZJTAcKnUOTM+rYBkSayQ8BsA==
    C2buQdtZ0C546lCFBFGDdKQxwDVQLjjuu+aqjXuY762QIL2Q6I6QUENWEEKNybhC6ycklnVEz1XdDUkqXtoTHaEIsAhBjAlAohVgNUKoRLcAjg6IRixOGCTUdiA0delmcQiAXQ==
    MHMP2s6CdsFTh6ojqBKkI0gwBpjyvmtu0BG0h/ne6gja64ju6AhFZKUBygQGtOeqJRnRU1V3I5KKl/ZERqjBKxQccyBQS8Aa3MGGjpiNMSM2pDrktgMg04lGBTIPArALZu5B2w==
    WdAueGpTGZH8ZHva1IIEpgOd4rq1KIF246vf+c0rrZUewLqpoj/LXhO8EBE8vGHHHQhQso5psdU89Jvu9JvunG++6Q7UCmu86bzsQ0jloc2b7thCQ6Tc6CIT9YJTBvVGUd+mIw==
    vXCfkq3evnrhLLK8aKRsXxaImVTqSLR8Bynnj4vnm34/hZwSIKNhchAvGzZZujMdatoq23eo9YbY0DZf2R0kv3llF7H9fVkqJYi/b3JNrQdd9YD1tmbZBJ/G3ZOEgjJQEoQ5Jg==
    WsslcocPytK8R4tEgIll7haJ5eBXZvqOIO2LN/Im997Vk8KtyTAmSApK1PeB2emajY8Wct3q/Go+6QgWkyGopEf+7MW3wVhpXKoxxgBECPSQLMdkl03dFWxmsuhosdnsHOUgXQ==
    MYe8A7mppp8VDAvGEUY9phulZlfQvJ2etj6UuwrNbcPSRdt1pUd0p16Unrzwwijwf3Jnnpr+EHFAGUPtVmYfPnaaDH20+IFEN9B6+GmyX0cwZD/OYxntzmMrLptPdknR4ApjmA==
    ACHaLU46fCittvexAsqRVGvw9QC12oodgdVykKoGToAwgDjV+rHKVUqtKzDajkpTG9ctW29bMmrFHHpDDVfPob+mQ99pDp1qrIEv+yn0fgr9LVPoHBcrrprPr5oSX0kmhkC2MA==
    6gMXjpQ4oHngoraHBIKAaWRzOQQBh1zjlB3EArBfPX8chB/9+2Ay8n4KlA4NtosuGkqwcXix0M21iA/TJvimjq3eFlPa5wYxceP3SvKbdzr8mHWPDWbeQXhZRZ6WTE1jvnm4dw==
    iMhLM31H3FWe36NuW6irGHkXQ/vqu00BsaYxCDaeUztE6JZc+r4d5nHAdsNubqddHNM0ChGGfWi53MG9Z+fWI2Rll7TjIZKGyq0eInmt136/1wxw/5pBP0aidowEFmPYi68NEA==
    1Hh+1f3JJtyN51G5/X79vIaqhWx+LYFbyEJOPW4EjOo6f/FbwPR57+/ilo2WlBTHn2RQPpRhdHoiOVC3kJMAgYFgvOU6ThMzJHQMgQ4INDA3DV0nAunC1h18GBuM1KxenFw0fg==
    V+YnMjQ0UPKoQgx1cky+BT9dRTOkkWaqmd3r08mNX2SWZf1KZ7+wKG0ZWK8sXctvfgcVu+j2jsxL1okhXTynnhqoAAhoGmz3ddajZYZl63eFG7IetOeGLXHDsuM7yQ5/jZ+2QQ==
    DlgAoPF225IdLTcs2b4r1NCHDcvU8M9RcSHVg+oJY6k1dJIvfvn58zZ0BmQcM+motksIj5UylszfGcpI9XVPGVuKJpb83klysCahN4p/8SdmEMXqXlwj0h0EgnbfYjpaalgyfg==
    Z6ghHWLrLDXsfeCw5PiOcEPS5pIGqs+CO18dHZxCypnGKSn3k3mZEITGhCUIMzkzCbSJMBwHmRQygpI5FuMQCGHZ1J0BfzqO3lnwrxMXaLYGbLEPjLDcHHaxvOYNMyKQakma2w==
    L3dTWRjv0R3FizMkb5GqlTnHQ+pZXmsxNT++bRywt2DfBhVyWUu7ttGUB2pXRRZsE3ofqAW32jLbRDXdsus7Ry+LMUXcuOxh1Wql5JQZLZwclvevPVKhRIjIkxqDGoX5wASk+w==
    JRoWLPIGsSBrLkvtubGs56XUopPAX0c6KGoFFYkoPSMgkCKxlUKEMjzVMaWmhR1iMCZs6BgCOhpn2DH0Fe/QNlQ6sd1amklF7IxAuShz1WqiXcGqtghJ1cQAo4AzCFpucXOsow==
    f1XLd0b7N8bFq2U4tAin6DUZXl8r+3JHtlHDX0twN9bgDZirLyrawUjezrihviBCDTsggCmBrO2XC46WHeq27wo/NI889PzwMj/UfXlIDFFbAaGGIIjQku8jtvz88tHyQ83yXQ==
    oYc+fNiEHmquPCR2qC2BUCPgpbDgmMCWL94fKznUDN8ZcmgcG+7J4WVyqLnykMjBmoS/+JM4XQGhliQQlM4nGPcLE19bfbTsgM6QReM0SE8WrwiNJpceEmlkSyRUEwYHhGCpOA==
    +hejXiSMJeN3hiwa5/Z6sniZLJbcua0VR6uvNrNLJ9cnrTFvqwvEqNmZFQXtx+z2oz6H5p/2umhP6tM6dNuT+rTuXTpVn3LFRp1Oc+pcl04bpqyVwLNenItlC1bNVdw8rDhtkw==
    Ze5f3Ucj9Nw/xsGDPyz/+zqJp6omuRAUEGKt5RzXwW8HXjV4+TnDmt27Ekqu11k2tF6CMdRxU+tFiAKHVcHetC5rraAwC+TqltyC3NsW0lfbShXSL++u4iB2pwrfbNMgYqzdaw==
    8lDYRCMONbgJiMVtzqVyhDrAlqVrtnEQSrFq4a6AGGHYuIY22S7qcu6WyzLRug3WRNKb7IUGqx7cVfvuYCSnVfeZlCfKfmTx0l81szuIYsApBe2md44BXpmta0eFybuCtvXi4w==
    bqCqZshtjXv0oXfb0PuTe+VNoRIOOYVCYCEQ7z+w2CL2zgzfFSbpUPC9GFpnhqoxxRY72EaQ6LNYFUQAhBQBBvpvfbfASGL3riBki5KrgpDFxp9YYEdNP9/u3JpEo+RFaNOdJw==
    b2mo24lAExRqkOB2LZ85tm3a1KEQS+GnmzqzBCNcmFwzqUHhIbT91RbvSqM/JDm32todFHcLhc32JlCDQyySD/G1XeV7DDhsUHqN9u8KKvdW9jVa9T01oCP7Xkx7DSgjbKSEXQ==
    EKAaZTJA7TVgWw2IukIrXdeA6L01oBqIQAIphUyQXgK2k4CdAci7ScAdtnyFO89xDQEZZ7b83hu1KGfc1h2DMcKIrRNdd7Apkk7RgBAfSEvv1d2W4svMtB2Tcu6jQuUGGeIYUw==
    jNotlj4KQNWVW2HurgBsL4VaYcRel22my7YVXSspxTtr1NxRV/lNa7yMUh0c+yrRqUatQgEQE7TdUFgSthPNsiQHa4RQRze4jm1iQs41HRrsAAm1sHZXCHW9iCVJuJ2Nc5sAkw==
    vR6ywNhb4vVmJK3F9o3FXo3RfAQvaQw7iLHU8ITKUXNImOBEeqflAqnj5Ip9CL96VlDOCtsNGJOfhs8A1/c+feUzwPnNFQMq/AxwrVgaQLYgLYuV37ydYkXeSGJnddmSfRjTsw==
    jFHTSgtxmwL8i3fthZ4/8p6xkxV5cBJKTpRN7uO4CJmugyBul6JYuL3qGekHciv3Q/DKI5YSlAOqN5d/5gwgA7wUULcJG3AsMmSPZepyHfnNZzdto8FcamYtg18CqSR19o3mjA==
    IsqryaeVy4OsNuVhVtby8OYuTg+LqkhSiZ45hIHCinHy+sDFTXYgu5LkC7rJkya+dzGJR7L0WCudnfk1/fcqGD+l/8g0d7MEPP8HUEsDBBQABgAIAEaVb0zaD9xsYQcAAG0gAA==
    ABAAAAB3b3JkL2hlYWRlcjIueG1s7VnbbuO2Fv0VQX0oUMCjiyXLNsYpHMvOBEhmjCSnPUBbDGiJtoWRRIGk7aRFv6wP/aTzC2eTImXJl0zGTosWmAdbvO3FzX0X9b8//nz7/Q==
    Y5Yaa0xZQvKB6byxTQPnEYmTfDEwV3ze6poG4yiPUUpyPDCfMDO/v3i76S9jagBtzvpoYC45L/qWxaIlzhB7Qwqcw9yc0Axx6NKFFVO0AcwstVzb7lgZSnJT0RdJdAICUPEVxQ==
    GgQ53h5IlkSUMDLnbyKSWWQ+TyKsYQDEsRtsbIp9Ng4ibAiNS3LRKiiJMGMAOUL5GjENl73oUBmin1ZFC9ALxJNZkib8SZ5PwxDQAs37CqJVMSRI+iVD6qEp6Ev2LUlCEq0ynA==
    81KiFKfAA8nZMim2xzgVDSaXGmT93CHWWbpVwUu1eEwHYandLeAJlvU8omO/QCMCoqJ4CQvNPQ95yeY00dSE6/hfBuDuAhSL85RzRcmq2KIl56Fd558qLBGZvgBLKbl+NHYeMw==
    90tUgAdmUf96kROKZilwBCozQOqGMGtTxEw+S9VjSlXjnj+l2Nj01ygdmA+C7oomYDuWmv8R5sCCfNuGyAwjTwUAFxHfrrgERiB+yx4pNFQO0VoQRCQlEBHQihPRZb8OTAnECg==
    FGHZljgpnvMTSWeEc5KdSEyTxfLUjZOcJTF+dxb1DydRW3uCn6UjnKa3iNaEuVGkpc7iR7Rz5sPz1i4a9G4I+aQZtb2hpJonlPE7AiCO6KZI9baTI5Kusrw2rwfkkpy8u4S0Xg==
    9X4oe06NicpIhUmK5gKeAKJMstdx1Ika457r+TUQTcspTEOZEd/BlvbIa3u2ZEwMPVAx5nXavTAsHSUq/xUHkfICt+f29r3A2q4sju8xFUNuzxlPfD10F+I5WqVcbh74Q68tNw==
    LxRW0zUTnmK9nVrBYq4eZR+lCWKa4Jv3aN03rOmKRkvE8Md3GIG1WDpJSryPN7NUOzJaNCnvZdFF448VwgdhbpbTdl1twrEmabW9XtDudDw1U6RgrUuSAoHoxiSaIlr5mTr2dA==
    u+hjy+n6IKy251UWvouBOLpMclEYAk5B8Tx5vEVFAX2InWUYzZk9+FYkx21SjJ9yBD3WytEaKoyCUM6s585mfSvU8wjl0HJgWoDYB3H8CK52J4n/m6XiKD85v8i5HfHq4T0pww==
    hPRiTii+5ji7DgfmbxNn6PvtcNgatSduyxuNO63uOBy3HCcMez2QaGcS/K71gx+5Ekylb2iM83hKyxXQG5Gcw65SA5SQ+ZjSylpZAS4NB6c6dFf+MJXWfxm6jt816washuT2Fw==
    e0eSdi8Zosc3BP7MLdsVf1ZlvA2vnAzt7lilKpEZddQDbTNM19i8MHZ2PcUF3pNS72X3dezfsV2n3fMdx/7qASVJQ8j/ZPPfs/Qm669h5kKX5wbsEHH8SrbaDbxuu9sJgq+22g==
    iNZCxH+/pdbtcOz7YW/cKBnCoR20vUMlg5o5WjLcr2b8QNXwAtdoRnwhli/1guKZkF80E0/zzHf7Z/6MGD5XOR0Rwym+OEWLV6yZuq7jBp7T6351w3JYSfefnixqfscvNNN/QQ==
    NVTf50g1tFsONejtnud7Q0k/T+PREolZ1XqQTM3wQlzwWJ8HgLdVTh+EXA8zMh1ejQ3j5++MIUWzJJLN2/Hd1Xjy4e52+CD5rDBO5pfhAlGdBw9iTAK3a5cYtFR8TqZCF5pCvQ==
    0V0450kObzW5T96x7WH3ecVZu5oD9PskK2TYkoIamMb7/9wKud4be+I0X+vgVm3nWuDW77/H3oL9s96C1Yv2oVi+fQU/GMt3SvYZU089L24+BG5BILw5jr+9CFBrlRhmdalscw==
    Aj22pNykpu/d7HGY6CU5ZSSu3vOnqf6c8BqZxbXtbte1PV+nFrYk4hJ5mkbvYhUC/1WpoSmksxOE+nbzJTmi4WztMBiGgbmr+CM+p673oVmAa6dJjo04YfxBXn2J1mXVuqlaYg==
    H1OSQMAEHozoESy614H3FFgRPUHH9gM3KC1cLJvPccTH5eJU4nD5T+X/bGD2fLdaLYoLaiTlhRtoFBxZCddw9Jro/fqKomKZRBMKK8RhUH9RG7kh0Sd29ke4nEBYzRd4CCky4g==
    2xvA5xk4d9saFNS3yFjR/c8BL/8IePEWWsKsXuWTYomWr0Ej4syiA6JQ+rIP60svKkmQ4KBUzwHxVkOUks0SHI1VUm/CWHt8zNKkmCRpKrYQbYP2cTbDwBe9jh0pVbDXG8ZVqw==
    lOtvbncISdW9bI18e9Ty7GDcGva8oBXY48Czva4zcka/C2rH66+YMCyUhkXyCt9Wyzvr8nCSI/2UPFrlKQSzjEZ3ICCxEDqcYh4tRXMOp9UTVm3GaopD9BikEWO2uSUxVjf4Ag==
    4HFOM/EEHo1HycuT5qgU0bOebW0BCsr4FSaZIRogcGBKboDWcBa1Vq8R4zkRrJX7pHlzxCqHLM22asJPztU8o94v3bKMYTLCVaGtqiaOX3+oskI8qL6c36sWVGQ9UBrUYu7nSg==
    A53Qq32XMb34P1BLAwQUAAYACABGlW9MQ6gGBxUDAAA0DgAAEAAAAHdvcmQvZm9vdGVyMS54bWztV8lu2zAQ/RVD90SU4h1xgsbOBrRFEAfpmZYpmwhFEiRtJ/m1HvpJ/YUOJQ==
    avFax0bRSy6mhpx5M4+zEP7989f55WvCanOiNBW85wWnyKsRHokx5ZOeNzPxSduraYP5GDPBSc97I9q7vDhfdGOjamDLdXcho543NUZ2fV9HU5JgfZrQSAktYnMaicQXcUwj4g==
    L4Qa+yEKUPollYiI1uCoj/kca8/BJetoQhIOh7FQCTYgqomfYPUykyeALrGhI8qoeQNs1MxhBISveNdBnBQBWZNuFpBbcgu1j9/MZCCiWUK4ST36ijCIQXA9pbKkcSgaHE5zkA==
    +S4S84R5RQqC+nE5GCi8gKUE3Cf8cWaUsCzy3YgB2iMjFqKw2CeEZZ95JAmmvHR80NVULjdofAwgXAWQk+OSc6vETJZo9Di0e/5SYNmW/gCWS3KVmj4umOEUS+jAJOreT7hQeA==
    xCAiSFkNbr1my9qzw8aMmFselPsYmjdGaovuHLOe92TtbhWF2vHd+Q84gwpqIAQjDXbeJADLyJQafcLYUOIIosh0g6DUHL/iUvMKQoYRmUpC5k45DERrEAkmYHbgmRFW1O89Lw==
    dakBm6TfKQ4jsTnQdCSMEcmBxopOpoc6plzTMbk7yvr5IGt/7eKzhH3DqnKZC2e6mrOcsy2AZmtdw1/FA+mrEC95qKj+JcWNqdLmUdjasCLDTioP+4LNEl45zzdSFS7uruDtLA==
    pOdMCipBFAVty9d+TmAFEFeSKLRPWqGdK8HjCyzheh8f4CoR6rTDTiN1km7arWAQ9K/DfOspVevXz+ooyFpKZZ4jzM1QwvPpql3dkWrBhGHrgx3jl9gmyn5zyfVkvdNqr/ekXw==
    0fwX7f7ZxJ9N/H+auNPoNHb2cKU1t7br5lbaXO+VVpLbfTykgwM1z1r9YnAMSIxnzKw4lw5rqQm/CzcK8nRlSvo9Vwia7kS/9/XKpu/0fQduVxe3myD5ba2RWJ5rfyHhlI8g0Q==
    3kSifQyJbGIv00iZoWvUCm6WmK1oVZg55a3MboQwRG2lFW6iFe6mBX/5Lv4AUEsDBBQABgAIAEaVb0yI4NDcsgUAAHwhAAAQAAAAd29yZC9oZWFkZXIxLnhtbO1Z6W7jNhB+FQ==
    Q/2xQAGvDuuIjHUWjo8kwCZrJOlugbZY0BJtqyuRAkk7yS76ZP3RR+ordCiJsuQjdex0jyJ/LJKj+ebgzHAo//3nX69e3yVxY4EZjyjpaOZLQ2tgEtAwItOONheT5pHW4AKREA==
    xZTgjnaPufb6+NVtexayBvAS3r5Ng442EyJt6zoPZjhB/GUSBYxyOhEvA5rodDKJAqzfUhbqlmEa2ShlNMCcg6AeIgvEtQIuWUejKSZAnFCWIAFTNtUTxD7O0yagp0hE4yiOxA==
    PWAbroKhoD4j7QKiWSokWdq5QsVDcbBd5OYsfRrME0xEJlFnOAYdKOGzKF2asS8aEGcKZPGQEYsk1sotMO3D9qDP0C08loC7qB/mTEmca/4womnssCMSouTYRYW6TKVJgiKyFA==
    vJdrKs41nccBWKsA6fSwzTlldJ4u0aLD0M7JxxJLpvQjsIpNrprGD1PmeoZSyMAkaJ9PCWVoHINGsGUN8HpDhrUmi40Yx8VjxIrBtbiPceO2vUBxR7uRfKcsgtjRC/p7oEEEOQ==
    hgElDVbuUwBOA7F84wQUgcKXzWiqoAiUOckQ0JhCRUBzQeWUf+poGRBPUYCzcYYT44nYk3VMhaDJnswsms72FRwRHoX47CDud3tx62uOH8c9HMcXiFWceVuw5nsW3qEVmzfT9Q==
    VTSYvaH0o1LUsLsZ1yRiXFxRADHlNEbFbEns0XiekApdLWSvEHp2AudhOXuXz8yKEmWQypCUwyk8AaQISd/zC4tq67ZleRUQxSsYkOF8Dq9ApNGzW7aRKSaXbphc8zxr0PXyRA==
    CfLfQoOgyALLt/z1LNCXb6ZKxihDHJqea1haVXB9abThrT6eoHksJMX2nK7dyjRKCwH1fI1EjNWu5i+wISWCwwuIB1F0A6UENE0iqAlnXYg4KWUmBxspARfry3mS5Q/+SYm2LA==
    ZXsmWC815KEoHoVCX1UvkBdHiCvqD5do0W7oozkLZojjD2cYQQrpqnPI/PnhzThW1Q1N65zXWQvHwg8lwluZg7rZKuRCXoeKpWm6dsuDOGsdFbQ0hiSe0RhY5DSkwQixsvz49g==
    keNZVrfvWo7tH/WOTnqW6buDoWkbXddxlWGrKEigk4jIVhOQUoYn0d0FSlOYw6GSny+EG50XsmtYdgvhPUEw402CFtB6pZQJrj9kn/5CbsUd9ImzjqYDYhtc8h5q0FXG/HMSSw==
    Y34xf8toKy5Wy2ueBkJW3gRl+Fzg5Lzf0T4Pza7jtPrdZq81tJp2b+A2jwb9QdM0+33ft33PHXp/qD3Cd6JwTBlzMBiQcMSK4Aih8hABUrM9YJROBoyVacxTqHVgOFNnGts1iQ==
    v4XwFsdrLs0KUv7OdoPBP9rSbaV/9DKBvy8vyD5KnZGQAhyzBdaOGyuu+B5r0yXNkzGfPlFhMnzHdn3PaD0XpmK57ubnqnRoVar78ylKkgywXZJ4u978U48flIuq1PaRwE+SiQ==
    pkws33Sc5zxcaRCki798Fj5t+15JyI3t+/V8LB7o4PcK5GUjvm9JecKcWjYncjsfWwTSB7qTtLop9cvcgXeqS3oNbUT2xa26K+P9bjvbHPe4ujNC0ye8ljgO1BHTNf3noqOWCw==
    //7fjv1/jz5xrGz/Bm4NO6i7pc9fbfT/YzUmcdibISmkGN1kLhrjqfxern8xPSLCBbuRMbfZLaPu6aDR+PXHRpehcRRkw4vB1elg+PbqonuTea3E+Nre4zhFTDVWa6pkdd61nQ==
    7mMPKEJHMpRXw976JiIGL/PpS2ixLU705/zZ6JfLny5kCl0/59DXy6Et0ndKqLKJVN/z89/Vr/qGZ+72VX9Ls1lfqjabBWVrs1n7qPN7oJazf2h26D9r9skHU/96bLjNmH2zNw==
    qG9H3zUMt1+zpb5UtaWg7GYLdH4SQtoBt1zb3GBM9QOCqdrU6nXC3HyzKY2ehez4H1BLAwQUAAYACABGlW9MfAk7IXYEAAD2GwAAEAAAAHdvcmQvZm9vdGVyMi54bWztWNtu4w==
    NhD9FUN92CdHoixfsd6F48smQHZrJItNgaIIaImyhVCkQNK3Fv2yPvST+gsd6kLLiTfI2m5rbP0SihzO4XBmDmecv/748+37VUwrCyJkxFnXQheOVSHM50HEpl1rrsJqy6pIhQ==
    WYApZ6RrrYm03r97u+yESlRAl8nOMvG71kyppGPb0p+RGMuLOPIFlzxUFz6PbR6GkU/sJReB7TrISb8SwX0iJRzUx2yBpZXDxc/ReEIYCEMuYqxgKqZ2jMXjPKkCeoJVNIlopA==
    1oDtNAoYDuYL1skhqsYgrdLJDMqHQkO85txMZcD9eUyYSk+0BaFgA2dyFiWba+yLBsJZAbJ46RKLmFomBMg7LAYDgZcwbABfY36QKcU0s/xlROS8IiIawmi8xoTtMwtLYhyxzQ==
    wXu5puRcVP82APcpQDI9LDgfBJ8nG7ToMLRr9miwNKW/ASsPcvlq8jBj7mY4AQbGfud6yrjAEwoWQcgq4PWKTmtLPzZqQvNhLPKPO7WmpLLsLDDtWp+13gcRQe7YufweZJBB8A==
    nsF0nQAqniu+kV+CGfDspTOeFEAMHjmt4XPKRaGy7MhfcySZYJ+k3ykOJaHaU3XCleLxnsoims72PThiMgrI1UHaX/bStp85fkJv8JrPlYlRGK1IKYg3nD8WRzleL4UMIyHVLQ==
    h9giPaU4n22EfU7nMSvJi4V0C+NXl1DPzOxLNkMlE02S6ZTSn1MYASRLKQ+hVm7i1jpq13eum/32FibUTwgkePMWTHG8YcNzUoP10meh13r9htNzUwLIQOVDZhumEZaFZ374hA==
    F52KPZ4Lf4YlebgiGDxs93VtZOsrHpMxnpKHmwktPIun27p3aYUXwYPB+FEHyUY11y0CHxQq9WarXXfbXi2XJBRiPOMUFPQ04P4YC5OdAxLiOVXjzaaHKmrV4bI1zzN58RQDKw==
    fBkx3YUATiII5MVHnCQwh/cme3qYdLpvdEHZFJJgzTDMZJXhBVTlhAsl7ZfuZr/RHl9BCzHrWjYgdsAd95Cgt6nyTzHVV/kZ/ZLKnji4WN7hZxCl2a+4INeKxNeDrvXbCPXq9Q==
    2qBX7ddGbtXrDxvV1nAwrCI0GLTbXrvZGDV/LyJEVip3jYk5fAxZMBbZDpj1OVPQNqT7/exvnrn+fTn1CnIFK2zyMN+ZfD0Hx8+XbvNgliQpSI619SRrH0G4ivQBktOIkZsFLQ==
    NhjCFeqC83AohDFXJoTCMw8BKF699G7vdvg7vVIK9gIUOM8cmTuhcLDxpF2m2r6MG8/gVfzEj0Y4t+HWXISaZ76V+Vby8qnQLasA3yfdSu4+LbYNodmnR+MaqtdbqAZ0c89sKw==
    s814+VS49j2XNuPsozNNS8V/0X0ehZzVWqPVRi46d547O8//GTX37BdPq3rlZfU49ABqOB5qtVrnVnFXq3gq/PiX2sT9GrzTosfwI1TC45CjrX9CtWvIOXNjq7HTHj4VZpxm5Q==
    SF30T7Vitvnv9tbdRqjZcNxdF8klX+1OR5wrIrY6UGNOCCf+DVBLAwQUAAYACABGlW9MBMe0XcwBAABSBgAAEQAAAHdvcmQvZW5kbm90ZXMueG1sxZRLbtswEIavInBvU0qdtA==
    ECwHRVwU2QXJCRiKsoiIMwRJWfXZuuiReoWO3m4aGE686EZ8zXzzD0ec3z9/rW9/mCraK+c1QsaSZcwiBRJzDbuM1aFYfGGRDwJyUSGojB2UZ7ebdZMqyAGD8hEBwKeNlRkrQw==
    sCnnXpbKCL80Wjr0WISlRMOxKLRUvEGX86s4ibuZdSiV9xTtTsBeeDbgzL80tArosEBnRKCl23Ej3EttF0S3IuhnXelwIHZ8M2KQcnCQDojFJKh1SXtBwzB6uHPi9i5blLVREA==
    uojcqYo0IPhS2zmNj9LosBwh+1NJ7E3FphIkq8tqsHWioWEGniM/751M1Ss/TUziMyrSIiaPcyT8HXNUYoSGOfCHrubocpPr9wGuXgPs7rLifHdY25mmL6Pdw8vEat/1O1hDkQ==
    j1Pzl4l5KoWlF2hker8DdOK5IkVUsohuPWp/a3bUcaImDQdLBl5Z4URAx2hL5xlbJJ2dpSX1s/wxY3G8+nz9dfWJDVsP7da3VXx3M209blUh6iocGXeQB9cO3gpJAslWFEFRcw==
    oP7IN2s+GfRWo5LhzPUW3XdQ/VYCEiFoqLu28fQ6mfg/5fKmqFN5zXO/+QNQSwMEFAAGAAgAAAAhAKomDr68AAAAIQEAABsAAAB3b3JkL19yZWxzL2hlYWRlcjIueG1sLnJlbA==
    c4zPsYrDMAwG4P2g72C0N046lOOIk6UcZC3tAwhbcUxj2di+4/L2NXRpocONkvi/H/Xjn1/FL6XsAivomhYEsQ7GsVVwvXzvP0HkgmxwDUwKNsowDruP/kwrlhrKi4tZVIWzgg==
    pZT4JWXWC3nMTYjE9TKH5LHUMVkZUd/Qkjy07VGmZwOGF1NMRkGaTAfiskX6jx3m2Wk6Bf3jicubCul87a4gJktFgSfj8LHsmsgW5NDLl8eGOwAAAP//AwBQSwMEFAAGAAgARg==
    lW9Mn8cbvM0BAABYBgAAEgAAAHdvcmQvZm9vdG5vdGVzLnhtbMWUS27jMAyGr2Jon0hO087AiFMUTTHormhPoMpyLNQSBUmOJ2ebxRxprjD0M+4DQdosurEsivz4U7T578/f1Q==
    9W9dRjvpvAKTknjOSCSNgEyZbUqqkM9+ksgHbjJegpEp2UtPrterOskBgoEgfYQE45PaipQUIdiEUi8KqbmfayUceMjDXICmkOdKSFqDy+iCxax9sw6E9B7T3XKz4570OP2eBg==
    Vho8zMFpHnDrtlRz91LZGdItD+pZlSrskc2uBgxgEc4kPWI2CmpCkk5QvwwR7pS8XcgGRKWlCW1G6mSJGsD4QtlDGV+l4WExQHbHitjpkowtiJfn9WDjeI3LAXiK/KwL0mWn/A==
    ODFmJ3SkQYwRp0h4nXNQorkyh8RfuprJ5caXnwMs3gLs9rzm/HJQ2QNNnUe7Ny8jq/mxP8HqmzwtzZ8n5qngFv9ALZL7rQHHn0tUhC2L8Naj5rMm05ET1UnYW/Tw0nLHAziCJg==
    laVkFreOFrc40bLHlDC2/HF5s7wgvemhMd0t2e3VaHrcyJxXZZg4t5AH1yzecoEK0ZfnQeJ0wAlJ1ys6OnReg5L+zHUe7XOQ/WEJAkxQpmonx9Pbctg3VfOhqKOVTTZ+/R9QSw==
    AwQUAAYACAAAACEAqlIl3yMGAACLGgAAFQAAAHdvcmQvdGhlbWUvdGhlbWUxLnhtbOxZTYsbNxi+F/ofxNwdf834Y4k32GM7abObhOwmJUd5Rp5RrBkZSd5dEwIlORYKpWnpoQ==
    gd56KG0DCfSS/pptU9oU8heq0XhsyZZZ2mxgKVnDWh/P++rR+0qPNJ7LV04SAo4Q45imHad6qeIAlAY0xGnUce4cDkstB3AB0xASmqKOM0fcubL74QeX4Y6IUYKAtE/5Duw4sQ==
    ENOdcpkHshnyS3SKUtk3piyBQlZZVA4ZPJZ+E1KuVSqNcgJx6oAUJtLtzfEYBwgcZi6d3cL5gMh/qeBZQ0DYQeYaGRYKG06q2Refc58wcARJx5HjhPT4EJ0IBxDIhezoOBX15w==
    lHcvl5dGRGyx1eyG6m9htzAIJzVlx6LR0tB1PbfRXfpXACI2cYPmoDFoLP0pAAwCOdOci471eu1e31tgNVBetPjuN/v1qoHX/Nc38F0v+xh4BcqL7gZ+OPRXMdRAedGzxKRZ8w==
    XQOvQHmxsYFvVrp9t2ngFSgmOJ1soCteo+4Xs11CxpRcs8Lbnjts1hbwFaqsra7cPhXb1loC71M2lACVXChwCsR8isYwkDgfEjxiGOzhKJYLbwpTymVzpVYZVuryf/ZxVUlFBA==
    7iCoWedNAd9oyvgAHjA8FR3nY+nV0SBvXv745uVzcProxemjX04fPz599LPF6hpMI93q9fdf/P30U/DX8+9eP/nKjuc6/vefPvvt1y/tQKEDX3397I8Xz1598/mfPzyxwLsMjg==
    dPghThAHN9AxuE0TOTHLAGjE/p3FYQyxbtFNIw5TmNlY0AMRG+gbc0igBddDZgTvMikTNuDV2X2D8EHMZgJbgNfjxADuU0p6lFnndD0bS4/CLI3sg7OZjrsN4ZFtbH8tv4PZVA==
    rndsc+nHyKB5i8iUwwilSICsj04Qspjdw9iI6z4OGOV0LMA9DHoQW0NyiEfGaloZXcOJzMvcRlDm24jN/l3Qo8Tmvo+OTKTcFZDYXCJihPEqnAmYWBnDhOjIPShiG8mDOQuMgA==
    cyEzHSFCwSBEnNtsbrK5Qfe6lBd72vfJPDGRTOCJDbkHKdWRfTrxY5hMrZxxGuvYj/hELlEIblFhJUHNHZLVZR5gujXddzEy0n323r4jldW+QLKeGbNtCUTN/TgnY4iU8/Kang==
    Jzg9U9zXZN17t7IuhfTVt0/tunshBb3LsHVHrcv4Nty6ePuUhfjia3cfztJbSG4XC/S9dL+X7v+9dG/bz+cv2CuNVpf44qqu3CRb7+1jTMiBmBO0x5W6czm9cCgbVUUZLR8Tpg==
    sSwuhjNwEYOqDBgVn2ARH8RwKoepqhEivnAdcTClXJ4PqtnqO+sgs2SfhnlrtVo8mUoDKFbt8nwp2uVpJPLWRnP1CLZ0r2qRelQuCGS2/4aENphJom4h0SwazyChZnYuLNoWFg==
    rcz9Vhbqa5EVuf8AzH7U8NyckVxvkKAwy1NuX2T33DO9LZjmtGuW6bUzrueTaYOEttxMEtoyjGGI1pvPOdftVUoNelkoNmk0W+8i15mIrGkDSc0aOJZ7ru5JNwGcdpyxvBnKYg==
    MpX+eKabkERpxwnEItD/RVmmjIs+5HEOU135/BMsEAMEJ3Kt62kg6YpbtdbM5nhBybUrFy9y6ktPMhqPUSC2tKyqsi93Yu19S3BWoTNJ+iAOj8GIzNhtKAPlNatZAEPMxTKaIQ==
    ZtriXkVxTa4WW9H4xWy1RSGZxnBxouhinsNVeUlHm4diuj4rs76YzCjKkvTWp+7ZRlmHJppbDpDs1LTrx7s75DVWK903WOXSva517ULrtp0Sb38gaNRWgxnUMsYWaqtWk9o5Xg==
    CLThlktz2xlx3qfB+qrNDojiXqlqG68m6Oi+XPl9eV2dEcEVVXQinxH84kflXAlUa6EuJwLMGO44Dype1/Vrnl+qtLxBya27lVLL69ZLXc+rVwdetdLv1R7KoIg4qXr52EP5PA==
    Q+aLNy+qfePtS1Jcsy8FNClTdQ8uK2P19qVa2/72BWAZmQeN2rBdb/capXa9Oyy5/V6r1PYbvVK/4Tf7w77vtdrDhw44UmC3W/fdxqBValR9v+Q2Khn9VrvUdGu1rtvstgZu9w==
    4SLWcubFdxFexWv3HwAAAP//AwBQSwMECgAAAAAAAAAhAFQBBrnyAwAA8gMAABUAAAB3b3JkL21lZGlhL2ltYWdlMS5wbmeJUE5HDQoaCgAAAA1JSERSAAAAyAAAAMgIAgAAAA==
    Ijo5yQAAAAFzUkdCAK7OHOkAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAOXSURBVHhe7dKxFYJAAERBuAYI6b87ybAAPQ0ogR8xW8AG/8065zze38UUuK/Avo31dX7uO/SkwFVgKA==
    oUBRAKyiqs8FLAiSAmAlWZ2CxUBSAKwkq1OwGEgKgJVkdQoWA0kBsJKsTsFiICkAVpLVKVgMJAXASrI6BYuBpABYSVanYDGQFAAryeoULAaSAmAlWZ2CxUBSAKwkq1OwGEgKgA==
    lWR1ChYDSQGwkqxOwWIgKQBWktUpWAwkBcBKsjoFi4GkAFhJVqdgMZAUACvJ6hQsBpICYCVZnYLFQFIArCSrU7AYSAqAlWR1ChYDSQGwkqxOwWIgKQBWktUpWAwkBcBKsjoFiw==
    gaQAWElWp2AxkBQAK8nqFCwGkgJgJVmdgsVAUgCsJKtTsBhICoCVZHUKFgNJAbCSrE7BYiApAFaS1SlYDCQFwEqyOgWLgaQAWElWp2AxkBQAK8nqFCwGkgJgJVmdgsVAUgCsJA==
    q1OwGEgKgJVkdQoWA0kBsJKsTsFiICkAVpLVKVgMJAXASrI6BYuBpABYSVanYDGQFAAryeoULAaSAmAlWZ2CxUBSAKwkq1OwGEgKgJVkdQoWA0kBsJKsTsFiICkAVpLVKVgMJA==
    BcBKsjoFi4GkAFhJVqdgMZAUACvJ6hQsBpICYCVZnYLFQFIArCSrU7AYSAqAlWR1ChYDSQGwkqxOwWIgKQBWktUpWAwkBcBKsjoFi4GkAFhJVqdgMZAUACvJ6hQsBpICYCVZnQ==
    gsVAUgCsJKtTsBhICoCVZHUKFgNJAbCSrE7BYiApAFaS1SlYDCQFwEqyOgWLgaQAWElWp2AxkBQAK8nqFCwGkgJgJVmdgsVAUgCsJKtTsBhICoCVZHUKFgNJAbCSrE7BYiApAA==
    VpLVKVgMJAXASrI6BYuBpABYSVanYDGQFAAryeoULAaSAmAlWZ2CxUBSAKwkq1OwGEgKgJVkdQoWA0kBsJKsTsFiICkAVpLVKVgMJAXASrI6BYuBpABYSVanYDGQFAAryeoULA==
    BpICYCVZnYLFQFIArCSrU7AYSAqAlWR1ChYDSQGwkqxOwWIgKQBWktUpWAwkBcBKsjoFi4GkAFhJVqdgMZAUACvJ6hQsBpICYCVZnYLFQFIArCSrU7AYSAqAlWR1ChYDSQGwkg==
    rE7BYiApAFaS1SlYDCQFwEqyOgWLgaQAWElWp2AxkBQAK8nqFCwGkgJgJVmdgsVAUmDsG1tJ2Sef/lH9AIZvCrHX5u+tAAAAAElFTkSuQmCCUEsDBBQABgAIAAAAIQCkQR4l1Q==
    BgAA+i4AABoAAAB3b3JkL2dsb3NzYXJ5L2RvY3VtZW50LnhtbNyaSW/kuBWA7wHyH4Q6hzZJPW7GuAdcJ3MzMpPDnAK5SrYLrZIESWWPEeS/56kW29XjHsjtDozIB5coko/L+w==
    +BZJP/z4+6bK7suuXzf15YKd0UVW1stmta5vLxf//DURvcj6oahXRdXU5eXisewXP376619+eLi4rZq+L7rH0Cy3m7IeMhRV9xcP7fJycTcM7cX5eb+8KzdFf7ZZL7umb26Gsw==
    ZbM5b25u1svy/KHpVuecMrq7artmWfY9juuL+r7oFwdxmz9Ka9qyxsqbptsUAxa72/NN0X3etgSlt8Wwvl5X6+ERZVN5FNNcLrZdfXEQQZ4mNHa52E/o8HPs0U0Zd9/luAO7EQ==
    z7uywjk0dX+3bp+X8a3SsPLuKOT+zxZxv6mO7R5aBu/TQeiKB/x5Fjhl+qt9p021n/mfS2R0gkZGEU89pkzhdMzjTDbFun4e+Ju25sXmMvE2AfxLAe3t+5TzU9ds22dp6/dJ+w==
    uf78JGs84W+QdVDyy6X175vML3dFiydws7z4+bZuuuK6whmhyjLc9WzEevEJLc+qWV4V3dC/uH5xedWNhbrYlNnDxX1RXS5CeVNsq+GqKpblXVOtyu5fhGkBlOUAdHE+tl8WQw==
    edt0j1/2/amsy66o9o1ui6oqu8djXfsscKw/P5UyPLblborjxbHL9fVVtfz76tj+qc11eVfcr5vupHDstGzqAQ3Coc9J09vtenVs9m9pPAUpLPFKKwLaO2JyH0hKlFLLUvIm/Q==
    5yDlZLMOBdesdjNvUSJ6hNU/LheUBk6Bm8Xx1mEvx5poFKdhp5Fxqrvqq26sSZLbxPY1+xG6X4bH6mkXXmji1/L348IOTYdPvlovP2e4/qFos7uyK7OhQbc0lHgHm5/tdm7fZQ==
    9799uaL9Ip7LUyExzImorfNCA3AVbFQmD0lancDmws4HE5qCSJEqwphPBBJnxABiwnHV1GnuuXg7JlEzz9hrmGgQ1oVjzdWLWzshe9HtCR9TdDHq/cDW/z98wugQcuuSQJOkhQ==
    MFEEyRkL3PoIFOYDXzIQLA+SOAWGADBBHFOWmKBCMEoaYPZj4Zuii1nBp4KJuYKcBu9Au2S8StwkZiNEzsKMHCSTliajgKCj9Gj5gidOMI4Y5nJUrxIfbfmm6GJW8GlLueFaMQ==
    qil4VJBzISYhAGwU0uTzgc9riz4s94RhREXA00hcyIFoISP3STIw7mPhm6KLWcHnc48RBQdmnAefmLG4nVphdOQYl17PBz7MdTCKF5QI9GEIX+BEM4fmjzMVkw5CyPxj4Zuiiw==
    WcEnAYTCY0WTxawNggbFQMSEUbmlRpv5wKeNFWhPApECJDpblRNjIycpx3AerWJy9oPhm6KLWcHndMqd5SrmGG1EJizTMVEMxEEKw/2MEg6XXDBachKlxYQj2UCsAoTPKWo4ww==
    vEN/sNudootZwWcwrVKcW0yrBBjttfOoCInHDaiVQs4HvsQFSxhRkZij7wXPDdFU5gQsM157F6MMb4bPgODUvwafx/hN8RP4Dre+Ct8UXcwKvuBzxY3NGUVTz1yOWrAWDLcm2g==
    lM/J7SpcTrBCER5jROSUIRbXTXyOMKboGYaBb4bP5RCjeg0+JqkNp/Adbn0Vvim6mJflk8oEAwoDWw8sYsaXEveCoUNiAndgPvD5YChjihMBGu1d8BpzDUw9ktHU5jxSY9/udg==
    vyt8U3QxK/iYHYNtIXzAuNspZSJLzrAktRpD8Dk95wNjHERJJEhNgGlJrGOM5LkTuTUKaYSPhW+KLr4KX1Tg9P5V6LfAF3ecFfVjdtjPbLgrhuyx2WYPxVhqsq5sy2L4W7aulw==
    1Xb8GCRrBsT0qcP42zVVf5b9hr2WRZ0VVd9g877sRnHr/tgkK7pmW68Q9GucYNc89NgKyV+NqB8Hylrc9D5rbrJi3/B/dABMxOQuCac9xRwvao3uh1mah2BldDNy/UFRTLqBEQ==
    JwwmPSwH4kLSJCjHMBeXiedvt75KK4whXjsAKQrF6MkBONz6+gGYoItZWV+VYvRRjG+V0CpZb1UwCjSmAdILJ9h84IMgkwY/IqcUAXAMkx4KxHAFuGjGnHz7K77vCt8UXcwKPg==
    EYRWGoNqdDWgIFqwGGB7owMP6Bhn9JYFQzeQHI1erq1Hy5cs0QkEoc7F3OZJRck/Fr4pupgVfEwIBjIETDvH56zJOgx9InimtbTMqRlZPtQjzyUn1I8PebxMRHOqSHKUKc8VCw==
    7u3vl7+v252gi1nB98q3f4xqzAi0UDN6yu1DCImCJG78B0lSoqXghCvtknaSsm/4smH/9xp5PkB4/dO/qGng8Z2MvB+O5+t+V/jyY/VP/wUAAP//AwBQSwMEFAAGAAgAAAAhAA==
    0nc7M/UAAAB1AQAAHAAAAHdvcmQvX3JlbHMvc2V0dGluZ3MueG1sLnJlbHOMkDFPwzAQhXck/oN1EiNx2gGhqk6HFqQOLDTdshz2JXHr2JZtIP333FKJSgxMp7vT+97TW2/myQ==
    iS9K2QavYFHVIMjrYKwfFBzb18dnELmgN+iCJwUXyrBp7u/W7+SwsCiPNmbBFJ8VjKXElZRZjzRhrkIkz58+pAkLr2mQEfUZB5LLun6S6TcDmhum2BsFaW8WINpLpP+wQ99bTQ==
    u6A/J/LlDwuJpSDrTUtT5DsxG9NARUFvHTFdblfdMXMd3Ql1+Pg+dTvK5xJid7Assb0l87CsD+go87x6VSaU+Qp7C4bjvsyFkkcHslnLm7KaHwAAAP//AwBQSwMEFAAGAAgAAA==
    ACEAUAKZdP4EAADoEAAAGgAAAHdvcmQvZ2xvc3Nhcnkvc2V0dGluZ3MueG1stFjbcts2EH3vTP9Bo+faIkAQoNTYGV6bZOymEzkfAJGQhDFJcEDIqvv1XZKi5STrjNtMngTuwQ==
    3s4uwYXevP27rmYPynbaNFdzcunNZ6opTKmb3dX8811+Ec5nnZNNKSvTqKv5o+rmb69//eXNcdUp52BbNwMTTbeqi6v53rl2tVh0xV7Vsrs0rWoA3BpbSwePdreopb0/tBeFqQ==
    W+n0RlfaPS6o5/H5yYy5mh9sszqZuKh1YU1ntq5XWZntVhfq9DNp2Nf4HVVSUxxq1bjB48KqCmIwTbfXbTdZq/+vNQD3k5GH7yXxUFfTviPxXpHu0djySeM14fUKrTWF6jooUA==
    XU0B6ubsmH1j6Mn3Jfg+pTiYAnXiDavnkQf/zQD9ykBXvSaTEbrRGyvt2CenNOpi9X7XGCs3FXQlpDODiObX0JYPWh1n8CPBQdObquaLXl6qrTxU7k5u1s600w5BvREu9tLKwg==
    KbtuZQGsJaZx1lTTvtL8aVwCXWuB1JPG0MP96tCpPLuRj+bgniHr8f0AC42sIcgvev7WlNDAoGr163nsFYZoINXvODLwPltdqruenLV7rFQOyaz1Pypqyg+HzmmwOHT+D0TwvQ==
    AFTTe/4I5bx7bFWupDsAbT/J2VCZvNLtrbbW2PdNCa/kT3Omt1tlwYGWTt1CO2lrjgPP75Qs4Rj9Qb+L520Fh3LZTYtPxrhpq+dlS2jcdIy0R8+Ix7hYChwRNMWRgLIct8YDzg==
    fBQJRUgzFMmEl0QYQgjxxRJFmLf0Tsx/hXAvSimKROyFCKhHQ4JGQCklMUMR7okM9UOFEEuUAxp6gY/mQ5eCkRhFci8XaKY0pzREq+BDAAK1Bkj6AhKzTKBR+5m/jFE/LOK+dw==
    Olq+RALqCYJyHSwDlqGMBokXxBxFcsJilAPOqIgSFBFUsBBHOOFoBDwEUlEOeCKYQDMVvsczlFERigjvXhFDTdEIQsIyjvoJaeAx1E9IeRi/hGQM7euQBRFe0zBhIf7Wh5mgMQ==
    yuiSkMjLUYRBJ6D1WTLBOW4t8pcBGkEUAXMob1FKsunL/BWSkSRFaxrBuYP3aJQTwVGdmEARUEZjn2UZGnXM4fVG2YmFIAStQhzB6YJmmvRnBXruJJH/Qh8kKUvx0z/JPBKgPQ==
    mhJO8Cqk1GMU1+GEBGj3plyE+BcjXbIoRNlJU+6HeAQ59QmKZB6FjkMRTuHTgCM+D9GaZiFJCHruvPw9zRI4SnFrCQ9wdjKoD0c7MUt5jHdiTkiMd0gOX2eCZgqHTp7iyNJPfA==
    NJ88C8QL1jJBIrTf8hw+jkMVFiMEU0m96i88f9lp1Y+Ys3rUSGS9sVrObvsr0aLfsbH3sW4mfKNgxlfPkfVhM4EXFyPQweRe5TCTT8AQdL0qddemajusq1tpd2e7px0WlcL8/w==
    4clWASOcsn9Yc2hH9GhlO46O0xbC2ElTN+5G15O8O2zWk1YDt5Jn0KEpPz7YgaczPceVgxFwGMFv5DBKDntVc/F5PZJdVHbdj4nqVrbtOG1uduRqXund3pF+QHTwVMLNeXjY7A==
    6AmjA0ZHbHiQRZ8Z7D4tzjI6yZ7t8yeZf5axScbOsmCSBWcZn2S8l+1hzreVbu5h8J2WvXxrqsocVfnujH8jGkkoVaGh4uvHenO+df02YpXuYBJv4YLmjJ2w3weMBMPNzd1Bow==
    3AN3n9Q2lp0qx16d/qK4/hcAAP//AwBQSwMEFAAGAAgAAAAhAIPQteXmAAAArQIAACUAAAB3b3JkL2dsb3NzYXJ5L19yZWxzL2RvY3VtZW50LnhtbC5yZWxzrJJNS8QwEIbvgg==
    /yHM3aa7iohsuhcR9qr1B2TT6Qemk5AZP/rvDcJqF5fFQ4/zDvO8TyCb7efo1TsmHgIZWBUlKCQXmoE6Ay/149UdKBZLjfWB0MCEDNvq8mLzhN5KPuJ+iKwyhdhALxLvtWbX4w==
    aLkIESlv2pBGK3lMnY7WvdoO9bosb3WaM6A6YqpdYyDtmmtQ9RTxP+zQtoPDh+DeRiQ5UaE/cP+MIvlxnLE2dSgGZmGRiaBPi6yXFOE/FofknMJqUQWZPM4Fvudz9TdL1reBpA==
    tnuPvwY/0UFCH32y6gsAAP//AwBQSwMEFAAGAAgAAAAhADWN2onNCwAATjIAABEAAAB3b3JkL3NldHRpbmdzLnhtbLRb23IbNxJ936r9BxWfVxHuF67lFDAANk7Fm1SkvOzbiA==
    HElTJjms4UiK8vXp4cWy5TMpb1J5MoUzABrdpxvdAPzm21/Xq7PHpt+13eZyxr9hs7Nms+iW7ebucvbLdTl3s7PdUG+W9arbNJez52Y3+/btP//x5mm+a4aBPtud0RCb3Xy9uA==
    nN0Pw3Z+cbFb3DfrevdNt202BN52/boe6M/+7mJd9x8etueLbr2th/amXbXD84VgzMyOw3SXs4d+Mz8Ocb5uF323626Hscu8u71tF83xn1OP/mvmPXRJ3eJh3WyG/YwXfbMiGQ==
    us3uvt3uTqOt/+xoBN6fBnn8o0U8rlen7544+4rlPnX98mOPrxFv7LDtu0Wz25GB1quTgO3mZWL1xUAf5/6G5j4ucT8Udeds/+tTyfX/N4B4NcBu9TUrOUA/tDd93R94clzGeg==
    MX93t+n6+mZFrKTlnJFEs7dEy9+6bn32NN82/YJsQ5xmbHYxAn2z7h6bn4jr3aZevdsc5iH7f4KmemjCZnndrpt9K2mxu70aqJWG3G2b1WrvGItVU5MQT/O7vl4TpU8t+z71MA==
    1CT28rpZb1djz37eLi9n/bslP3ywbG7rh9VwXd9cDd2WRnmsSRlWHOW8f97eN5u9ZP8jnzvhSugDvriv+3oxNP3Vtl6QOFW3Gfpudfpu2f23Gyryr57Mfxxx2V/d19smHSbevQ==
    fdPNd2PDUZLd2eO8+ZV01Szbgfx92y7X9a+XM8GUH0e4QEM8zW+7bth0Q/NT/+lfJMe43PPjYl8179d48bpvs1l+8cercT5vPQ3zWcdDUHn5dXUIUNRlU6+JJZ8Fnffdshkt+A==
    0LdfT+Sxw17J/GQLOBERqe/bZXM9svNqeF41hWx01f42cuv7h93Q0oh7A/8FCf5IAKIPzfwj+dP187YpTT08EBv+psn2hCurdvu+7fuuf7dZkt/9bZO1t7dNTxO05FnviYlt3w==
    Pe31/F1TL8m3/+K8F5/SiHbF5Z7p44+fibGnTxlLWqWcj4GF0BeEcVkqCRHBIi8QkSKbvat9iWibI0SM0EVBxLKcHUYU10f9vkZ0CLiPE1HgPk5mjqV2SgWsA2e8DBDxSiuMBA==
    YzRGkg4mQSQzO6HrbJiBstFOoTychzPplMGI4Qbah3PrJUaEDBZKzYVJeKVcMmMtRlSw0D5k6srilWrF82lb/BwxgidoUx6EOW1Br5AoZYK65tFkbB8eSTsVRCqbLR4t8SoLjA==
    KKenEC8gr3kyjmGNFhMSHq1Yg3k9pkgOWk4IzQqcR0gyHdSokEpU0LeF1FWAlhNKRwYjEgnAFZ7HcGchr8nWxkP2CmN8wohlvoK6FlbGAFklPI8FWpuQXLDU3giHVxqEx0wUQQ==
    OgH5JqKJ2LdFtOKQAH2BVCI4PFriLGKGZBE0nEeSqhlcqZTWCjgaEURwPJoSkkHZpNb5lGS+QqySE6M5pjBDpJPK43m8IhtBJDCPfU4GydMEYif2Rhl50lNIMdCDZSUqj9eTOA==
    7c8YUdFhvSUbJqTOglvoC7JYi6OY4jZEyGslJcdxR2nyYCiBMtInGHuVHf0eIzooPI+nyAMjkvI64GxDBeGwN6qgEt6zVBSiQPuoqGzG64kqZyx1NCVDz1LROgvjtaoMw1FZkQ==
    b38sJl8h1jps08xcwivNRjGMFGb8BCKUhPNobgz2ei1UyVCjWkqWof9oaQLOHLSSnmNE8+zxaFpMZE/ayFRBm2oreQW5o53lGjJee+UqaDntdcE5hfYkAvQ5TbHKQ8brwEuBjA==
    15XymFW6CI1jlS46VxOIiRW0qaGc2EHZDGUiAkpASMbrMZwFCXltuOBxoo8IEWrUUCKSsATSCAatbZTxGiOW8icYlQmROIpRoqwxqwgJCTLEuDHzxQhlL3ilTlYV5I5xFEUg4w==
    Ccm4njNOa4fXQ3tmgV5vgggWj1ZJhvN4Uynt8Eppn/OYB8mogFeaib9Yo1Rn4ehiyBdw/UMI5Z0IsYzKKSi1ZTbi6G85BSvoP5abLCCvqUBOFuqakILj9YjgGtBqaSP0BWtYwQ==
    9bY1mmMrWArxOKewlhLsKSQkrAOnE/ZG663E+SghFmfENrAgoJeMiMb2CZQj4ZVGyjawRrMUuG50lK/jPlTmWZy7OK6TgHuJI7oVKBshGe+nToxlE0QkJVxYAiUL9kanKN/Aow==
    jQEW6poQyjcgQpt9xn20iTiSOyOywhI4q/D5gQtS4RzJBU0JIUQq6bFnuSQSZpVLlpJViGSecEXpsgkT82TyLegLrtDeiDVaFPeQ1552Ogs5SoFc4GzQC63wvu2lTBGu1EuKyg==
    kFVUgFmJ+ygZOGS8V1pGLLWm3QwjFJHwvkBIYlg2S3kI9B/vuMC6JiRxPI8TXkO+eactxxr1XOA4SojVeJ5RcXg9niIpHi0qh0/zfMUD3p19RTsd1k5lzYTUSTMHI59PVP9gaw==
    Z9oCsWxZ6AldFz6x1/tCeSJEAmPRTyA8RKiDwJTLkG+B8kd89kQJbIW5E5SIuAakbcnjU7agtcH1XDAq4wosWFMktFyg6IZP5oIXlKpiRDEcrwM5EI5VIaiMT2jDWNNiqZNMAg==
    a3SMo9CzAsXRiPsUnvGZQyhK4RPaUIyoIBMJyQqOFhlPAeo6cpYMZHzkokho7fHIAdeAURiroBWiFJQtQ0RRIgJ5HZW0uPqImrI+3MeMV00YkXoCoUQEsyo6mTy0AiEF72bRqQ==
    MCGbo/oU28dR9o/15nkV4A4YPe0LWKNeFLxjRG+oroVIJSTmdUy01WHtJDIR5kESHMd4QiizwojUeG+kcOSxL8RsIs4tY2GF45VS7YF3pkqogk9KKmErvDdW0hRcVVfSOpw5VA==
    igTHElA1hT14RHDVVik5cS5WKSsY1E5llMbxrbKWY/ZWnjO8Z1XBSHxSUkWjJzQaLcVSiFRMOyxB4hF7Y5WMxjcpVVa5QPZWWYcIJSDyJnzjmajMSpBVSdGGNoHwhGUjpOCVJg==
    Si1xPKDgFgy09vQNe9JaY10nbWSFRzPjKQZErAj4ToKQzKB9kh1T4gkk4NqMkIirguSYwXdGKTDhphCLdzNCCsc6oAoMn4cQ4hiMBymqiaqaENrTIVKxiRifKlVhr09FktgIyQ==
    TCp8gpE55zh/y1yFCC1HaW9y0D6ZW4etkIWIFjIxKwo9uI/iHGeQmeIbPu8lxHDI0aw0K9AKWVmHz56yVgXH66x18ng9RnB8npiNVvjlSDaWajqIeCZwjUEFoMA30oQEvG/nIA==
    lMFSB2EDnicqYSYQHfHblVxxjyuWTOx10OtzYhLfwmWqwPBdQc6U9mLuZC3xi4HChMB1fWHa4hPAwhXHN7hED4PjGyER34UWwQo+H6US0GMPprKo4DcLRdqMb/IptDiB51HW4A==
    XZMKCY7z3mJkqCb6mIDfCRUqxHH1TgqYiJZlvEXAK3U84NPw4qTHLxOKUw57fXFGGWztwBzOxUpQCd9JlGAtvjcrkRkcyUuUCd99lGQCPgEsmbsJqYuWDjO+GIWrwzKaDq+U6g==
    Rnx3WIpNhzuWiwO0e/tmPR9fbo8vSA+/xqeaZ+tDj6pe3/RtffZ+fNt9MX5x03+I7eaE3zS3Xd98ilw93JzA8/MDsFvXq1Xp68UJ2CtnPV+2u21qbve/V+/r/u5l3OMXPWxdNg==
    t99/HGt849z0/+m7h+0Bferr7eEJ5ukTrtSxZ7sZfmjXp/bdw83Vqdem7p8/gR42yx8f+72eXtTzNB/um/X+KesP9f5J5v7bZnP+y9VB2YtVfzU+t2ze19vt4dXmzR2/nK3auw==
    +4GPDy0H+mtZ9x/2f9zciSMm9pg4YPs/6sW4Mvr6+OOlTZzaPvlOntrkS5s6tamXNn1q0y9t5tRmxrb7523Tr9rNh8vZx59j+223WnVPzfK7F/yLpoMS9g+r/+xL6+PXq/q5ew==
    GD77dsTGj7efj7Csh/r0dPWzznuKv5JlfHq+aImOV8/rm5cX4/86CL5qd8NVs637euj6E/bvPcb1/tX5cE0s/kCG/bm5jfWuWR4c6fQfQd7+DgAA//8DAFBLAwQUAAYACAAAAA==
    IQAx03Mn4gAAAFUBAAAYACgAY3VzdG9tWG1sL2l0ZW1Qcm9wczIueG1sIKIkACigIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyQwWrDMAyG74O+g9HddZp6XQ==
    W+KUkNTQ69igV9dxEkNsB9spG2PvPoeduuNO4pOQvh8Vpw8zorvyQTvLYLPOACkrXattz+D9jeM9oBCFbcXorGJgHZzK1VPRhmMrogjReXWJyqDU0KleGgZfm7rh9fZ8xlXzXA==
    YVrxF3yo+QHTjGc039H9lubfgJLapjOBwRDjdCQkyEEZEdZuUjYNO+eNiAl9T1zXaakaJ2ejbCR5lu2InJPeXM0I5ZLnd/tVdeERl2iz1/+13PRt1K73Yho+gZQF+aNa+OEV5Q==
    DwAAAP//AwBQSwMEFAAGAAgAAAAhAD+9lVUDAQAAUwEAABgAKABjdXN0b21YbWwvaXRlbVByb3BzMS54bWwgoiQAKKAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AABckE9rwzAMxe+DfYfgu+v8adMmJCmlSaCnjXWD3YqxlSYQ20F2ysbYd5+znbqT+OkhvScV+w81BjdAOxhdkmgVkgC0MHLQ15K8vbZ0RwLruJZ8NBpKog3ZV48PhbS55I5bZw==
    EE4OVOAbg6+nuiRfbXTYbJL6QI9JG9P1sUnprqkbGkV1nWXrbJu2228SeGvt19iS9M5NOWNW9KC4XZkJtBc7g4o7j3hlpusGAbURswLtWByGKROzt1fvaiTVkudv+gU6e49LtA==
    GYeSzKhzNQg01nSOyk/NPVmq+Y0hTAadZeffU1FenmcUPbdweUIJyKIkjhlhVcH+GS1894jqBwAA//8DAFBLAwQUAAYACAAAACEAUDpnScsAAAA2AQAAEwAoAGN1c3RvbVhtbA==
    L2l0ZW0yLnhtbCCiJAAooCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsj0FqwzAQRfeF3EHMPpabRSjGTgikWSYFt111I8tjWyDNGGkSnNtXhLYn6PIzjzf/1w==
    +yV4dcOYHFMDz0UJCsly72hs4OP9tH4BlcRQbzwTNkAM+93qqe6qlq/RYlIterSCfSt3n4Gvw9uhdYtMr72TLL0Mg7N4Ie8IiyV5UA/wbEKGMwvq8/f7FlRuQ6nqGphE5krrZA==
    JwwmFTwj5dvAMRjJMY6aH+Ij22tAEr0py63uXOcdj9HM0/1H9i+qXa3/Buf13wAAAP//AwBQSwMEFAAGAAgAAAAhAFyWJyLCAAAAKAEAAB4ACAFjdXN0b21YbWwvX3JlbHMvaQ==
    dGVtMi54bWwucmVscyCiBAEooAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMz8GKwjAQBuD7gu8Q5m5TPYgsTb0sgg==
    N5EueA3ptA3bZEJmFH17g6cVPHicGf7vZ5rdLczqipk9RQOrqgaF0VHv42jgt9svt6BYbOztTBEN3JFh1y6+mhPOVkqIJ59YFSWygUkkfWvNbsJguaKEsVwGysFKGfOok3V/dg==
    RL2u643O/w1oX0x16A3kQ78C1d0TfmLTMHiHP+QuAaO8qdDuwkLhHOZjptKoOptHFANeMDxX66qYoNtGv/zXPgAAAP//AwBQSwMEFAAGAAgAAAAhAHQ/OXrCAAAAKAEAAB4ACA==
    AWN1c3RvbVhtbC9fcmVscy9pdGVtMS54bWwucmVscyCiBAEooAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMz7GKww==
    MAwG4P3g3sFob5zcUMoRp0spdDtKDroaR0lMY8tYamnfvuamK3ToKIn/+1G7vYVFXTGzp2igqWpQGB0NPk4Gfvv9agOKxcbBLhTRwB0Ztt3nR3vExUoJ8ewTq6JENjCLpG+t2Q==
    zRgsV5QwlstIOVgpY550su5sJ9Rfdb3W+b8B3ZOpDoOBfBgaUP094Ts2jaN3uCN3CRjlRYV2FxYKp7D8ZCqNqrd5QjHgBcPfqqmKCbpr9dN/3QMAAP//AwBQSwMEFAAGAAgAAA==
    ACEA/b4Iht0QAAAJjgAAGAAAAHdvcmQvZ2xvc3Nhcnkvc3R5bGVzLnhtbLyd3ZObyBHA31OV/0G1T8mDbxkYvlzxpWb4iF053zm3vtwzK7G7xAgUhM7e/PVpBqRF24xgYOTygw==
    VxL9m2b6Y7oHkP7292/bfPVHWu2zsnh3Q34wblZpsS43WfH47ua3z/Eb72a1r5Nik+Rlkb67eU73N3//8c9/+tvXt/v6OU/3KwAU+7fb9bubp7revb293a+f0m2y/6HcpQV8+A==
    UFbbpIaX1ePtNqm+HHZv1uV2l9TZfZZn9fOtaRjOTYepplDKh4dsnYbl+rBNi1rI31ZpDsSy2D9lu/2R9nUK7WtZbXZVuU73ezjpbd7ytklWnDCEItA2W1flvnyof4CT6TQSKA==
    ECeG+GubvwBsNYB5AmzXbz88FmWV3Ocw+6DJCmA3P8L0b8p1mD4kh7zeNy+rT1X3snsl/ovLot6vvr5N9uss+wwjA2SbAe89K/bZDXySJvua7bOk/2HUvdd8/tQcOCi53te9tw==
    ebbJbm6bQff/gw//SPJ3N6Z5fCdolDh7L0+Kx+N7afHmt7u+Mr237oH77iap3tyxRvC2O7f2/94Z716/EgPvknUmxkke6hScizhGA82zxpdN2z+++PXQTG9yqMtuEAFo/z9hbw==
    0aSDz4EH3rWBAJ+mDz+V6y/p5q6GD97diLHgzd8+fKqysgJnf3fjizHhzbt0m73PNpu06B1YPGWb9PentPhtn25e3v9XLBy2e2NdHgr423KJcIR8v4m+rdNd4/7waZE0Nvm5EQ==
    yJujD9nL4EL8v0cY6SwxJP+UJk0OWJHXCKG+EsJsJPa9sx1mHl6duzhKaSDrew1Ev9dA9vcayPleA7nfayDvew0kMNccKCs26bc2EPEwiDrGkUSjMkcSbMocSSwpcyShosyRRA==
    gjJH4ujKHIkfK3MkbqrAqcu1zAt7zm5JvP0yd3yNmMcdXxLmccdXgHnc8YQ/jzue3+dxx9P5PO549p7HHU/W6ty21Fp9gDAr6sVR9lCWdVHW6apOvy2nJQWwRGOkh9csemml5Q==
    JDVg2szWLcSLaetEvB73EBGk89fzuunlVuXD6iF7PFTQTy9VPC3+SHPobFfJZgM8jcAqrQ+VZEbm+HSVPqRVWqxTnY6tD9p0gqvisL3X4Ju75FEbKy02mqfvSNSSFE4ODf3zUw==
    EySZBqfeJuuqXK5amWjLDz9l++Vz1UBW/JDnqSbWz3pcTLCW9wYCs7w1EJjlnYHALG8MejbTNUUdTdNMdTRNE9bRNM1b65+65q2jaZq3jqZp3jra8nn7nNW5SPH9qoNM37sL8g==
    stnKXqzHXfZYJFAALF9uuj3T1aekSh6rZPe0ajamh7H9c1Ydh5eb59VnHWvaiaSrrhcuEsBZZ8Vh+YSe0XQF14mnKbxOPE0BduItD7GPUCY3Bdp7Pf3M3eG+HgxaQZoUtHdJfg==
    aAva5dGW1Ms97CUA4qzaawuDYawGD/65KWcbc+rIfC9aLlfshbU8rF5nJa3qdUgNWubl+oueNPz+eZdW0JZ9WUyKyzwvv6YbfcS7uipbX+uHvClMMinko+3uKdlnolc6Q0xf6g==
    jxfBVx+T3eIT+pQnWaHHbtGbbZLlK30VxPvPH39afS53TZvZTIweIC/rutxqY3Y7gX/5Pb3/qx4FGTTBxbOms2WatocELMg0LDItqdxoIkGZmRWZljVU8P6ZPt+XSbXRQ/tUpQ==
    7X0ndaqJeJdsd23RoSG2IC9+hfyjoRoSvH8nVdbsC+kKqs9aYL1tw/3h/j/penmq+7lcadkZ+uVQi/1HUeoKaX245WXCGW55iSCsCctD478aTvYMt/xkz3C6TjbIk/0+k15CnQ==
    zdN1ukee7vNd3vx1vDIvq4dDrm8Cj0BtM3gEapvCMj9si73OMxY8jScseLrPV6PLCJ6GLTnB+0eVbbQZQ8B0WULAdJlBwHTZQMC0GmD5HTo92PLbdHqw5ffqtDBNJUAPpsvPtA==
    Lv+arvL0YLr8TMB0+ZmA6fIzAdPlZ1a4Sh8eoAjWt8T0kLp8rofUt9AUdbrdlVVSPWtCRnn6mGjYIG1pn6ryoXkgoSzam7g1IJs96lxjsd3idBn59/Rem2oNS6deGnZEkzwvSw==
    TXtrLwuOkDy/d21MTDzJsViFT3myTp/KfJNWknOSy0K/fNc+lvFafaHGpG3Pn7LHp3p193Ta7e9jHGNU8tiwn4mNDzg0587xeZYhsY/pJjtsj4rihykca7qw8OgzYTou/FJJnA==
    SdoTJfGYzrjkS5V8JulOlMRjehMlRZyeSV6KhzCpvgw6gnvJf049nsT53EtedBIeHPaSI50kh1zQveRFZ6GyYut1c7UAW2dazMjlpwWPXF4liuQUlXCSUybHlRxxKcB+Tf/Img==
    lV0laYrxTndPoLwviuhJmfNfh7Ldtz+74DT9oa4PUDgV+3Q1yLGmX7g6yzLyeZycbuSIyXlHjpicgOSISZlIKq6UkuSUyblJjpicpOQI5WyFVwS1bIXl1bIVlp+TrTBlTrZaUA==
    BcgRk8sBOUI5UDFCOVAXVApyhFKgIvFZgYopyoGKEcqBihHKgYoLMLVAxfJqgYrl5wQqpswJVExRDlSMUA5UjFAOVIxQDlSMUA7UmbW9VHxWoGKKcqBihHKgYoRyoIp6cUGgYg==
    ebVAxfJzAhVT5gQqpigHKkYoBypGKAcqRigHKkYoBypGKAUqEp8VqJiiHKgYoRyoGKEcqO2jhvMDFcurBSqWnxOomDInUDFFOVAxQjlQMUI5UDFCOVAxQjlQMUIpUJH4rEDFFA==
    5UDFCOVAxQjlQBUXCxcEKpZXC1QsPydQMWVOoGKKcqBihHKgYoRyoGKEcqBihHKgYoRSoCLxWYGKKcqBihHKgYoRl/yzu0Qpu82eqO96Su/Yn37pqlPq1/6j3H2UNR111ErOmg==
    /iwCL8svq8EHDy3Rb0yDZPd5Vootasll9T5X3BKhdOHzl+DyEz59+sIvXeqehRDXTBGcTpVEeyr0ksv3JVGTRy95el8SVZ30UvbtS6JlkF5KuiIujzelwHKEhC+lmZ4wkYhfyg==
    1j1xPMWXcnRPEM/wpczcE8QTfCkf9wTtVZOcX0vbE+fJOd1figiX3LFHcOWES26JbXVMxzgwphpNTphqPTlhqhnlBCV7SjHqhpWjlC0sR80zNQ4zVVPPD1Q5QdXUmDDL1Agz3w==
    1Bg129QYNc/UODGqmhoTVE09PznLCbNMjTDzTY1Rs02NUfNMjZcyVVNjgqqpMUHV1AsXZClmvqkxarapMWqeqXFxp2pqTFA1NSaomhoTZpkaYeabGqNmmxqj5pkadcnKpsYEVQ==
    U2OCqqkxYZapEWa+qTFqtqkx6pKpxS7KmamVLNwTVyvCeoJqC3JPUC059wRndEs96ZndUo8ws1vCtjraXK1b6htNTphqPTlhqhnlBCV7SjHqhpWjlC0sR80ztVq3NGTq+YEqJw==
    qJparVuSmlqtW7poarVu6aKp1boluanVuqUhU6t1S0Omnp+c5YRZplbrli6aWq1bumhqtW5Jbmq1bmnI1Grd0pCp1bqlIVMvXJClmPmmVuuWLpparVuSm1qtWxoytVq3NGRqtQ==
    bmnI1GrdktTUat3SRVOrdUsXTa3WLclNrdYtDZlarVsaMrVatzRkarVuSWpqtW7poqnVuqWLppZ0S7dfz36AqWGL3ySDg+vnXdp8B3fvgZlN+x2k3UVAceCHzemHkhrhRpNV9w==
    k1Td20Lh7oJhO6IQxEOtn2CsdfftSZKhum9BPT3GI74D9fXAkq9KFYq8TMHx6G5KXy6FtsedXfa8qHfdTPkFnYVJLs5RazWZgn7nhmMagj73efujXfDHh2IDgK/dD1a1mm6+JQ==
    LQo+D9I8/5i0R5c7+aF5+lC3nxJDPDT/6vP79vvfpPKVSBRSwO25Mu3L7ofDJPPdfiN8dwVb6pJNNAxMt7idYulMT/Thkza9Z33Fo76v1ULPArczm8BovzTx3ffqc9dXO5Fqnw==
    NU4hDjGMIKShEXZWav1m3WSN4xGe0fzrjHT8xTjJeZ+lifVhDy4hMspru8S+FfqmacZuEFEncHzTNygNGImoTxyn/Vm+/tSMCgycGCHEcsUMLFfY4zEhpunDUAE1WcwM4sFfcQ==
    aFkRiy0DKTwqMKAwC0lkHmd6ocIBi1zPJobjMps6ZuzZLDJ9zzY9I448y0UKjwpcWWGLORZ1WBhyQqlHLG5bZswd4nHPpYGLFR4VuLbCvsuN0KWExwb1TAKmDrjhW4FhNt6JfQ==
    eFTg2gqD81HHYI7h2dQMPOYzTogd2IwHsR1FWOExgSsrDNMVRBYxiOtb1Kc2twPCmBMzPwJbBwwpPCpwZYV9wu3Ig9mxPUpNN4SQgrwVO8yLKbNsrPCowIDCHoX5F/l6ucK27w==
    haHFeGwTi3q2DfMUOiYhockgzxoUKTwqcGWF3dCPLJdaRhhwCjnWD9zY9GPCIhqZJMR5eFTgygp7rIluz4Wix6ABcRjnYRTbNqUssh3fwgvHmMCVFQ6sAJzPpMTnAQ1i4jOPBA==
    nmvHESemE3h44RgTuLLCDqW2CzNjwBpLHRp61CXUjmD5DZjhez5SeFTgygpzL7Y4M93IAseMiM2IF8WQsxh1bN8McNCNClzbJQLXimHZ8sD9qOc63IAptCCQmMtITHDQjQoMKQ==
    HFAvFIv2coUjl4UxCXls8hBWAcs3CKMmgczqUt8iDlJ4VODKCnOIc8sNPR46ITUg5OMoDm3LMblvMObhpXlUYEDh2IYg1bTSxY7DDM81PCskNIbSIGj+Gb4Z+YZhO1jhUYGrKw==
    bNimHRMaxpwanPmuR0PCHSMKrci1wwGFRwSurLAdObEVEd/nlgEuGTflrWm6JnMdqM+NAC/NYwJXVtiHesA1TQb1gE19L/B40NS4kFfBQR0bB92owIDCTa3cPuygoR7mERQCrg==
    79hQ5rLY9qB5gBiKI+rBGjawNI8KDCgcQXXUPsC0XOEwpk3UOBG1fco8D1aw0ORR4NPYsWMTdxyjAldW2Io9BxIp55EFra8bcRjYI4ZpuMwhnAzM8JjAgMJWZPm6VjqLuBZ1HQ==
    GtiGRWHV4iSwYfJcYgYW1Om4lhgVuLLCZgQtTmBA5EAzHFqwjEUcyi83tD0o0z08w6MCAwqHsQnnqala4xwSEzMdWKUoNaAih94yNH3odkANG6e1UYEBhWGh8UyxpGgIusBymw==
    0YgB1SLhlhdwxqhvQk/JYmugvBwVGFAYIo6FmtKa77h+6FMXavCANvtjPI7NwCYuFDQ2KITz8JjAlRWGFt0Da9pBCEUjd10/IjH3Sex4UEVyhsvLUYErKwwrFfEth3tGEFDXNg==
    PQ6GtQ0vspjl2yZ2iVGBKyvMzYiDC8JqYBBKPBtKV8uPvNhnITF5jPclRgWu7RJ+BJ1ZbHMvMKBBizwPYoowwwpDWM04nuFRgaHiJ4I8rWurKo6iILKbbRGHOrDmuqHvQlkQeA==
    TmBzm+B9iTGBKytsQ8J3PchIED8UukpGGfhk4HuhGXIysDSPClxZYWLbhDphaFl208DHjEMOiGhAPM9hhOP94VGBKyvMXKupAziFeKEhMz2oGKkVMRLGcQTFGFJ4VGCoHj5dvA==
    0bBVFTSdI+e+a/gUWgeovWANi3xuhgyKRbxwjApcW2HieMyN3JhDScAZbyLd8aGTiJkRxQNbVaMCV1bY5SaN/AAqQJtS6GN8w4ag931GHTf2+dCG9ojA1WeYgCFjanlhSE0f8g==
    v+lboQOTxsM4DAZcYkzgygobsK6G1PYswkxKAygDiQXll8kCaIxNjvPwqMBEhY9/7X/8vwAAAAD//wMAUEsDBBQABgAIAEaVb0yTDkqGOgEAAEgCAAARAAgBZG9jUHJvcHMvYw==
    b3JlLnhtbCCiBAEooAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClUs1OwzAMfpUq9zZNy2BUbScB4sQkJCaBuIXE3Q==
    wpqkSrx1ezYOPBKvQFu6IhA3bra/H9mf/PH2ni8Oug724LyypiAsikkARlipzLogO6zCOVmUubAO7p1twKECH3Qa4zMpCrJBbDJKm52rI+vWVAoKNWgw6CmLGCUTF8Fp/6dgQA==
    JubBq4nVtm3UpgMviWNGn5Z3D2IDmofKeORGwKiaFH6AfdStajqksk5z9INDw8WWr6F3OqcakEuOnPaXhc10GilzKTJUWENAh9rvXl5B4NgJBxyt67stHFvrpB8RCV441WCXYw==
    P6m5x2UXY6VAXh37iYO96lMuWU6nOh+D+TIGGXTnZ3hsoCAn5DG9vlndkjKJ2TyM05DNVmyWnSUZS6JkdnHJ0vlzTn/5fBvrcYl/O5+Mypz+fIfyE1BLAwQUAAYACAAAACEArQ==
    wITRZA8AAJeSAAAPAAAAd29yZC9zdHlsZXMueG1s7F1Lc9w2Er5v1f4H1px2D47mJclyRUlJI2ntiq0olpycMSRGw4hDzJIcy8qvX7zIAacJkg1itanKlg/WkOwPQH/djW6Ajw==
    73/8tkmCrzTLY5aejybfjUcBTUMWxenj+ejLw82bt6MgL0gakYSl9Hz0QvPRjz/8/W/fP7/Li5eE5gEHSPN3m/B8tC6K7bujozxc0w3Jv2NbmvKTK5ZtSMF/Zo9HG5I97bZvQg==
    ttmSIl7GSVy8HE3H45ORhsn6oLDVKg7pFQt3G5oWUv4oowlHZGm+jrd5ifbcB+2ZZdE2YyHNcz7oTaLwNiROK5jJHABt4jBjOVsV3/HB6B5JKC4+Gcu/Nske4BgHMK0ANuG7Dw==
    jynLyDLh2uc9CTjY6Aeu/oiFV3RFdkmRi5/ZXaZ/6l/yvxuWFnnw/I7kYRw/8JY5yCbmeO8v0jwe8TOU5MVFHpPGk2vxR+OZMC+Mw5dxFI+ORIv5H/zkV5Kcj6bT8shC9KB2LA==
    IeljeYymb77cmz0xDi057vmIZG/uL4TgkR6Y+t8Y7vbwl2x4S8JYtkNWBeWWNTkZC9AkFoY8PT4rf3zeCd2SXcF0IxJA/V/BHgGNc4Pj5nevvICfpauPLHyi0X3BT5yPZFv84A==
    lw93WcwybunnozPZJj94Tzfx+ziKaGpcmK7jiP62pumXnEb747/cSGvVB0K2S/nfs9OJtIIkj66/hXQrbJ+fTYng5FYIJOLqXbxvXIr/uwSbaCaa5NeUiAAQTA4hZPdREFMhkQ==
    G6NtxtwdjF1ehWpo9loNzV+roePXaujktRo6fa2G3r5WQxLmv9lQnEb0m3JE2AxA7cKxeCMax+JsaByLL6FxLK6CxrF4AhrHYuhoHIsdo3EsZorAKVhos0LD2GcWa2/H7Z4j3A==
    cLunBDfc7hnADbc74Lvhdsd3N9zucO6G2x293XC7gzUeV6VawQfuZmkx2MtWjBUpK2hQ0G/D0UjKsWRV5AdPTHo08zJIDzAqsumJeDBaSOTvbguRTuo+nxeikAvYKljFj7uMFw==
    00M7TtOvNOFlbUCiiON5BMxoscssGnGx6YyuaEbTkPo0bH+gohIM0t1m6cE2t+TRGxZNI8/qKxG9BIXKoHn9vBZOEnsw6g0JMza8a4x4iw8f43y4rgRIcLlLEuoJ69aPiUms4Q==
    tYGEGV4aSJjhlYGEGV4YGJz5UpFG86QpjeZJYRrNk96UffrSm0bzpDeN5klvGm243h7iIpEh3sw6Jv3X7hYJE+vYzf0wE5nmjvVt5j5+TAnPD4bPRnpJNbgjGXnMyHYdiEXrzg==
    /qPbuWTRS/DgY8qrkHyl/dKCFnzUcbobrtAami/fq/A8eV+F58n/KrzhHviJZ9Eif3vvp9y53y2LRp9GOBtJdirfHe5tpBhuYXsHuImz3JsbNMN6sOBbke0KOn1kgvteDu/YHg==
    a7hbHUYlr93TkB56mbDwyU8Yfv+ypRmv2p4GI92wJGHPNPKHeF9kTNma6fJTSUkvl7/ebNckj2UpVYPonwmUG+TBJ7IdPKC7hMSpH96u32xInAT+Moj3D58+Bg9sK6pQoRg/gA==
    l6wo2MYbpl4o/MdvdPlPPx284DVy+uJptBeeVo8k2CL2MMkoJBZ5QuJpZpzGXuZQifcTfVkykkV+0O4yqu5JKagnxHuy2aqkw4Nv8bj4zOOPh2xI4v1KslgsG/lyqgcvYMaqYg==
    vlv+TsPhoe6WBV4Wjn7eFXJ5Uqa6Utof3PA0oQY3PEWQbPLpQdivh8HW4IYPtgbna7CLhOR5bN1hdcbzNdwSz/d4hxd/Go8lLFvtEn8KLAG9abAE9KZCluw2ae5zxBLP44Alng==
    7/F6NBmJ52HFTuL9K4sjb2RIMF9MSDBfNEgwXxxIMK8EDL+BxwAbfhePATb8Vh4F5ikFMMB82ZnX6d/TJpAB5svOJJgvO5NgvuxMgvmys9lVQFcrngT7m2IMSF82Z0D6m2jSgg==
    brYsI9mLJ8jrhD4SDwukCu0uYyvxsAJL1T3eHiDFGnXiMdlWcL5I/o0uvXVNYPnsl4cVUZIkjHlaW9tPOFKyfmtbl5h80GNwF+4SEtI1SyKaWcZkl+X18r16auOw+7IbvZY9Pw==
    xo/rIrhfV6v9JszJuFOyLNhrYt0NNun8pHzcpUnsE43i3absKHzW4mTWX1hadE143i28zyRqksc9JWGbJ92S+yy5JnnaUxK2+banpNruNiXb/OGKZE+NhnDaZj9VjWcxvtM2Kw==
    qoQbm20zpEqyyQRP26yo5irBRRiK3QLITj+fscv3cx67PMaL7CgYd7Kj9PYrO0Sbg32mX2Mxs2OCpmyvunsCxH2ZRPeKnL/smFq3r2049X/m6wNPnNKcBo04s/4bV7UoY9dj7w==
    cGOH6B137BC9A5AdolcksoqjQpIdpXdsskP0DlJ2CHS0gjMCLlpBeVy0gvIu0QqiuESrAVmAHaJ3OmCHQDsqhEA76oBMwQ6BclQg7uSoEAXtqBAC7agQAu2oMAHDOSqUxzkqlA==
    d3FUiOLiqBAF7agQAu2oEALtqBAC7agQAu2ojrm9VdzJUSEK2lEhBNpRIQTaUWW+OMBRoTzOUaG8i6NCFBdHhShoR4UQaEeFEGhHhRBoR4UQaEeFEChHBeJOjgpR0I4KIdCOCg==
    IdCOqp5EdHdUKI9zVCjv4qgQxcVRIQraUSEE2lEhBNpRIQTaUSEE2lEhBMpRgbiTo0IUtKNCCLSjQgi0o8rNwgGOCuVxjgrlXRwVorg4KkRBOyqEQDsqhEA7KoRAOyqEQDsqhA==
    QDkqEHdyVIiCdlQIgXZUCNFmn3qL0nab/QS/6mm9Y7//1pXu1GfzSW8TatYfquyVHav/swiXjD0Fjc8lzmS90Q8kXiYxk0vUlm11E1feEoHa+Px50f6Ej4k+8J1M+lkIuWcKwA==
    530lwZrKvM3kTUlQ5M3bLN2UBFnnvC36mpJgGpy3BV3pl+VNKXw6AsJtYcYQnljE26K1IQ5V3BajDUGo4bbIbAhCBbfFY0PwOBDB+VD6uKeeTqr7SwFCmzkaCKd2hDazhFyV4Q==
    GDpGX9LsCH3ZsyP0pdGOgOLTCoMn1g6FZtgO5UY1dDMs1e6OakfAUg0RnKgGMO5UQyhnqiGUG9UwMGKphghYqt2Dsx3BiWoA4041hHKmGkK5UQ2nMizVEAFLNUTAUj1wQrbCuA==
    Uw2hnKmGUG5Uw+QOSzVEwFINEbBUQwQnqgGMO9UQyplqCOVGNaiS0VRDBCzVEAFLNURwohrAuFMNoZyphlBtVMtVlBrVKIYNcVwSZgjiJmRDEBecDUGHasmQdqyWDATHaglyVQ==
    co6rlkzS7Ah92bMj9KXRjoDi0wqDJ9YOhWbYDuVGNa5aaqLa3VHtCFiqcdWSlWpctdRKNa5aaqUaVy3ZqcZVS01U46qlJqrdg7MdwYlqXLXUSjWuWmqlGlct2anGVUtNVOOqpQ==
    Jqpx1VIT1QMnZCuMO9W4aqmValy1ZKcaVy01UY2rlpqoxlVLTVTjqiUr1bhqqZVqXLXUSjWuWrJTjauWmqjGVUtNVOOqpSaqcdWSlWpctdRKNa5aaqXaUi0dPde+zySw5ffK+A==
    xcXLlopXdBsPzETqHaR6E1Be+CGqvqMkhEVPAv3FKn1YdlhvGMq/s5xXdfqa8fjqeH51fa2usn2Rajo2v0g1r35Yv0glu9YxmKr7ej9UfSjKHMD++06yd0uS0+hnoW8wvFS8/A==
    r+G4eEleebxsZrEmmTq7p6O8RhucXVsX8+nltd5StGnL1NVecUpX9BsJCyXO1OuIPn5NKnhTi9XH0Zby6v0Hyybar8wPlk2kvxvfHXMhYGolQEclPwRMexBQ3/Tu4GS+OBlfdA==
    cmLRubQtoPMObctjA7U9s2pb75L70fbMt7YbPOCJ0u0t75I8Jn585DrOldoqIpbizXFcKSp6dNFSBsc6Lc3fCSS/t3wnUJy81sfE+dqnAmuS+08FisOX1acCQxHJK+pv5len8g==
    3RXyYhnleQSUMV4GZXlY3HjEgU5vStuphqXvY6h9bFAe67amkBPJg4d6uZ1lJtAvqa6espSvqD60M8ubrC02ooPv/k6VZpOx97sQM2JLn+WM2TqFqUnVasTairt6yPuzTJQd8Q==
    Pz6kwqafdbRWPY2+EQXFzy9oknwi6mq2tV+a0JVwRX52MlZ2UT+/VK/ntMpnMo+zAhzVO6N+ttuJ+p6HvsHImjGIZKVB3fJut6Ga7mELdfbFOjPojMqk5CmlyXo8NM3G0t/yXQ==
    EvUAdj0fL8p7QvtM4V3pTt2uLlkW0UwmcspuZKviVfd64H/wECj/4G3S6mOZKoxo5MqqnGQri3OSLu3RSTjmoTSi74eJ/+omrlyjUn8fT2men2/Ud58OzVF/DqrJFG1TsEJqnQ==
    gO0zcKfRcl9SZkaW5XViFlLzw5blogp8qydY4xpJcHXJ2Uzd5C3UpfGac6fu5L42P4W7nBuhLGoOY4+hlUMdq1PBXmMHim6c3ixq71K5Tb89B1gNR79C+3Ao+jBuFLC35ZeI7Q==
    +ZhpGbWKYbkQKdiQLLXBC/S31TBeoJD+7wV1LzC0cqhjdWqoF2gCX8kLjLcpyZcpHY4JvG1pqGNYcpFO36hl82/H4p8eb4ebtKQuajv7cMjG5rm6oGnIPbKY8ibkg6EtJmdniA==
    hYjXy2Iub8Q/ccAskZYkfHrM2C6NQJl0qcskfNLj3JRLjuTcmENK5dyWUwY2sDVkwubYmrf87paV72479FjjtW5dE5y1Tm6ZqCeTyULX/63LVH4nmWrJ83C0+mQw8THTiFasoQ==
    uil+mctIr7bQqR4OOlSEOto0fnMO7bPmJpHaMp2JjuXDFpgn0+aV4h7LY5blrwPNz3pqua8d7vXSqPuhBmgQaFd5p/m9uvaabbT6DtehqqoTPiy1BGs11s6Q1qDF2spmz9Sqrw==
    GdU6bVPPUGOqq9mulf+pJmpbKYeaKAP71FNg1yVoz8Bu7sZ43U1B6kZtfNh0M/OkG11cuE96f+ktjeYIWH4a9JC78ngTabY4p2XawpymsHv7wB4HJ9PZxemVwgGTdrnxNX3bsA==
    8xXLbQhR+XAiyqdcfw9LaLVMoXT5Z9sKO748u7ySd7A02Y1XlzZZtFjFUH+uGVdfI7FbwV+RJXmwudZQpwZPzRJFH2fhU+Ma4dnidKyqBAsLnGuSxMuspv3aQany2pEwF1nmhg==
    5sEtfQ4+sw1JG3Q9Hp+OF9qxYdHCzao8oAtlfIzs1L5F86iYafDYEfdMXVvj3okZ9qp11rZo9idnqPwr/+E/AAAA//8DAFBLAwQUAAYACAAAACEAZwy2ho4BAAC7AwAAFAAAAA==
    d29yZC93ZWJTZXR0aW5ncy54bWyUk99PwjAQx99N/B+WvssGojGLg4QYjQn+iKLvXXeDxrbXtIUJf73HxgDFB3jq9Xu9T7+Xa2+H31pFC3BeoslYt5OwCIzAQpppxj4m9xc3LA==
    8oGbgis0kLEleDYcnJ/dVmkF+TuEQCd9RBTjUy0yNgvBpnHsxQw09x20YChZotM80NZNY83d19xeCNSWB5lLJcMy7iXJNdtg3DEULEsp4A7FXIMJdX3sQBERjZ9J61tadQytQg==
    V1iHArynfrRqeJpLs8V0+wcgLYVDj2XoUDMbRzWKyrtJHWm1A1ydBuhtAVqkj1ODjueKRkBOIoKxAc2gkAu/WaMqlUXGLvtJv9e9Tup0jsXyrk4tuKLxsnit0gDGUIZWTbbqmw==
    nM7+kSdoD8URhoD6j042RoVbR2FXY+jhMNr41frcOrBcwCYWqJDmzecBG4Tac3ZaZf7L0Wm1br/zU0rjXdNN2K71WNqv1JLnRpIAzZ1og9RyBffoRg4rD66xAmr5Yj6fxvWOKw==
    hdXr80Nz1d6XG/wAAAD//wMAUEsDBBQABgAIAAAAIQAA9ETuxAEAAO0EAAASAAAAd29yZC9mb250VGFibGUueG1svJJda9swFIbvB/sPQveNZSfph6lTWreBwdjF6H6Aosi2mA==
    PoyOEi//fsey422EsoRCbTD2e6THRw/n/uGX0WQvPShnC5rOGCXSCrdVti7oj9f11S0lELjdcu2sLOhBAn1Yff503+WVswEI7reQG1HQJoQ2TxIQjTQcZq6VFouV84YH/PR1Yg==
    uP+5a6+EMy0PaqO0CockY+yajhh/DsVVlRLy2YmdkTbE/YmXGonOQqNaONK6c2id89vWOyEB8MxGDzzDlZ0w6eIEZJTwDlwVZniYsaOIwu0pi29G/wEsLwNkE8CI/EttnecbjQ==
    8rETgjC6Gu2TLrfcYKHkWm28ioWWWwcyxdqe64KyjK3ZEp/9vWDz/kmTfqFouAfZQ+LCshziihulD8cUOgUwFFoVRHPM99yrvqmhBKrGwg42rKAvDK9svaZDkhZ0gcFjOSUZNg==
    NVzpmMynhPWJiJxhxV3cJSJnWoP/TAYDJyZelZFAvsmOfHeG2zeMZOwaTSzRR29mfpERH7mXGsle/jZSYnJzu5ifGLn7v5GBc76RcTbIV1U34c0J6efioybksW8Zhfw7IRm7eQ==
    OvERT//OCRlfYPUbAAD//wMAUEsDBBQABgAIAAAAIQAjcbsZZwwAAJZqAAATACgAY3VzdG9tWG1sL2l0ZW0xLnhtbCCiJAAooCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAKxda28cRRatzyvtf4j2OxtIICCUNcpjCZEcYrCB5VMU7HGwiO3IMw7xn2f3nq6pVNV91a3xKsIzU/fcc05Xd1fXa4b//vUwfZM+pPP0Nt1J79MqXaV1OkuX6SL9Kw==
    /SN9lv6ZPqXXOxS5SMdUfkLRi/RmiV6nTTpNnxDqAX36Ju2lh+n79Jp4fiHkFWF/pLx3y/tN+s+ickBxfLqzVb0gvcx1Re+/prIz0rminDX9d0rIT4jnhmKvt7E1leDT+3SXcA==
    lX9Nnw/p9TVFTxaVk/SK9MB8nH6nkjWhX6WXSwRHepec30/36N9dcrCX/p7+Rr7u0FHIrO/o7+ttXkVm9CM6jrfk4s/0nLTf0zv4XKWn9Lqmd6/SfvqNEHth5ENyFGflbs4Jew==
    TTmbTlmWZhUN3TM+pvjNcuQVIcvApiE1rm8JcZ5+Xq6qE7pmLrsz1df1bEb1MaNyO5e8XuYzd3E9ruNLYnpE6BN6/1nnro/06jwrwn7PZL/nsCMrwn7fZL/vsCMrwv65yf65ww==
    jqwI+xcm+xcOO7Ii7A9M9gcOO7Ii7F+a7F867MiKsH9lsn/lsCOrZ3+yxN8tLf/NR9yKWsn1cv36cSiNGOJ6uKL9+EhP3hMeGte4Hx/pybvEQ+Oq9+MjPXnfeGjcB358pCfvJA==
    D407w4+P9OS91aMfL69/UNbx0qPKz16081zZRkoPHutuburTZTZjxp31DNPzH1Mt4x2ehF6NcZztSDLu4mNUVxY+7muuntALP6fr0fJT4rZ+ZZjRG9UDx431Y8f9hK6oNV1RKA==
    e0b9YzwxuAcNI/V1plltqx48bMxLrD7+nV7QuzPFQY1IvTbLZz/f4qzjlAhNTbJ4qqUGtPu+jUmlPjOqYR2bhvE1Y8f33fJptYyQ3yj3Lo9LTckwo2cdr4Ub68eO+znd84+ong==
    uG4plzo1I8JrHReP2zqx49inI35D79+ml+mU/uXROlfVUVLbYpt3YB2/j446itbNJeVe0pWBeZ0zatPyHJP0pOM0Nxaj5+OAnqZArdRWpI9KTZ4dV7LOgY4aKcfq/GA5Q5uEmQ==
    gxUx+mjM1L1ZZpY2S8+j1Of3lH9OanmWZD5HHktM6bZerRqfyd3Ne+zsHKZfqH35Nh0JhzUi9dusGLtVDxLhqcWO6WdqLY+cOpJ33DhDuoqo3M6lVWfxzF1cz9fxqEbH9TdXWw==
    0bqJ18TouC+W5wzmQ4/o0xNiePexznonEWTxEmPlbtCOXm1XNA5S7uGUM2DFsqKd2WtgZh+eVukD+dljn8HFETz/klr8I6rjdwlPZmuuO4bLejFGzQdaRMxhb+gzrnT0XqxI1Q==
    0rJi7PXMjRCemnX+Of4ooc/x1tWVGE1ZY+La1wnrPrUW28+Zs0f0+XWk9ZwwVUUvB5+VwXk/LHcOruzj5d3ThFUkvnrWXyu7ZGVPu6j1ju0RijfKiY5r9HW6MttltTO7ZMHVbg==
    atwxrpdzysbcJdZdzwyPEVx2FWPUfewnrC6vkr4qGUG1Hnw23YHek/OirWKkH1iwPxAWT0TUzYZaWKlmIVpFm0VX/YmwQEo1HmlVZJbPfrCc9358OMZoihpTr537ENaTyYtCzw==
    z+6V6s4B+bSwY1DxMscafgs3m2H5mWlHa37fg9PLe0Wvz/cyYU/Ju+Vv7iHxkszFUT2LbKe1Vn3UmiN+8/Ep/ZResbcEz8Q1Yx6hitqYzXNwtNTeOeGRjbaVq0uEVNZY5lStYw==
    t5ERF34doJ8e28cxh6/O4grc31VCv/58aavG5yuOzt5m2HVnyBmdxxiydTRmlW5yO75eei7HhLmmOs27yfKYsHcURRdXcfaxs5JhX2WzOZbLkdJtvfp1Gsvdzft8fW+2o9oRwg==
    91NYuGrxmJ9uV8u1W/SsWFayMy2N0vPMffTSN0c/tO1DzeF7LzEFy199GlvjhDi29zVmHnsqfZIZb36O5XGkNPaae/wzTr0My6ev0rvM4+MVobCf97duTGDHoOxlSo3TxRmeRg==
    yKn3hB0rGlZmr3GYsNaE+7vWyMGSuV6Ov+5QiCKhH2flblYJ+3HzjGFel/f7CbMZ2d2syu1c1vO7a+Yurq2r6pBwmC0ofZwXCb1krHydNL2cCCq7irDNO2jrLI6OOhrVDeq47A==
    N8PORL28VeMZY17sQNTLLV65Z1FDYaehXm7xyr2JGgo7CvVyi1fuQdRQ2Dmol1u8cq+hhsIOQb3c4pV7CjUU9t3q5Rav3KmrobDjVi+3eOUe3YLaNChc8e3od4xp9Twmrn1N5Q==
    wGPM3e43siJZx8rq2Y8o+qGJ9p/BxBFa/vOEtjGP7G4SVlusp/0cvurHFbg/e43MjmXd6OoakLyWZVnhHJ2PgqhjBM9/DNtrj5ktT/lc7NNfzBL3Hnis15SZvQZGP/vbMRB2UQ==
    YqyyT/5+bVyNMdCMMEnto5RHH/rIpPDwEcqumcXnbqpj9+3awcivjrUcWsxjT3weY4yxPPgzInZGpDY0pO8jXhOHS7vV9pK8KFeV2ZpSuWbKNWT3vefw1U1cQfNX2/GzZR9D3w==
    ox5jqg+fSdNGr76O12RZ5e6RGle7A8Sv4TGy6kZYuZs869v2kWVZVpBInwv9YlmmcckeNEegLyzLNC7Za+YI9H9lmcYle8ocgT6vLNO4ZO+YI9DPlWUal+wRcwT6trJM45K9YA==
    jkB/VpZpXLLn268q1PtUlrZ83ipZweB7z9ifYfVBYrhWdcTo+Wh3I+RVOT8udSXDjJ513BZurB857n5ds9fuY1yPZ0Y19OO0V14jTL32rwm7JfKOtVOnHY3h4CHK2PvgM+/wmw==
    +w09MqP59+W1p2vNn0HjCObY4+7KaoUf9xxo6x1Fs+57QY62Ktb/MoCFyvoRNumizmxpNeVFoepnz6nV6z2CGqnrd09xgf2l6GtutjtZsO8U86KthxEmOxgzWfoZj71gJUM/Aw==
    UWz1E2OWvvort/T7tdwoEp7irNIRH41pWWMMXESYRvp5jJ/f90dV7rwc456iedJnXNH27reFEVTra7ZlLTHe55cOLESrbrNIZRvrKf0/FOq9P0J4il4LItHy/JTsOBZuZpilrw==
    H1Le5ajVnx2Drpc5o1PdjTG+rnecdd4Pd2Xd3dDOF/YRaNlZmkKeBdZrxItmJS9bqv1Efc8XBtqOQcnLnNGptT3G+Lreecv1rbWhcgdyHJv78XFmy5c+46PV7By++osr3NYjrw==
    x9m8ec/WeKlt0/yRSntfr427sjyPy1ktKz5tWb4DJdJrRzinVt63Ibtx2+2VjbJ1I+1YycM3RCq2zj6OEL26xRJvozVlHeG12XFl+1sg1jmPZ0mHUTXPdV5brZ9bbzzWO5CZng==
    jnYm9LqP1XY+M1atymivoWWP1do1LFtVQ2nqOtvYRfTKGqM1V7NXkqzJev7sWG3x9UzeqleXvK0u7TR+pQfzV38s82t/Jv77AxkrUXlMlX+Rz4rBgZcZ18m/zWfFPB2+KuHr5A==
    X+mzYp4OX7HwdbAmYcc8Hb6aYenUVXb9HLVxXa9nmNPUz1cbH2lGz1vN0M9dGx9pRs9hzdDPYxsfaUbP51Eq37HVFGtU12uzZRsRaQdKi4X5stzqoI/pt2zWnoYci+ycyLG+1Q==
    G7Hu4qjfZTG/pyPmkKvEnJZXz1uPsdxwpph+6bfaMUuvZM7oeEfZlvmauxxhOTuedsH46pVpRl8bw3leNLzvS1fg7UHGeve53hbk/VXWMe9vRyW/px9T+Y6/Xl48aBkWd9kXkw==
    PcgdGB6i6nkslnKt7VIXpR78eFW1GXzNfl9br9fHuBbPjFwBOrb9dh9+z+qS3mu+C679/l+p7X6lvn6Xb4yF1xlm2xf857Yav9hb1swsZxF06y3GHnV3ur23LT8lbjuoDHHN4g==
    2lYtCE+3ssSVn9GVlX91Ne8yiOE8F5xxVy+x68PPivucu17aZ30dh44Q3I3O4ivXMWebheNqZ8FmM7izmIrvVLa8vS8Z5y40hlnNOnqP4cYevJkgmanPp8Rwupf5GRp9xhJjwA==
    MSaPYcZMnn5/3ej6FqbXt5n4U7a/z7Rnp3a2xuMv/dqwRwFzePvqmxlnjBi0VsLGRTzNtgjWiGIGHfd125qqI445fNyhN6aJMWD0EfUHbNxbZrZ95V96aPNHfc9oRusxruK1BA==
    47sc+0Xwrcsc89r6xwnfy8QvgxQML4G6REmmJwn79vArtdgpV5F6OVitDMn9bDl6HBHHWhHw21m8dv3ayvXP1z7l2A+46P8Zai/9DwAA//8DAFBLAwQUAAYACAAAACEAW239kw==
    CQEAAPEBAAAdAAAAd29yZC9nbG9zc2FyeS93ZWJTZXR0aW5ncy54bWyU0cFKAzEQBuC74DssubfZFhVZui2IVLyIoD5Ams62wUwmzKSu9ekda61IL/WWSTIfM/yT2TvG6g1YAg==
    pdaMhrWpIHlahrRqzcvzfHBtKikuLV2kBK3ZgpjZ9Pxs0jc9LJ6gFP0plSpJGvStWZeSG2vFrwGdDClD0seOGF3RklcWHb9u8sATZlfCIsRQtnZc11dmz/ApCnVd8HBLfoOQyg==
    rt8yRBUpyTpk+dH6U7SeeJmZPIjoPhi/PXQhHZjRxRGEwTMJdWWoy+wn2lHaPqp3J4y/wOX/gPEBQN/crxKxW0SNQCepFDNTzYByCRg+YE58w9QLsP26djFS//hwp4X9E9T0Ew==
    AAD//wMAUEsDBBQABgAIAAAAIQAA9ETuxAEAAO0EAAAbAAAAd29yZC9nbG9zc2FyeS9mb250VGFibGUueG1svJJda9swFIbvB/sPQveNZSfph6lTWreBwdjF6H6Aosi2mD6Mjg==
    Ei//fsey422EsoRCbTD2e6THRw/n/uGX0WQvPShnC5rOGCXSCrdVti7oj9f11S0lELjdcu2sLOhBAn1Yff503+WVswEI7reQG1HQJoQ2TxIQjTQcZq6VFouV84YH/PR1Yrj/uQ==
    a6+EMy0PaqO0CockY+yajhh/DsVVlRLy2YmdkTbE/YmXGonOQqNaONK6c2id89vWOyEB8MxGDzzDlZ0w6eIEZJTwDlwVZniYsaOIwu0pi29G/wEsLwNkE8CI/EttnecbjfKxEw==
    gjC6Gu2TLrfcYKHkWm28ioWWWwcyxdqe64KyjK3ZEp/9vWDz/kmTfqFouAfZQ+LCshziihulD8cUOgUwFFoVRHPM99yrvqmhBKrGwg42rKAvDK9svaZDkhZ0gcFjOSUZNjVc6Q==
    mMynhPWJiJxhxV3cJSJnWoP/TAYDJyZelZFAvsmOfHeG2zeMZOwaTSzRR29mfpERH7mXGsle/jZSYnJzu5ifGLn7v5GBc76RcTbIV1U34c0J6efioybksW8Zhfw7IRm7eTrxEQ==
    T//OCRlfYPUbAAD//wMAUEsDBBQABgAIAEaVb0xD5kXf6gEAAGEEAAAQAAgBZG9jUHJvcHMvYXBwLnhtbCCiBAEooAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ1UwW4aMRD9lZXvYQGlVYvAUZUcemiVSNDkPPHOgtVd27IHBP21HvpJ/YWO7WVjinopp5k3z89vPMP+/vlreXfsu+qAPmhrVmI2mQ==
    igqNso0225XYU3vzQVSBwDTQWYMrccIg7uQS3OLJW4eeNIaKNUxYHGgldkRuUddB7bCHMGGG4WJrfQ/Eqd/Wtm21wger9j0aqufT6fu6sSqqhefNybH+oAfuf/XwSGgabG7c6A==
    USTPG+xdB4RyrTnQrcamWkPHLZwFJo2l47IuuemgJeg2ukc5zcUxT08BWwxDJccRfbG+CXJ2+zHhOYv4/Q48KOI3H44UQKx/cmxNAfFE5FetvA22peox9VlFmXSoZMVT3MAa1Q==
    3ms6DbIlEhlftBld5jh797D14HZBzocGRiDW14rf557fUbbQBUyUNywyPiPEdXkCHRs40OKAiqyvXiFgHOhKHMBrMMSbpH9wOheZltEUdy6QlxtNHd8w5iksaWWsb+UsETi4JA==
    1qMHmexeGozTi/eEx5ZbpX9YTgbOhmeiMHnlr7jpL+E4W9s7MKdcHpM8ge/hm9vYh7hjb297iV/uy4um3dqBwuvNKUppalzAhjegnNqIpalxm76Ll7GI2WJTMK9rw14+5w+FnA==
    vZtM+XdexDOc92f8z8k/UEsBAi0AFAAGAAgAAAAhAPvrw2rZAQAAKwwAABMAAAAAAAAAAAAAAAAAAAAAAFtDb250ZW50X1R5cGVzXS54bWxQSwECLQAUAAYACAAAACEAHpEatw==
    7wAAAE4CAAALAAAAAAAAAAAAAAAAABIEAABfcmVscy8ucmVsc1BLAQItABQABgAIAAAAIQBU+GRCYwEAAO4HAAAcAAAAAAAAAAAAAAAAADIHAAB3b3JkL19yZWxzL2RvY3VtZQ==
    bnQueG1sLnJlbHNQSwECLQAUAAYACABGlW9M4oPR/HEQAAAj9wAAEQAAAAAAAAAAAAAAAADXCQAAd29yZC9kb2N1bWVudC54bWxQSwECLQAUAAYACABGlW9M2g/cbGEHAABtIA==
    AAAQAAAAAAAAAAAAAAAAAHcaAAB3b3JkL2hlYWRlcjIueG1sUEsBAi0AFAAGAAgARpVvTEOoBgcVAwAANA4AABAAAAAAAAAAAAAAAAAABiIAAHdvcmQvZm9vdGVyMS54bWxQSw==
    AQItABQABgAIAEaVb0yI4NDcsgUAAHwhAAAQAAAAAAAAAAAAAAAAAEklAAB3b3JkL2hlYWRlcjEueG1sUEsBAi0AFAAGAAgARpVvTHwJOyF2BAAA9hsAABAAAAAAAAAAAAAAAA==
    AAApKwAAd29yZC9mb290ZXIyLnhtbFBLAQItABQABgAIAEaVb0wEx7RdzAEAAFIGAAARAAAAAAAAAAAAAAAAAM0vAAB3b3JkL2VuZG5vdGVzLnhtbFBLAQItABQABgAIAAAAIQ==
    AKomDr68AAAAIQEAABsAAAAAAAAAAAAAAAAAyDEAAHdvcmQvX3JlbHMvaGVhZGVyMi54bWwucmVsc1BLAQItABQABgAIAEaVb0yfxxu8zQEAAFgGAAASAAAAAAAAAAAAAAAAAA==
    vTIAAHdvcmQvZm9vdG5vdGVzLnhtbFBLAQItABQABgAIAAAAIQCqUiXfIwYAAIsaAAAVAAAAAAAAAAAAAAAAALo0AAB3b3JkL3RoZW1lL3RoZW1lMS54bWxQSwECLQAKAAAAAA==
    AAAAIQBUAQa58gMAAPIDAAAVAAAAAAAAAAAAAAAAABA7AAB3b3JkL21lZGlhL2ltYWdlMS5wbmdQSwECLQAUAAYACAAAACEApEEeJdUGAAD6LgAAGgAAAAAAAAAAAAAAAAA1Pw==
    AAB3b3JkL2dsb3NzYXJ5L2RvY3VtZW50LnhtbFBLAQItABQABgAIAAAAIQDSdzsz9QAAAHUBAAAcAAAAAAAAAAAAAAAAAEJGAAB3b3JkL19yZWxzL3NldHRpbmdzLnhtbC5yZQ==
    bHNQSwECLQAUAAYACAAAACEAUAKZdP4EAADoEAAAGgAAAAAAAAAAAAAAAABxRwAAd29yZC9nbG9zc2FyeS9zZXR0aW5ncy54bWxQSwECLQAUAAYACAAAACEAg9C15eYAAACtAg==
    AAAlAAAAAAAAAAAAAAAAAKdMAAB3b3JkL2dsb3NzYXJ5L19yZWxzL2RvY3VtZW50LnhtbC5yZWxzUEsBAi0AFAAGAAgAAAAhADWN2onNCwAATjIAABEAAAAAAAAAAAAAAAAA0A==
    TQAAd29yZC9zZXR0aW5ncy54bWxQSwECLQAUAAYACAAAACEAMdNzJ+IAAABVAQAAGAAAAAAAAAAAAAAAAADMWQAAY3VzdG9tWG1sL2l0ZW1Qcm9wczIueG1sUEsBAi0AFAAGAA==
    CAAAACEAP72VVQMBAABTAQAAGAAAAAAAAAAAAAAAAAAMWwAAY3VzdG9tWG1sL2l0ZW1Qcm9wczEueG1sUEsBAi0AFAAGAAgAAAAhAFA6Z0nLAAAANgEAABMAAAAAAAAAAAAAAA==
    AABtXAAAY3VzdG9tWG1sL2l0ZW0yLnhtbFBLAQItABQABgAIAAAAIQBcliciwgAAACgBAAAeAAAAAAAAAAAAAAAAAJFdAABjdXN0b21YbWwvX3JlbHMvaXRlbTIueG1sLnJlbA==
    c1BLAQItABQABgAIAAAAIQB0Pzl6wgAAACgBAAAeAAAAAAAAAAAAAAAAAJdfAABjdXN0b21YbWwvX3JlbHMvaXRlbTEueG1sLnJlbHNQSwECLQAUAAYACAAAACEA/b4Iht0QAA==
    AAmOAAAYAAAAAAAAAAAAAAAAAJ1hAAB3b3JkL2dsb3NzYXJ5L3N0eWxlcy54bWxQSwECLQAUAAYACABGlW9Mkw5KhjoBAABIAgAAEQAAAAAAAAAAAAAAAACwcgAAZG9jUHJvcA==
    cy9jb3JlLnhtbFBLAQItABQABgAIAAAAIQCtwITRZA8AAJeSAAAPAAAAAAAAAAAAAAAAACF1AAB3b3JkL3N0eWxlcy54bWxQSwECLQAUAAYACAAAACEAZwy2ho4BAAC7AwAAFA==
    AAAAAAAAAAAAAAAAALKEAAB3b3JkL3dlYlNldHRpbmdzLnhtbFBLAQItABQABgAIAAAAIQAA9ETuxAEAAO0EAAASAAAAAAAAAAAAAAAAAHKGAAB3b3JkL2ZvbnRUYWJsZS54bQ==
    bFBLAQItABQABgAIAAAAIQAjcbsZZwwAAJZqAAATAAAAAAAAAAAAAAAAAGaIAABjdXN0b21YbWwvaXRlbTEueG1sUEsBAi0AFAAGAAgAAAAhAFtt/ZMJAQAA8QEAAB0AAAAAAA==
    AAAAAAAAAAAmlQAAd29yZC9nbG9zc2FyeS93ZWJTZXR0aW5ncy54bWxQSwECLQAUAAYACAAAACEAAPRE7sQBAADtBAAAGwAAAAAAAAAAAAAAAABqlgAAd29yZC9nbG9zc2FyeQ==
    L2ZvbnRUYWJsZS54bWxQSwECLQAUAAYACABGlW9MQ+ZF3+oBAABhBAAAEAAAAAAAAAAAAAAAAABnmAAAZG9jUHJvcHMvYXBwLnhtbFBLBQYAAAAAIAAgAHEIAACHmwAAAAA=
    END_OF_WORDLAYOUT
  }
}

