OBJECT Page 6250 Data Sync Status
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:27 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Data Sync Status;
    ApplicationArea=#All;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    PageType=Document;
    UsageCategory=Administration;
  }
  CONTROLS
  {
    { 2   ;    ;Container ;
                Name=DataSyncRoleCenter;
                ContainerType=ContentArea }

    { 1   ;1   ;Part      ;
                Name=Data Migration Status;
                ApplicationArea=#All;
                PagePartID=Page1799;
                Visible=ShowMigrationErrors;
                PartType=Page }

    { 3   ;1   ;Part      ;
                Name=Migration Errors;
                CaptionML=ENU=Migration Errors;
                ApplicationArea=#All;
                SubPageView=WHERE(Destination Table ID=FILTER(>0));
                PagePartID=Page1797;
                Visible=ShowMigrationErrors;
                PartType=Page }

    { 4   ;1   ;Part      ;
                Name=Posting Errors;
                CaptionML=ENU=Posting Errors;
                ApplicationArea=#All;
                SubPageView=WHERE(Destination Table ID=FILTER(=0));
                PagePartID=Page1797;
                Visible=NOT ShowMigrationErrors;
                PartType=Page }

  }
  CODE
  {
    VAR
      GenJournalLine@1001 : Record 81;
      GPBatchTxt@1003 : TextConst '@@@={Locked};ENU=GP';
      CustomerBatchTxt@1004 : TextConst '@@@={Locked};ENU=GPCUST';
      VendorBatchTxt@1005 : TextConst '@@@={Locked};ENU=GPVEND';
      JnlTemplateNameTxt@1006 : TextConst '@@@={Locked};ENU=GENERAL';
      ShowMigrationErrors@1000 : Boolean;

    LOCAL PROCEDURE PostingErrors@3(JournalBatchName@1000 : Text);
    BEGIN
      GenJournalLine.RESET;
      GenJournalLine.SETRANGE("Journal Template Name",JnlTemplateNameTxt);
      GenJournalLine.SETRANGE("Journal Batch Name",JournalBatchName);
      IF GenJournalLine.FINDFIRST THEN
        REPORT.RUN(REPORT::"Auto Posting Errors",FALSE,FALSE,GenJournalLine);
    END;

    [External]
    PROCEDURE ParsePosting@1();
    VAR
      DataMigrationStatus@1000 : Record 1799;
    BEGIN
      DataMigrationStatus.RESET;
      IF DataMigrationStatus.FINDFIRST THEN BEGIN
        PostingErrors(GPBatchTxt);
        PostingErrors(VendorBatchTxt);
        PostingErrors(CustomerBatchTxt);
      END;
    END;

    [External]
    PROCEDURE SetMigrationVisibility@2(IsMigration@1000 : Boolean);
    BEGIN
      ShowMigrationErrors := IsMigration;
    END;

    BEGIN
    END.
  }
}

