OBJECT Codeunit 14103462 EasyPDF Printer
{
  OBJECT-PROPERTIES
  {
    Date=02/15/18;
    Time=[ 9:44:33 AM];
    Modified=Yes;
    Version List=EZP2.20.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ERR002@1000000001 : TextConst 'ENU=The PDF Printer is not installed or is not functioning properly.';
      EasyPDF@1000000003 : Codeunit 37062300;

    PROCEDURE Identity@1100774000() : Text;
    BEGIN

      EXIT('DEFAULT');
    END;

    LOCAL PROCEDURE Initialize@1000000002(VAR EasyPDFSetup@1000000000 : Record 14103460;VAR EasyPDFDocument@1000000001 : Record 14103461;FilePath@1000000002 : Text[260]);
    BEGIN
    END;

    PROCEDURE Finish@1000000003();
    BEGIN
    END;

    PROCEDURE DelayAfterPrint@1000000001(VAR dtStart@1000000002 : DateTime;IsBatch@1000000003 : Boolean);
    VAR
      iDelay@1000000000 : Integer;
      iElapsed@1000000001 : Integer;
    BEGIN
    END;

    PROCEDURE PrintReport@1000000000(VAR EasyPDFDocument@1000000011 : Record 14103461;VAR EasyPDFCustomization@1000000001 : Codeunit 14103460;VAR ServerFilePath@1000000003 : Text[260];VAR ClientFilePath@1000000002 : Text[260]) : Boolean;
    VAR
      EasyPDFSetup@1000000007 : Record 14103460;
      PrinterSettingsFile@1000000009 : Text;
    BEGIN

      ClientFilePath := '';
      EasyPDF.GetSetup(EasyPDFSetup);

      EasyPDFCustomization.ReportSaveAs(EasyPDFDocument.Code, EasyPDFDocument."Report ID", ServerFilePath);

      IF EXISTS(ServerFilePath) THEN
      BEGIN

        // If a settings file is specified & exists (on the server) then post process the printed report

        PrinterSettingsFile := EasyPDFSetup.PrinterSettingsFilePath;
        IF EasyPDFDocument.PrinterSettingsFilePath <> '' THEN
          PrinterSettingsFile := EasyPDFDocument.PrinterSettingsFilePath;

        PrinterSettingsFile := EasyPDF.ReplaceTokens(PrinterSettingsFile);

        IF EasyPDFDocument.GetReportExtension() = 'pdf' THEN
          IF EXISTS(PrinterSettingsFile) THEN
            PostProcessPDF(PrinterSettingsFile, ServerFilePath);

      END;

      EXIT(EXISTS(ServerFilePath));
    END;

    LOCAL PROCEDURE PostProcessPDF@1000000004(SettingsFile@1000000000 : Text;PdfFile@1000000001 : Text);
    VAR
      IniReader@1000000002 : DotNet "'EasyPDF.Tools'.EasyPDF.Tools.IniReader";
    BEGIN

      IniReader.ApplyIni(SettingsFile, PdfFile);
    END;

    BEGIN
    END.
  }
}

