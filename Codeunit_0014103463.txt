OBJECT Codeunit 14103463 EasyPDF Mail
{
  OBJECT-PROPERTIES
  {
    Date=02/13/18;
    Time=10:35:23 AM;
    Modified=Yes;
    Version List=EZP2.10.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE SendMessageSMTP@1000000002(SenderName@1008 : Text;SenderAddress@1000 : Text;Recipients@1001 : Text;Subject@1004 : Text;Body@1005 : Text;BodyFormat@1006 : 'TEXT,HTML';Attachments@1000000005 : Text);
    VAR
      TEXT001@1000000002 : TextConst 'ENU=SMTP Mail Setup not found';
      SMTPMail@1000000003 : DotNet "'EasyPDF'.EasyPDF.SMTPMail";
      SMTPSetup@1000000004 : Record 409;
    BEGIN

      // Send an SMTP mail message from the Server

      IF NOT SMTPSetup.GET THEN
        ERROR(TEXT001);

      // Create a mail object

      SMTPMail := SMTPMail.SMTPMail();

      // Server Information

      SMTPMail.ServerAddress    := SMTPSetup."SMTP Server";
      SMTPMail.ServerPort       := SMTPSetup."SMTP Server Port";
      SMTPMail.EnableSsl        := SMTPSetup."Secure Connection";

      // Authentication ---

      SMTPMail.Authentication   := SMTPSetup.Authentication;
      SMTPMail.UserName         := SMTPSetup."User ID";
      SMTPMail.Password         := SMTPSetup.GetPassword;

      // Sender Information ---

      SMTPMail.SenderName       := SenderName;
      SMTPMail.SenderAddress    := SenderAddress;

      // User interface
      SMTPMail.Preview          := FALSE;

      // Recipient Information ---

      SMTPMail.Recipients       := Recipients;

      // Subject

      SMTPMail.Subject          := Subject;

      // Body

      IF BodyFormat = BodyFormat::HTML THEN BEGIN

        SMTPMail.BodyFormat     := SMTPMail.BodyFormatHtml;
        SMTPMail.BodyHtml       := Body;

      END ELSE BEGIN

        SMTPMail.BodyFormat     := SMTPMail.BodyFormatText;
        SMTPMail.BodyText       := Body;

      END;

      // Attachments

      IF Attachments <> '' THEN
      BEGIN
            SMTPMail.AddAttachments(Attachments);
      END;

      // Send

      SMTPMail.Send();
    END;

    PROCEDURE ClientSendMessageSMTP@1000000000(SenderName@1008 : Text;SenderAddress@1000 : Text;Recipients@1001 : Text;Subject@1004 : Text;Body@1005 : Text;BodyFormat@1006 : 'TEXT,HTML';Attachments@1000000005 : Text;Preview@1000000000 : Boolean);
    VAR
      TEXT001@1000000002 : TextConst 'ENU=SMTP Mail Setup not found';
      SMTPMail@1000000003 : DotNet "'EasyPDF'.EasyPDF.SMTPMail" RUNONCLIENT;
      SMTPSetup@1000000004 : Record 409;
    BEGIN

      // Send a SMTP mail message from the client
      //
      // NOTE: The Preview flag determines whether the SMTP Preview interface is shown.
      // SMTP authentication credentials are those from the SMTP Mail Setup table.
      // However, the credentials may be overriden on the client (press the F2 key in the preview window).
      // Client side SMTP credentials are stored in the file C:\users\<username>\AppData\Local\EasyPDF\EasyPDF.Client.config

      IF NOT SMTPSetup.GET THEN
        ERROR(TEXT001);

      // Create a mail object

      SMTPMail := SMTPMail.SMTPMail();

      // Server Information

      SMTPMail.ServerAddress    := SMTPSetup."SMTP Server";
      SMTPMail.ServerPort       := SMTPSetup."SMTP Server Port";
      SMTPMail.EnableSsl        := SMTPSetup."Secure Connection";
      SMTPMail.AllowClientSetup := TRUE;

      // Authentication ---

      SMTPMail.Authentication   := SMTPSetup.Authentication;
      SMTPMail.UserName         := SMTPSetup."User ID";
      SMTPMail.Password         := SMTPSetup.GetPassword;

      // Sender Information ---

      SMTPMail.SenderName       := SenderName;
      SMTPMail.SenderAddress    := SenderAddress;

      // User interface
      SMTPMail.Preview          := Preview;

      // Recipient Information ---

      SMTPMail.Recipients       := Recipients;

      // Subject

      SMTPMail.Subject          := Subject;

      // Body

      IF BodyFormat = BodyFormat::HTML THEN BEGIN

        SMTPMail.BodyFormat     := SMTPMail.BodyFormatHtml;
        SMTPMail.BodyHtml       := Body;

      END ELSE BEGIN

        SMTPMail.BodyFormat     := SMTPMail.BodyFormatText;
        SMTPMail.BodyText       := Body;

      END;

      // Attachments

      IF Attachments <> '' THEN
      BEGIN
            SMTPMail.AddAttachments(Attachments);
      END;

      // Send

      SMTPMail.Send();
    END;

    PROCEDURE ClientSendMessageMAPI@1000000003(Recipients@1001 : Text;Subject@1004 : Text;Body@1005 : Text;BodyFormat@1006 : 'TEXT,HTML';Attachments@1000000005 : Text;Preview@1000000000 : Boolean);
    VAR
      TEXT001@1000000002 : TextConst 'ENU=SMTP Mail Setup not found';
      MAPIMail@1000000003 : DotNet "'EasyPDF.Client'.EasyPDF.Client.MAPIMail" RUNONCLIENT;
    BEGIN

      // This function is a wrapper around the EasyPDF.Client.MAPIMail component
      //
      // The Preview flag determines whether the Outlook mail message window is shown.
      // When Preview is FALSE no window is shown and the message is placed into the Outlook Drafts folder.
      // Delivery requires that Outlook is running on the client, so until Outlook is running the message
      // will sit in the Drafts folder.

      // Create a mail object

      MAPIMail := MAPIMail.MAPIMail();

      // Recipient Information ---

      MAPIMail.Recipients       := Recipients;

      // Subject

      MAPIMail.Subject          := Subject;

      // Body

      IF BodyFormat = BodyFormat::HTML THEN BEGIN

        MAPIMail.BodyFormat     := MAPIMail.BodyFormatHtml;
        MAPIMail.BodyHtml       := Body;

      END ELSE BEGIN

        MAPIMail.BodyFormat     := MAPIMail.BodyFormatText;
        MAPIMail.BodyText       := Body;

      END;

      // Attachments

      IF Attachments <> '' THEN
      BEGIN
            MAPIMail.AddAttachment(Attachments);
      END;

      // Send

      MAPIMail.Preview := Preview;
      MAPIMail.Send();
    END;

    BEGIN
    {

      This codeunit exposes convenience functions to enable sending e-mail via the Easy PDF components
    }
    END.
  }
}

