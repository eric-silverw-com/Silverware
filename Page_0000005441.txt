OBJECT Page 5441 Automation Extensions Entity
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:01 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=extensions];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2000000160;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Name)
                    WHERE(Name=FILTER(<>_Exclude_*),
                          Package Type=FILTER(=0|2));
    PageType=API;
    APIPublisher=microsoft;
    APIGroup=automation;
    EntitySetName=extensions;
    EntityName=extension;
    OnOpenPage=BEGIN
                 BINDSUBSCRIPTION(AutomationAPIManagement);
               END;

    OnAfterGetCurrRecord=VAR
                           NavExtensionInstallationMgmt@1000 : Codeunit 2500;
                         BEGIN
                           Isinstalled := NavExtensionInstallationMgmt.IsInstalled("Package ID");
                         END;

    ODataKeyFields=Package ID;
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                Name=packageId;
                CaptionML=[@@@={Locked};
                           ENU=packageId];
                ApplicationArea=#All;
                SourceExpr="Package ID" }

    { 11  ;2   ;Field     ;
                Name=id;
                CaptionML=[@@@={Locked};
                           ENU=id];
                ApplicationArea=#All;
                SourceExpr=ID }

    { 5   ;2   ;Field     ;
                Name=displayName;
                CaptionML=[@@@={Locked};
                           ENU=displayName];
                ApplicationArea=#All;
                SourceExpr=Name }

    { 6   ;2   ;Field     ;
                Name=publisher;
                CaptionML=[@@@={Locked};
                           ENU=publisher];
                ApplicationArea=#All;
                SourceExpr=Publisher }

    { 7   ;2   ;Field     ;
                Name=versionMajor;
                CaptionML=[@@@={Locked};
                           ENU=versionMajor];
                ApplicationArea=#All;
                SourceExpr="Version Major" }

    { 8   ;2   ;Field     ;
                Name=versionMinor;
                CaptionML=[@@@={Locked};
                           ENU=versionMinor];
                ApplicationArea=#All;
                SourceExpr="Version Minor" }

    { 10  ;2   ;Field     ;
                Name=scope;
                CaptionML=[@@@={Locked};
                           ENU=scope];
                ApplicationArea=#All;
                SourceExpr=Scope;
                Editable=False }

    { 9   ;2   ;Field     ;
                Name=isInstalled;
                CaptionML=[@@@={Locked};
                           ENU=isInstalled];
                ApplicationArea=#All;
                SourceExpr=Isinstalled;
                Editable=False }

  }
  CODE
  {
    VAR
      AutomationAPIManagement@1003 : Codeunit 5435;
      Isinstalled@1000 : Boolean;
      IsNotInstalledErr@1001 : TextConst '@@@="%1=name of app";ENU=The extension %1 is not installed.';
      IsInstalledErr@1002 : TextConst '@@@="%1=name of app";ENU=The extension %1 is already installed.';

    [ServiceEnabled]
    [External]
    PROCEDURE install@3(VAR ActionContext@1002 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.WebServiceActionContext");
    VAR
      NavExtensionInstallationMgmt@1001 : Codeunit 2500;
      ODataActionManagement@1000 : Codeunit 6711;
    BEGIN
      IF NavExtensionInstallationMgmt.IsInstalled("Package ID") THEN
        ERROR(STRSUBSTNO(IsInstalledErr,Name));

      NavExtensionInstallationMgmt.InstallNavExtension("Package ID",GLOBALLANGUAGE);

      ODataActionManagement.AddKey(FIELDNO("Package ID"),"Package ID");
      ODataActionManagement.SetDeleteResponse(ActionContext);
    END;

    [ServiceEnabled]
    [External]
    PROCEDURE uninstall@2(VAR ActionContext@1001 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.WebServiceActionContext");
    VAR
      NavExtensionInstallationMgmt@1000 : Codeunit 2500;
      ODataActionManagement@1002 : Codeunit 6711;
    BEGIN
      IF NOT NavExtensionInstallationMgmt.IsInstalled("Package ID") THEN
        ERROR(STRSUBSTNO(IsNotInstalledErr,Name));

      NavExtensionInstallationMgmt.UninstallNavExtension("Package ID");

      ODataActionManagement.AddKey(FIELDNO("Package ID"),"Package ID");
      ODataActionManagement.SetUpdatedPageResponse(ActionContext,PAGE::"Automation Extensions Entity");
    END;

    BEGIN
    END.
  }
}

