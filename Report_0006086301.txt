OBJECT Report 6086301 Suggest EM Bank. Recon. Lines
{
  OBJECT-PROPERTIES
  {
    Date=05/10/17;
    Time=[ 1:00:00 AM];
    Version List=EMW17.00.00.2.60;
  }
  PROPERTIES
  {
    CaptionML=ENU=Suggest Bank Acc. Recon. Lines;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;BankTrans           ;
               DataItemTable=Table6086330;
               DataItemTableView=SORTING(Bank Account Type,Bank Account No.,Bank Statement Transaction,Reconciled);
               OnPreDataItem=BEGIN
                               IF EndDate = 0D THEN
                                 ERROR(Text000);

                               BankAccReconLine.FilterBankRecLines(BankAccRecon);
                               IF NOT BankAccReconLine.FINDLAST THEN BEGIN
                                 BankAccReconLine."Bank Account Type" := BankAccRecon."Bank Account Type";
                                 BankAccReconLine."Bank Account No." := BankAccRecon."Bank Account No.";
                                 BankAccReconLine."Statement No." := BankAccRecon."Statement No.";
                                 BankAccReconLine."Statement Line No." := 0;
                               END;

                               BankTrans.RESET;
                               BankTrans.SETCURRENTKEY("Card No.","Posting Date");
                               BankTrans.SETRANGE("Bank Account Type",BankAccRecon."Bank Account Type");
                               BankTrans.SETRANGE("Bank Account No.",BankAccRecon."Bank Account No.");
                               BankTrans.SETRANGE("Posting Date",StartDate,EndDate);
                               BankTrans.SETRANGE("Bank Statement Transaction",FALSE);
                               IF ExpType <> '' THEN
                                 BankTrans.SETRANGE("Expense Type",ExpType);
                               BankTrans.SETRANGE(Reconciled,FALSE);
                               BankTrans.SETRANGE("Statement No.",'');
                               BankTrans.SETRANGE("Statement Line No.",0);
                             END;

               OnAfterGetRecord=BEGIN
                                  EnterBankTransactionLine(BankTrans);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 5   ;2   ;Group     ;
                  CaptionML=ENU=Statement Period }

      { 1   ;3   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  SourceExpr=StartDate }

      { 3   ;3   ;Field     ;
                  Name=EndingDate;
                  CaptionML=ENU=Ending Date;
                  SourceExpr=EndDate }

      { 6086300;3;Field     ;
                  Name=ExpenseType;
                  Lookup=Yes;
                  CaptionML=ENU=Expense Type;
                  SourceExpr=ExpType;
                  TableRelation="Expense Type".Code;
                  LookupPageID=Expense Types }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Enter the Ending Date.';
      BankAccRecon@1004 : Record 6086374;
      BankAccReconLine@1005 : Record 6086375;
      BankAccSetStmtNo@1006 : Codeunit 6086393;
      StartDate@1008 : Date;
      EndDate@1009 : Date;
      ExpType@6086300 : Code[20];

    PROCEDURE SetStmt@1(VAR BankAccRecon2@1000 : Record 6086374);
    BEGIN
      BankAccRecon := BankAccRecon2;
      EndDate := BankAccRecon."Statement Date";
    END;

    LOCAL PROCEDURE EnterBankTransactionLine@5(VAR BankTransaction@1000 : Record 6086330);
    BEGIN
      BankAccReconLine.INIT;
      BankAccReconLine."Statement Line No." := BankAccReconLine."Statement Line No." + 10000;
      BankAccReconLine."Transaction Date" := BankTransaction."Document Date";
      BankAccReconLine."Value Date" := BankTransaction."Posting Date";
      BankAccReconLine.Description := COPYSTR(BankTransaction."Business Name",1,MAXSTRLEN(BankAccReconLine.Description));
      BankAccReconLine."Statement Amount" := BankTransaction."Bank-Currency Amount";
      BankAccReconLine."Applied Amount" := BankAccReconLine."Statement Amount";
      BankAccReconLine.Type := BankAccReconLine.Type::"Bank Transaction Entry";
      BankAccReconLine."Applied Entries" := 1;
      BankAccSetStmtNo.SetReconNo(BankTransaction,BankAccReconLine);
      BankAccReconLine.INSERT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

