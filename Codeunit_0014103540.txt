OBJECT Codeunit 14103540 Dimension Management
{
  OBJECT-PROPERTIES
  {
    Date=06/04/18;
    Time=[ 7:21:38 PM];
    Modified=Yes;
    Version List=VLDM4.10,VLDM4.10.1,VLDM4.11,VLDM4.12,DM4.14,VLDM4.15;
  }
  PROPERTIES
  {
    Permissions=TableData 15=rim,
                TableData 17=rim,
                TableData 18=rim,
                TableData 21=rim,
                TableData 23=rim,
                TableData 25=rim,
                TableData 27=rim,
                TableData 32=rim,
                TableData 36=rim,
                TableData 37=rim,
                TableData 38=rim,
                TableData 39=rim,
                TableData 49=rim,
                TableData 81=rim,
                TableData 110=rim,
                TableData 111=rim,
                TableData 112=rim,
                TableData 113=rim,
                TableData 114=rim,
                TableData 115=rim,
                TableData 120=rim,
                TableData 121=rim,
                TableData 122=rim,
                TableData 123=rim,
                TableData 124=rim,
                TableData 125=rim,
                TableData 156=rim,
                TableData 167=rim,
                TableData 169=rim,
                TableData 203=rim,
                TableData 270=rim,
                TableData 271=rim,
                TableData 379=rim,
                TableData 380=rim,
                TableData 900=rim,
                TableData 901=rim,
                TableData 910=rim,
                TableData 911=rim,
                TableData 5600=rim,
                TableData 5601=rim,
                TableData 5625=rim,
                TableData 5629=rim,
                TableData 5744=rim,
                TableData 5745=rim,
                TableData 5746=rim,
                TableData 5747=rim,
                TableData 5802=rim,
                TableData 5900=rim,
                TableData 5901=rim,
                TableData 5902=rim,
                TableData 5907=rim,
                TableData 5908=rim,
                TableData 5989=rim,
                TableData 5990=rim,
                TableData 5991=rim,
                TableData 5992=rim,
                TableData 5993=rim,
                TableData 5994=rim,
                TableData 5995=rim,
                TableData 6650=rim,
                TableData 6651=rim,
                TableData 6660=rim,
                TableData 6661=rim,
                TableData 14103540=rim,
                TableData 14103541=rim,
                TableData 14103542=rim;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DimensionMgtSetup@1000000007 : Record 14103540;
      DimensionMgtHistory@1000000004 : Record 14103541;
      DimMgtProcessing@1000000009 : Codeunit 14103541;
      RecID_Text@1000000000 : Text[1024];
      Text001@1000000003 : TextConst 'ENU=You have left Dimension Value blank.  This will clear out the Dimension.  Do you want to continue?';
      Text002@1000000002 : TextConst 'ENU=Processing has stopped.';
      Text003@1000000001 : TextConst 'ENU=You must choose a Dimension';
      Dimension@1000000022 : Code[20];
      DimensionValue@1000000021 : Code[20];
      KeyCode1@1000000005 : Code[20];
      Text004@1000000006 : TextConst 'ENU=User DM Change';
      Text005@1000000008 : TextConst 'ENU=Batch DM Change';
      Text006@1000000011 : TextConst 'ENU=Undo DM Change from DM history entry %1';
      Text007@1000000010 : TextConst 'ENU=Dimension Mgt History is not enabled.';
      DimEntryNo@1000000012 : Integer;
      RetrievedSetup@1000000014 : Boolean;
      TrackHistory@1000000015 : Boolean;
      Text008@1000000013 : TextConst 'ENU=Dimensions will be changed back to old dimension details based on dimension history version %1.  Continue?';
      Text009@1000000016 : TextConst 'ENU="There are no dimension history details.  "';
      Text010@1000000017 : TextConst 'ENU="Undo Complete. "';
      Text011@1000000018 : TextConst 'ENU=You can not perform an undo on a undo Entry Type.';
      Text012@1000000019 : TextConst 'ENU=Entries in a closed accounting period cannot be changed.';
      Text013@1000000020 : TextConst 'ENU=Start Date must be within a open accounting period.';
      Text014@1000000023 : TextConst 'ENU=Cannot perform undo on an auto install history record.';
      XDocNo@1000000024 : Code[20];
      Text015@1000000026 : TextConst 'ENU=%1 Dimension has been updated to %2';
      Text016@1000000025 : TextConst 'ENU=%1 Dimension has been removed';
      TempGLEntry@1000000027 : TEMPORARY Record 17;
      TempVLEntry@1000000028 : TEMPORARY Record 5802;
      TempGLItemLedgRelation@1000000029 : TEMPORARY Record 5823;
      CombineLines@1000000030 : Boolean;
      i@1000000031 : Integer;
      Text14103540@1000000033 : TextConst 'ENU=Posting Date %1 is not within your range.';
      Text14103541@1000000032 : TextConst 'ENU=You can not change Line Dimensions for %1 Document, because all lines have the same dimension values.';
      Text14103542@1000000034 : TextConst 'ENU=If you continue, dimension value for other lines will also be changed. Do you want to continue?';
      Text14103543@1000000035 : TextConst 'ENU=Dimension value for other matching lines will also be changed.';
      UserSetup@1000000136 : Record 91;
      ExistingDimSetID@1000000036 : Integer;
      RecRefGbl@1000000037 : RecordRef;
      TypeValue@1000000038 : Code[20];
      Text14103544@1000000039 : TextConst 'ENU=Dimension %1 is updated with the value %2';
      Text14103545@1000000040 : TextConst 'ENU=Processing';
      SalesInvCaption@1000000044 : Record 113;
      SalesInvHCaption@1000000043 : Record 112;
      ResLedgCaption@1000000042 : Record 203;
      FALedgCaption@1000000041 : Record 5601;
      TrnsRcptCaption@1000000054 : Record 5747;
      ItmLedgCaption@1000000061 : Record 32;
      ItmNoTxt@1000000062 : Text[50];
      Notext@1000000045 : Text[30];
      DocNotext@1000000046 : Text[30];
      DocLineNotext@1000000047 : Text[30];
      ResNotext@1000000048 : Text[30];
      LineNotext@1000000049 : Text[30];
      PostingDatetext@1000000050 : Text[30];
      ShipmentDatetext@1000000052 : Text[30];
      ReceiptDatetext@1000000053 : Text[30];
      FANotext@1000000051 : Text[30];
      DimSetEntry@1000000056 : Record 480;
      GLSetup@1000000055 : Record 98;
      GLEntry@1000000057 : Record 17;
      DocumentNoFilter@1000000058 : Code[20];
      TabId@1000000059 : Integer;
      ForPostedDoc@1000000060 : Boolean;
      Text017@1000000063 : TextConst 'ENU=Do you want to continue to change the Dimension? This process might take longer time depending upon no of entries';
      DialogMSG@1000000064 : Dialog;

    PROCEDURE ChangeDimension@10(RecRef@1000000001 : RecordRef;ConfirmIt@1000000000 : Boolean;Batch@1000000002 : Boolean;DimSetID@1000000004 : Integer;No@1000000005 : Code[20]);
    VAR
      Text001@1000000006 : TextConst 'ENU=%1 Dimension has been updated to %2';
      Text002@1000000007 : TextConst 'ENU=%1 Dimension has been removed';
      StartDate@1000000008 : Date;
      EndDate@1000000009 : Date;
      GLEntryrec@1000000003 : Record 17;
    BEGIN
      // Simple Handler so all forms can access a single point of entry.

      ExistingDimSetID := DimSetID;//DM4.07

      // Set Global RecordID Text
      RecID_Text := FORMAT(RecRef.RECORDID);
      KeyCode1 := ParseKey1;

      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;

      CLEAR(DimMgtProcessing);

      // Master Records
      // KEY: "No."  Code 20
      IF RecRef.NUMBER IN [15,18,23,27,156,167,270,5600] THEN BEGIN
        ChooseNewDimensionWithDate(StartDate, EndDate,RecRef.NUMBER,No);//VLDM4.07

        GetDimMgtSetup;
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF Batch THEN
          BatchLoopChangeDimension(
            RecRef, Dimension, DimensionValue, StartDate, EndDate)
        ELSE BEGIN
          CallWriteDimHistory(
            0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text004);

          DimMgtProcessing.ChangeSourceDim(
            RecRef, RecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
        END;
      END ELSE BEGIN
        ChooseNewDimension;

        GetDimMgtSetup;
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        CallWriteDimHistory(
          0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text004);

        // Ledger Entry
        // KEY: "Entry No."   Integer
        IF RecRef.NUMBER IN [17,21,25,32,169,203,271,5601,5625,5629,5802,5907,5908] THEN BEGIN //VLDM4.12 Added Table 5907,5908
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          //VLDM4.07
          IF RecRef.NUMBER= 17 THEN BEGIN
            RecRef.SETTABLE(GLEntryrec);
            UpdateExtndedDimension(GLEntryrec);
          END;
          //VLDM4.07
        END;

        // Posted Document Header
        // KEY: "Document No."
        IF RecRef.NUMBER IN [110,112,114,120,122,124,5744,5746,5990,5992,5994,6650,6660] THEN BEGIN //VLDM4.12 5990,5992,5994 added
          DimMgtProcessing.ChangePostedDocDim(RecRef, RecRef.NUMBER, KeyCode1, 0, Dimension, DimensionValue, FALSE);
        END;

        // Posted Document Line
        // KEY: "Document No.","Line No."

        // Open Document Header
        // Document Type: Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order
        // KEY: "Document Type","Document No."
        IF RecRef.NUMBER IN [36,38] THEN BEGIN
          DimMgtProcessing.ChangeDocDim(RecRef, RecRef.NUMBER, KeyCode1, ParseKey2, 0, Dimension, DimensionValue);
        END;

        // Open Document Line
        // Document Type: Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order
        // KEY: "Doucment Type","Document No.","Line No."
      END;

      COMMIT;


      IF Dimension <> '' THEN
        MESSAGE(Text001, Dimension, DimensionValue)
      ELSE
        MESSAGE(Text002,Dimension);
    END;

    PROCEDURE ChooseNewDimension@20();
    VAR
      NewDimensionPage@1000000000 : Page 14103540;
    BEGIN
      // Calls the Dimensions form and returns the Dimensions
      CLEAR(NewDimensionPage);
      CLEAR(Dimension);
      CLEAR(DimensionValue);
      NewDimensionPage.SetDimensionSetID(ExistingDimSetID);//VLDM4.07
      NewDimensionPage.GetDocNo(DocumentNoFilter,TabId,ForPostedDoc);//VLDM4.07

      IF NewDimensionPage.RUNMODAL <> ACTION::LookupOK THEN
        ERROR('');

      NewDimensionPage.ReturnValues(Dimension, DimensionValue);
      CLEAR(NewDimensionPage);

      IF (Dimension = '') THEN
        ERROR(Text003);

      IF (DimensionValue = '') THEN
        IF NOT(CONFIRM(Text001)) THEN
          ChooseNewDimension;
    END;

    PROCEDURE ChooseNewDimensionWithDate@30(VAR StartDate@1000000006 : Date;VAR EndDate@1000000007 : Date;TableID@1000000001 : Integer;No@1000000002 : Code[20]);
    VAR
      NewDimensionPage@1000000000 : Page 14103541;
    BEGIN
      // Calls the Dimensions form and returns the Dimensions
      CLEAR(NewDimensionPage);
      CLEAR(Dimension);
      CLEAR(DimensionValue);
      NewDimensionPage.SetValues(TableID,No);//VLDM4.07
      IF NewDimensionPage.RUNMODAL <> ACTION::LookupOK THEN
        ERROR('');

      NewDimensionPage.ReturnValues(Dimension, DimensionValue, StartDate, EndDate);
      CLEAR(NewDimensionPage);

      IF (Dimension = '') THEN
        ERROR(Text003);

      IF (DimensionValue = '') THEN
        IF NOT(CONFIRM(Text001)) THEN
          ChooseNewDimensionWithDate(StartDate, EndDate,TableID,No);
    END;

    PROCEDURE ConfirmChange@40() Confirmed : Boolean;
    VAR
      Text001@1000000000 : TextConst 'ENU=Do you want to change the Dimensions?';
    BEGIN
      // This will simply ask if they want to confirm changing the dimension
      Confirmed := CONFIRM(Text001,TRUE);
    END;

    PROCEDURE ConfirmBatchChange@1000000016() Confirmed : Boolean;
    VAR
      Text001@1000000000 : TextConst 'ENU=Do you want to undergo Batch change dimensions? This will overwrite the existing dimensions of all the list of entries';
    BEGIN
      // This will simply ask if they want to confirm changing the dimension
      Confirmed := CONFIRM(Text001,TRUE);
    END;

    PROCEDURE ChangeNavigate@50(VAR DocumentEntry@1000000000 : TEMPORARY Record 265;DocNoFilter@1000000002 : Code[250];PostingDateFilter@1000000004 : Text[250];Batch@1000000009 : Boolean);
    VAR
      RecRef@1000000001 : RecordRef;
      Text001@1000000003 : TextConst 'ENU=You must run this only with a Document Number provided';
      EvalStartDate@1000000005 : Date;
      Key1@1000000008 : Integer;
    BEGIN
      Notext:=SalesInvHCaption.FIELDCAPTION("No.");
      DocNotext:=SalesInvCaption.FIELDCAPTION("Document No.");
      PostingDatetext:=SalesInvCaption.FIELDCAPTION("Posting Date");

      //CAN_DS
      DocumentNoFilter := DocNoFilter; //CAN_DS
      TabId := DocumentEntry."Table ID"; //CAN_DS
      IF TabId IN [17,110,112,114,120,122,124,5990,5991,5992,5993,5994,5995,5907,5908] THEN
        ForPostedDoc := TRUE
      ELSE
        ForPostedDoc := FALSE;
      //CAN_DS

      // This will update tables based on the Navigate form
      IF NOT Batch THEN BEGIN
        IF DocNoFilter = '' THEN
          ERROR(Text001);
        ChooseNewDimension;
        GetDimMgtSetup;
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          EVALUATE(EvalStartDate, PostingDateFilter);
          IF (EvalStartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(EvalStartDate) THEN
            ERROR(Text012);
      END;

      CLEAR(DimMgtProcessing);

      CallWriteDimHistory(
        0, 265, 0, DocNoFilter, Dimension, DimensionValue, 0D, 0D, DocNoFilter, PostingDateFilter, Text004);

      WITH DocumentEntry DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            CASE DocumentEntry."Table ID" OF
              110,112,114,120,122,124,5744,5746,5989,5990,5992,5994,6650,6660 :
                // Posted Documents  VLDM4.12 Added 5990,5992,5994
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> '' THEN
                    RecRef.SETVIEW(
                      'SORTING('+Notext+') '+' WHERE('+Notext+'=CONST(' + DocNoFilter +   //VLDM4.11
                      '),'+PostingDatetext+'=CONST(' + PostingDateFilter + '))')
                  ELSE
                    RecRef.SETVIEW('SORTING('+Notext+') '+' WHERE('+Notext+'=CONST(' + DocNoFilter + '))');
                  //IF DimensionMgtSetup."Enable Posting Date Check" THEN  //CAN_SH
                    CheckAllowPostingDate(RecRef);      //SE- date: 22-03-14
                  DimMgtProcessing.SaveDocEntry(DocumentEntry); //VLDM4.09  Saving copy of Doc Entry to get it in DimMgtProc CU.
                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.ChangePostedDocDim(
                        RecRef, RecRef.NUMBER, ParseKey1, 0, Dimension, DimensionValue, Batch);
                    UNTIL RecRef.NEXT = 0;

                  RecRef.CLOSE;
                END;
            END;
            CASE DocumentEntry."Table ID" OF
              17,21,25,32,96,169,203,271,5601,5625,5907,5802,5908 :        //CAN_HK    //Added 5907,5908
                // Ledger Entries
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> '' THEN
                    RecRef.SETVIEW(
                      'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +   //VLDM4.11
                      '),'+PostingDatetext+'=CONST(' + PostingDateFilter + '))')
                  ELSE
                    RecRef.SETVIEW(
                      'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter + '))');//VLDM4.11

                    //IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
                      CheckAllowPostingDate(RecRef);      //SE- date: 22-03-14

                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.UpdateHeaderTables; //VLDM4.09  // Sets we are updating Dimension from Pstd Header Tables.
                      DimMgtProcessing.ChangeLedgerEntryDim(
                        RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                    UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ChangeNavigateLines@1000000004(VAR DocumentEntry@1000000000 : TEMPORARY Record 265;DocNoFilter@1000000002 : Code[250];PostingDateFilter@1000000004 : Text[250];Batch@1000000009 : Boolean;SD1@1000000006 : Code[20];LineNo1@1000000007 : Integer;CombineLines@1000000013 : Integer);
    VAR
      RecRef@1000000001 : RecordRef;
      Text001@1000000003 : TextConst 'ENU=You must run this only with a Document Number provided';
      EvalStartDate@1000000005 : Date;
      Key1@1000000008 : Integer;
      FieldRef@1000000010 : FieldRef;
      EntryNo@1000000011 : Integer;
      RecRefVL@1000000012 : RecordRef;
      DocCombineLines@1000000014 : Boolean;
      LedCombineLines@1000000016 : Boolean;
      DocLineNo@1000000015 : Integer;
      T5747@1000000017 : Record 5747;
      ReceiptDateFilter@1000000018 : Date;
    BEGIN
      //VLDM4.11>>
      DocNotext:=SalesInvCaption.FIELDCAPTION("Document No.");
      DocLineNotext:=SalesInvCaption.FIELDCAPTION("Document Line No.");
      LineNotext:=SalesInvCaption.FIELDCAPTION("Line No.");
      PostingDatetext:=SalesInvCaption.FIELDCAPTION("Posting Date");
      ShipmentDatetext:=SalesInvCaption.FIELDCAPTION("Shipment Date");
      ReceiptDatetext:=TrnsRcptCaption.FIELDCAPTION("Receipt Date");
      ResNotext:=ResLedgCaption.FIELDCAPTION("Resource No.");
      FANotext:=FALedgCaption.FIELDCAPTION("FA No.");
      //VLDM4.11<<
      ItmNoTxt := ItmLedgCaption.FIELDCAPTION("Item No.");//VLDM4.13


      // This will update tables based on the Navigate form
      IF NOT Batch THEN BEGIN
        IF DocNoFilter = '' THEN
          ERROR(Text001);
        ChooseNewDimension;
        GetDimMgtSetup;
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          EVALUATE(EvalStartDate, PostingDateFilter);
          IF (EvalStartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(EvalStartDate) THEN
            ERROR(Text012);
      END;

      IF i = 1 THEN BEGIN
      CLEAR(DimMgtProcessing);

      CallWriteDimHistory(
        0, 265, 0, DocNoFilter, Dimension, DimensionValue, 0D, 0D, DocNoFilter, PostingDateFilter, Text004);
      END;
      WITH DocumentEntry DO BEGIN
        IF FINDFIRST THEN
          REPEAT
            CASE DocumentEntry."Table ID" OF
              110,112,114,120,122,124,5990,5992,5994,6650,6660 :
                // Posted Documents // VLDM4.12 Added Table id 5990,5992,5994 for Service Modules

                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID"+1);
                  IF PostingDateFilter <> '' THEN
                //>>VLDM4.11
                    RecRef.SETVIEW(
                      'SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                      '),'+PostingDatetext+'=CONST(' + PostingDateFilter + '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))')
                  ELSE
                    RecRef.SETVIEW('SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                    '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))');
                //<<VLDM4.11
                  DocCombineLines:=TRUE;
                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      LineNo1 := FindLineNum(RecRef); //SE- Added new.
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.ChangePostedDocDimLines(
                        RecRef, RecRef.NUMBER, ParseKey1, LineNo1, Dimension, DimensionValue, Batch,SD1,DocCombineLines);
                      DocCombineLines:=FALSE;
                    UNTIL RecRef.NEXT = 0;

                  RecRef.CLOSE;
                END;
            END;
            CASE DocumentEntry."Table ID" OF //VLDM4.10>>
              5744,5746 :
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID"+1);
                  IF RecRef.NUMBER = 5745 THEN BEGIN
                    IF PostingDateFilter <> '' THEN
                  //>>VLDM4.11
                      RecRef.SETVIEW(
                        'SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                        '),'+ShipmentDatetext+'=CONST(' + PostingDateFilter + '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))')
                    ELSE
                      RecRef.SETVIEW('SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                      '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))');
                  //<<VLDM4.11
                  END ELSE BEGIN
                     T5747.GET(DocNoFilter,LineNo1);
                     ReceiptDateFilter := T5747."Receipt Date";
                    IF PostingDateFilter <> '' THEN
                    //>>VLDM4.11
                      RecRef.SETVIEW(
                        'SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                        '),'+ReceiptDatetext+'=CONST(' + FORMAT(ReceiptDateFilter) + '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))')
                    ELSE
                      RecRef.SETVIEW('SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                      '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))');
                    //<<VLDM4.11
                  END;
                  DocCombineLines:=TRUE;
                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      LineNo1 := FindLineNum(RecRef);
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.ChangePostedDocDimLines(
                        RecRef, RecRef.NUMBER, ParseKey1, LineNo1, Dimension, DimensionValue, Batch,SD1,DocCombineLines);
                      DocCombineLines:=FALSE;
                    UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END; ////VLDM4.10<<
            END;
            CASE DocumentEntry."Table ID" OF
               169,203,271,5601,5625,5907,5908 : //SE-Removed Vend/Cust for line level VLDM//VLDM4.12 Added Table 5907,5908
                // Ledger Entries
                BEGIN
                 IF i = 1 THEN BEGIN
                   //VLDM4.09>>
                    CASE DocumentEntry."Table ID" OF
                      203 :
                        BEGIN
                          RecRef.OPEN(DocumentEntry."Table ID");
                          IF PostingDateFilter <> '' THEN
                            //>>VLDM4.11
                            RecRef.SETVIEW(
                             'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+PostingDatetext+'=CONST('
                                + PostingDateFilter +'),'+ResNotext+'=CONST('+ TypeValue +'))')
                          ELSE
                            RecRef.SETVIEW('SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+ResNotext+'=CONST('
                              + TypeValue +'))');
                          //<<VLDM4.11
                          IF RecRef.FINDFIRST THEN
                            REPEAT
                              RecID_Text := FORMAT(RecRef.RECORDID);
                              DimMgtProcessing.ChangeLedgerEntryDim(
                                RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                            UNTIL RecRef.NEXT = 0;
                          RecRef.CLOSE;
                        END;
                      5601,5625 :
                        BEGIN
                          RecRef.OPEN(DocumentEntry."Table ID");
                          IF PostingDateFilter <> '' THEN
                            //>>VLDM4.11
                            RecRef.SETVIEW(
                             'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+PostingDatetext+'=CONST('
                                + PostingDateFilter +'),'+FANotext+'=CONST('+ TypeValue +'))')
                          ELSE
                            RecRef.SETVIEW('SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+FANotext+'=CONST('+TypeValue+'))');
                            //<<VLDM4.11
                          IF RecRef.FINDFIRST THEN
                            REPEAT
                              RecID_Text := FORMAT(RecRef.RECORDID);
                              DimMgtProcessing.ChangeLedgerEntryDim(
                                RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                            UNTIL RecRef.NEXT = 0;
                          RecRef.CLOSE;
                        END;
                       {5907,5908 :   //CAN_DS Begin
                        BEGIN
                          RecRef.OPEN(DocumentEntry."Table ID");
                          IF PostingDateFilter <> '' THEN
                            //>>VLDM4.11
                            RecRef.SETVIEW(
                             'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+PostingDatetext+'=CONST('
                                + PostingDateFilter +'),'+ItmNoTxt+'=CONST('+ TypeValue +'))')
                          ELSE
                            RecRef.SETVIEW('SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'
                            +ItmNoTxt+'=CONST('+TypeValue+'))');
                            //<<VLDM4.11
                          IF RecRef.FINDFIRST THEN
                            REPEAT
                              RecID_Text := FORMAT(RecRef.RECORDID);
                              DimMgtProcessing.ChangeLedgerEntryDim(
                                RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                            UNTIL RecRef.NEXT = 0;
                          RecRef.CLOSE;
                        END;  //CAN_DS End}
                      ELSE
                        BEGIN
                          RecRef.OPEN(DocumentEntry."Table ID");
                          IF PostingDateFilter <> '' THEN
                            //>>VLDM4.11
                            RecRef.SETVIEW(
                             'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+PostingDatetext+'=CONST(' +PostingDateFilter +'))')
                          ELSE
                            RecRef.SETVIEW('SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'))');
                            //<<VLDM4.11
                          IF RecRef.FINDFIRST THEN
                            REPEAT
                              RecID_Text := FORMAT(RecRef.RECORDID);
                              DimMgtProcessing.ChangeLedgerEntryDim(
                                RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                            UNTIL RecRef.NEXT = 0;
                          RecRef.CLOSE;
                        END;
                   END;
                 //VLDM4.09<<
                END;
              END;
            END;
            CASE DocumentEntry."Table ID" OF
              17,32,96, 5802 :     //CAN_HK
                // Ledger Entries
                BEGIN
                // Decides update of "Document Line No." field based on Item ledger and Value Entry.
                //VLDM4.09>>
                    DocLineNo := GetPstdDocLineNo(RecRefGbl);
                    IF (DocumentEntry."Table ID" = 32) OR (DocumentEntry."Table ID" = 5802) THEN
                      DocLineNo := LineNo1;
                //VLDM4.09<<
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> '' THEN
                   //>>VLDM4.11
                    RecRef.SETVIEW(
                     'SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +'),'+PostingDatetext+'=CONST(' + PostingDateFilter +
                       '),'+DocLineNotext+'=CONST(' + FORMAT(DocLineNo) + '))')
                  ELSE
                       RecRef.SETVIEW('SORTING('+DocNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                      '),'+DocLineNotext+'=CONST(' + FORMAT(DocLineNo) + '))');
                   //<<VLDM4.11
                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.ChangeLedgerEntryDim(
                        RecRef, RecRef.NUMBER, ParseKey1, Dimension, DimensionValue);
                    UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END;
            END;

      //VLDM4.12 Service Module
            CASE DocumentEntry."Table ID" OF
              5990,5992,5994 :
                // Posted Documents
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID" - 1);
                  IF PostingDateFilter <> '' THEN
                 RecRef.SETVIEW(
                  'SORTING('+DocNotext+','+LineNotext+') '+' WHERE('+DocNotext+'=CONST(' + DocNoFilter +
                 '),'+PostingDatetext+'=CONST(' + PostingDateFilter + '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))')

                  ELSE
                    RecRef.SETVIEW('SORTING('+'No.'+','+LineNotext+') '+' WHERE('+'No.'+'=CONST(' + DocNoFilter +
                    '),'+LineNotext+'=CONST(' + FORMAT(LineNo1) + '))');

                  //DocCombineLines:=TRUE;
                  IF RecRef.FINDFIRST THEN
                    REPEAT
                      LineNo1 := FindLineNum(RecRef);
                      RecID_Text := FORMAT(RecRef.RECORDID);
                      DimMgtProcessing.ChangePostedDocDimLines(
                        RecRef, RecRef.NUMBER, ParseKey1, LineNo1, Dimension, DimensionValue, Batch,SD1,DocCombineLines);
                      DocCombineLines:=FALSE;
                    UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END;
            END;
      //VLDM4.12 Service Module
          UNTIL NEXT = 0;
      END;
    END;

    PROCEDURE ParseKey1@60() : Text[240];
    VAR
      ReturnString@1000000000 : Text[240];
    BEGIN
      ReturnString := COPYSTR(RecID_Text, STRPOS(RecID_Text, ':') + 1);
      IF STRPOS(ReturnString, ',') <> 0 THEN
        ReturnString := COPYSTR(ReturnString, 1, STRPOS(ReturnString, ',') - 1);
      IF STRPOS(RecID_Text, ',') <> 0 THEN
        RecID_Text := COPYSTR(RecID_Text, STRPOS(RecID_Text, ',') + 1)
      ELSE
        RecID_Text := '';

      EXIT(ReturnString);
    END;

    PROCEDURE ParseKey2@70() : Text[240];
    VAR
      ReturnString@1000000000 : Text[240];
    BEGIN
      IF STRLEN(RecID_Text) = 0 THEN
        EXIT('');

      IF STRPOS(RecID_Text, ',') = 0 THEN
        EXIT(RecID_Text);

      ReturnString := COPYSTR(RecID_Text,1, STRPOS(RecID_Text, ',') - 1);
      RecID_Text := COPYSTR(RecID_Text, STRPOS(RecID_Text, ',') + 1) ;
      EXIT(ReturnString);
    END;

    PROCEDURE GetDimMgtSetup@80();
    BEGIN
      IF NOT RetrievedSetup THEN BEGIN
        IF NOT DimensionMgtSetup.GET THEN BEGIN
          RetrievedSetup := TRUE;
          TrackHistory := FALSE;
        END ELSE BEGIN
          RetrievedSetup := TRUE;
          TrackHistory := DimensionMgtSetup."Enable Dimension Mgt History";
        END
      END;
    END;

    PROCEDURE CallWriteDimHistory@90(Type@1000000000 : Integer;TableID@1000000016 : Integer;SourceTableID@1000000015 : Integer;SourceNo@1000000014 : Code[20];DimensionCode@1000000013 : Code[20];DimensionValue@1000000012 : Code[20];FromDate@1000000011 : Date;ToDate@1000000010 : Date;DocFilter@1000000009 : Code[250];DateFilter@1000000008 : Text[250];Comment@1000000002 : Text[80]);
    BEGIN
      // Write Main Dimension Mgt History Record
      GetDimMgtSetup;
      IF NOT TrackHistory THEN
        EXIT;

      CLEAR(DimensionMgtHistory);
      DimEntryNo := DimensionMgtHistory.WriteDimHistory(
        Type, TableID, SourceTableID, SourceNo, DimensionCode,
        DimensionValue, FromDate, ToDate, DocFilter, DateFilter, Comment);
      DimensionMgtHistory.GET(DimEntryNo);

      DimMgtProcessing.SetDimMgtHistory(DimensionMgtHistory);
    END;

    PROCEDURE ShowDimHistory@91(TableNo@1000000000 : Integer;FilterSourceNo@1000000001 : Code[50]);
    VAR
      DimMgtHistory@1000000002 : Record 14103541;
    BEGIN
      IF (NOT DimensionMgtSetup.GET) OR
        (NOT DimensionMgtSetup."Enable Dimension Mgt History")
      THEN BEGIN
        MESSAGE(Text007);
        EXIT;
      END;

      DimMgtHistory.RESET;
      DimMgtHistory.FILTERGROUP(2);
      DimMgtHistory.SETCURRENTKEY(DimMgtHistory."Changed from Table ID");

      IF TableNo = DATABASE::"Cust. Ledger Entry" THEN
        DimMgtHistory.SETRANGE(
          "Changed from Table ID", DATABASE::"Cust. Ledger Entry", DATABASE::"Document Entry")
      ELSE

      DimMgtHistory.SETRANGE("Changed from Table ID", TableNo);
      DimMgtHistory.SETFILTER("Source No.",FilterSourceNo);//VLDM4.07 moved the line from filtergroup 0 to little up
      DimMgtHistory.FILTERGROUP(0);

      IF DimMgtHistory.FINDLAST THEN ;
      PAGE.RUN(PAGE::"Dimension Management History", DimMgtHistory);
    END;

    PROCEDURE BatchLoopChangeDimension@100(RecRef@1000000008 : RecordRef;Dimension@1000000009 : Code[20];DimensionValue@1000000010 : Code[20];StartDate@1000000011 : Date;EndDate@1000000012 : Date);
    VAR
      T15@1000000007 : Record 15;
      T18@1000000006 : Record 18;
      T23@1000000005 : Record 23;
      T27@1000000004 : Record 27;
      T156@1000000003 : Record 156;
      T167@1000000002 : Record 167;
      T270@1000000001 : Record 270;
      T5600@1000000000 : Record 5600;
      CurrRecRef@1000000013 : RecordRef;
    BEGIN
      CASE RecRef.NUMBER OF
        15:
          BEGIN
            T15.SETVIEW(RecRef.GETVIEW);
            IF T15.FINDFIRST THEN
              REPEAT
                KeyCode1 := T15."No.";
                CurrRecRef.GETTABLE(T15);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);
                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T15.NEXT = 0;
          END;
        18:
          BEGIN
            T18.SETVIEW(RecRef.GETVIEW);
            IF T18.FINDFIRST THEN
              REPEAT
                KeyCode1 := T18."No.";
                CurrRecRef.GETTABLE(T18);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);
                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T18.NEXT = 0;
          END;
        23:
          BEGIN
            T23.SETVIEW(RecRef.GETVIEW);
            IF T23.FINDFIRST THEN
              REPEAT
                KeyCode1 := T23."No.";
                CurrRecRef.GETTABLE(T23);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T23.NEXT = 0;
          END;
        27:
          BEGIN
            T27.SETVIEW(RecRef.GETVIEW);
            IF T27.FINDFIRST THEN
              REPEAT
                KeyCode1 := T27."No.";
                CurrRecRef.GETTABLE(T27);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T27.NEXT = 0;
          END;
        156:
          BEGIN
            T156.SETVIEW(RecRef.GETVIEW);
            IF T156.FINDFIRST THEN
              REPEAT
                KeyCode1 := T156."No.";
                CurrRecRef.GETTABLE(T156);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T156.NEXT = 0;
          END;
        167:
          BEGIN
            T167.SETVIEW(RecRef.GETVIEW);
            IF T167.FINDFIRST THEN
              REPEAT
                KeyCode1 := T167."No.";
                CurrRecRef.GETTABLE(T167);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T167.NEXT = 0;
          END;
        270:
          BEGIN
            T270.SETVIEW(RecRef.GETVIEW);
            IF T270.FINDFIRST THEN
              REPEAT
                KeyCode1 := T270."No.";
                CurrRecRef.GETTABLE(T270);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T270.NEXT = 0;
          END;
        5600:
          BEGIN
            T5600.SETVIEW(RecRef.GETVIEW);
            IF T5600.FINDFIRST THEN
              REPEAT
                KeyCode1 := T5600."No.";
                CurrRecRef.GETTABLE(T5600);
                CallWriteDimHistory(
                  1, CurrRecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate,
                  '', '', Text005);

                DimMgtProcessing.ChangeSourceDim(
                  CurrRecRef, CurrRecRef.NUMBER, KeyCode1, StartDate, EndDate, Dimension, DimensionValue);
              UNTIL T5600.NEXT = 0;
          END;

      END;
    END;

    PROCEDURE BatchNavigateChangeDim@101(RecRef@1000000004 : RecordRef);
    VAR
      T17@1000000003 : Record 17;
      T96@1000000016 : Record 96;
      T25@1000000002 : Record 25;
      T21@1000000001 : Record 21;
      T110@1000000013 : Record 110;
      T112@1000000012 : Record 112;
      T114@1000000011 : Record 114;
      T120@1000000010 : Record 120;
      T122@1000000009 : Record 122;
      T124@1000000008 : Record 124;
      T169@1000000116 : Record 169;
      T203@1000000005 : Record 203;
      T5744@1000000007 : Record 5744;
      T5746@1000000006 : Record 5746;
      T5990@1000000019 : Record 5990;
      T5992@1000000020 : Record 5992;
      T5994@1000000021 : Record 5994;
      T6650@1000000014 : Record 6650;
      T6660@1000000015 : Record 6660;
      DocumentEntry@1000000017 : Record 265;
      Navigatepage@1000000000 : Page 344;
    BEGIN
      GetDimMgtSetup;
      //IF DimensionMgtSetup."Enable Posting Date Check" THEN //VLDM4.07
        CheckAllowPostingDate(RecRef);      //SE date: 22-03-14


      ChooseNewDimension;
      //GetDimMgtSetup;

      //IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
       // CheckAllowPostingDate(RecRef);      //SE date: 22-03-14

      // 110,112,114,120,122,124,5744,5746,5990,5992,5994,6650,6660,169 //SE-V1.00 17,25
      CASE RecRef.NUMBER OF

        17:
          BEGIN
            T17.SETVIEW(RecRef.GETVIEW);
            IF T17.FINDFIRST THEN
              REPEAT
              IF (XDocNo <> T17."Document No.") OR (T17."Document No." = '')  THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T17."Posting Date"))
                THEN BEGIN
                  KeyCode1 := FORMAT(T17."Entry No.");
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T17."Document No.", FORMAT(T17."Posting Date"));
                  ChangeNavigate(DocumentEntry, T17."Document No.", FORMAT(T17."Posting Date"), TRUE);
                END;
              END;
              XDocNo := T17."Document No.";
              UNTIL T17.NEXT = 0;
          END;

        21:
          BEGIN
            T21.SETVIEW(RecRef.GETVIEW);
            IF T21.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T21."Posting Date"))
                THEN BEGIN
                  KeyCode1 := FORMAT(T21."Entry No.");
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T21."Document No.", FORMAT(T21."Posting Date"));
                  ChangeNavigate(DocumentEntry, T21."Document No.", FORMAT(T21."Posting Date"), TRUE);
                END;
              UNTIL T21.NEXT = 0;
          END;
        25:
          BEGIN
            T25.SETVIEW(RecRef.GETVIEW);
            IF T25.FINDFIRST THEN
              REPEAT
              IF (XDocNo <> T25."Document No.") OR (T25."Document No." = '') THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T25."Posting Date"))
                THEN BEGIN
                  KeyCode1 := FORMAT(T25."Entry No.");
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T25."Document No.", FORMAT(T25."Posting Date"));
                  ChangeNavigate(DocumentEntry, T25."Document No.", FORMAT(T25."Posting Date"), TRUE);
                END;
              END;
              XDocNo := T25."Document No.";

              UNTIL T25.NEXT = 0;
          END;

        110:
          BEGIN
            T110.SETVIEW(RecRef.GETVIEW);
            IF T110.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T110."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T110."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T110."No.", FORMAT(T110."Posting Date"));
                  ChangeNavigate(DocumentEntry, T110."No.", FORMAT(T110."Posting Date"), TRUE);
                END;
              UNTIL T110.NEXT = 0;
          END;
        112:
          BEGIN
            T112.SETVIEW(RecRef.GETVIEW);
            IF T112.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T112."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T112."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T112."No.", FORMAT(T112."Posting Date"));
                  ChangeNavigate(DocumentEntry, T112."No.", FORMAT(T112."Posting Date"), TRUE);
                END;
              UNTIL T112.NEXT = 0;
          END;
        114:
          BEGIN
            T114.SETVIEW(RecRef.GETVIEW);
            IF T114.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T114."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T114."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T114."No.", FORMAT(T114."Posting Date"));
                  ChangeNavigate(DocumentEntry, T114."No.", FORMAT(T114."Posting Date"), TRUE);
                END;
              UNTIL T114.NEXT = 0;
          END;
        120:
          BEGIN
            T120.SETVIEW(RecRef.GETVIEW);
            IF T120.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T120."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T120."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T120."No.", FORMAT(T120."Posting Date"));
                  ChangeNavigate(DocumentEntry, T120."No.", FORMAT(T120."Posting Date"), TRUE);
                END;
              UNTIL T120.NEXT = 0;
          END;
        122:
          BEGIN
            T122.SETVIEW(RecRef.GETVIEW);
            IF T122.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T122."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T122."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T122."No.", FORMAT(T122."Posting Date"));
                  ChangeNavigate(DocumentEntry, T122."No.", FORMAT(T122."Posting Date"), TRUE);
                END;
              UNTIL T122.NEXT = 0;
          END;
        124:
          BEGIN
            T124.SETVIEW(RecRef.GETVIEW);
            IF T124.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T124."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T124."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T124."No.", FORMAT(T124."Posting Date"));
                  ChangeNavigate(DocumentEntry, T124."No.", FORMAT(T124."Posting Date"), TRUE);
                END;
              UNTIL T124.NEXT = 0;
          END;

        169:
          BEGIN
            T169.SETVIEW(RecRef.GETVIEW);
            IF T169.FINDFIRST THEN
              REPEAT
              IF (XDocNo <> T169."Document No.") OR (T169."Document No." = '') THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T169."Posting Date"))
                THEN BEGIN
                  KeyCode1 := FORMAT(T169."Entry No.");
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T169."Document No.", FORMAT(T169."Posting Date"));
                  ChangeNavigate(DocumentEntry, T169."Document No.", FORMAT(T169."Posting Date"), TRUE);
                END;
               END;
               XDocNo := T169."Document No.";
              UNTIL T169.NEXT = 0;
          END;
        203:
          BEGIN
            T203.SETVIEW(RecRef.GETVIEW);
            IF T203.FINDFIRST THEN
              REPEAT
              IF (XDocNo <> T203."Document No.") OR (T203."Document No." = '') THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T203."Posting Date"))
                THEN BEGIN
                  KeyCode1 := FORMAT(T203."Entry No.");
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T203."Document No.", FORMAT(T203."Posting Date"));
                  ChangeNavigate(DocumentEntry, T203."Document No.", FORMAT(T203."Posting Date"), TRUE);
                END;
               END;
               XDocNo := T203."Document No.";
              UNTIL T203.NEXT = 0;
          END;

        5744:
          BEGIN
            T5744.SETVIEW(RecRef.GETVIEW);
            IF T5744.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5744."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5744."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T5744."No.", FORMAT(T5744."Posting Date"));
                  ChangeNavigate(DocumentEntry, T5744."No.", FORMAT(T5744."Posting Date"), TRUE);
                END;
              UNTIL T5744.NEXT = 0;
          END;
         5746:
          BEGIN
            T5746.SETVIEW(RecRef.GETVIEW);
            IF T5746.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5746."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5746."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T5746."No.", FORMAT(T5746."Posting Date"));
                  ChangeNavigate(DocumentEntry, T5746."No.", FORMAT(T5746."Posting Date"), TRUE);
                END;
              UNTIL T5746.NEXT = 0;
          END;

      //VLDM4.12 Service Module

         5990:
          BEGIN
            T5990.SETVIEW(RecRef.GETVIEW);
            IF T5990.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5990."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5990."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T5990."No.", FORMAT(T5990."Posting Date"));
                  ChangeNavigate(DocumentEntry, T5990."No.", FORMAT(T5990."Posting Date"), TRUE);
                END;
              UNTIL T5990.NEXT = 0;
          END;

         5992:
          BEGIN
            T5992.SETVIEW(RecRef.GETVIEW);
            IF T5992.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5992."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5992."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T5992."No.", FORMAT(T5992."Posting Date"));
                  ChangeNavigate(DocumentEntry, T5992."No.", FORMAT(T5992."Posting Date"), TRUE);
                END;
              UNTIL T5992.NEXT = 0;
          END;

         5994:
          BEGIN
            T5994.SETVIEW(RecRef.GETVIEW);
            IF T5994.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5994."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5994."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T5994."No.", FORMAT(T5994."Posting Date"));
                  ChangeNavigate(DocumentEntry, T5994."No.", FORMAT(T5994."Posting Date"), TRUE);
                END;
              UNTIL T5994.NEXT = 0;
          END;

      //VLDM4.12 Service Module

        6650:
          BEGIN
            T6650.SETVIEW(RecRef.GETVIEW);
            IF T6650.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T6650."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T6650."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T6650."No.", FORMAT(T6650."Posting Date"));
                  ChangeNavigate(DocumentEntry, T6650."No.", FORMAT(T6650."Posting Date"), TRUE);
                END;
              UNTIL T6650.NEXT = 0;
          END;
        6660:
          BEGIN
            T6660.SETVIEW(RecRef.GETVIEW);
            IF T6660.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T6660."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T6660."No.";
                  CLEAR(DocumentEntry);
                  Navigatepage.DMFindDocEntry(DocumentEntry, T6660."No.", FORMAT(T6660."Posting Date"));
                  ChangeNavigate(DocumentEntry, T6660."No.", FORMAT(T6660."Posting Date"), TRUE);
                END;
              UNTIL T6660.NEXT = 0;
          END;

      END;
    END;

    PROCEDURE BatchNavigateChangeDimLines@1000000001(RecRef@1000000004 : RecordRef);
    VAR
      T17@1000000002 : Record 17;
      T25@1000000001 : Record 25;
      T21@1000000000 : Record 21;
      T111@1000000013 : Record 111;
      T113@1000000012 : Record 113;
      T115@1000000011 : Record 115;
      T121@1000000010 : Record 121;
      T123@1000000009 : Record 123;
      T125@1000000008 : Record 125;
      T5745@1000000007 : Record 5745;
      T5746@1000000003 : Record 5746;
      T5747@1000000006 : Record 5747;
      T6651@1000000014 : Record 6651;
      T6661@1000000015 : Record 6661;
      T5993@1000000103 : Record 5993;
      T5991@1000000105 : Record 5991;
      T5995@1000000116 : Record 5995;
      T5989@1000000119 : Record 5989;
      DocumentEntry@1000000017 : Record 265;
      NavigateForm@1000000018 : Page 344;
    BEGIN
      RecRefGbl := RecRef; //VLDM4.09    //To get Lines
      GetDimMgtSetup;

      //IF DimensionMgtSetup."Enable Posting Date Check" THEN//VLDM4.06
      IF NOT ValidateAllLines(RecRef) THEN //VLDM4.07
       EXIT;

      ChooseNewDimension;
      //GetDimMgtSetup;

      // 111,113,115,121,123,125,5745,5747,6651,6661, 5991,5993,5995 ( Service Module)
      CASE RecRef.NUMBER OF
        111:
          BEGIN
            T111.SETVIEW(RecRef.GETVIEW);
            IF T111.FINDFIRST THEN
              REPEAT
              i+=1;
              // IF XDocNo <> T111."Document No." THEN BEGIN     //SE -
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T111."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T111."Document No.";
                  TypeValue := T111."No."; //VLDM4.09 //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T111."Document No.", FORMAT(T111."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T111."Document No.", FORMAT(T111."Posting Date"), TRUE,
                  T111."Shortcut Dimension 1 Code",T111."Line No.",i);
                END;
        //       END;
            //   XDocNo := T111."Document No.";
              UNTIL T111.NEXT = 0;
          END;
        113:
          BEGIN
            T113.SETVIEW(RecRef.GETVIEW);
            IF T113.FINDFIRST THEN
              REPEAT
              i+=1;
              // IF XDocNo <> T113."Document No." THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T113."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T113."Document No.";
                  TypeValue := T113."No."; //VLDM4.09  //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T113."Document No.", FORMAT(T113."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T113."Document No.", FORMAT(T113."Posting Date"), TRUE,
                  T113."Shortcut Dimension 1 Code",T113."Line No.",i);
                END;
            //   END;
          //     XDocNo := T113."Document No.";
              UNTIL T113.NEXT = 0;
          END;
        115:
          BEGIN
            T115.SETVIEW(RecRef.GETVIEW);
            IF T115.FINDFIRST THEN
              REPEAT
              i+=1;
             // IF XDocNo <> T115."Document No." THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T115."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T115."Document No.";
                  TypeValue := T115."No."; //VLDM4.09  //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T115."Document No.", FORMAT(T115."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T115."Document No.", FORMAT(T115."Posting Date"), TRUE,
                  T115."Shortcut Dimension 1 Code",T115."Line No.",i);
                END;
         //      END;
             //  XDocNo := T115."Document No.";
              UNTIL T115.NEXT = 0;
          END;
        121:
          BEGIN
            T121.SETVIEW(RecRef.GETVIEW);
            IF T121.FINDFIRST THEN
              REPEAT
              i+=1;
           //   IF XDocNo <> T121."Document No." THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T121."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T121."Document No.";
                  TypeValue := T121."No."; //VLDM4.09 //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T121."Document No.", FORMAT(T121."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T121."Document No.", FORMAT(T121."Posting Date"), TRUE,
                  T121."Shortcut Dimension 1 Code",T121."Line No.",i);
                  //ChangeNavigate(DocumentEntry, T121."Document No.", FORMAT(T121."Posting Date"), TRUE);
                END;
       //        END;
       //        XDocNo := T121."Document No.";
              UNTIL T121.NEXT = 0;
          END;
        123:
          BEGIN
            T123.SETVIEW(RecRef.GETVIEW);
            IF T123.FINDFIRST THEN
              REPEAT
              i+=1;
           //   IF XDocNo <> T123."Document No." THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T123."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T123."Document No.";
                  TypeValue := T123."No."; //VLDM4.09 //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T123."Document No.", FORMAT(T123."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T123."Document No.", FORMAT(T123."Posting Date"), TRUE,
                  T123."Shortcut Dimension 1 Code",T123."Line No.",i);
                  //ChangeNavigate(DocumentEntry, T123."Document No.", FORMAT(T123."Posting Date"), TRUE);
                END;
        //       END;
        //       XDocNo := T123."Document No.";
              UNTIL T123.NEXT = 0;
          END;
        125:
          BEGIN
            T125.SETVIEW(RecRef.GETVIEW);
            IF T125.FINDFIRST THEN
              REPEAT
              i+=1;
           //   IF XDocNo <> T125."Document No." THEN BEGIN
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T125."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T125."Document No.";
                  TypeValue := T125."No."; //VLDM4.09  //To apply filters on Document Entry table based on Item, Resource and Fixed Asset
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T125."Document No.", FORMAT(T125."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T125."Document No.", FORMAT(T125."Posting Date"), TRUE,
                  T125."Shortcut Dimension 1 Code",T125."Line No.",i);
                  //ChangeNavigate(DocumentEntry, T125."Document No.", FORMAT(T125."Posting Date"), TRUE);
                END;
        //       END;
        //       XDocNo := T125."Document No.";
              UNTIL T125.NEXT = 0;
          END;
        5745:
          BEGIN
            T5745.SETVIEW(RecRef.GETVIEW);
            IF T5745.FINDFIRST THEN
              REPEAT
                i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5745."Shipment Date"))
                THEN BEGIN
                  KeyCode1 := T5745."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5745."Document No.", FORMAT(T5745."Shipment Date"));
                  ChangeNavigateLines(DocumentEntry, T5745."Document No.", FORMAT(T5745."Shipment Date"), TRUE,
                    T5745."Shortcut Dimension 1 Code",T5745."Line No.",i);
                END;
              UNTIL T5745.NEXT = 0;
          END;
         5747:
          BEGIN
            T5747.SETVIEW(RecRef.GETVIEW);
            IF T5747.FINDFIRST THEN
              REPEAT
                i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5747."Receipt Date"))
                THEN BEGIN
                  T5746.GET(T5747."Document No.");
                  KeyCode1 := T5747."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5747."Document No.", FORMAT(T5746."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T5747."Document No.", FORMAT(T5746."Posting Date"), TRUE,
                    T5747."Shortcut Dimension 1 Code",T5747."Line No.",i);
                END;
              UNTIL T5747.NEXT = 0;
          END;

      //VLDM4.12 Service Module
         5991:
          BEGIN
            T5991.SETVIEW(RecRef.GETVIEW);
            IF T5991.FINDFIRST THEN
              REPEAT
              i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5991."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5991."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5991."Document No.", FORMAT(T5991."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T5991."Document No.", FORMAT(T5991."Posting Date"), TRUE,
                  T5991."Shortcut Dimension 1 Code",T5991."Line No.",i);

                END;
              UNTIL T5991.NEXT = 0;
          END;

         5993:
          BEGIN
            T5993.SETVIEW(RecRef.GETVIEW);
            IF T5993.FINDFIRST THEN
              REPEAT
              i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5993."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5993."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5993."Document No.", FORMAT(T5993."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T5993."Document No.", FORMAT(T5993."Posting Date"), TRUE,
                  T5993."Shortcut Dimension 1 Code",T5993."Line No.",i);

                END;
              UNTIL T5993.NEXT = 0;
          END;

         5995:
          BEGIN
            T5995.SETVIEW(RecRef.GETVIEW);
            IF T5995.FINDFIRST THEN
              REPEAT
              i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5995."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T5995."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5995."Document No.", FORMAT(T5995."Posting Date"));
                  ChangeNavigateLines(DocumentEntry, T5995."Document No.", FORMAT(T5995."Posting Date"), TRUE,
                  T5995."Shortcut Dimension 1 Code",T5995."Line No.",i);
                END;
              UNTIL T5995.NEXT = 0;
          END;

         5989:
          BEGIN
            T5989.SETVIEW(RecRef.GETVIEW);
            IF T5989.FINDFIRST THEN
              REPEAT
              i+=1;
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T5989."Response Date"))
                THEN BEGIN
                  KeyCode1 := T5989."No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T5989."No.",'');
                  ChangeNavigateLines(DocumentEntry, T5989."No.", '', TRUE,'',T5989."Line No.",i);

                END;
              UNTIL T5989.NEXT = 0;
          END;


      // VLDM4.12 Service Module Close

        6651:
          BEGIN
            T6651.SETVIEW(RecRef.GETVIEW);
            IF T6651.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T6651."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T6651."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T6651."Document No.", FORMAT(T6651."Posting Date"));
                  ChangeNavigate(DocumentEntry, T6651."Document No.", FORMAT(T6651."Posting Date"), TRUE);
                END;
              UNTIL T6651.NEXT = 0;
          END;
        6661:
          BEGIN
            T6661.SETVIEW(RecRef.GETVIEW);
            IF T6661.FINDFIRST THEN
              REPEAT
                IF (NOT DimensionMgtSetup."Exclude Closed Periods") OR
                  (NOT DimMgtProcessing.IsDatePeriodClosed(T6661."Posting Date"))
                THEN BEGIN
                  KeyCode1 := T6661."Document No.";
                  CLEAR(DocumentEntry);
                  NavigateForm.DMFindDocEntry(DocumentEntry, T6661."Document No.", FORMAT(T6661."Posting Date"));
                  ChangeNavigate(DocumentEntry, T6661."Document No.", FORMAT(T6661."Posting Date"), TRUE);
                END;
              UNTIL T6661.NEXT = 0;
          END;
      END;

      IF Dimension <> '' THEN
        MESSAGE(Text015, Dimension, DimensionValue)
      ELSE
        MESSAGE(Text016,Dimension);
    END;

    PROCEDURE RevertToVersion@110(EntryNo@1000000001 : Integer;TableNo@1000000002 : Integer;SourceNo@1000000003 : Code[20]);
    VAR
      DimMgtHistory@1000000039 : Record 14103541;
      DimMgtHistoryLine@1000000018 : Record 14103542;
      InsertDimMgtHistoryLine@1000000043 : TEMPORARY Record 14103542;
      RecRef@1000000000 : RecordRef;
      LedgeEntryNo@1000000004 : Integer;
      OldDimSetID@1100774000 : Integer;
      NewDimSetID@1100774001 : Integer;
      DimNo@1100774002 : Integer;
      WindowBar@1000000005 : Dialog;
      Text001@1000000006 : TextConst 'ENU=Reverting Dimension Value lines';
    BEGIN
      IF NOT DimMgtHistory.GET(EntryNo) THEN
        EXIT;

      IF DimMgtHistory."Entry Type" = DimMgtHistory."Entry Type"::Undo THEN
        ERROR(Text011);
      IF DimMgtHistory."Entry Type" = DimMgtHistory."Entry Type"::AutoInstall THEN
        ERROR(Text014);

      IF NOT CONFIRM(STRSUBSTNO(Text008, EntryNo),TRUE) THEN
        EXIT;

      WindowBar.OPEN(Text001);//VLDM4.07

      InsertDimMgtHistoryLine.RESET;
      InsertDimMgtHistoryLine.DELETEALL;

      DimMgtHistoryLine.RESET;
      DimMgtHistoryLine.SETRANGE(Entry, EntryNo);
      IF DimMgtHistoryLine.FINDLAST THEN BEGIN

        // Dimension Mgt History entry for undo
        IF DimMgtHistoryLine."Old Code" = '' THEN
          DimMgtHistoryLine."Old Code" := DimMgtHistoryLine."New Code";
        CallWriteDimHistory(
          3, DimMgtHistory."Changed from Table ID", 0, DimMgtHistory."Source No.",
          DimMgtHistoryLine."Old Code", DimMgtHistoryLine."Old Value",
          DimMgtHistory."Start Date", DimMgtHistory."End Date", DimMgtHistory."Doc. No. Filter",
          DimMgtHistory."Posting Date Filter", STRSUBSTNO(Text006, EntryNo));
          DimNo := DimMgtProcessing.GlobalDimNo(DimMgtHistory."New Code");

        REPEAT
          CLEAR(DimMgtProcessing);
          DimMgtProcessing.SetDimMgtHistory(DimensionMgtHistory);

          // Header Dim code could be blank
          // Line Old dim code could be blank new dim code could be blank
          IF DimMgtHistory."New Code" = '' THEN BEGIN
            IF DimMgtHistoryLine."Old Code" <> '' THEN
              DimMgtHistory."New Code" := DimMgtHistoryLine."Old Code"
            ELSE
              IF DimMgtHistoryLine."New Code" <> '' THEN
                DimMgtHistory."New Code" := DimMgtHistoryLine."New Code";
          END;

          CASE DimMgtHistoryLine."Table No." OF
            480:
              BEGIN
                IF DimMgtHistoryLine."Old Code" = '' THEN
                  DimMgtHistoryLine."Old Code" := DimMgtHistoryLine."New Code";
                  IF DimNo = 0 THEN BEGIN
                    InsertDimMgtHistoryLine.INIT;
                    InsertDimMgtHistoryLine := DimMgtHistoryLine;
                    InsertDimMgtHistoryLine."Line No." := DimMgtHistoryLine."Line No." + 1;
                    InsertDimMgtHistoryLine."Table No." := DimMgtHistoryLine."Source Table No.";
                    InsertDimMgtHistoryLine."Source Table No." := 0 ;
                    InsertDimMgtHistoryLine.INSERT(FALSE);
                    ProcessRevertToVersion(InsertDimMgtHistoryLine, DimMgtHistory."New Code");
                END;
              END;
            ELSE
              ProcessRevertToVersion(DimMgtHistoryLine, DimMgtHistory."New Code");
          END;
        UNTIL DimMgtHistoryLine.NEXT(-1) = 0;
        MESSAGE(Text010);
      END ELSE
        MESSAGE(Text009 + ' ' + Text002);
      WindowBar.CLOSE;//VLDM4.07
    END;

    PROCEDURE ProcessRevertToVersion@1100774001(DimMgtHistoryLine@1100774000 : Record 14103542;Dimension@1100774005 : Code[20]);
    VAR
      T352@1100774006 : Record 352;
      RecRef@1100774004 : RecordRef;
      LedgeEntryNo@1100774003 : Integer;
      OldDimSetID@1100774002 : Integer;
      NewDimSetID@1100774001 : Integer;
    BEGIN
      CASE DimMgtHistoryLine."Table No." OF
        15, 18, 23, 27, 156, 167, 270, 5600:
          BEGIN
            GetRecRef(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source Table No.",
              DimMgtHistoryLine."Source No.", DimMgtHistoryLine."Source Line No.");
            DimMgtProcessing.SetUndoVar(
              DimMgtHistoryLine."Line No.", DimMgtHistoryLine."Source Line No.", DimMgtHistoryLine."Old Code",
              DimMgtHistoryLine."Old Value", '', 0, 0);
            DimMgtProcessing.ChangeSourceDimGlobal(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source No.",
              Dimension, DimMgtHistoryLine."Old Value");
          END;

            17, 96, 21, 25, 32, 169, 203, 271, 5601, 5625, 5802,5907,5908:    //VLDM4.11
          BEGIN
            EVALUATE(LedgeEntryNo, DimMgtHistoryLine."Source No.");
            GetRecRef(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source Table No.",
              DimMgtHistoryLine."Source No.", DimMgtHistoryLine."Source Line No.");
            ModifyDimSetID(RecRef, DimMgtHistoryLine, OldDimSetID, NewDimSetID);
            DimMgtProcessing.SetUndoVar(
              DimMgtHistoryLine."Line No.", DimMgtHistoryLine."Source Line No.", DimMgtHistoryLine."Old Code",
              DimMgtHistoryLine."Old Value", DimMgtHistoryLine."New Value",OldDimSetID, NewDimSetID);
            DimMgtProcessing.ChangeLedgerEntryDimGlobal(
              RecRef, DimMgtHistoryLine."Table No.", LedgeEntryNo,
              Dimension, DimMgtHistoryLine."Old Value");
           END;
            110, 111, 112, 113, 114, 115, 1120, 121, 122, 123, 124, 125, 5744, 5745, 5746, 5757,5990,5991,5992,5993,5989,
            5994,5995,6650, 6651, 6660, 6661:
          BEGIN
            GetRecRef(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source Table No.",
              DimMgtHistoryLine."Source No.", DimMgtHistoryLine."Source Line No.");
            ModifyDimSetID(RecRef, DimMgtHistoryLine, OldDimSetID, NewDimSetID);
            DimMgtProcessing.SetUndoVar(
              DimMgtHistoryLine."Line No.", DimMgtHistoryLine."Source Line No.", Dimension,
              DimMgtHistoryLine."Old Value", DimMgtHistoryLine."New Value", OldDimSetID, NewDimSetID);
            DimMgtProcessing.ChangePostedDocDimShortcut(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source No.",
              Dimension, DimMgtHistoryLine."Old Value",
              OldDimSetID, NewDimSetID);
          END;
        352:
          BEGIN
            IF T352.GET(
              DimMgtHistoryLine."Source Table No.", DimMgtHistoryLine."Source No.", DimMgtHistoryLine."New Code")
            THEN BEGIN
              InsertRevertToHistoryLine(DimMgtHistoryLine, T352."Dimension Code", T352."Dimension Value Code");
              IF DimMgtHistoryLine."Old Value" = '' THEN BEGIN
                T352.DELETE(FALSE);
              END ELSE BEGIN
                T352.VALIDATE("Dimension Code", DimMgtHistoryLine."Old Code");
                T352.VALIDATE("Dimension Value Code" , DimMgtHistoryLine."Old Value");
                T352.MODIFY(FALSE);
              END;
            END ELSE BEGIN
              T352.INIT;
              T352.VALIDATE("Table ID", DimMgtHistoryLine."Source Table No.");
              T352.VALIDATE("No.", DimMgtHistoryLine."Source No.");
              T352.VALIDATE("Dimension Code", DimMgtHistoryLine."Old Code");
              T352.VALIDATE("Dimension Value Code" , DimMgtHistoryLine."Old Value");
              IF NOT T352.INSERT(FALSE) THEN
                T352.MODIFY(FALSE);
            END;
              END;
        379, 380:
          BEGIN
            EVALUATE(LedgeEntryNo, DimMgtHistoryLine."Source No.");
            GetRecRef(
              RecRef, DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source Table No.",
              DimMgtHistoryLine."Source No.", DimMgtHistoryLine."Source Line No.");
            DimMgtProcessing.SetUndoVar(
              DimMgtHistoryLine."Line No.", DimMgtHistoryLine."Source Line No.", DimMgtHistoryLine."Old Code",
              DimMgtHistoryLine."Old Value", '', OldDimSetID, NewDimSetID);
            DimMgtProcessing.ChangeDetailLedEntryDimGlobal(
              RecRef, DimMgtHistoryLine."Table No.", LedgeEntryNo,
              Dimension, DimMgtHistoryLine."Old Value");
          END;
      END;
    END;

    PROCEDURE GetRecRef@111(VAR RecRef@1000000000 : RecordRef;TableNo@1000000001 : Integer;SourceTableNo@1000000002 : Integer;SourceNo@1000000003 : Code[20];SourceLineNo@1000000004 : Integer);
    VAR
      T15@1000000029 : Record 15;
      T17@1000000028 : Record 17;
      T18@1000000027 : Record 18;
      T21@1000000026 : Record 21;
      T23@1000000025 : Record 23;
      T25@1000000024 : Record 25;
      T27@1000000023 : Record 27;
      T32@1000000022 : Record 32;
      T156@1000000021 : Record 156;
      T169@1000000039 : Record 169;
      T203@1000000020 : Record 203;
      T265@1000000019 : Record 265;
      T270@1000000018 : Record 270;
      T271@1000000017 : Record 271;
      T110@1000000016 : Record 110;
      T111@1000000015 : Record 111;
      T112@1000000014 : Record 112;
      T113@1000000013 : Record 113;
      T114@1000000012 : Record 114;
      T115@1000000011 : Record 115;
      T120@1000000010 : Record 120;
      T121@1000000009 : Record 121;
      T122@1000000008 : Record 122;
      T123@1000000007 : Record 123;
      T124@1000000006 : Record 124;
      T125@1000000005 : Record 125;
      T379@1000000043 : Record 379;
      T380@1000000044 : Record 380;
      T5601@1000000040 : Record 5601;
      T5625@1000000041 : Record 5625;
      T5744@1000000037 : Record 5744;
      T5745@1000000036 : Record 5745;
      T5746@1000000035 : Record 5746;
      T5747@1000000034 : Record 5747;
      T5802@1000000042 : Record 5802;
      T6650@1000000033 : Record 6650;
      T6651@1000000032 : Record 6651;
      T6660@1000000031 : Record 6660;
      T6661@1000000030 : Record 6661;
      LedgeEntryNo@1000000038 : Integer;
      T96@1000000045 : Record 96;
      T5907@1000000047 : Record 5907;
      T5908@1000000048 : Record 5908;
      T5990@1000000049 : Record 5990;
      T5991@1000000150 : Record 5991;
      T5989@1000000151 : Record 5989;
      T5992@1000000152 : Record 5992;
      T5993@1000001053 : Record 5993;
      T5994@1000000154 : Record 5994;
      T5995@1000000155 : Record 5995;
    BEGIN
      CASE TableNo OF
        15:
          BEGIN
            T15.GET(SourceNo);
            RecRef.GETTABLE(T15);
          END;
        17:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T17.GET(LedgeEntryNo);
            RecRef.GETTABLE(T17);
          END;


        //>>VLDM4.11
        96:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T96.GET(LedgeEntryNo);
            RecRef.GETTABLE(T96);
          END;
        //<<VLDM4.11

      //VLDM4.12 Serice Module Ledger Entry
        5907:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T5907.GET(LedgeEntryNo);
            RecRef.GETTABLE(T5907);
          END;

        5908:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T5908.GET(LedgeEntryNo);
            RecRef.GETTABLE(T5908);
          END;

      //VLDM4.12 Service Module


        18:
          BEGIN
            T18.GET(SourceNo);
            RecRef.GETTABLE(T18);
          END;
        21:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T21.GET(LedgeEntryNo);
            RecRef.GETTABLE(T21);
          END;
        23:
          BEGIN
            T23.GET(SourceNo);
            RecRef.GETTABLE(T23);
          END;
        25:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T25.GET(LedgeEntryNo);
            RecRef.GETTABLE(T25);
          END;
        27:
          BEGIN
            T27.GET(SourceNo);
            RecRef.GETTABLE(T27);
          END;
        32:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T32.GET(LedgeEntryNo);
            RecRef.GETTABLE(T32);
          END;
        110:
          BEGIN
            T110.GET(SourceNo);
            RecRef.GETTABLE(T110);
          END;
        111:
          BEGIN
            T111.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T111);
          END;
        112:
          BEGIN
            T112.GET(SourceNo);
            RecRef.GETTABLE(T112);
          END;
        113:
          BEGIN
            T113.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T113);
          END;
        114:
          BEGIN
            T114.GET(SourceNo);
            RecRef.GETTABLE(T114);
          END;
        115:
          BEGIN
            T115.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T115);
          END;
        120:
          BEGIN
            T120.GET(SourceNo);
            RecRef.GETTABLE(T120);
          END;
        121:
          BEGIN
            T121.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T121);
          END;
        122:
          BEGIN
            T122.GET(SourceNo);
            RecRef.GETTABLE(T122);
          END;
        123:
          BEGIN
            T123.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T123);
          END;
        124:
          BEGIN
            T124.GET(SourceNo);
            RecRef.GETTABLE(T124);
          END;
        125:
          BEGIN
            T125.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T125);
          END;
        156:
          BEGIN
            T156.GET(SourceNo);
            RecRef.GETTABLE(T156);
          END;
        169:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T169.GET(LedgeEntryNo);
            RecRef.GETTABLE(T169);
          END;
        203:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T203.GET(LedgeEntryNo);
            RecRef.GETTABLE(T203);
          END;
        265:
          BEGIN
            //figure out
          END;
        270:
          BEGIN
            T270.GET(SourceNo);
            RecRef.GETTABLE(T270);
          END;
        271:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T271.GET(LedgeEntryNo);
            RecRef.GETTABLE(T271);
          END;
        379:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T379.GET(LedgeEntryNo);
            RecRef.GETTABLE(T379);
          END;
        380:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T380.GET(LedgeEntryNo);
            RecRef.GETTABLE(T380);
          END;
        5601:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T5601.GET(LedgeEntryNo);
            RecRef.GETTABLE(T5601);
          END;
        5625:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T5625.GET(LedgeEntryNo);
            RecRef.GETTABLE(T5625);
          END;
        5744:
          BEGIN
            T5744.GET(SourceNo);
            RecRef.GETTABLE(T5744);
          END;
        5745:
          BEGIN
            T5745.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5745);
          END;
        5746:
          BEGIN
            T5746.GET(SourceNo);
            RecRef.GETTABLE(T5746);
          END;
        5747:
          BEGIN
            T5747.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5747);
          END;
        5802:
          BEGIN
            EVALUATE(LedgeEntryNo, SourceNo);
            T5802.GET(LedgeEntryNo);
            RecRef.GETTABLE(T5802);
          END;
      //VLDM4.12 Service Module
        5989:
          BEGIN
            T5989.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5989);
          END;

          5990:
          BEGIN
            T5990.GET(SourceNo);
            RecRef.GETTABLE(T5990);
          END;
        5991:
          BEGIN
            T5991.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5991);
          END;

        5992:
          BEGIN
            T5992.GET(SourceNo);
            RecRef.GETTABLE(T5992);
          END;
        5993:
          BEGIN
            T5993.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5993);
          END;

        5994:
          BEGIN
            T5994.GET(SourceNo);
            RecRef.GETTABLE(T5994);
          END;
        5995:
          BEGIN
            T5995.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T5995);
          END;

      //VLDM4.12 Service Module

        6650:
          BEGIN
            T6650.GET(SourceNo);
            RecRef.GETTABLE(T6650);
          END;
        6651:
          BEGIN
            T6651.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T6651);
          END;
        6660:
          BEGIN
            T6660.GET(SourceNo);
            RecRef.GETTABLE(T6660);
          END;
        6661:
          BEGIN
            T6661.GET(SourceNo, SourceLineNo);
            RecRef.GETTABLE(T6661);
          END;
      END;
    END;

    PROCEDURE InsertRevertToHistoryLine@115(DimMgtHistoryLine@1000000001 : Record 14103542;OldDimension@1000000002 : Code[20];OldDimensionValue@1000000003 : Code[20]);
    VAR
      LDimHistLine@1100774000 : Record 14103542;
    BEGIN
      // Write Main Dimension Mgt History Record
      IF NOT TrackHistory THEN
        EXIT;

      LDimHistLine.WriteDimHistoryLine(
        DimEntryNo, DimMgtHistoryLine."Line No.", DimMgtHistoryLine."Table No.", DimMgtHistoryLine."Source Table No.",
        DimMgtHistoryLine."Source No.", DimMgtHistoryLine."Source Line No.", DimMgtHistoryLine."Source Type",
        OldDimension, OldDimensionValue, DimMgtHistoryLine."Old Code", DimMgtHistoryLine."Old Value", '',
        DimMgtHistoryLine."New Dim Set ID", DimMgtHistoryLine."Old Dim Set ID");
    END;

    PROCEDURE ModifyDimSetID@1100774000(VAR RecRef@1100774000 : RecordRef;DimMgtHistoryLine@1100774001 : Record 14103542;VAR OldDimSetID@1100774007 : Integer;VAR NewDimSetID@1100774008 : Integer);
    VAR
      FldRef@1100774002 : FieldRef;
      OldDimensionValue@1100774004 : Code[20];
      TempDimSetEntry@1100774006 : TEMPORARY Record 480;
      DimMgt@1100774005 : Codeunit 408;
    BEGIN
      FldRef := RecRef.FIELD(480);
      OldDimSetID := FldRef.VALUE;
      TempDimSetEntry.DELETEALL;
      DimMgtProcessing.FilterDimSet(OldDimSetID, TempDimSetEntry);
      IF DimMgtHistoryLine."Old Code" = '' THEN
        DimMgtHistoryLine."Old Code" := DimMgtHistoryLine."New Code";

      // Save old dim value in table 480
      IF TempDimSetEntry.GET(0, DimMgtHistoryLine."Old Code") THEN
        DimMgtHistoryLine."New Value" := TempDimSetEntry."Dimension Value Code"
      ELSE
        DimMgtHistoryLine."New Value" := '';

      IF DimMgtHistoryLine."Old Value" = '' THEN BEGIN
        IF TempDimSetEntry.DELETE(FALSE) THEN;
      END ELSE BEGIN
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", DimMgtHistoryLine."Old Code");
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimMgtHistoryLine."Old Value");
        IF NOT TempDimSetEntry.INSERT THEN
          TempDimSetEntry.MODIFY;
      END;

      CLEAR(DimMgt);
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;
    END;

    PROCEDURE FindLineNum@1000000000(RecRef@1000000000 : RecordRef) LineNo1 : Integer;
    VAR
      SourceField@1000000006 : FieldRef;
      SourceRec@1000000005 : RecordRef;
      FoundGlobal@1000000004 : Boolean;
      FieldCount@1000000003 : Integer;
      i@1000000002 : Integer;
      TotalFields@1000000001 : Integer;
    BEGIN
      SourceRec:= RecRef;
      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      FieldCount := 1;
      FoundGlobal := FALSE;
      REPEAT
        IF SourceRec.FIELDEXIST(i) THEN BEGIN
          SourceField := SourceRec.FIELD(i);
          IF SourceField.NAME = 'Line No.' THEN  BEGIN
            LineNo1 := SourceField.VALUE;
            FoundGlobal := TRUE;
          END;
          FieldCount := FieldCount + 1;
        END;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
    END;

    PROCEDURE GetGLEntries@9(VLEntryNo@1000000000 : Integer);
    VAR
      GLItemLedgRelation@1000 : Record 5823;
      GLEntry@1002 : Record 17;
      VLEntry@1000000001 : Record 5802;
      GLItemLedgRelation1@1000000002 : Record 5823;
    BEGIN
      TempGLEntry.DELETEALL;
      GLItemLedgRelation.SETCURRENTKEY("Value Entry No.");
      GLItemLedgRelation.SETRANGE("Value Entry No.",VLEntryNo);
      //IF GLItemLedgRelation.FINDFIRST THEN;

      //GLItemLedgRelation.SETCURRENTKEY("G/L Entry No.");
      //GLItemLedgRelation.SETRANGE("G/L Entry No.",GLItemLedgRelation1."G/L Entry No.");
      IF GLItemLedgRelation.FINDSET THEN
        REPEAT
          GLEntry.GET(GLItemLedgRelation."G/L Entry No.");
         // VLEntry.GET(GLItemLedgRelation."Value Entry No.");
         IF NOT TempGLEntry.GET(GLItemLedgRelation."G/L Entry No.") THEN BEGIN
          TempGLEntry.INIT;
          TempGLEntry := GLEntry;
          TempGLEntry.INSERT;
         END;
        {
         IF NOT TempVLEntry.GET(GLItemLedgRelation."Value Entry No.") THEN BEGIN
          TempVLEntry.INIT;
          TempVLEntry:=VLEntry;
          TempVLEntry.INSERT;
         END;
        }
        UNTIL GLItemLedgRelation.NEXT = 0;
    END;

    PROCEDURE CheckAllowPostingDate@1000000002(RecRef@1000000000 : RecordRef);
    VAR
      UserSetup@1000000002 : Record 91;
      T112@1000000001 : Record 112;
      T110@1000000004 : Record 110;
      T114@1000000005 : Record 114;
      T120@1000000006 : Record 120;
      T122@1000000007 : Record 122;
      T124@1000000008 : Record 124;
      T5744@1000000009 : Record 5744;
      T5746@1000000010 : Record 5746;
      T6650@1000000011 : Record 6650;
      T6660@1000000012 : Record 6660;
      T17@1000000013 : Record 17;
      T21@1000000014 : Record 21;
      T25@1000000015 : Record 25;
      T32@1000000016 : Record 32;
      T169@1000000017 : Record 169;
      T203@1000000018 : Record 203;
      T271@1000000019 : Record 271;
      T5601@1000000020 : Record 5601;
      T5625@1000000021 : Record 5625;
      T5802@1000000022 : Record 5802;
      T5990@1000000003 : Record 5990;
      T5991@1000000123 : Record 5991;
      T5992@1000000124 : Record 5992;
      T5993@1000001125 : Record 5993;
      T5994@1000000126 : Record 5994;
      T5995@1000000127 : Record 5995;
      T5907@1000000128 : Record 5907;
      T5908@1000000129 : Record 5908;
    BEGIN
      UserSetup.GET(USERID);
      CASE RecRef.NUMBER OF
      110: BEGIN
            T110.SETVIEW(RecRef.GETVIEW);
            IF T110.FINDFIRST THEN;
            ExistingDimSetID :=T110."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T110."Posting Date" < UserSetup."Allow Posting From") OR (T110."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T110."Posting Date");
              END;
      112: BEGIN
            T112.SETVIEW(RecRef.GETVIEW);
            IF T112.FINDFIRST THEN;
            ExistingDimSetID :=T112."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T112."Posting Date" < UserSetup."Allow Posting From") OR (T112."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T112."Posting Date");
          END;
      114: BEGIN
            T114.SETVIEW(RecRef.GETVIEW);
            IF T114.FINDFIRST THEN;
            ExistingDimSetID :=T114."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T114."Posting Date" < UserSetup."Allow Posting From") OR (T114."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T114."Posting Date");
          END;
      120: BEGIN
            T120.SETVIEW(RecRef.GETVIEW);
            IF T120.FINDFIRST THEN;
            ExistingDimSetID :=T120."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T120."Posting Date" < UserSetup."Allow Posting From") OR (T120."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T120."Posting Date");
          END;
      122: BEGIN
            T122.SETVIEW(RecRef.GETVIEW);
            IF T122.FINDFIRST THEN;
            ExistingDimSetID :=T122."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T122."Posting Date" < UserSetup."Allow Posting From") OR (T122."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T122."Posting Date");
          END;
      124: BEGIN
            T124.SETVIEW(RecRef.GETVIEW);
            IF T124.FINDFIRST THEN;
            ExistingDimSetID :=T124."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T124."Posting Date" < UserSetup."Allow Posting From") OR (T124."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T124."Posting Date");
          END;
      5744: BEGIN
            T5744.SETVIEW(RecRef.GETVIEW);
            IF T5744.FINDFIRST THEN;
            ExistingDimSetID :=T5744."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5744."Posting Date" < UserSetup."Allow Posting From") OR (T5744."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5744."Posting Date");
          END;
      5746: BEGIN
            T5746.SETVIEW(RecRef.GETVIEW);
            IF T5746.FINDFIRST THEN;
            ExistingDimSetID :=T5746."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5746."Posting Date" < UserSetup."Allow Posting From") OR (T5746."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5746."Posting Date");
          END;

      //VLDM4.12 Service Module
      5990: BEGIN
            T5990.SETVIEW(RecRef.GETVIEW);
            IF T5990.FINDFIRST THEN;
            ExistingDimSetID :=T5990."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5990."Posting Date" < UserSetup."Allow Posting From") OR (T5990."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5990."Posting Date");
          END;

      5992: BEGIN
            T5992.SETVIEW(RecRef.GETVIEW);
            IF T5992.FINDFIRST THEN;
            ExistingDimSetID :=T5992."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5992."Posting Date" < UserSetup."Allow Posting From") OR (T5992."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5992."Posting Date");
          END;

      5994: BEGIN
            T5994.SETVIEW(RecRef.GETVIEW);
            IF T5994.FINDFIRST THEN;
            ExistingDimSetID :=T5994."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5994."Posting Date" < UserSetup."Allow Posting From") OR (T5994."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5994."Posting Date");
          END;

      //VLDM4.12 Service Module

      6650: BEGIN
            T6650.SETVIEW(RecRef.GETVIEW);
            IF T6650.FINDFIRST THEN;
            ExistingDimSetID :=T6650."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T6650."Posting Date" < UserSetup."Allow Posting From") OR (T6650."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T6650."Posting Date");
          END;
      6660: BEGIN
            T6660.SETVIEW(RecRef.GETVIEW);
            IF T6660.FINDFIRST THEN;
            ExistingDimSetID :=T6660."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T6660."Posting Date" < UserSetup."Allow Posting From") OR (T6660."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T6660."Posting Date");
          END;
      17: BEGIN
            T17.SETVIEW(RecRef.GETVIEW);
            IF T17.FINDFIRST THEN;
            ExistingDimSetID :=T17."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T17."Posting Date" < UserSetup."Allow Posting From") OR (T17."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T17."Posting Date");
          END;
      21: BEGIN
            T21.SETVIEW(RecRef.GETVIEW);
            IF T21.FINDFIRST THEN;
            ExistingDimSetID :=T21."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T21."Posting Date" < UserSetup."Allow Posting From") OR (T21."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T21."Posting Date");
          END;
      25: BEGIN
            T25.SETVIEW(RecRef.GETVIEW);
            IF T25.FINDFIRST THEN;
            ExistingDimSetID :=T25."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T25."Posting Date" < UserSetup."Allow Posting From") OR (T25."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T25."Posting Date");
          END;
      32: BEGIN
            T32.SETVIEW(RecRef.GETVIEW);
            IF T32.FINDFIRST THEN;
            ExistingDimSetID :=T32."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T32."Posting Date" < UserSetup."Allow Posting From") OR (T32."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T32."Posting Date");
          END;
      169: BEGIN
            T169.SETVIEW(RecRef.GETVIEW);
            IF T169.FINDFIRST THEN;
            ExistingDimSetID :=T169."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T169."Posting Date" < UserSetup."Allow Posting From") OR (T169."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T169."Posting Date");
          END;
      203: BEGIN
            T203.SETVIEW(RecRef.GETVIEW);
            IF T203.FINDFIRST THEN;
            ExistingDimSetID :=T203."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T203."Posting Date" < UserSetup."Allow Posting From") OR (T203."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T203."Posting Date");
          END;
      271: BEGIN
            T271.SETVIEW(RecRef.GETVIEW);
            IF T271.FINDFIRST THEN;
            ExistingDimSetID :=T271."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T271."Posting Date" < UserSetup."Allow Posting From") OR (T271."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T271."Posting Date");
          END;
      5601: BEGIN
            T5601.SETVIEW(RecRef.GETVIEW);
            IF T5601.FINDFIRST THEN;
            ExistingDimSetID :=T5601."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5601."Posting Date" < UserSetup."Allow Posting From") OR (T5601."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5601."Posting Date");
          END;
      5625: BEGIN
            T5625.SETVIEW(RecRef.GETVIEW);
            IF T5625.FINDFIRST THEN;
            ExistingDimSetID :=T5625."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5625."Posting Date" < UserSetup."Allow Posting From") OR (T5625."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5625."Posting Date");
          END;
      5802: BEGIN
            T5802.SETVIEW(RecRef.GETVIEW);
            IF T5802.FINDFIRST THEN;
            ExistingDimSetID :=T5802."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5802."Posting Date" < UserSetup."Allow Posting From") OR (T5802."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5802."Posting Date");
          END;

      //VLDM4.12 Service Module (Ledger Entries Tables)
      5907: BEGIN
            T5907.SETVIEW(RecRef.GETVIEW);
            IF T5907.FINDFIRST THEN;
            ExistingDimSetID :=T5907."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5907."Posting Date" < UserSetup."Allow Posting From") OR (T5907."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5907."Posting Date");
          END;

      5908: BEGIN
            T5908.SETVIEW(RecRef.GETVIEW);
            IF T5908.FINDFIRST THEN;
            ExistingDimSetID :=T5908."Dimension Set ID";//VLDM4.07
            IF DimensionMgtSetup."Enable Posting Date Check" THEN //CAN_SH
              IF ((T5908."Posting Date" < UserSetup."Allow Posting From") OR (T5908."Posting Date" > UserSetup."Allow Posting To")) THEN
                  ERROR(Text14103540,T5908."Posting Date");
          END;

      //VLDM4.12 Service Module

      END;
    END;

    PROCEDURE ValidateAllLines@1000000005(RecRef@1000000000 : RecordRef) : Boolean;
    VAR
      T111@1000000014 : Record 111;
      T113@1000000001 : Record 113;
      T115@1000000017 : Record 115;
      T121@1000000015 : Record 121;
      T125@1000000019 : Record 125;
      T123@1000000005 : Record 123;
      SalesShipLine@1000000012 : Record 111;
      SalesInvoiceLine@1000000002 : Record 113;
      SalesCrLine@1000000016 : Record 115;
      PurchRcptLine@1000000013 : Record 121;
      PurchCrLine@1000000018 : Record 125;
      PurchInvoiceLine@1000000006 : Record 123;
      UserSetup@1000000011 : Record 91;
      T112@1000000010 : Record 112;
      T110@1000000009 : Record 110;
      T114@1000000008 : Record 114;
      T120@1000000007 : Record 120;
      T122@1000000004 : Record 122;
      T124@1000000003 : Record 124;
      T5744@1000000022 : Record 5744;
      T5745@1000000021 : Record 5745;
      T5746@1000000025 : Record 5746;
      T5747@1000000026 : Record 5747;
      TranShptLine@1000000023 : Record 5745;
      TranRcptLine@1000000024 : Record 5747;
      ConsolidatedLines@1000000020 : Boolean;
      T5991@1000000121 : Record 5991;
      T5993@1000001022 : Record 5993;
      T5995@1000000123 : Record 5995;
      T5989@1000000127 : Record 5989;
      T5990@1000000030 : Record 5991;
      T5992@1000000029 : Record 5993;
      T5994@1000000028 : Record 5995;
      ServiceShipLine@1000001024 : Record 5991;
      ServiceInvLine@1000001025 : Record 5993;
      ServiceCrMemoLine@1000001026 : Record 5995;
      ServicShipItmLine@1000001028 : Record 5989;
    BEGIN
      //For Checking Allow Posting Date for Users & Validate All Lines
      ConsolidatedLines := CheckCnstdGLEntries(RecRef); //VLDM4.08
      GetDimMgtSetup;
      UserSetup.GET(USERID);
      CASE RecRef.NUMBER OF
      111: BEGIN
            T111.SETVIEW(RecRef.GETVIEW);
            IF T111.FINDFIRST THEN BEGIN
            IF T110.GET(T111."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN   //VLDM4.10
                IF ((T110."Posting Date" < UserSetup."Allow Posting From") OR (T110."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T110."Posting Date");
              END;

              ExistingDimSetID :=T111."Dimension Set ID";//VLDM4.07

              IF NOT ConsolidatedLines AND (T111.COUNT >1)THEN BEGIN   //VLDM4.11++
                SalesShipLine.SETCURRENTKEY("Document No.","Document Line No.");
                SalesShipLine.SETRANGE("Document No.",T111."Document No.");
                SalesShipLine.SETFILTER("Document Line No.",'<>%1',T111."Document Line No.");
                IF NOT SalesShipLine.FINDFIRST THEN
               //VLDM4.10.1++
                BEGIN
                  SalesShipLine.RESET;
                  SalesShipLine.SETCURRENTKEY("Document No.","Document Line No.");
                  SalesShipLine.SETRANGE(SalesShipLine."Document No.",T111."Document No.");
                  SalesShipLine.SETFILTER(SalesShipLine."Document Line No.",'=%1',T111."Document Line No.");
                  SalesShipLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T111."Gen. Prod. Posting Group");
                  IF NOT SalesShipLine.FINDFIRST THEN
                   ERROR(Text14103541,T111."Document No.");

                END //VLDM4.10.1--
              END; //VLDM4.08

              SalesShipLine.RESET;
              SalesShipLine.SETCURRENTKEY("Document No.","Document Line No.");
              SalesShipLine.SETRANGE("Document No.",T111."Document No.");
              SalesShipLine.SETFILTER("Document Line No.",'%1',T111."Document Line No.");
              IF SalesShipLine.COUNT > 1 THEN BEGIN
                IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                  EXIT(TRUE)
                ELSE
                  EXIT(FALSE);
              END ELSE
                EXIT(TRUE);//VLDM4.07
            END;
           END;

      113: BEGIN
             T113.SETVIEW(RecRef.GETVIEW);
            IF T113.FINDFIRST THEN BEGIN
              IF T112.GET(T113."Document No.") THEN
                IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN //VLDM4.10
                  IF ((T112."Posting Date" < UserSetup."Allow Posting From") OR (T112."Posting Date" > UserSetup."Allow Posting To")) THEN
                      ERROR(Text14103540,T112."Posting Date");
                END;

               ExistingDimSetID :=T113."Dimension Set ID";//VLDM4.07
                IF NOT ConsolidatedLines  AND (T113.COUNT >1)THEN BEGIN   //VLDM4.11++
                SalesInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
                SalesInvoiceLine.SETRANGE(SalesInvoiceLine."Document No.",T113."Document No.");
                SalesInvoiceLine.SETFILTER(SalesInvoiceLine."Document Line No.",'<>%1',T113."Document Line No.");
                IF NOT SalesInvoiceLine.FINDFIRST THEN
                //VLDM4.10.1++
                BEGIN
                  SalesInvoiceLine.RESET;
                  SalesInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
                  SalesInvoiceLine.SETRANGE("Document No.",T113."Document No.");
                  SalesInvoiceLine.SETFILTER("Document Line No.",'=%1',T113."Document Line No.");
                  SalesInvoiceLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T113."Gen. Prod. Posting Group");
                  IF NOT SalesInvoiceLine.FINDFIRST THEN
                    ERROR(Text14103541,T113."Document No.");
                END
                //VLDM4.10.1--
              END; //VLDM4.08

              SalesInvoiceLine.RESET;
              SalesInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
              SalesInvoiceLine.SETRANGE(SalesInvoiceLine."Document No.",T113."Document No.");
              SalesInvoiceLine.SETFILTER(SalesInvoiceLine."Document Line No.",'%1',T113."Document Line No.");
              IF SalesInvoiceLine.COUNT > 1 THEN BEGIN
                 IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                   EXIT(TRUE)
                 ELSE
                   EXIT(FALSE);
               END ELSE
                EXIT(TRUE);//VLDM4.07
            END;
           END;

      115: BEGIN
             T115.SETVIEW(RecRef.GETVIEW);
            IF T115.FINDFIRST THEN BEGIN
              IF T114.GET(T115."Document No.") THEN
                IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN  //VLDM4.10
                  IF ((T114."Posting Date" < UserSetup."Allow Posting From") OR (T114."Posting Date" > UserSetup."Allow Posting To")) THEN
                      ERROR(Text14103540,T114."Posting Date");
                END;
              ExistingDimSetID :=T115."Dimension Set ID";//VLDM4.07

              IF NOT ConsolidatedLines AND (T115.COUNT >1) THEN BEGIN   //VLDM4.11++
                SalesCrLine.SETCURRENTKEY("Document No.","Document Line No.");
                SalesCrLine.SETRANGE("Document No.",T115."Document No.");
                SalesCrLine.SETFILTER("Document Line No.",'<>%1',T115."Document Line No.");
                IF NOT SalesCrLine.FINDFIRST THEN
              //VLDM4.10.1++
                BEGIN
                  SalesCrLine.RESET;
                  SalesCrLine.SETCURRENTKEY("Document No.","Document Line No.");
                  SalesCrLine.SETRANGE(SalesCrLine."Document No.",T115."Document No.");
                  SalesCrLine.SETFILTER(SalesCrLine."Document Line No.",'=%1',T115."Document Line No.");
                  SalesCrLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T115."Gen. Prod. Posting Group");
                  IF NOT SalesCrLine.FINDFIRST THEN
                   ERROR(Text14103541,T115."Document No.");

                END //VLDM4.10.1--
              END; //VLDM4.08
               SalesCrLine.RESET;
               SalesCrLine.SETCURRENTKEY("Document No.","Document Line No.");
               SalesCrLine.SETRANGE("Document No.",T115."Document No.");
               SalesCrLine.SETFILTER("Document Line No.",'%1',T115."Document Line No.");
               IF SalesCrLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                EXIT(TRUE);//VLDM4.07
            END;
           END;

      121: BEGIN
             T121.SETVIEW(RecRef.GETVIEW);
            IF T121.FINDFIRST THEN BEGIN
            IF T120.GET(T121."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN //VLDM4.10
                IF ((T120."Posting Date" < UserSetup."Allow Posting From") OR (T120."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T120."Posting Date");
              END;

              ExistingDimSetID :=T121."Dimension Set ID";//VLDM4.07

              IF NOT ConsolidatedLines AND (T121.COUNT >1)THEN BEGIN   //VLDM4.11++
                PurchRcptLine.SETCURRENTKEY("Document No.","Document Line No.");
                PurchRcptLine.SETRANGE("Document No.",T121."Document No.");
                PurchRcptLine.SETFILTER("Document Line No.",'<>%1',T121."Document Line No.");
                IF NOT PurchRcptLine.FINDFIRST THEN
              //VLDM4.10.1++
                BEGIN
                  PurchRcptLine.RESET;
                  PurchRcptLine.SETCURRENTKEY("Document No.","Document Line No.");
                  PurchRcptLine.SETRANGE(PurchRcptLine."Document No.",T121."Document No.");
                  PurchRcptLine.SETFILTER(PurchRcptLine."Document Line No.",'=%1',T121."Document Line No.");
                  PurchRcptLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T121."Gen. Prod. Posting Group");
                  IF NOT PurchRcptLine.FINDFIRST THEN
                   ERROR(Text14103541,T121."Document No.");

                END
               //VLDM4.10.1--
              END; //VLDM4.08
              PurchRcptLine.RESET;
              PurchRcptLine.SETCURRENTKEY("Document No.","Document Line No.");
              PurchRcptLine.SETRANGE("Document No.",T121."Document No.");
              PurchRcptLine.SETFILTER("Document Line No.",'%1',T121."Document Line No.");
              IF PurchRcptLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                  EXIT(TRUE);//VLDM4.07
            END;
           END;

      123: BEGIN
             T123.SETVIEW(RecRef.GETVIEW);
            IF T123.FINDFIRST THEN BEGIN
            IF T122.GET(T123."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN  //VLDM4.10
                IF ((T122."Posting Date" < UserSetup."Allow Posting From") OR (T122."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T122."Posting Date");
                END;
              ExistingDimSetID :=T123."Dimension Set ID";//VLDM4.07

              IF NOT ConsolidatedLines AND (T123.COUNT >1)THEN BEGIN   //VLDM4.11++
                PurchInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
                PurchInvoiceLine.SETRANGE(PurchInvoiceLine."Document No.",T123."Document No.");
                PurchInvoiceLine.SETFILTER(PurchInvoiceLine."Document Line No.",'<>%1',T123."Document Line No.");
                IF NOT PurchInvoiceLine.FINDFIRST THEN
              //VLDM4.10.1++
                BEGIN
                  PurchInvoiceLine.RESET;
                  PurchInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
                  PurchInvoiceLine.SETRANGE(PurchInvoiceLine."Document No.",T123."Document No.");
                  PurchInvoiceLine.SETFILTER(PurchInvoiceLine."Document Line No.",'=%1',T123."Document Line No.");
                  PurchInvoiceLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T123."Gen. Prod. Posting Group");
                  IF NOT PurchInvoiceLine.FINDFIRST THEN
                   ERROR(Text14103541,T123."Document No.");

                END
                //VLDM4.10.1--
              END; //VLDM4.08
              PurchInvoiceLine.RESET;
              PurchInvoiceLine.SETCURRENTKEY("Document No.","Document Line No.");
              PurchInvoiceLine.SETRANGE("Document No.",T123."Document No.");
              PurchInvoiceLine.SETFILTER("Document Line No.",'%1',T123."Document Line No.");
              IF PurchInvoiceLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                  EXIT(TRUE);//VLDM4.07
            END;
           END;

      125: BEGIN
             T125.SETVIEW(RecRef.GETVIEW);
            IF T125.FINDFIRST THEN BEGIN
            IF T124.GET(T125."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN  //VLDM4.10
                IF ((T124."Posting Date" < UserSetup."Allow Posting From") OR (T124."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T124."Posting Date");
              END;

              ExistingDimSetID :=T125."Dimension Set ID";//VLDM4.07

              IF NOT ConsolidatedLines AND (T125.COUNT >1)THEN BEGIN   //VLDM4.11++
                PurchCrLine.SETCURRENTKEY("Document No.","Document Line No.");
                PurchCrLine.SETRANGE("Document No.",T125."Document No.");
                PurchCrLine.SETFILTER("Document Line No.",'<>%1',T125."Document Line No.");
                IF NOT PurchCrLine.FINDFIRST THEN
              //VLDM4.10.1++
                BEGIN
                  PurchCrLine.RESET;
                  PurchCrLine.SETCURRENTKEY("Document No.","Document Line No.");
                  PurchCrLine.SETRANGE(PurchCrLine."Document No.",T125."Document No.");
                  PurchCrLine.SETFILTER(PurchCrLine."Document Line No.",'=%1',T125."Document Line No.");
                  PurchCrLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T125."Gen. Prod. Posting Group");
                  IF NOT PurchCrLine.FINDFIRST THEN
                   ERROR(Text14103541,T125."Document No.");

                END
               //VLDM4.10.1--
              END; //VLDM4.08
              PurchCrLine.RESET;
              PurchCrLine.SETCURRENTKEY("Document No.","Document Line No.");
              PurchCrLine.SETRANGE("Document No.",T125."Document No.");
              PurchCrLine.SETFILTER("Document Line No.",'%1',T125."Document Line No.");
              IF PurchCrLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                EXIT(TRUE);//VLDM4.07
            END;
           END;
      5745: BEGIN  //VLDM4.10
             T5745.SETVIEW(RecRef.GETVIEW);
            IF T5745.FINDFIRST THEN BEGIN
            IF T5744.GET(T5745."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN  //VLDM4.10
                IF ((T5744."Posting Date" < UserSetup."Allow Posting From") OR (T5744."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T5744."Posting Date");
              END;
              ExistingDimSetID :=T5745."Dimension Set ID";

              IF NOT ConsolidatedLines AND (T5745.COUNT >1)THEN BEGIN  //VLDM4.11++
                TranShptLine.SETCURRENTKEY("Document No.","Document Line No.");
                TranShptLine.SETRANGE("Document No.",T5745."Document No.");
                TranShptLine.SETFILTER("Document Line No.",'<>%1',T5745."Document Line No.");
                TranShptLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T5745."Gen. Prod. Posting Group");
                IF NOT TranShptLine.FINDFIRST THEN
                  ERROR(Text14103541,T5745."Document No.");
              END;
              TranShptLine.RESET;
              TranShptLine.SETCURRENTKEY("Document No.","Document Line No.");
              TranShptLine.SETRANGE("Document No.",T5745."Document No.");
              TranShptLine.SETFILTER("Document Line No.",'%1',T5745."Document Line No.");
              IF TranShptLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                EXIT(TRUE);
            END;
           END;
      5747: BEGIN  //VLDM4.10
             T5747.SETVIEW(RecRef.GETVIEW);
            IF T5747.FINDFIRST THEN BEGIN
            IF T5746.GET(T5747."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN  //VLDM4.10
                IF ((T5746."Posting Date" < UserSetup."Allow Posting From") OR (T5746."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T5746."Posting Date");
              END;
              ExistingDimSetID :=T5747."Dimension Set ID";

              IF NOT ConsolidatedLines AND (T5747.COUNT >1)THEN BEGIN      //VLDM4.11++
                TranRcptLine.SETCURRENTKEY("Document No.","Document Line No.");
                TranRcptLine.SETRANGE("Document No.",T5747."Document No.");
                TranRcptLine.SETFILTER("Document Line No.",'<>%1',T5747."Document Line No.");
                TranRcptLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T5747."Gen. Prod. Posting Group");
                IF NOT TranRcptLine.FINDFIRST THEN
                  ERROR(Text14103541,T5747."Document No.");
              END;
              TranRcptLine.RESET;
              TranRcptLine.SETCURRENTKEY("Document No.","Document Line No.");
              TranRcptLine.SETRANGE("Document No.",T5747."Document No.");
              TranRcptLine.SETFILTER("Document Line No.",'%1',T5747."Document Line No.");
              IF TranRcptLine.COUNT > 1 THEN BEGIN
                  IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                    EXIT(TRUE)
                  ELSE
                    EXIT(FALSE);
                END ELSE
                EXIT(TRUE);
            END;
           END;
          //VLDM4.10


      //VLDM4.12 Service Module
      5991: BEGIN
            T5991.SETVIEW(RecRef.GETVIEW);
            IF T5991.FINDFIRST THEN BEGIN
            IF T5990.GET(T5991."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN
                IF ((T5990."Posting Date" < UserSetup."Allow Posting From") OR (T5990."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T5990."Posting Date");
              END;

              ExistingDimSetID :=T5991."Dimension Set ID";

              IF NOT ConsolidatedLines AND (T5991.COUNT >1)THEN BEGIN
                ServiceShipLine.SETCURRENTKEY("Document No.","Document Line No.");
                ServiceShipLine.SETRANGE("Document No.",T111."Document No.");
                ServiceShipLine.SETFILTER("Document Line No.",'<>%1',T111."Document Line No.");
                IF NOT ServiceShipLine.FINDFIRST THEN
                BEGIN
                  ServiceShipLine.RESET;
                  ServiceShipLine.SETCURRENTKEY("Document No.","Document Line No.");
                  ServiceShipLine.SETRANGE("Document No.",T5991."Document No.");
                  ServiceShipLine.SETFILTER("Document Line No.",'=%1',T5991."Document Line No.");
                  ServiceShipLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T5991."Gen. Prod. Posting Group");
                  IF NOT ServiceShipLine.FINDFIRST THEN
                   ERROR(Text14103541,T5991."Document No.");

                END
              END;

              ServiceShipLine.RESET;
              ServiceShipLine.SETCURRENTKEY("Document No.","Document Line No.");
              ServiceShipLine.SETRANGE("Document No.",T5991."Document No.");
              ServiceShipLine.SETFILTER("Document Line No.",'%1',T5991."Document Line No.");
              IF ServiceShipLine.COUNT > 1 THEN BEGIN
                IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                  EXIT(TRUE)
                ELSE
                  EXIT(FALSE);
              END ELSE
                EXIT(TRUE);
            END;
           END;

      5993: BEGIN
            T5993.SETVIEW(RecRef.GETVIEW);
            IF T5993.FINDFIRST THEN BEGIN
            IF T5992.GET(T5993."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN
                IF ((T5992."Posting Date" < UserSetup."Allow Posting From") OR (T5992."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T5992."Posting Date");
              END;

              ExistingDimSetID :=T5993."Dimension Set ID";

              IF NOT ConsolidatedLines AND (T5993.COUNT >1)THEN BEGIN
                ServiceInvLine.SETCURRENTKEY("Document No.","Document Line No.");
                ServiceInvLine.SETRANGE("Document No.",T5993."Document No.");
                ServiceInvLine.SETFILTER("Document Line No.",'<>%1',T5993."Document Line No.");
                IF NOT ServiceInvLine.FINDFIRST THEN
                BEGIN
                  ServiceInvLine.RESET;
                  ServiceInvLine.SETCURRENTKEY("Document No.","Document Line No.");
                  ServiceInvLine.SETRANGE("Document No.",T5993."Document No.");
                  ServiceInvLine.SETFILTER("Document Line No.",'=%1',T5993."Document Line No.");
                  ServiceInvLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T5993."Gen. Prod. Posting Group");
                  IF NOT ServiceInvLine.FINDFIRST THEN
                   ERROR(Text14103541,T5993."Document No.");

                END
              END;

              ServiceInvLine.RESET;
              ServiceInvLine.SETCURRENTKEY("Document No.","Document Line No.");
              ServiceInvLine.SETRANGE("Document No.",T5993."Document No.");
              ServiceInvLine.SETFILTER("Document Line No.",'%1',T5993."Document Line No.");
              IF ServiceInvLine.COUNT > 1 THEN BEGIN
                IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                  EXIT(TRUE)
                ELSE
                  EXIT(FALSE);
              END ELSE
                EXIT(TRUE);
            END;
           END;

      5995: BEGIN

            T5995.SETVIEW(RecRef.GETVIEW);
            IF T5995.FINDFIRST THEN BEGIN
            IF T5994.GET(T5995."Document No.") THEN
              IF DimensionMgtSetup."Enable Posting Date Check" THEN BEGIN
                IF ((T5994."Posting Date" < UserSetup."Allow Posting From") OR (T5994."Posting Date" > UserSetup."Allow Posting To")) THEN
                    ERROR(Text14103540,T5994."Posting Date");
              END;

              ExistingDimSetID :=T5995."Dimension Set ID";

              IF NOT ConsolidatedLines AND (T5995.COUNT >1)THEN BEGIN
                ServiceCrMemoLine.SETCURRENTKEY("Document No.","Document Line No.");
                ServiceCrMemoLine.SETRANGE("Document No.",T5995."Document No.");
                ServiceCrMemoLine.SETFILTER("Document Line No.",'<>%1',T5995."Document Line No.");
                IF NOT ServiceCrMemoLine.FINDFIRST THEN
                BEGIN
                  ServiceCrMemoLine.RESET;
                  ServiceCrMemoLine.SETCURRENTKEY("Document No.","Document Line No.");
                  ServiceCrMemoLine.SETRANGE("Document No.",T5995."Document No.");
                  ServiceCrMemoLine.SETFILTER("Document Line No.",'=%1',T5995."Document Line No.");
                  ServiceCrMemoLine.SETFILTER("Gen. Prod. Posting Group",'<>%1',T5995."Gen. Prod. Posting Group");
                  IF NOT ServiceCrMemoLine.FINDFIRST THEN
                   ERROR(Text14103541,T5995."Document No.");

                END
              END;

              ServiceCrMemoLine.RESET;
              ServiceCrMemoLine.SETCURRENTKEY("Document No.","Document Line No.");
              ServiceCrMemoLine.SETRANGE("Document No.",T5995."Document No.");
              ServiceCrMemoLine.SETFILTER("Document Line No.",'%1',T5995."Document Line No.");
              IF ServiceCrMemoLine.COUNT > 1 THEN BEGIN
                IF CONFIRM(Text14103542,TRUE,TRUE) THEN
                  EXIT(TRUE)
                ELSE
                  EXIT(FALSE);
              END ELSE
                EXIT(TRUE);
            END;
           END;



      //VLDM4.12 Service Module
      END;
    END;

    PROCEDURE ChangeGLDimension@1000000003(VAR GLEntryrec@1000000010 : Record 17;RecRef@1000000001 : RecordRef;ConfirmIt@1000000000 : Boolean;VAR DimCode@1000000004 : Code[20];VAR DimValue@1000000005 : Code[20]);
    VAR
      Text001@1000000006 : TextConst 'ENU=%1 Dimension has been updated to %2';
      Text002@1000000007 : TextConst 'ENU=%1 Dimension has been removed';
      StartDate@1000000008 : Date;
      EndDate@1000000009 : Date;
      DimSetEntry@1000000003 : Record 480;
      GLSetup@1000000002 : Record 98;
      i@1000000011 : Integer;
      Window@1000000012 : Dialog;
      Text003@1000000013 : TextConst 'ENU=Updating Dimension Values';
      GLEntry@1000000014 : Record 17;
    BEGIN
      //>,VLDM4.04, VLDM4.07
      //VLDM4.07 >>
      DimensionMgtSetup.ShowClosedPeriodError(GLEntryrec."Posting Date");
      ShowAllowPeriodError(GLEntryrec."Posting Date");
      //VLDM4.07 <<
      ExistingDimSetID :=GLEntryrec."Dimension Set ID";//VLDM4.07
      ChooseNewDimension;
      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;
      GetDimMgtSetup;
      i:=1;
      Window.OPEN(Text003);
      IF GLEntryrec.FINDSET THEN REPEAT
        DimensionMgtSetup.ShowClosedPeriodError(GLEntryrec."Posting Date");
        RecRef.GETTABLE(GLEntryrec);
        RecID_Text := FORMAT(RecRef.RECORDID);
        KeyCode1 := ParseKey1;
        CLEAR(DimMgtProcessing);
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF i = 1 THEN
          CallWriteDimHistory(0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text005)
        ELSE
          DimMgtProcessing.SetGLDimMgtHistory(DimEntryNo,Dimension, DimensionValue);

        IF RecRef.NUMBER IN [17,21,25,32,169,203,271,5601,5625,5629,5802,5907,5908] THEN //VLDM4.12 Added 5907,5908
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          COMMIT;
      i:=i+1;
      UNTIL GLEntryrec.NEXT=0;
      UpdateExtndedDimension(GLEntryrec);
      DimCode := Dimension;
      DimValue := DimensionValue;

      IF Dimension <> '' THEN
        MESSAGE(Text001, Dimension,DimensionValue )
      ELSE
        MESSAGE(Text002,Dimension);
      Window.CLOSE;
      //<<VLDM4.04,VLDM4.07
    END;

    PROCEDURE ChangeJobLedgerDimension@2(VAR JobLedger@1000000010 : Record 169;RecRef@1000000001 : RecordRef;ConfirmIt@1000000000 : Boolean;VAR DimCode@1000000004 : Code[20];VAR DimValue@1000000005 : Code[20]);
    VAR
      Text001@1000000006 : TextConst 'ENU=%1 Dimension has been updated to %2';
      Text002@1000000007 : TextConst 'ENU=%1 Dimension has been removed';
      StartDate@1000000008 : Date;
      EndDate@1000000009 : Date;
      DimSetEntry@1000000003 : Record 480;
      GLSetup@1000000002 : Record 98;
      i@1000000011 : Integer;
      Window@1000000012 : Dialog;
      Text003@1000000013 : TextConst 'ENU=Updating Dimension Values';
      GLEntry@1000000014 : Record 17;
    BEGIN
      //>>VLDM4.11
      DimensionMgtSetup.ShowClosedPeriodError(JobLedger."Posting Date");
      ShowAllowPeriodError(JobLedger."Posting Date");
      ExistingDimSetID :=JobLedger."Dimension Set ID";
      IF ConfirmIt THEN
        IF NOT ConfirmBatchChange THEN
          EXIT;
      ChooseNewDimension;

      GetDimMgtSetup;
      i:=1;
      Window.OPEN(Text003);
      IF JobLedger.FINDSET THEN REPEAT
        DimensionMgtSetup.ShowClosedPeriodError(JobLedger."Posting Date");
        RecRef.GETTABLE(JobLedger);
        RecID_Text := FORMAT(RecRef.RECORDID);
        KeyCode1 := ParseKey1;
        CLEAR(DimMgtProcessing);
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF i = 1 THEN
          CallWriteDimHistory(0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text005)
        ELSE
          DimMgtProcessing.SetGLDimMgtHistory(DimEntryNo,Dimension, DimensionValue);

        IF RecRef.NUMBER IN [17,21,25,32,169,203,271,5601,5625,5629,5802,5907,5908] THEN //VLDM4.12 Added 5907,5908
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          COMMIT;
      i:=i+1;
      UNTIL JobLedger.NEXT=0;
      //UpdateExtndedDimension(JobLedger);
      DimCode := Dimension;
      DimValue := DimensionValue;

      IF Dimension <> '' THEN
        MESSAGE(Text001, Dimension,DimensionValue )
      ELSE
        MESSAGE(Text002,Dimension);
      Window.CLOSE;
      //<<VLDM4.11
    END;

    PROCEDURE ChangeResLedgerDimension@3(VAR ResLedgerEntry@1000000010 : Record 203;RecRef@1000000001 : RecordRef;ConfirmIt@1000000000 : Boolean;VAR DimCode@1000000004 : Code[20];VAR DimValue@1000000005 : Code[20]);
    VAR
      Text001@1000000006 : TextConst 'ENU=%1 Dimension has been updated to %2';
      Text002@1000000007 : TextConst 'ENU=%1 Dimension has been removed';
      StartDate@1000000008 : Date;
      EndDate@1000000009 : Date;
      DimSetEntry@1000000003 : Record 480;
      GLSetup@1000000002 : Record 98;
      i@1000000011 : Integer;
      Window@1000000012 : Dialog;
      Text003@1000000013 : TextConst 'ENU=Updating Dimension Values';
      GLEntry@1000000014 : Record 17;
    BEGIN

      //VLDM4.11>>
      DimensionMgtSetup.GET;
      GetDimMgtSetup;
      DimensionMgtSetup.ShowClosedPeriodError(ResLedgerEntry."Posting Date");
      ShowAllowPeriodError(ResLedgerEntry."Posting Date");

      ExistingDimSetID :=ResLedgerEntry."Dimension Set ID";
      ChooseNewDimension;
      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;

      i:=1;
      Window.OPEN(Text003);
      IF ResLedgerEntry.FINDSET THEN REPEAT
        DimensionMgtSetup.ShowClosedPeriodError(ResLedgerEntry."Posting Date");
        RecRef.GETTABLE(ResLedgerEntry);
        RecID_Text := FORMAT(RecRef.RECORDID);
        KeyCode1 := ParseKey1;
        CLEAR(DimMgtProcessing);
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF i = 1 THEN
          CallWriteDimHistory(0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text005)
        ELSE
          DimMgtProcessing.SetGLDimMgtHistory(DimEntryNo,Dimension, DimensionValue);

        IF RecRef.NUMBER IN [17,21,25,32,169,203,271,5601,5625,5629,5802,5907,5908] THEN //VLDM4.12 Added 5907,5908
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          COMMIT;
      i:=i+1;
      UNTIL ResLedgerEntry.NEXT=0;
      //UpdateExtndedDimension(GLEntryrec);
      DimCode := Dimension;
      DimValue := DimensionValue;

      IF Dimension <> '' THEN
        MESSAGE(Text001, Dimension,DimensionValue )
      ELSE
        MESSAGE(Text002,Dimension);
      Window.CLOSE;
      //<<VLDM4.11
    END;

    PROCEDURE UpdateExtndedDimension@1000000006(VAR GLEntryrec@1000000001 : Record 17);
    VAR
      DimSetEntry@1000000002 : Record 480;
      GLSetup@1000000003 : Record 98;
    BEGIN
      //CAN VLDM4.05>>
      GLSetup.GET;
      IF GLEntryrec.FINDSET THEN REPEAT
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 3 Code") THEN
          GLEntryrec."Shortcut Dimension 3 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 4 Code") THEN
          GLEntryrec."Shortcut Dimension 4 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 5 Code") THEN
          GLEntryrec."Shortcut Dimension 5 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 6 Code") THEN
          GLEntryrec."Shortcut Dimension 6 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 7 Code") THEN
          GLEntryrec."Shortcut Dimension 7 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLEntryrec."Dimension Set ID",GLSetup."Shortcut Dimension 8 Code") THEN
          GLEntryrec."Shortcut Dimension 8 Code":= DimSetEntry."Dimension Value Code";
        GLEntryrec.MODIFY;
      UNTIL GLEntryrec.NEXT=0
      //CAN VLDM4.05<<
    END;

    PROCEDURE ShowAllowPeriodError@1000000007(CheckDate@1000000000 : Date);
    BEGIN
      //VLDM4.07
      UserSetup.GET(USERID);
      DimensionMgtSetup.GET;
      IF NOT DimensionMgtSetup."Enable Posting Date Check" THEN
      EXIT;
      IF ((CheckDate < UserSetup."Allow Posting From") OR (CheckDate > UserSetup."Allow Posting To")) THEN
        ERROR(Text14103540,CheckDate);
      //VLDM4.07
    END;

    LOCAL PROCEDURE CheckCnstdGLEntries@1000000008(RecRef@1000000000 : RecordRef) : Boolean;
    VAR
      T111@1000000012 : Record 111;
      T113@1000000011 : Record 113;
      T115@1000000010 : Record 115;
      T121@1000000009 : Record 121;
      T125@1000000008 : Record 125;
      T123@1000000007 : Record 123;
      SalesShipLine@1000000006 : Record 111;
      SalesInvoiceLine@1000000005 : Record 113;
      SalesCrLine@1000000004 : Record 115;
      PurchRcptLine@1000000003 : Record 121;
      PurchCrLine@1000000002 : Record 125;
      PurchInvoiceLine@1000000001 : Record 123;
      GLEntry@1000000013 : Record 17;
      ValueEntry@1000000014 : Record 5802;
      DocumentNo@1000000015 : Code[20];
      PostingDate@1000000016 : Date;
      GLFieldRef@1000000017 : FieldRef;
      i@1000000018 : Integer;
      NoOfFields@1000000019 : Integer;
      GLEntry2@1000000022 : Record 17;
      FALedEntry@1000000025 : Record 5601;
      FALedEntry2@1000000024 : Record 5601;
      GenPostingSetup@1000000023 : Record 252;
      PrevGLAccountNo@1000000021 : Code[20];
      CurrGLAccountNo@1000000020 : Code[20];
    BEGIN
      //VLDM4.08>>
      DocumentNo := '';
      PostingDate := 0D;
      NoOfFields := RecRef.FIELDCOUNT;

      FOR i := 1 TO NoOfFields DO BEGIN
        GLFieldRef := RecRef.FIELDINDEX(i);
        IF GLFieldRef.NAME = 'Document No.' THEN
          DocumentNo := GLFieldRef.VALUE;
        IF GLFieldRef.NAME = 'Posting Date' THEN
          PostingDate := GLFieldRef.VALUE;
      END;

      GLEntry.RESET;
      GLEntry.SETRANGE("Document No.",DocumentNo);
      GLEntry.SETRANGE("Posting Date",PostingDate);
      IF GLEntry.ISEMPTY THEN
        EXIT(FALSE);

      //VLDM4.09>>  Considered Fixed asset and Different G/L Accounts for validation
      FALedEntry.RESET;
      FALedEntry.SETRANGE("Document No.",DocumentNo);
      FALedEntry.SETRANGE("FA Posting Date",PostingDate);
      FALedEntry.SETFILTER("FA Posting Group",'<>%1','');
      IF FALedEntry.FINDFIRST THEN BEGIN
        FALedEntry2.RESET;
        FALedEntry2.SETRANGE("Document No.",DocumentNo);
        FALedEntry2.SETRANGE("FA Posting Date",PostingDate);
        FALedEntry2.SETFILTER("FA Posting Group",'<>%1',FALedEntry."FA Posting Group");
        IF NOT FALedEntry2.ISEMPTY THEN
          EXIT(TRUE);
      END;

      GLEntry.RESET;
      GLEntry.SETRANGE("Document No.",DocumentNo);
      GLEntry.SETRANGE("Posting Date",PostingDate);
      GLEntry.SETRANGE("FA Entry Type",GLEntry."FA Entry Type"::" ");
      GLEntry.SETFILTER("Gen. Prod. Posting Group",'<>%1','');
      IF GLEntry.FINDSET THEN
        REPEAT
          GLEntry2.RESET;
          GLEntry2.SETRANGE("Document No.",DocumentNo);
          GLEntry2.SETRANGE("Posting Date",PostingDate);
          GLEntry2.SETRANGE("Gen. Prod. Posting Group",GLEntry."Gen. Prod. Posting Group");
          IF GLEntry2.FINDSET THEN
            REPEAT
              IF GenPostingSetup.GET(GLEntry."Gen. Bus. Posting Group",GLEntry."Gen. Prod. Posting Group") THEN
                IF GenPostingSetup."Sales Line Disc. Account" <> GLEntry2."G/L Account No." THEN BEGIN
                  IF (GenPostingSetup."Purch. Line Disc. Account" <> GLEntry2."G/L Account No.") THEN BEGIN
                    PrevGLAccountNo := CurrGLAccountNo;
                    CurrGLAccountNo := GLEntry2."G/L Account No.";
                    IF (PrevGLAccountNo <> '') AND (PrevGLAccountNo <> CurrGLAccountNo) THEN
                      EXIT(FALSE)        //VLDM4.10.1
                  END;
               END;
            UNTIL GLEntry2.NEXT = 0;
        UNTIL GLEntry.NEXT = 0;
      //VLDM4.09<<

      EXIT(FALSE);
      //VLDM4.08<<
    END;

    LOCAL PROCEDURE GetPstdDocLineNo@1000000009(RecRef@1000000000 : RecordRef) : Integer;
    VAR
      SalesShpLine@1000000006 : Record 111;
      SalesInvLine@1000000005 : Record 113;
      SalesCrMemoLine@1000000004 : Record 115;
      PurchRcptLine@1000000003 : Record 121;
      PurchInvLine@1000000002 : Record 123;
      PurchCrMemoLine@1000000001 : Record 125;
      TranShptLine@1000000007 : Record 5745;
      TranRcptLine@1000000008 : Record 5747;
      ServiceShipLine@1000000107 : Record 5991;
      ServiceInvLine@1000000108 : Record 5993;
      ServiceCrMemoLine@1000000109 : Record 5995;
    BEGIN
      //VLDM4.09>>
      CASE RecRef.NUMBER OF
        111 : BEGIN
          RecRef.SETTABLE(SalesShpLine);
          EXIT(SalesShpLine."Document Line No.");
        END;
        113 : BEGIN
          RecRef.SETTABLE(SalesInvLine);
          EXIT(SalesInvLine."Document Line No.");
        END;
        115 : BEGIN
          RecRef.SETTABLE(SalesCrMemoLine);
          EXIT(SalesCrMemoLine."Document Line No.");
        END;
        121 : BEGIN
          RecRef.SETTABLE(PurchRcptLine);
          EXIT(PurchRcptLine."Document Line No.");
        END;
        123 : BEGIN
          RecRef.SETTABLE(PurchInvLine);
          EXIT(PurchInvLine."Document Line No.");
        END;
        125 : BEGIN
          RecRef.SETTABLE(PurchCrMemoLine);
          EXIT(PurchCrMemoLine."Document Line No.");
        END;
        //VLDM4.10>>
        5745 : BEGIN
          RecRef.SETTABLE(TranShptLine);
          EXIT(TranShptLine."Document Line No.");
        END;
        5747 : BEGIN
          RecRef.SETTABLE(TranRcptLine);
          EXIT(TranRcptLine."Document Line No.");
        END;

      //VLDM4.12 Service Module
        5991 : BEGIN
          RecRef.SETTABLE(ServiceShipLine);
          EXIT(ServiceShipLine."Document Line No.");
        END;
        5993 : BEGIN
          RecRef.SETTABLE(ServiceInvLine);
          EXIT(ServiceInvLine."Document Line No.");
        END;
        5995 : BEGIN
          RecRef.SETTABLE(ServiceCrMemoLine);
          EXIT(ServiceCrMemoLine."Document Line No.");
        END;

      //VLDM4.12 Service Module
        //VLDM4.10<<
      END;
      //VLDM4.09<<
    END;

    PROCEDURE AutoPurgeHistory@1000000018();
    VAR
      DmMgtSetup@1000000003 : Record 14103540;
      DimMgtHistory@1000000000 : Record 14103541;
      ToDate@1000000001 : Date;
    BEGIN
      //VLDM4.10>>
      IF NOT DmMgtSetup.GET THEN
        EXIT;
      IF DmMgtSetup."Auto Purge Days" = 0 THEN
        EXIT;
      ToDate := CALCDATE('-' + FORMAT(DmMgtSetup."Auto Purge Days") + 'D',TODAY);
      DimMgtHistory.RESET;
      DimMgtHistory.SETRANGE("Changed Date",ToDate,TODAY);
      DimMgtHistory.DELETEALL(TRUE);
      //VLDM4.10<<
    END;

    PROCEDURE CreateUserRoles@1();
    VAR
      UserRole@1000000008 : Record 2000000004;
      Permission@1000000007 : Record 2000000005;
      AllObj@1000000006 : Record 2000000038;
      User@1000000005 : Record 2000000120;
      WindowsLogin@1000000003 : Record 2000000120;
      WindowsAccessControl@1000000002 : Record 2000000053;
    BEGIN
      //VLDM4.10>>
      UserRole."Role ID" := 'VLDM All';
      UserRole.Name := 'Required for all user';
      IF NOT UserRole.INSERT THEN ;
      AllObj.RESET;
      AllObj.SETRANGE("Object Type",AllObj."Object Type"::TableData);
      AllObj.SETFILTER(
        "Object ID",
        '14103540..14103560');
      IF AllObj.FIND('-') THEN
        REPEAT
          Permission."Role ID" := UserRole."Role ID";
          Permission."Object Type" := AllObj."Object Type";
          Permission."Object ID" := AllObj."Object ID";

          Permission."Read Permission" := Permission."Read Permission"::Yes;
          IF AllObj."Object ID" IN [14103541, 14103542] THEN BEGIN
            Permission."Insert Permission" := Permission."Insert Permission"::Yes;
            Permission."Modify Permission" := Permission."Modify Permission"::Yes;
            Permission."Delete Permission" := Permission."Delete Permission"::Yes;
            Permission."Execute Permission" := Permission."Execute Permission"::Yes;
          END ELSE BEGIN
            Permission."Insert Permission" := Permission."Insert Permission"::" ";
            Permission."Modify Permission" := Permission."Modify Permission"::" ";
            Permission."Delete Permission" := Permission."Delete Permission"::" ";
            Permission."Execute Permission" := Permission."Execute Permission"::" ";
          END;
          IF NOT Permission.INSERT THEN ;
        UNTIL AllObj.NEXT = 0;

      UserRole."Role ID" := 'VLDM SETUP';
      UserRole.Name := 'Dimension Management Setup';
      IF NOT UserRole.INSERT THEN ;
      AllObj.RESET;
      AllObj.SETRANGE("Object Type",AllObj."Object Type"::TableData);
      AllObj.SETFILTER(
        "Object ID",
        '14103540..14103560');

      IF AllObj.FIND('-') THEN BEGIN
        REPEAT
          Permission."Role ID" := UserRole."Role ID";
          Permission."Object Type" := AllObj."Object Type";
          Permission."Object ID" := AllObj."Object ID";
          Permission."Read Permission" := Permission."Read Permission"::Yes;
          Permission."Delete Permission" := Permission."Delete Permission"::Yes;
          Permission."Insert Permission" := Permission."Insert Permission"::Yes;
          Permission."Modify Permission" := Permission."Modify Permission"::Yes;
          Permission."Execute Permission" := Permission."Execute Permission"::Yes;
          IF NOT Permission.INSERT THEN ;
        UNTIL AllObj.NEXT = 0;
      END;

      IF CONFIRM('Add VLDM All to all users?',FALSE) THEN BEGIN
        IF WindowsLogin.FIND('-') THEN
          REPEAT
            IF NOT WindowsAccessControl.GET(FORMAT(WindowsLogin."User Security ID"),'SUPER','') THEN BEGIN
              WindowsAccessControl."User Security ID" := WindowsLogin."User Security ID";
              WindowsAccessControl."Role ID" := UserRole."Role ID";
              WindowsAccessControl."User Name" := WindowsLogin."User Name";
              IF NOT WindowsAccessControl.INSERT THEN ;
            END;
          UNTIL WindowsLogin.NEXT = 0;
      END;
      MESSAGE('Roles Sucessfully Created.');
      //VLDM4.10<<
    END;

    PROCEDURE ChangeBudgetGLDimension@1000000010(VAR GLBudgetEntry@1000000004 : Record 96;RecRef@1000000003 : RecordRef;VAR ConfirmIt@1000000002 : Boolean;VAR DimCode@1000000001 : Code[20];VAR DimValue@1000000000 : Code[20]);
    VAR
      Window@1000000005 : Dialog;
      StartDate@1000000007 : Date;
      EndDate@1000000006 : Date;
    BEGIN
      //>>VLDM4.11++
      DimensionMgtSetup.ShowClosedPeriodError(GLBudgetEntry.Date);
      ShowAllowPeriodError(GLBudgetEntry.Date);
      ExistingDimSetID := GLBudgetEntry."Dimension Set ID";
      ChooseNewDimension();
      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;
      GetDimMgtSetup;
      i:=1;
      IF GUIALLOWED THEN
      Window.OPEN(Text14103545);
      IF GLBudgetEntry.FINDSET THEN REPEAT
        RecRef.GETTABLE(GLBudgetEntry);
        RecID_Text := FORMAT(RecRef.RECORDID);
        KeyCode1 := ParseKey1;
        CLEAR(DimMgtProcessing);
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF i = 1 THEN
          CallWriteDimHistory(0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text005)
        ELSE
          DimMgtProcessing.SetGLDimMgtHistory(DimEntryNo,Dimension, DimensionValue);
        IF RecRef.NUMBER = 96 THEN
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          COMMIT;
       i:=i+1;
       UNTIL GLBudgetEntry.NEXT = 0;

      UpdateBudgetExtndedDimension(GLBudgetEntry);
      DimCode := Dimension;
      DimValue := DimensionValue;

      IF Dimension <> '' THEN
        MESSAGE(Text14103544, Dimension,DimensionValue )
      ELSE
        ERROR(Text002,Dimension);
      IF GUIALLOWED THEN
      Window.CLOSE()
      //<<VLDM4.11--
    END;

    PROCEDURE UpdateBudgetExtndedDimension@1000000011(VAR GLBudgetEntry@1000000000 : Record 96);
    VAR
      DimSetEntry@1000000001 : Record 480;
    BEGIN
      //>>VLDM4.11++
      IF GLBudgetEntry.FINDSET THEN REPEAT
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 3 Code") THEN
          GLBudgetEntry."Shortcut Dimension 3 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 4 Code") THEN
          GLBudgetEntry."Shortcut Dimension 4 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 5 Code") THEN
          GLBudgetEntry."Shortcut Dimension 5 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 6 Code") THEN
          GLBudgetEntry."Shortcut Dimension 6 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 7 Code") THEN
          GLBudgetEntry."Shortcut Dimension 7 Code":= DimSetEntry."Dimension Value Code";
        IF DimSetEntry.GET(GLBudgetEntry."Dimension Set ID",GLBudgetEntry."Shortcut Dimension 8 Code") THEN
          GLBudgetEntry."Shortcut Dimension 8 Code":= DimSetEntry."Dimension Value Code";
      UNTIL GLBudgetEntry.NEXT = 0;
      //<<VLDM4.11--
    END;

    PROCEDURE ChangeBudgetDimension@1000000012(RecRef@1000000004 : RecordRef;ConfirmIt@1000000003 : Boolean;Batch@1000000002 : Boolean;DimSetID@1000000001 : Integer;EntryNo@1000000000 : Integer);
    VAR
      StartDate@1000000006 : Date;
      EndDate@1000000005 : Date;
      GLBudgetEntry@1000000007 : Record 96;
      Window@1000000008 : Dialog;
    BEGIN
      //>>VLDM4.11++
      ExistingDimSetID := DimSetID;
      RecID_Text := FORMAT(RecRef.RECORDID);
      KeyCode1 := ParseKey1;

      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;
      CLEAR(DimMgtProcessing);
      IF GUIALLOWED THEN
        Window.OPEN(Text14103545);
        ChooseNewDimension;
        GetDimMgtSetup;
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        CallWriteDimHistory(
          0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text004);


        IF RecRef.NUMBER = 96 THEN BEGIN
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
            RecRef.SETTABLE(GLBudgetEntry);
            UpdateBudgetExtndedDimension(GLBudgetEntry);


        END;

      IF Dimension <> '' THEN
        MESSAGE(Text14103544, Dimension,DimensionValue )
      ELSE
        ERROR(Text002,Dimension);
      IF GUIALLOWED THEN
        Window.CLOSE;
      //<<VLDM4.11--
    END;

    PROCEDURE ChooseNewBudgetDimensionWithDate@1000000013(VAR StartDate@1000000003 : Date;VAR EndDate@1000000002 : Date;TableID@1000000001 : Integer;EntryNo@1000000000 : Integer);
    VAR
      NewDimensionPage@1000000004 : Page 14103541;
    BEGIN
      //>>VLDM4.11++
      CLEAR(NewDimensionPage);
      CLEAR(Dimension);
      CLEAR(DimensionValue);
      NewDimensionPage.SetBudgetValues(TableID,EntryNo);
      IF NewDimensionPage.RUNMODAL <> ACTION::LookupOK THEN
        ERROR('');

      NewDimensionPage.ReturnValues(Dimension, DimensionValue, StartDate, EndDate);
      CLEAR(NewDimensionPage);

      IF (Dimension = '') THEN
        ERROR(Text003);

      IF (DimensionValue = '') THEN
        IF NOT(CONFIRM(Text001)) THEN
          ChooseNewBudgetDimensionWithDate(StartDate, EndDate,TableID,EntryNo);
      //<<VLDM4.11--
    END;

    PROCEDURE ShowDimBudgetHistory@1000000025(TableNo@1000000000 : Integer;FilterSourceNo@1000000001 : Code[50]);
    VAR
      DimMgtHistory@1000000002 : Record 14103541;
    BEGIN
      //>>VLDM4.11++
      IF (NOT DimensionMgtSetup.GET) OR
        (NOT DimensionMgtSetup."Enable Dimension Mgt History")
      THEN BEGIN
        MESSAGE(Text007);
        EXIT;
      END;

      DimMgtHistory.RESET;
      DimMgtHistory.FILTERGROUP(2);
      DimMgtHistory.SETCURRENTKEY(DimMgtHistory."Changed from Table ID");

      DimMgtHistory.SETRANGE("Changed from Table ID", TableNo);
      DimMgtHistory.SETFILTER("Source No.",FilterSourceNo);
      DimMgtHistory.FILTERGROUP(0);

      IF DimMgtHistory.FINDLAST THEN ;
      PAGE.RUN(PAGE::"Dimension Management History", DimMgtHistory);
      //<<VLDM4.11--
    END;

    PROCEDURE UpdateGLShortcutDimensions@1000000014();
    BEGIN
      // >>      VLDM4.05
      GLSetup.GET;
      GLEntry.RESET;
      IF GLEntry.FINDSET THEN BEGIN
         REPEAT
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 3 Code") THEN
           GLEntry."Shortcut Dimension 3 Code":= DimSetEntry."Dimension Value Code";
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 4 Code") THEN
           GLEntry."Shortcut Dimension 4 Code":= DimSetEntry."Dimension Value Code";
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 5 Code") THEN
           GLEntry."Shortcut Dimension 5 Code":= DimSetEntry."Dimension Value Code";
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 6 Code") THEN
           GLEntry."Shortcut Dimension 6 Code":= DimSetEntry."Dimension Value Code";
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 7 Code") THEN
           GLEntry."Shortcut Dimension 7 Code":= DimSetEntry."Dimension Value Code";
         IF DimSetEntry.GET(GLEntry."Dimension Set ID",GLSetup."Shortcut Dimension 8 Code") THEN
           GLEntry."Shortcut Dimension 8 Code":= DimSetEntry."Dimension Value Code";
         GLEntry.MODIFY;
          UNTIL GLEntry.NEXT=0;
        MESSAGE('Completed');
      END;
      //  <<VLDM4.05
    END;

    PROCEDURE ChangeServiceLedgerDimension@1000000033(VAR ServiceLedger@1000000004 : Record 5907;RecRef@1000000003 : RecordRef;ConfirmIt@1000000002 : Boolean;VAR DimCode@1000000001 : Code[20];VAR DimValue@1000000000 : Code[20]);
    VAR
      Window@1000000008 : Dialog;
      StartDate@1000000007 : Date;
      EndDate@1000000006 : Date;
      GLSetup@1000000005 : Record 98;
      i@1000000009 : Integer;
    BEGIN

      //VLDM4.12>>
      ChooseNewDimension;
      IF ConfirmIt THEN
        IF NOT ConfirmChange THEN
          EXIT;
      GetDimMgtSetup;
      i:=1;
      Window.OPEN(Text003);
      IF ServiceLedger.FINDSET THEN REPEAT
        DimensionMgtSetup.ShowClosedPeriodError(ServiceLedger."Posting Date");
        RecRef.GETTABLE(ServiceLedger);
        RecID_Text := FORMAT(RecRef.RECORDID);
        KeyCode1 := ParseKey1;
        CLEAR(DimMgtProcessing);
        IF DimensionMgtSetup."Exclude Closed Periods" THEN
          IF (StartDate > 0D) AND DimMgtProcessing.IsDatePeriodClosed(StartDate)  THEN
            ERROR(Text012 + ' ' + Text013);
        IF i = 1 THEN
          CallWriteDimHistory(0, RecRef.NUMBER, 0, KeyCode1, Dimension, DimensionValue, StartDate, EndDate, '', '', Text005)
        ELSE
          DimMgtProcessing.SetGLDimMgtHistory(DimEntryNo,Dimension, DimensionValue);

        IF RecRef.NUMBER IN [17,21,25,32,169,203,271,5601,5625,5629,5802,5907,5908] THEN //VLDM4.12 Added 5907,5908
          DimMgtProcessing.ChangeLedgerEntryDim(RecRef, RecRef.NUMBER, KeyCode1, Dimension, DimensionValue);
          COMMIT;
      i:=i+1;
      UNTIL ServiceLedger.NEXT=0;
      DimCode := Dimension;
      DimValue := DimensionValue;


      Window.CLOSE;
      //VLDM4.12 <<
    END;

    PROCEDURE UpdateItmDim@1000000015(VAR RecordRefer@1000000009 : RecordRef;VAR RecCode@1000000008 : Code[20]);
    VAR
      SelectCode@1000000001 : Code[20];
      Text000001@1000000002 : TextConst 'ENU=Dimension Values updated for %1, No. %2';
      DefaultDimension@1000000006 : Record 352;
      Item@1000000003 : Record 27;
      Vend@1000000004 : Record 23;
      Cust@1000000005 : Record 18;
      SelectValue@1000000007 : Code[50];
      RecordRef2@1000000000 : RecordRef;
    BEGIN
      IF NOT CONFIRM (Text017,TRUE) THEN
        EXIT;

      DialogMSG.OPEN('##Processing Records......');
      IF RecordRefer.NUMBER IN [18,23,27] THEN BEGIN
       CASE RecordRefer.NUMBER OF
        27: //For Item
        BEGIN
         IF Item.GET(RecCode) THEN BEGIN
           SelectValue := 'Item';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",27);
           DefaultDimension.SETFILTER("No.",RecCode);
           IF DefaultDimension.FINDSET THEN REPEAT
             RecordRef2.OPEN(27);
              DimMgtProcessing.ChangeSourceDimforMasters(
                 RecordRef2, RecordRef2.NUMBER, RecCode, 010101D, WORKDATE,DefaultDimension."Dimension Code",
                  DefaultDimension."Dimension Value Code");
             RecordRef2.CLOSE;
           UNTIL DefaultDimension.NEXT = 0;
           RecordRefer.CLOSE;
         END;
        END;

        18:   //For Customer
        BEGIN
         IF Cust.GET(RecCode) THEN BEGIN
           SelectValue := 'Customer';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",18);
           DefaultDimension.SETFILTER("No.",RecCode);
           IF DefaultDimension.FINDSET THEN REPEAT
             RecordRef2.OPEN(18);
               DimMgtProcessing.ChangeSourceDimforMasters(
                 RecordRef2, RecordRef2.NUMBER, RecCode, 010101D, WORKDATE,DefaultDimension."Dimension Code",
                  DefaultDimension."Dimension Value Code");
            RecordRef2.CLOSE;
           UNTIL DefaultDimension.NEXT = 0;
           RecordRefer.CLOSE;
         END;
        END;

        23:  //For Vendor
        BEGIN
         IF Vend.GET(RecCode) THEN BEGIN
           SelectValue := 'Vendor';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",23);
           DefaultDimension.SETFILTER("No.",RecCode);
           IF DefaultDimension.FINDSET THEN REPEAT
             RecordRef2.OPEN(23);
              DimMgtProcessing.ChangeSourceDimforMasters(
                 RecordRef2, RecordRef2.NUMBER, RecCode, 010101D, WORKDATE,DefaultDimension."Dimension Code",
                  DefaultDimension."Dimension Value Code");
             RecordRef2.CLOSE;
           UNTIL DefaultDimension.NEXT = 0;
           RecordRefer.CLOSE;
         END;
        END;
       END;
       END;
      // MESSAGE(Text000001,SelectValue,SelectCode);
    END;

    LOCAL PROCEDURE "--SW CAN Optimization --"@1000000017();
    BEGIN
    END;

    PROCEDURE UpdateItmDimSW@1000000019(VAR RecordRefer@1000000009 : RecordRef;VAR RecCode@1000000008 : Code[20];StartDate@1000000013 : Date;EndDate@1000000014 : Date);
    VAR
      SelectCode@1000000001 : Code[20];
      Text000001@1000000002 : TextConst 'ENU=Dimension Values updated for %1, No. %2';
      DefaultDimension@1000000006 : Record 352;
      Item@1000000003 : Record 27;
      Vend@1000000004 : Record 23;
      Cust@1000000005 : Record 18;
      SelectValue@1000000007 : Code[50];
      RecordRef2@1000000000 : RecordRef;
      "--SW Locals--"@1000000010 : Integer;
      DimArray@1000000011 : ARRAY [20,3] OF Code[20];
      x@1000000012 : Integer;
    BEGIN
      //VLDM4.15 CAN_MY ++
      DialogMSG.OPEN('##Updating Dimension......');
      SelectCode := RecCode;
      IF RecordRefer.NUMBER IN [18,23,27] THEN BEGIN
       CASE RecordRefer.NUMBER OF
        18:   //For Customer
        BEGIN
         IF Cust.GET(SelectCode) THEN BEGIN
           SelectValue := 'Customer';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",18);
           DefaultDimension.SETFILTER("No.",SelectCode);
           CLEAR(DimArray);
           x := 8;
           //Storing all dimensions
           IF DefaultDimension.FINDSET THEN REPEAT
             i := DimMgtProcessing.GlobalDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN
               i := DimMgtProcessing.ExtendedDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN BEGIN
               x += 1;
               i := x;
             END;
             DimArray[i,1] := DefaultDimension."Dimension Code";
             DimArray[i,2] := DefaultDimension."Dimension Value Code";
           UNTIL DefaultDimension.NEXT = 0;

           RecordRef2.OPEN(18);
           DimMgtProcessing.ChangeSourceDimforMastersSW(
             RecordRef2, RecordRef2.NUMBER, SelectCode, StartDate, EndDate,DefaultDimension."Dimension Code",
             DefaultDimension."Dimension Value Code",DimArray);
           RecordRef2.CLOSE;
           RecordRefer.CLOSE;
         END;
        END;

        23:  //For Vendor
        BEGIN
         IF Vend.GET(SelectCode) THEN BEGIN
           SelectValue := 'Vendor';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",23);
           DefaultDimension.SETFILTER("No.",SelectCode);
           CLEAR(DimArray);
           x := 8;
           IF DefaultDimension.FINDSET THEN REPEAT
             i := DimMgtProcessing.GlobalDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN
               i := DimMgtProcessing.ExtendedDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN BEGIN
               x += 1;
               i := x;
             END;
             DimArray[i,1] := DefaultDimension."Dimension Code";
             DimArray[i,2] := DefaultDimension."Dimension Value Code";
           UNTIL DefaultDimension.NEXT = 0;

           RecordRef2.OPEN(23);
           DimMgtProcessing.ChangeSourceDimforMastersSW(
             RecordRef2, RecordRef2.NUMBER, SelectCode, StartDate, EndDate,DefaultDimension."Dimension Code",
             DefaultDimension."Dimension Value Code",DimArray);
           RecordRef2.CLOSE;
           RecordRefer.CLOSE;
         END;
        END;
           27: //For Item
        BEGIN
         IF Item.GET(SelectCode) THEN BEGIN
           SelectValue := 'Item';
           DefaultDimension.RESET;
           DefaultDimension.SETRANGE("Table ID",27);
           DefaultDimension.SETFILTER("No.",SelectCode);
           CLEAR(DimArray);
           x := 8;
           IF DefaultDimension.FINDSET THEN REPEAT
             i := DimMgtProcessing.GlobalDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN
               i := DimMgtProcessing.ExtendedDimNo(DefaultDimension."Dimension Code");
             IF i = 0 THEN BEGIN
               x += 1;
               i := x;
             END;
             DimArray[i,1] := DefaultDimension."Dimension Code";
             DimArray[i,2] := DefaultDimension."Dimension Value Code";
           UNTIL DefaultDimension.NEXT = 0;

           RecordRef2.OPEN(27);
           DimMgtProcessing.ChangeSourceDimforMastersSW(
             RecordRef2, RecordRef2.NUMBER, SelectCode, StartDate, EndDate,DefaultDimension."Dimension Code",
             DefaultDimension."Dimension Value Code",DimArray);
           RecordRef2.CLOSE;
           RecordRefer.CLOSE;
         END;
        END;
       END;
      END;
      DialogMSG.CLOSE;
      //VLDM4.15 CAN_MY --
    END;

    BEGIN
    {
      Vertical Leap - Dimension Management
      VLDM1.00   : Added code in BatchNavigateChangeDim function.
      VLDM4.04   : 29-04-2015 Added ChangeGLDimension function to update single GL Entry line
      VLDM4.06   : 04/12/2015 Fixed the bug related update line dimension
      VLDM4.07   : Code modification for dimension change in G/L Entry
      VLDM4.08   : Code modification for allowing user to update dimension if the GL entries posted are not consolidated.
      VLDM4.09   : 07-March-2016 Added funtionality to update Dimension values and "Document Line No."
                   for all the ledger related Posted Document
      VLDM4.10   : 04-April-2016 - 1. Updated permission set for tables which will be modified by the codeunit.
                                   2. Included transfer order functionality.
                                   3. Included Auto Purge dimension management history.
      VLDM4.10.1 : 07-July-2016 Added functionality to update Dimension values for different General Product Posting Group

      VLDM4.11   : Added budget related functionality to update G/L budget dimension entries
      VLDM4.11   : Added code in "GetRecRef" function to support undo dimension functionality of G/L Budget entry
      VLDM4.11   : Added new function ChangeJobLedgerDimension to change the Job Ledger Entries "change dimension" and "batch change dimension"
      VLDM4.11++ : Added code to handle single line dimension error in sales and purchase order
      VLDM4.11   : Modified SetView code to support multilingual functionality
      VLDM4.12   : Added code for Service Module
      VLDM4.13   : Code modified for transfer line
    }
    END.
  }
}

