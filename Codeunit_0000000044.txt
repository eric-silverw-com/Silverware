OBJECT Codeunit 44 ReportManagement
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      NotSupportedErr@1000 : TextConst 'ENU=The value is not supported.;ESM=El valor no es compatible.;FRC=La valeur n''est pas prise en charge.;ENC=The value is not supported.';

    [EventSubscriber(Codeunit,2000000005,GetPrinterName)]
    LOCAL PROCEDURE GetPrinterName@1(ReportID@1000 : Integer;VAR PrinterName@1001 : Text[250]);
    VAR
      PrinterSelection@1002 : Record 78;
    BEGIN
      CLEAR(PrinterSelection);

      IF PrinterSelection.READPERMISSION THEN
        IF NOT PrinterSelection.GET(USERID,ReportID) THEN
          IF NOT PrinterSelection.GET('',ReportID) THEN
            IF NOT PrinterSelection.GET(USERID,0) THEN
              IF PrinterSelection.GET('',0) THEN;
      PrinterName := PrinterSelection."Printer Name";
      OnAfterGetPrinterName(ReportID,PrinterName)
    END;

    [EventSubscriber(Codeunit,2000000005,GetPaperTrayForReport)]
    LOCAL PROCEDURE GetPaperTrayForReport@7(ReportID@1000 : Integer;VAR FirstPage@1001 : Integer;VAR DefaultPage@1002 : Integer;VAR LastPage@1003 : Integer);
    BEGIN
      OnAfterGetPaperTrayForReport(ReportID,FirstPage,DefaultPage,LastPage)
    END;

    [EventSubscriber(Codeunit,2000000005,HasCustomLayout)]
    LOCAL PROCEDURE HasCustomLayout@2(ObjectType@1000 : 'Report,Page';ObjectID@1001 : Integer;VAR LayoutType@1002 : 'None,RDLC,Word');
    VAR
      ReportLayoutSelection@1003 : Record 9651;
    BEGIN
      IF ObjectType <> ObjectType::Report THEN
        ERROR(NotSupportedErr);

      LayoutType := ReportLayoutSelection.HasCustomLayout(ObjectID);
      OnAfterHasCustomLayout(ObjectType,ObjectID,LayoutType);
    END;

    [EventSubscriber(Codeunit,2000000005,MergeDocument)]
    LOCAL PROCEDURE MergeDocument@3(ObjectType@1000 : 'Report,Page';ObjectID@1001 : Integer;ReportAction@1002 : 'SaveAsPdf,SaveAsWord,SaveAsExcel,Preview,Print,SaveAsHtml';XmlData@1003 : InStream;FileName@1004 : Text);
    VAR
      DocumentReportMgt@1005 : Codeunit 9651;
    BEGIN
      IF ObjectType <> ObjectType::Report THEN
        ERROR(NotSupportedErr);

      DocumentReportMgt.MergeWordLayout(ObjectID,ReportAction,XmlData,FileName);
    END;

    [EventSubscriber(Codeunit,2000000005,ReportGetCustomRdlc)]
    LOCAL PROCEDURE ReportGetCustomRdlc@4(ReportId@1000 : Integer;VAR RdlcText@1001 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
    BEGIN
      RdlcText := CustomReportLayout.GetCustomRdlc(ReportId);
    END;

    [EventSubscriber(Codeunit,2000000005,ScheduleReport)]
    LOCAL PROCEDURE ScheduleReport@5(ReportId@1000 : Integer;RequestPageXml@1001 : Text;VAR Scheduled@1002 : Boolean);
    VAR
      ScheduleAReport@1003 : Page 682;
    BEGIN
      Scheduled := ScheduleAReport.ScheduleAReport(ReportId,RequestPageXml);
    END;

    [EventSubscriber(Codeunit,2000000005,SubstituteReport)]
    LOCAL PROCEDURE SubstituteReport@11(ReportId@1000 : Integer;RunMode@1001 : 'Normal,ParametersOnly,Execute,Print,SaveAs,RunModal';RequestPageXml@1002 : Text;RecordRef@1003 : RecordRef;VAR NewReportId@1004 : Integer);
    BEGIN
      OnAfterSubstituteReport(ReportId,NewReportId);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterGetPrinterName@6(ReportID@1000 : Integer;VAR PrinterName@1001 : Text[250]);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterHasCustomLayout@8(ObjectType@1002 : 'Report,Page';ObjectID@1001 : Integer;VAR LayoutType@1000 : 'None,RDLC,Word');
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterGetPaperTrayForReport@9(ReportID@1000 : Integer;VAR FirstPage@1001 : Integer;VAR DefaultPage@1002 : Integer;VAR LastPage@1003 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterSubstituteReport@14(ReportId@1000 : Integer;VAR NewReportId@1001 : Integer);
    BEGIN
    END;

    BEGIN
    END.
  }
}

