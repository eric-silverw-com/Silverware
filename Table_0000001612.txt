OBJECT Table 1612 Office Admin. Credentials
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:33 PM;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 1261=rimd,
                TableData 1612=r;
    OnInsert=BEGIN
               IF Endpoint = '' THEN
                 VALIDATE(Endpoint,DefaultEndpoint);
             END;

    OnModify=BEGIN
               IF Endpoint = '' THEN
                 VALIDATE(Endpoint,DefaultEndpoint);
             END;

    CaptionML=ENU=Office Admin. Credentials;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Email               ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=ENU=Email;
                                                   NotBlank=Yes }
    { 3   ;   ;Password            ;Text250       ;ExtendedDatatype=Masked;
                                                   CaptionML=ENU=Password;
                                                   NotBlank=Yes }
    { 4   ;   ;Endpoint            ;Text250       ;CaptionML=ENU=Endpoint }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE DefaultEndpoint@1() : Text[250];
    BEGIN
      EXIT('https://ps.outlook.com/powershell-liveid');
    END;

    PROCEDURE SavePassword@2(PasswordText@1000 : Text);
    VAR
      ServicePassword@1001 : Record 1261;
      PasswordKeyGUID@1002 : GUID;
    BEGIN
      PasswordText := DELCHR(PasswordText,'=',' ');
      IF Password <> '' THEN
        EVALUATE(PasswordKeyGUID,Password);
      IF ISNULLGUID(PasswordKeyGUID) OR NOT ServicePassword.GET(PasswordKeyGUID) THEN BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.INSERT(TRUE);
        Password := ServicePassword.Key;
        MODIFY;
      END ELSE BEGIN
        ServicePassword.SavePassword(PasswordText);
        ServicePassword.MODIFY;
      END;
    END;

    PROCEDURE GetPassword@3() : Text;
    VAR
      ServicePassword@1001 : Record 1261;
      PasswordKeyGUID@1000 : GUID;
    BEGIN
      IF Password <> '' THEN
        EVALUATE(PasswordKeyGUID,Password);
      IF NOT ISNULLGUID(PasswordKeyGUID) THEN
        IF ServicePassword.GET(PasswordKeyGUID) THEN
          EXIT(ServicePassword.GetPassword);
    END;

    BEGIN
    END.
  }
}

