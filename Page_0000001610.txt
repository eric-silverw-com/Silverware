OBJECT Page 1610 Office Add-in Management
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:41 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Office Add-in Management;
    ApplicationArea=#Basic,#Suite;
    InsertAllowed=No;
    SourceTable=Table1610;
    PageType=List;
    UsageCategory=Administration;
    OnInit=VAR
             AddinManifestManagement@1001 : Codeunit 1652;
           BEGIN
             IF ISEMPTY THEN
               AddinManifestManagement.CreateDefaultAddins(Rec);
           END;

    ActionList=ACTIONS
    {
      { 17      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=Upload Default Add-in Manifest;
                      CaptionML=[@@@=Action - Uploads a default XML manifest definition;
                                 ENU=Upload Default Add-in Manifest];
                      ToolTipML=ENU=Import an XML manifest file to the add-in. The manifest determines how an add-in is activated in Office applications where it is deployed.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 UploadManifest;
                               END;
                                }
      { 18      ;1   ;Action    ;
                      Name=Download Add-in Manifest;
                      CaptionML=[@@@=Action - downloads the XML manifest document for the add-in;
                                 ENU=Download Add-in Manifest];
                      ToolTipML=ENU=Export the add-in's manifest to an XML file. You can then modify the manifest and upload it again.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CheckManifest(Rec);
                                 AddinManifestManagement.DownloadManifestToClient(Rec,STRSUBSTNO('%1.xml',Name));
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=Deploy Add-in;
                      CaptionML=[@@@=Action - deploys the XML manifest document for the add-in to an O365 account or tenant;
                                 ENU=Deploy Add-in];
                      ToolTipML=ENU=Deploy the add-in to the Office application so that it can be enabled and used by end users.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ProgressWindow@1000 : Dialog;
                               BEGIN
                                 ProgressWindow.OPEN(ProgressDialogTemplateMsg);
                                 ProgressWindow.UPDATE(1,ConnectingMsg);
                                 ProgressWindow.UPDATE(2,3000);

                                 AddinDeploymentHelper.InitializeAndValidate;

                                 ProgressWindow.UPDATE(1,STRSUBSTNO(DeployingMsg,Name));
                                 ProgressWindow.UPDATE(2,6000);

                                 DeployManifest(Rec);
                                 MESSAGE(AppInstalledMsg);

                                 ProgressWindow.CLOSE;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=Deploy All Add-ins;
                      CaptionML=[@@@=Action - deploys the XML manifest document for all add-ins to an O365 account or tenant;
                                 ENU=Deploy All Add-ins];
                      ToolTipML=ENU=Deploy all the add-in to Office application so that they can be enabled and used by end users.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=UpdateXML;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 OfficeAddin@1000 : Record 1610;
                                 ProgressWindow@1001 : Dialog;
                               BEGIN
                                 ProgressWindow.OPEN(ProgressDialogTemplateMsg);
                                 ProgressWindow.UPDATE(1,ConnectingMsg);
                                 ProgressWindow.UPDATE(2,3000);

                                 AddinDeploymentHelper.InitializeAndValidate;

                                 IF OfficeAddin.GetAddins THEN
                                   REPEAT
                                     ProgressWindow.UPDATE(1,STRSUBSTNO(DeployingMsg,Name));
                                     ProgressWindow.UPDATE(2,6000);
                                     DeployManifest(OfficeAddin);
                                   UNTIL OfficeAddin.NEXT = 0;
                                 MESSAGE(AppsInstalledMsg);

                                 ProgressWindow.CLOSE;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=Remove Add-in;
                      CaptionML=[@@@=Action - to remove an add-in from O365/Exchange;
                                 ENU=Remove Add-in];
                      ToolTipML=ENU=Remove a deployed add-in from the Office application.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=DeleteXML;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AddinDeploymentHelper.RemoveApp(Rec);
                                 CLEAR("Deployment Date");
                                 CurrPage.UPDATE(TRUE);
                                 MESSAGE(AppRemovedMsg);
                               END;
                                }
      { 13      ;1   ;Action    ;
                      Name=Reset Default Add-ins;
                      CaptionML=ENU=Reset Default Add-ins;
                      ToolTipML=ENU=Reset the original add-ins to their default state.;
                      ApplicationArea=#Basic,#Suite;
                      Image=Restore;
                      OnAction=BEGIN
                                 IF CONFIRM(ResetWarningQst) THEN
                                   AddinManifestManagement.CreateDefaultAddins(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU="Specifies the application that is being added. ";
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Application ID";
                Visible=false }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the name of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the version of the record;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Version;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the codeunit where the Office add-in is defined for deployment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Manifest Codeunit" }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date that add-in was deployed to Office applications. Users will not be able to the add-in until it is deployed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Deployment Date";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      UploadManifestTxt@1001 : TextConst 'ENU=Upload default manifest';
      AddinDeploymentHelper@1003 : Codeunit 1640;
      MissingManifestErr@1004 : TextConst '@@@="%1=The name of an office add-in.";ENU=Cannot find a default manifest for add-in %1. To upload an XML file with the manifest, choose Upload Default Add-in Manifest.';
      OverwriteManifestQst@1000 : TextConst '@@@=%1: An Office Add-in name.;ENU=The uploaded manifest matches the existing item with name %1, would you like to overwrite it with the values from the uploaded manifest?';
      AppInstalledMsg@1007 : TextConst 'ENU=The application deployed correctly to Exchange.';
      AppsInstalledMsg@1002 : TextConst 'ENU=The applications deployed correctly to Exchange.';
      AppRemovedMsg@1005 : TextConst 'ENU=The application was removed from Exchange.';
      AddinManifestManagement@1006 : Codeunit 1652;
      ProgressDialogTemplateMsg@1008 : TextConst '@@@={Locked};ENU=#1##########\@2@@@@@@@@@@';
      ConnectingMsg@1009 : TextConst '@@@=Exchange in this context is the Exchange email service.;ENU=Connecting to Exchange.';
      DeployingMsg@1010 : TextConst '@@@=%1 is the name of an Office Add-In.;ENU=Deploying %1.';
      ResetWarningQst@1011 : TextConst 'ENU=This will restore the original add-in manifest for each of the default add-ins. Are you sure you want to continue?';

    LOCAL PROCEDURE CheckManifest@1005(VAR OfficeAddin@1000 : Record 1610);
    BEGIN
      IF NOT OfficeAddin."Default Manifest".HASVALUE AND (OfficeAddin."Manifest Codeunit" = 0) THEN
        ERROR(MissingManifestErr,OfficeAddin.Name);
    END;

    LOCAL PROCEDURE UploadManifest@1051();
    VAR
      OfficeAddin@1003 : Record 1610;
      TempOfficeAddin@1002 : TEMPORARY Record 1610;
      FileManagement@1001 : Codeunit 419;
      ManifestLocation@1000 : Text;
    BEGIN
      // Insert into a temp record so we can do some comparisons
      TempOfficeAddin.INIT;
      TempOfficeAddin.INSERT;

      ManifestLocation := FileManagement.UploadFile(UploadManifestTxt,'*.xml');

      // If the selected record is new, use that one - otherwise create a new one
      AddinManifestManagement.UploadDefaultManifest(TempOfficeAddin,ManifestLocation);

      // If the uploaded item already exists, overwrite, otherwise insert a new one.
      IF NOT OfficeAddin.GET(TempOfficeAddin."Application ID") THEN BEGIN
        OfficeAddin.COPY(TempOfficeAddin);
        OfficeAddin.INSERT;
      END ELSE
        IF DIALOG.CONFIRM(OverwriteManifestQst,TRUE,OfficeAddin.Name) THEN BEGIN
          // Persist codeunit and company values when overwriting
          TempOfficeAddin."Manifest Codeunit" := OfficeAddin."Manifest Codeunit";
          OfficeAddin.COPY(TempOfficeAddin);
          OfficeAddin.MODIFY;
        END;
    END;

    LOCAL PROCEDURE DeployManifest@1003(VAR OfficeAddIn@1000 : Record 1610);
    BEGIN
      CheckManifest(OfficeAddIn);

      AddinDeploymentHelper.DeployManifest(OfficeAddIn);
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

