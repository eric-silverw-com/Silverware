OBJECT Codeunit 6086324 Expense - Send to Expense User
{
  OBJECT-PROPERTIES
  {
    Date=10/23/17;
    Time=[ 1:00:00 AM];
    Version List=EMW16.00.10.2.60.02;
  }
  PROPERTIES
  {
    TableNo=6086320;
    Permissions=TableData 6086320=rm;
    OnRun=BEGIN
            TESTFIELD(Status,Status::Open);
            "Transfer Attachments to CO" := TRUE;
            Code(Rec,TRUE,FALSE);
          END;

  }
  CODE
  {
    VAR
      EMOnlineMgt@1160040000 : Codeunit 6086305;
      SendExpenseWrongStatusErr@1160040002 : TextConst 'ENU=You cannot send Expense with status ''%1'' to expense user.';
      SendingToExpUserStatus@1160040001 : TextConst 'ENU=Sending Expense to the Expense User...';
      BatchMode@1160040003 : Boolean;
      RecordNotInserted@1160040004 : Boolean;

    LOCAL PROCEDURE Code@1160040020(VAR Expense@1160040000 : Record 6086320;Force@1160040004 : Boolean;UpdateRef@1160040002 : Boolean);
    VAR
      Window@1160040003 : Dialog;
      EmptyGuid@1160040001 : GUID;
    BEGIN
      IF (NOT Force) AND (Expense.Status <> Expense.Status::"Pending Expense User") THEN
        EXIT;

      IF Expense.Status = Expense.Status::"Pending Approval" THEN
        ERROR(SendExpenseWrongStatusErr,FORMAT(Expense.Status));

      Expense.CheckInboxAndThrowError;

      IF GUIALLOWED AND NOT BatchMode THEN
        Window.OPEN(SendingToExpUserStatus);

      Expense.SetSkipSendToExpUser(TRUE);

      IF Expense."Expense GUID" = EmptyGuid THEN BEGIN
        Expense."Expense GUID" := EMOnlineMgt.CreateNewExpense;
        IF NOT UpdateRef THEN
          Expense.MODIFY(TRUE);
      END;

      Expense."Continia Online Version No." := EMOnlineMgt.UpdateExpense(Expense);

      IF Expense.Status <> Expense.Status::Released THEN BEGIN
        Expense."Transfer Attachments to CO" := FALSE;
        IF Expense."Expense Completed" THEN
          Expense."Expense Completed" := FALSE;
        Expense.VALIDATE(Status,Expense.Status::"Pending Expense User");
        IF NOT UpdateRef THEN
          Expense.MODIFY(TRUE);
      END;

      //SHADOW NEEDS TO KEEP THE VERSION NO
      IF Expense.Status = Expense.Status::Released THEN
        Expense.MODIFY;

      Expense.SetSkipSendToExpUser(FALSE);
      IF GUIALLOWED AND NOT BatchMode THEN
        Window.CLOSE;
    END;

    PROCEDURE UpdateWithFiles@1160040002(VAR Expense@1160040000 : Record 6086320);
    BEGIN
      Expense."Transfer Attachments to CO" := TRUE;
      Code(Expense,FALSE,FALSE);
    END;

    PROCEDURE UpdateWithoutFiles@1160040003(VAR Expense@1160040000 : Record 6086320);
    BEGIN
      Expense."Transfer Attachments to CO" := FALSE;
      Code(Expense,FALSE,FALSE);
    END;

    PROCEDURE SendReleaseNotification@1160040000(VAR Expense@1160040000 : Record 6086320);
    BEGIN
      Expense."Transfer Attachments to CO" := FALSE;
      Code(Expense,TRUE,FALSE);
    END;

    PROCEDURE SetBatchMode@1160040001(NewbatchMode@1160040000 : Boolean);
    BEGIN
      BatchMode := NewbatchMode;
    END;

    PROCEDURE UpdateRefWithoutFiles@1160040004(VAR Expense@1160040000 : Record 6086320);
    BEGIN
      Expense."Transfer Attachments to CO" := FALSE;
      Code(Expense,TRUE,TRUE);
    END;

    BEGIN
    END.
  }
}

