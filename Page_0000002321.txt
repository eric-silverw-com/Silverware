OBJECT Page 2321 BC O365 Payment Method Card
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:48 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Payment Method;
    LinksAllowed=No;
    PageType=Card;
    OnOpenPage=BEGIN
                 PaymentMethodCode := PaymentMethod.Code;
                 PaymentMethodDescription := COPYSTR(PaymentMethod.GetDescriptionInCurrentLanguage,1,MAXSTRLEN(PaymentMethodDescription));
                 IF PaymentMethodCode = '' THEN
                   CurrPage.CAPTION := NewPaymentMethodTxt;
               END;

    OnQueryClosePage=VAR
                       PaymentMethodTranslation@1002 : Record 466;
                       Language@1003 : Record 8;
                       LocalPaymentMethod@1001 : Record 289;
                       O365SalesInitialSetup@1004 : Record 2110;
                     BEGIN
                       IF CloseAction = ACTION::LookupCancel THEN
                         EXIT;

                       IF PaymentMethodCode = '' THEN
                         ERROR(MustSpecifyCodeErr);

                       // Clean up translation if description changed
                       IF (PaymentMethod.Description <> PaymentMethodDescription) AND
                          (PaymentMethod.Code <> '')
                       THEN BEGIN
                         IF PaymentMethodTranslation.GET(PaymentMethod.Code,Language.GetUserLanguage) THEN
                           PaymentMethodTranslation.DELETE(TRUE);
                       END;

                       // Handle the code
                       IF NOT PaymentMethod.GET(PaymentMethod.Code) THEN BEGIN
                         IF LocalPaymentMethod.GET(PaymentMethodCode) THEN
                           ERROR(PaymentMethodAlreadyExistErr);
                         PaymentMethod.VALIDATE(Code,PaymentMethodCode);
                         PaymentMethod.VALIDATE("Use for Invoicing",TRUE);
                         PaymentMethod.INSERT(TRUE);
                       END ELSE
                         IF PaymentMethod.Code <> PaymentMethodCode THEN BEGIN
                           IF LocalPaymentMethod.GET(PaymentMethodCode) THEN
                             ERROR(PaymentMethodAlreadyExistErr);
                           PaymentMethod.RENAME(PaymentMethodCode);
                           IF O365SalesInitialSetup.GET AND (O365SalesInitialSetup."Default Payment Method Code" = PaymentMethodCode) THEN
                             O365SalesInitialSetup.UpdateDefaultPaymentMethod(PaymentMethodCode);
                         END;

                       // Handle the description
                       IF PaymentMethodDescription <> PaymentMethod.Description THEN BEGIN
                         PaymentMethodTranslation.SETRANGE("Payment Method Code",PaymentMethod.Code);
                         PaymentMethodTranslation.DELETEALL;
                         PaymentMethod.VALIDATE(Description,PaymentMethodDescription);
                         PaymentMethod.MODIFY(TRUE);
                       END;
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Specify how the customer paid you. }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Short name;
                ToolTipML=ENU=Specifies the short name of the payment method.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=PaymentMethodCode }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Description;
                ToolTipML=ENU=Specifies a a description of the payment method.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=PaymentMethodDescription }

  }
  CODE
  {
    VAR
      PaymentMethod@1001 : Record 289;
      PaymentMethodDescription@1000 : Text[50];
      PaymentMethodCode@1003 : Code[10];
      PaymentMethodAlreadyExistErr@1005 : TextConst 'ENU=You already have a payment method with this name. Please use a different name.';
      MustSpecifyCodeErr@1007 : TextConst 'ENU=You must specify a short name for this payment method.';
      NewPaymentMethodTxt@1002 : TextConst 'ENU=New payment method.';

    PROCEDURE SetPaymentMethod@1(NewPaymentMethod@1000 : Record 289);
    BEGIN
      PaymentMethod := NewPaymentMethod;
    END;

    BEGIN
    END.
  }
}

