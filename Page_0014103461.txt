OBJECT Page 14103461 EasyPDF Document Card
{
  OBJECT-PROPERTIES
  {
    Date=03/24/18;
    Time=[ 9:08:43 PM];
    Modified=Yes;
    Version List=EZP2.33.00;
  }
  PROPERTIES
  {
    CaptionML=ENU=Easy PDF Document Card;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table14103461;
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Report,E-Mail,FAX;
    OnInit=BEGIN

             PrinterSettingsVisible := STRPOS(LOWERCASE(EasyPDFPrinter.Identity()), 'default') <> 1;
           END;

    OnOpenPage=BEGIN

                 EasyPDF.GetSetup(EasyPDFSetup);

                 BatchOnPostVisible :=
                   (Code IN [
                     'POSTED SALES INVOICE',
                     'POSTED SALES CREDIT MEMO',
                     'POSTED SALES SHIPMENT',
                     'POSTED SERVICE CREDIT MEMO',
                     'POSTED SERVICE INVOICE',
                     'POSTED SERVICE SHIPMENT',
                     'ISSUED REMINDER',
                     'ISSUED FINANCE CHARGE MEMO',
                     'REMITTANCE ADVICE'
                     ]);

                 SendOnPostVisible :=
                   (Code IN [
                     'POSTED SALES INVOICE',
                     'POSTED SALES CREDIT MEMO',
                     'POSTED SALES SHIPMENT',
                     'POSTED SERVICE CREDIT MEMO',
                     'POSTED SERVICE INVOICE',
                     'POSTED SERVICE SHIPMENT',
                     'ISSUED REMINDER',
                     'ISSUED FINANCE CHARGE MEMO'
                     ]);

                 IF BatchOnPostVisible THEN
                   BatchOnPostEnabled := (NOT SendOnPost);
                 IF SendOnPostVisible THEN
                   SendOnPostEnabled := (NOT BatchOnPost);

                 ShiptoControlVisible :=
                   (Code IN [
                     'POSTED PURCHASE INVOICE',
                     'POSTED PURCHASE RECEIPT',
                     'POSTED SALES CREDIT MEMO',
                     'POSTED SALES INVOICE',
                     'POSTED SALES RETURN RECEIPT',
                     'POSTED SALES SHIPMENT',
                     'POSTED SERVICE CREDIT MEMO',
                     'POSTED SERVICE INVOICE',
                     'POSTED SERVICE SHIPMENT',
                     'PURCHASE ORDER',
                     'PURCHASE QUOTE',
                     'SALES ORDER',
                     'SALES QUOTE',
                     'SALES RETURN ORDER',
                     'SERVICE ORDER',
                     'SERVICE QUOTE'
                     ]);

                 SendToCustomerTypeVisible :=
                   (Code IN [
                     'POSTED SALES CREDIT MEMO',
                     'POSTED SALES INVOICE',
                     'POSTED SALES RETURN RECEIPT',
                     'POSTED SALES SHIPMENT',
                     'SALES ORDER',
                     'SALES QUOTE',
                     'SALES RETURN ORDER'
                     ]);

                 SendToVendorTypeVisible :=
                   (Code IN [
                     'POSTED PURCHASE INVOICE',
                     'POSTED PURCHASE RECEIPT',
                     'PURCHASE ORDER',
                     'PURCHASE QUOTE'
                     ]);

                 GenerateBatchReportIdVisible :=
                   (Code IN [
                     'CUSTOMER STATEMENT'
                     ]);
               END;

    OnAfterGetCurrRecord=BEGIN

                           IF NOT EasyPDFMessageTemplateEMail.GET("E-Mail Message Template") THEN
                             FindMessageTemplate(EasyPDFMessageTemplateEMail."Message Type"::EMAIL, "E-Mail Message Language Code", EasyPDFMessageTemplateEMail, FALSE);

                           IF NOT EasyPDFMessageTemplateFAX.GET("FAX Message Template") THEN
                             FindMessageTemplate(EasyPDFMessageTemplateFAX."Message Type"::FAX, "FAX Message Language Code", EasyPDFMessageTemplateFAX, FALSE);

                           "E-Mail Message Template" := EasyPDFMessageTemplateEMail."Entry No.";
                           "E-Mail Message Language Code" := EasyPDFMessageTemplateEMail."Language Code";

                           "FAX Message Template" := EasyPDFMessageTemplateFAX."Entry No.";
                           "FAX Message Language Code" := EasyPDFMessageTemplateFAX."Language Code";

                           IF EMailAddinInstantiated THEN
                             EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);

                           IF FAXAddinInstantiated THEN
                             EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);

                           EMailAddinEnabled := EMailAddinInstantiated AND ("E-Mail Message Template" <> 0);
                           FAXAddinEnabled := FAXAddinInstantiated AND ("FAX Message Template" <> 0);
                           EMailBodySource := EasyPDFMessageTemplateEMail."Body Source";
                           EMailBodyReportId := EasyPDFMessageTemplateEMail."Report ID";

                           IF EMailBodySource <> EasyPDFMessageTemplateEMail."Body Source"::"Easy PDF Message Template" THEN
                           BEGIN
                             EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Html;
                             EasyPDFMessageTemplateEMail.Name := ReplaceString(EasyPDFMessageTemplateEMail.Name, 'TEXT', 'HTML');
                           END;

                           EMailBodyFormat := EasyPDFMessageTemplateEMail.Format;

                           CALCFIELDS(AdditionalAttachments);
                         END;

    ActionList=ACTIONS
    {
      { 1000000016;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000029;1 ;Action    ;
                      Name=NewEMailMessageTemplate;
                      CaptionML=ENU=New E-Mail Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category4;
                      OnAction=BEGIN

                                 // Allocate a new (empty) template
                                 CLEAR(EasyPDFMessageTemplateEMail);
                                 EasyPDFMessageTemplateEMail.INIT;
                                 EasyPDFMessageTemplateEMail.Code := Code;
                                 EasyPDFMessageTemplateEMail."User ID" := "User ID";
                                 EasyPDFMessageTemplateEMail."Message Type" := EasyPDFMessageTemplateEMail."Message Type"::EMAIL;
                                 EasyPDFMessageTemplateEMail."Language Code" := "E-Mail Message Language Code";
                                 EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Text;
                                 EasyPDFMessageTemplateEMail.Name := Rec.Description + ' ' + UPPERCASE(FORMAT(EasyPDFMessageTemplateEMail.Format)) + ' ' + FORMAT(EasyPDFMessageTemplateEMail."Language Code");
                                 EasyPDFMessageTemplateEMail.Subject := Rec.Filename;
                                 EasyPDFMessageTemplateEMail.INSERT;

                                 // Point this document at it
                                 "E-Mail Message Template" := EasyPDFMessageTemplateEMail."Entry No.";

                                 // Update the addin with the new template data
                                 EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                               END;
                                }
      { 1000000043;1 ;Action    ;
                      Name=ImportEMailMessageTemplate;
                      CaptionML=ENU=Import E-Mail Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 Template@1000000000 : DotNet "'EasyPDF, Version=2.2.0.0, Culture=neutral, PublicKeyToken=2139766b2d013dc8'.EasyPDF.MessageTemplate";
                                 FM@1000000002 : Codeunit 419;
                                 ClientFilePath@1000000003 : Text;
                                 ServerFilePath@1000000004 : Text;
                               BEGIN

                                 // Open dialog to select the template
                                 ClientFilePath := FM.OpenFileDialog(TEXT003, '', TEXT004);
                                 IF STRLEN(ClientFilePath) = 0 THEN
                                   EXIT;

                                 // Copy the file to the server
                                 ServerFilePath := EasyPDF.CopyToServerTemp(ClientFilePath);
                                 IF STRLEN(ServerFilePath) = 0 THEN
                                   EXIT;

                                 // Load the template (dot net)
                                 Template := Template.MessageTemplate();
                                 IF NOT Template.ImportFile(ServerFilePath) THEN
                                 BEGIN
                                   ERASE(ServerFilePath);
                                   ERROR(TEXT005);
                                 END;

                                 // Set the fields

                                 // Allocate a new (empty) template
                                 CLEAR(EasyPDFMessageTemplateEMail);
                                 EasyPDFMessageTemplateEMail.INIT;
                                 EasyPDFMessageTemplateEMail.GetTemplateData(Template);
                                 EasyPDFMessageTemplateEMail.Code := Code;
                                 EasyPDFMessageTemplateEMail."User ID" := "User ID";
                                 EasyPDFMessageTemplateEMail."Message Type" := EasyPDFMessageTemplateEMail."Message Type"::EMAIL;
                                 EasyPDFMessageTemplateEMail."Language Code" := "E-Mail Message Language Code";
                                 EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Text;
                                 IF STRPOS(LOWERCASE(ClientFilePath), '.htm') > 0 THEN
                                   EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Html;
                                 EasyPDFMessageTemplateEMail.Name := Rec.Description + ' ' + UPPERCASE(FORMAT(EasyPDFMessageTemplateEMail.Format)) + ' ' + FORMAT(EasyPDFMessageTemplateEMail."Language Code");
                                 EasyPDFMessageTemplateEMail.Subject := Rec.Filename;
                                 EasyPDFMessageTemplateEMail.MODIFY;

                                 // Point this document at it
                                 "E-Mail Message Template" := EasyPDFMessageTemplateEMail."Entry No.";

                                 // Update the addin with the new template data
                                 EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);

                                 // Remove the temporary file
                                 ERASE(ServerFilePath);
                               END;
                                }
      { 1000000030;1 ;Action    ;
                      Name=DeleteEMailMessageTemplate;
                      CaptionML=ENU=Delete E-Mail Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 TEXT001@1000000000 : TextConst 'ENU=Delete E-Mail Message Template?';
                               BEGIN

                                 IF EasyPDFMessageTemplateEMail."Entry No." <> 0 THEN BEGIN

                                   // Confirm delete
                                   IF NOT CONFIRM(TEXT001) THEN
                                     EXIT;

                                   // Delete the current message template
                                   EasyPDFMessageTemplateEMail.DELETE;

                                   // Get an empty one
                                   "E-Mail Message Template" := 0;
                                   CLEAR(EasyPDFMessageTemplateEMail);
                                   EasyPDFMessageTemplateEMail.INIT;
                                   EasyPDFMessageTemplateEMail.Code := Code;
                                   EasyPDFMessageTemplateEMail."User ID" := "User ID";
                                   EasyPDFMessageTemplateEMail.Name := Rec.Description;
                                   EasyPDFMessageTemplateEMail."Language Code" := "E-Mail Message Language Code";
                                   EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Text;

                                   // Update the addin with the new template data
                                   EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);

                                 END;
                               END;
                                }
      { 1000000033;1 ;Action    ;
                      Name=NewFAXMessageTemplate;
                      CaptionML=ENU=New FAX Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ElectronicDoc;
                      PromotedCategory=Category5;
                      OnAction=BEGIN

                                 // Allocate a new (empty) template
                                 CLEAR(EasyPDFMessageTemplateFAX);
                                 EasyPDFMessageTemplateFAX.INIT;
                                 EasyPDFMessageTemplateFAX.Code := Code;
                                 EasyPDFMessageTemplateFAX."User ID" := "User ID";
                                 EasyPDFMessageTemplateFAX."Message Type" := EasyPDFMessageTemplateFAX."Message Type"::FAX;
                                 EasyPDFMessageTemplateFAX."Language Code" := "FAX Message Language Code";
                                 EasyPDFMessageTemplateFAX.Format := EasyPDFMessageTemplateFAX.Format::Text;
                                 EasyPDFMessageTemplateFAX.Name := UPPERCASE(Rec.Description + ' ' + FORMAT(EasyPDFMessageTemplateFAX."Language Code") + ' ' + FORMAT(EasyPDFMessageTemplateFAX.Format));
                                 EasyPDFMessageTemplateFAX.Subject := Rec.Filename;
                                 EasyPDFMessageTemplateFAX.INSERT;

                                 // Point this document at it
                                 "FAX Message Template" := EasyPDFMessageTemplateFAX."Entry No.";

                                 // Update the addin with the new template data
                                 EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                               END;
                                }
      { 1000000044;1 ;Action    ;
                      Name=ImportFAXMessageTemplate;
                      CaptionML=ENU=Import FAX Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 Template@1000000000 : DotNet "'EasyPDF, Version=2.2.0.0, Culture=neutral, PublicKeyToken=2139766b2d013dc8'.EasyPDF.MessageTemplate";
                                 FM@1000000002 : Codeunit 419;
                                 ClientFilePath@1000000003 : Text;
                                 ServerFilePath@1000000004 : Text;
                               BEGIN

                                 // Open dialog to select the template
                                 ClientFilePath := FM.OpenFileDialog(TEXT003, '', TEXT004);
                                 IF STRLEN(ClientFilePath) = 0 THEN
                                   EXIT;

                                 // Copy the file to the server
                                 ServerFilePath := EasyPDF.CopyToServerTemp(ClientFilePath);
                                 IF STRLEN(ServerFilePath) = 0 THEN
                                   EXIT;

                                 // Load the template (dot net)
                                 Template := Template.MessageTemplate();
                                 IF NOT Template.ImportFile(ServerFilePath) THEN
                                 BEGIN
                                   ERASE(ServerFilePath);
                                   ERROR(TEXT005);
                                 END;

                                 // Set the fields

                                 // Allocate a new (empty) template
                                 CLEAR(EasyPDFMessageTemplateEMail);
                                 EasyPDFMessageTemplateFAX.INIT;
                                 EasyPDFMessageTemplateFAX.GetTemplateData(Template);
                                 EasyPDFMessageTemplateFAX.Code := Code;
                                 EasyPDFMessageTemplateFAX."User ID" := "User ID";
                                 EasyPDFMessageTemplateFAX."Message Type" := EasyPDFMessageTemplateFAX."Message Type"::FAX;
                                 EasyPDFMessageTemplateFAX."Language Code" := "FAX Message Language Code";
                                 EasyPDFMessageTemplateFAX.Format := EasyPDFMessageTemplateFAX.Format::Text;
                                 IF STRPOS(LOWERCASE(ClientFilePath), '.htm') > 0 THEN
                                   EasyPDFMessageTemplateFAX.Format := EasyPDFMessageTemplateFAX.Format::Html;
                                 EasyPDFMessageTemplateFAX.Name := Rec.Description + ' ' + UPPERCASE(FORMAT(EasyPDFMessageTemplateFAX.Format)) + ' ' + FORMAT(EasyPDFMessageTemplateFAX."Language Code");
                                 EasyPDFMessageTemplateFAX.Subject := Rec.Filename;
                                 EasyPDFMessageTemplateFAX.MODIFY;

                                 // Point this document at it
                                 "FAX Message Template" := EasyPDFMessageTemplateFAX."Entry No.";

                                 // Update the addin with the new template data
                                 EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);

                                 // Remove the temporary file
                                 ERASE(ServerFilePath);
                               END;
                                }
      { 1000000032;1 ;Action    ;
                      Name=DeleteFAXMessageTemplate;
                      CaptionML=ENU=Delete FAX Template;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Delete;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 TEXT001@1000000000 : TextConst 'ENU=Delete FAX Message Template?';
                               BEGIN

                                 IF EasyPDFMessageTemplateFAX."Entry No." <> 0 THEN BEGIN

                                   // Confirm delete
                                   IF NOT CONFIRM(TEXT001) THEN
                                     EXIT;

                                   // Delete the current message template
                                   EasyPDFMessageTemplateFAX.DELETE;

                                   // Get an empty one
                                   "FAX Message Template" := 0;
                                   CLEAR(EasyPDFMessageTemplateFAX);
                                   EasyPDFMessageTemplateFAX.INIT;
                                   EasyPDFMessageTemplateFAX.Code := Code;
                                   EasyPDFMessageTemplateFAX."User ID" := "User ID";
                                   EasyPDFMessageTemplateFAX.Name := Rec.Description;
                                   EasyPDFMessageTemplateFAX."Language Code" := "FAX Message Language Code";
                                   EasyPDFMessageTemplateFAX.Format := EasyPDFMessageTemplateFAX.Format::Text;

                                   // Update the addin with the new template data
                                   EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);

                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000019;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1000000010;2;Group  ;
                GroupType=Group }

    { 1000000036;3;Field  ;
                Name=UserID;
                CaptionML=ENU=User ID;
                SourceExpr=EasyPDFSetup."User ID";
                Importance=Promoted;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000001;3;Field  ;
                SourceExpr=Code;
                Importance=Promoted;
                Visible=FALSE;
                Editable=FALSE }

    { 1000000002;3;Field  ;
                SourceExpr=Description;
                Importance=Promoted }

    { 1000000022;3;Field  ;
                CaptionML=ENU=Log to History on send;
                SourceExpr=LogToHistory }

    { 1000000040;3;Field  ;
                CaptionML=ENU=Additional Attachments;
                SourceExpr=AdditionalAttachments;
                Editable=FALSE;
                LookupPageID=EasyPDF Attachment;
                MultiLine=Yes;
                OnLookup=BEGIN

                           ShowAttachmentsPage();
                           Text := FORMAT(AdditionalAttachments);
                           EXIT(TRUE);
                         END;
                          }

    { 1000000017;3;Field  ;
                CaptionML=ENU=Batch when Posted;
                SourceExpr=BatchOnPost;
                Visible=BatchOnPostVisible;
                Enabled=BatchOnPostEnabled;
                OnValidate=BEGIN

                             IF BatchOnPost THEN
                               SendOnPost := FALSE;

                             SendOnPostEnabled := (NOT BatchOnPost);
                           END;
                            }

    { 1000000018;3;Field  ;
                CaptionML=ENU=Send when Posted;
                SourceExpr=SendOnPost;
                Visible=SendOnPostVisible;
                Enabled=SendOnPostEnabled;
                OnValidate=BEGIN

                             IF SendOnPost THEN
                               BatchOnPost := FALSE;

                             BatchOnPostEnabled := (NOT SendOnPost);
                           END;
                            }

    { 1000000023;3;Field  ;
                CaptionML=ENU=Ship-to Addressing;
                SourceExpr=ShiptoAddressing;
                Visible=ShiptoControlVisible }

    { 1000000025;3;Field  ;
                SourceExpr="Send-to Customer Type";
                Visible=SendToCustomerTypeVisible;
                Enabled=SendToCustomerTypeVisible }

    { 1000000026;3;Field  ;
                SourceExpr="Send-to Vendor Type";
                Visible=SendToVendorTypeVisible;
                Enabled=SendToVendorTypeVisible }

    { 1000000021;1;Group  ;
                CaptionML=ENU=Report;
                GroupType=Group }

    { 1000000004;2;Group  ;
                GroupType=Group }

    { 1000000005;3;Field  ;
                Width=10;
                SourceExpr="Report ID";
                LookupPageID=Objects }

    { 1000000006;3;Field  ;
                SourceExpr=Filename;
                Importance=Promoted }

    { 1000000031;3;Field  ;
                SourceExpr="Save As Format";
                Importance=Promoted }

    { 1000000020;3;Field  ;
                CaptionML=ENU=Printer Settings File;
                SourceExpr=PrinterSettingsFilePath }

    { 1000000014;1;Group  ;
                CaptionML=ENU=Batch;
                GroupType=Group }

    { 1000000039;2;Group  ;
                GroupType=Group }

    { 1000000041;3;Field  ;
                CaptionML=ENU=Print Hardcopy when Sent;
                SourceExpr=BatchPrintHardcopy;
                Importance=Promoted }

    { 1000000042;3;Field  ;
                CaptionML=ENU=Generate Batch using Report;
                SourceExpr=BatchGenerationReportId;
                Visible=GenerateBatchReportIdVisible }

    { 1000000027;1;Group  ;
                CaptionML=ENU=E-Mail Message Template;
                GroupType=Group }

    { 1000000007;2;Group  ;
                GroupType=Group;
                Layout=Rows }

    { 1000000013;3;Field  ;
                Name=EMailMessageTemplate;
                CaptionML=ENU=Message Template;
                SourceExpr="E-Mail Message Template";
                Importance=Promoted;
                OnValidate=BEGIN

                             IF "E-Mail Message Template" = 0 THEN
                               EXIT;

                             IF EasyPDFMessageTemplateEMail.GET("E-Mail Message Template") THEN
                             BEGIN
                               "E-Mail Message Language Code" := EasyPDFMessageTemplateEMail."Language Code";
                               EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                             END;

                             IF EMailBodySource = EasyPDFMessageTemplateEMail."Body Source"::"Report Selection" THEN
                             BEGIN
                               EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Html;
                               EasyPDFMessageTemplateEMail.Name := ReplaceString(EasyPDFMessageTemplateEMail.Name, 'TEXT', 'HTML');
                             END;

                             EMailBodyFormat := EasyPDFMessageTemplateEMail.Format;
                             EMailBodyReportId := EasyPDFMessageTemplateEMail."Report ID";

                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1000000008;3;Field  ;
                Name=EMailTemplateName;
                CaptionML=ENU=Template Name;
                SourceExpr=EasyPDFMessageTemplateEMail.Name;
                Importance=Promoted;
                OnValidate=VAR
                             TemplateRec@1000000000 : Record 14103467;
                           BEGIN

                             IF EasyPDFMessageTemplateEMail."Entry No." <> 0 THEN
                               EasyPDFMessageTemplateEMail.MODIFY;
                             EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                           END;
                            }

    { 1000000015;3;Field  ;
                Name=EMailLanguageCode;
                CaptionML=ENU=Language Code;
                SourceExpr="E-Mail Message Language Code";
                Importance=Promoted;
                OnValidate=BEGIN

                             EasyPDFMessageTemplateEMail."Language Code" := "E-Mail Message Language Code";
                             EasyPDFMessageTemplateEMail.MODIFY;
                             EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                           END;
                            }

    { 1000000038;3;Field  ;
                Name=EMailMessageFormat;
                CaptionML=ENU=Message Format;
                SourceExpr=UPPERCASE(FORMAT(EasyPDFMessageTemplateEMail.Format));
                Importance=Promoted }

    { 1000000009;3;Field  ;
                Name=EMailSubjectLine;
                CaptionML=ENU=Subject Line;
                SourceExpr=EasyPDFMessageTemplateEMail.Subject;
                OnValidate=BEGIN

                             IF EasyPDFMessageTemplateEMail."Entry No." <> 0 THEN
                               EasyPDFMessageTemplateEMail.MODIFY;
                             EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                           END;
                            }

    { 1000000048;3;Field  ;
                Name=EMailBodySource;
                CaptionML=ENU=Message Body Source;
                SourceExpr=EasyPDFMessageTemplateEMail."Body Source";
                OnValidate=BEGIN

                             IF EasyPDFMessageTemplateEMail."Entry No." <> 0 THEN
                               EasyPDFMessageTemplateEMail.MODIFY;

                             EMailBodySource := EasyPDFMessageTemplateEMail."Body Source";
                             IF EMailBodySource <> EasyPDFMessageTemplateEMail."Body Source"::"Easy PDF Message Template" THEN
                             BEGIN
                               EasyPDFMessageTemplateEMail.Format := EasyPDFMessageTemplateEMail.Format::Html;
                               EasyPDFMessageTemplateEMail.Name := ReplaceString(EasyPDFMessageTemplateEMail.Name, 'TEXT', 'HTML');
                             END;

                             EMailBodyFormat := EasyPDFMessageTemplateEMail.Format;

                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000047;3;Group  ;
                Visible=EMailBodySource = 0;
                GroupType=Group }

    { 1000000011;4;Field  ;
                Name=EMailMessageTemplateAddin;
                CaptionML=ENU=Message Body;
                Enabled=EmailAddinEnabled;
                ControlAddIn=[EasyPDF.Client.MessageTemplateAddin;PublicKeyToken=2139766b2d013dc8];
                OnControlAddIn=VAR
                                 ADDIN_INDEX@1000000001 : Integer;
                                 EDITOR_INDEX@1000000002 : Integer;
                               BEGIN

                                 ADDIN_INDEX := 100;
                                 IF Index = ADDIN_INDEX THEN
                                   IF Data = 'Created' THEN
                                   BEGIN
                                     EMailAddinInstantiated := TRUE;
                                     IF NOT EasyPDFMessageTemplateEMail.ISEMPTY THEN
                                       EasyPDFMessageTemplateEMail.SetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                                   END;

                                 EDITOR_INDEX := 200;
                                 IF Index = EDITOR_INDEX THEN
                                   IF Data = 'Template.Saved' THEN BEGIN
                                     EasyPDFMessageTemplateEMail.GetTemplateData(CurrPage.EMailMessageTemplateAddin.Template);
                                     "E-Mail Message Template" := EasyPDFMessageTemplateEMail."Entry No.";
                                   END;
                               END;
                                }

    { 1000000046;3;Group  ;
                Visible=EMailBodySource = 1;
                GroupType=Group }

    { 1000000045;4;Field  ;
                CaptionML=ENU=Report Selection Usage;
                SourceExpr=EasyPDFMessageTemplateEMail."Report Selection Usage";
                TableRelation="Report Selections".Usage WHERE (Email Body Layout Code=FILTER(<>''));
                OnValidate=BEGIN
                             EasyPDFMessageTemplateEMail.MODIFY;
                           END;
                            }

    { 1000000050;3;Group  ;
                Visible=EMailBodySource = 2;
                GroupType=Group }

    { 1000000049;4;Field  ;
                CaptionML=ENU=Report ID;
                SourceExpr=EasyPDFMessageTemplateEMail."Report ID";
                TableRelation=Object.ID WHERE (Type=CONST(Report));
                OnValidate=BEGIN
                             EasyPDFMessageTemplateEMail.MODIFY;
                             EMailBodyReportId := EasyPDFMessageTemplateEMail."Report ID";
                             ReportLayoutID := EasyPDFMessageTemplateEMail."Report ID";
                           END;
                            }

    { 1000000051;4;Field  ;
                CaptionML=ENU=Report Layout Code;
                SourceExpr=EasyPDFMessageTemplateEMail."Report Layout Code";
                TableRelation="Custom Report Layout".Code WHERE (Report ID=FIELD(ReportLayoutID));
                OnValidate=BEGIN
                             EasyPDFMessageTemplateEMail.MODIFY;
                           END;
                            }

    { 1000000028;1;Group  ;
                CaptionML=ENU=FAX Message Template;
                GroupType=Group }

    { 1000000003;2;Group  ;
                GroupType=Group }

    { 1000000037;3;Field  ;
                Name=FAXMessageTemplate;
                CaptionML=ENU=Message Template;
                SourceExpr="FAX Message Template";
                Importance=Promoted;
                OnValidate=BEGIN

                             IF "FAX Message Template" = 0 THEN
                               EXIT;

                             IF EasyPDFMessageTemplateFAX.GET("FAX Message Template") THEN
                             BEGIN
                               "FAX Message Language Code" := EasyPDFMessageTemplateFAX."Language Code";
                               EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                             END;
                           END;
                            }

    { 1000000034;3;Field  ;
                Name=FAXTemplateName;
                CaptionML=ENU=Template Name;
                SourceExpr=EasyPDFMessageTemplateFAX.Name;
                Importance=Promoted;
                OnValidate=VAR
                             TemplateRec@1000000000 : Record 14103467;
                           BEGIN

                             IF EasyPDFMessageTemplateFAX."Entry No." <> 0 THEN
                               EasyPDFMessageTemplateFAX.MODIFY;
                             EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                           END;
                            }

    { 1100774001;3;Field  ;
                Name=FAXMessageLanguageCode;
                CaptionML=ENU=Language Code;
                SourceExpr="FAX Message Language Code";
                Importance=Promoted;
                OnValidate=BEGIN

                             EasyPDFMessageTemplateFAX."Language Code" := "FAX Message Language Code";
                             EasyPDFMessageTemplateFAX.MODIFY;
                             EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                           END;
                            }

    { 1000000024;3;Field  ;
                Name=FAXMessageFormat;
                CaptionML=ENU=Message Format;
                SourceExpr=UPPERCASE(FORMAT(EasyPDFMessageTemplateFAX.Format));
                Importance=Promoted }

    { 1000000012;3;Field  ;
                Name=FAX Subject Line;
                CaptionML=ENU=Subject Line;
                SourceExpr=EasyPDFMessageTemplateFAX.Subject;
                OnValidate=BEGIN

                             IF EasyPDFMessageTemplateFAX."Entry No." <> 0 THEN
                               EasyPDFMessageTemplateFAX.MODIFY;
                             EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                           END;
                            }

    { 1000000035;3;Field  ;
                Name=FAXMessageTemplateAddin;
                CaptionML=ENU=Message Body;
                Enabled=FAXAddinEnabled;
                ControlAddIn=[EasyPDF.Client.MessageTemplateAddin;PublicKeyToken=2139766b2d013dc8];
                OnControlAddIn=VAR
                                 ADDIN_INDEX@1000000001 : Integer;
                                 EDITOR_INDEX@1000000002 : Integer;
                               BEGIN

                                 ADDIN_INDEX := 100;
                                 IF Index = ADDIN_INDEX THEN
                                   IF Data = 'Created' THEN
                                   BEGIN
                                     FAXAddinInstantiated := TRUE;
                                     IF NOT EasyPDFMessageTemplateFAX.ISEMPTY THEN
                                       EasyPDFMessageTemplateFAX.SetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                                   END;

                                 EDITOR_INDEX := 200;
                                 IF Index = EDITOR_INDEX THEN
                                   IF Data = 'Template.Saved' THEN BEGIN
                                     EasyPDFMessageTemplateFAX.GetTemplateData(CurrPage.FAXMessageTemplateAddin.Template);
                                     "FAX Message Template" := EasyPDFMessageTemplateFAX."Entry No.";
                                   END;
                               END;
                                }

  }
  CODE
  {
    VAR
      EasyPDF@1100774001 : Codeunit 37062300;
      EasyPDFCustomization@1000000000 : Codeunit 14103460;
      EasyPDFPrinter@1000000006 : Codeunit 14103462;
      EasyPDFSetup@1100774000 : Record 14103460;
      EasyPDFMessageTemplateEMail@1000000012 : Record 14103467;
      EasyPDFMessageTemplateFAX@1000000011 : Record 14103467;
      BatchOnPostVisible@1000000001 : Boolean INDATASET;
      SendOnPostVisible@1000000023 : Boolean INDATASET;
      BatchOnPostEnabled@1000000002 : Boolean INDATASET;
      SendOnPostEnabled@1000000003 : Boolean INDATASET;
      ShiptoControlVisible@1000000004 : Boolean INDATASET;
      PrinterSettingsVisible@1000000005 : Boolean INDATASET;
      SendToCustomerTypeVisible@1000000007 : Boolean INDATASET;
      SendToVendorTypeVisible@1000000008 : Boolean INDATASET;
      EmailSubjectLine@1000000009 : Text[250];
      FaxSubjectLine@1000000010 : Text[250];
      TEXT001@1000000013 : TextConst 'ENU=%1 TEXT %2';
      TEXT002@1000000014 : TextConst 'ENU=%1 TEXT %2';
      EMailAddinInstantiated@1000000015 : Boolean;
      FAXAddinInstantiated@1000000016 : Boolean;
      EMailAddinEnabled@1000000017 : Boolean INDATASET;
      FAXAddinEnabled@1000000018 : Boolean INDATASET;
      GenerateBatchReportIdVisible@1000000019 : Boolean INDATASET;
      TEXT003@1000000020 : TextConst 'ENU=Select Template File';
      TEXT004@1000000021 : TextConst 'ENU="TEXT Files (*.txt)|*.txt|HTML Files (*.htm,*.html)|*.htm;*.html|All Files (*.*)|*.*"';
      TEXT005@1000000022 : TextConst 'ENU=Could not load template';
      EMailAddinVisible@1000000026 : Boolean INDATASET;
      EMailBodySource@1000000025 : Integer INDATASET;
      EMailBodyFormat@1000000024 : 'Text,HTML';
      EMailBodyReportId@1000000027 : Integer;

    PROCEDURE ShowAttachmentsPage@1000000004();
    VAR
      EasyPDFAttachmentsPage@1000000000 : Page 14103469;
      EasyPDFAttachment@1000000001 : Record 14103466;
    BEGIN

      EasyPDFAttachment.RESET;
      EasyPDFAttachment.SETRANGE(AttachmentType, EasyPDFAttachment.AttachmentType::Document);
      EasyPDFAttachment.SETRANGE(Code, Code);
      EasyPDFAttachment.SETRANGE(UserId, "User ID");
      EasyPDFAttachmentsPage.SETTABLEVIEW(EasyPDFAttachment);
      EasyPDFAttachmentsPage.CAPTION := 'Additional Attachments';
      EasyPDFAttachmentsPage.SetAddAsBlob(TRUE);
      EasyPDFAttachmentsPage.RUNMODAL();
      CALCFIELDS(AdditionalAttachments);
    END;

    LOCAL PROCEDURE ReplaceString@1(String@1000 : Text;FindWhat@1001 : Text;ReplaceWith@1002 : Text) NewString : Text;
    BEGIN
      WHILE STRPOS(String,FindWhat) > 0 DO
        String := DELSTR(String,STRPOS(String,FindWhat)) + ReplaceWith + COPYSTR(String,STRPOS(String,FindWhat) + STRLEN(FindWhat));
      NewString := String;
    END;

    BEGIN
    END.
  }
}

