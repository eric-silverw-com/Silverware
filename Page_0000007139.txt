OBJECT Page 7139 Sales Budget Overview
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Budget Overview;
               ESM=Inf. general de presupuesto de ventas;
               FRC=Aper‡u du budget des ventes;
               ENC=Sales Budget Overview];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    PageType=ListPlus;
    OnInit=BEGIN
             BudgetDim3FilterEnable := TRUE;
             BudgetDim2FilterEnable := TRUE;
             BudgetDim1FilterEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF ValueType = 0 THEN
                   ValueType := ValueType::"Sales Amount";
                 CurrentAnalysisArea := CurrentAnalysisArea::Sales;
                 ItemBudgetManagement.BudgetNameSelection(
                   CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);

                 IF (NewBudgetName <> '') AND (CurrentBudgetName <> NewBudgetName) THEN BEGIN
                   CurrentBudgetName := NewBudgetName;
                   ItemBudgetManagement.CheckBudgetName(CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName);
                   ItemBudgetManagement.SetItemBudgetName(
                     CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                     BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                 END;

                 ItemBudgetManagement.SetLineAndColDim(
                   ItemBudgetName,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);

                 GLSetup.GET;
                 SourceTypeFilter := SourceTypeFilter::Customer;

                 UpdateDimCtrls;

                 FindPeriod('');
                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                 UpdateMatrixSubForm;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 40      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESM=Acci&ones;
                                 FRC=F&onctions;
                                 ENC=F&unctions];
                      Image=Action }
      { 41      ;2   ;Action    ;
                      CaptionML=[ENU=Reverse Lines and Columns;
                                 ESM=Invertir l¡neas y columnas;
                                 FRC=Inverser lignes et colonnes;
                                 ENC=Reverse Lines and Columns];
                      ToolTipML=[ENU=Change the display of the matrix by inverting the values in the Show as Lines and Show as Columns fields.;
                                 ESM=Cambia la visualizaci¢n de la matriz invirtiendo los valores de los campos Muestra como l¡neas y Muestra como columnas.;
                                 FRC=Modifier l'affichage de la matrice en contrepassant les valeurs dans les champs Afficher lignes et Afficher colonnes.;
                                 ENC=Change the display of the matrix by inverting the values in the Show as Lines and Show as Columns fields.];
                      ApplicationArea=#SalesBudget;
                      Image=Undo;
                      OnAction=VAR
                                 TempDimCode@1001 : Text[30];
                               BEGIN
                                 TempDimCode := ColumnDimCode;
                                 ColumnDimCode := LineDimCode;
                                 LineDimCode := TempDimCode;
                                 ItemBudgetManagement.ValidateLineDimCode(
                                   ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 ItemBudgetManagement.ValidateColumnDimCode(
                                   ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 53      ;2   ;Separator  }
      { 54      ;2   ;Action    ;
                      Name=DeleteBudget;
                      CaptionML=[ENU=Delete Budget;
                                 ESM=Borrar presupuesto;
                                 FRC=Supprimer ‚critures budget;
                                 ENC=Delete Budget];
                      ToolTipML=[ENU=Delete the current budget.;
                                 ESM=Elimina el presupuesto actual.;
                                 FRC=Supprimer le budget actuel.;
                                 ENC=Delete the current budget.];
                      ApplicationArea=#SalesBudget;
                      Image=Delete;
                      OnAction=BEGIN
                                 ItemBudgetManagement.DeleteBudget(
                                   CurrentAnalysisArea,CurrentBudgetName,
                                   ItemFilter,DateFilter,
                                   SourceTypeFilter,SourceNoFilter,
                                   GlobalDim1Filter,GlobalDim2Filter,
                                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                               END;
                                }
      { 55      ;2   ;Separator  }
      { 42      ;1   ;ActionGroup;
                      CaptionML=[ENU=Export to Excel;
                                 ESM=Exportar a Excel;
                                 FRC=Exporter dans Excel;
                                 ENC=Export to Excel];
                      Image=ExportToExcel }
      { 38      ;2   ;Action    ;
                      CaptionML=[ENU=Create New Document;
                                 ESM=Crear documento nuevo;
                                 FRC=Cr‚er un document;
                                 ENC=Create New Document];
                      ToolTipML=[ENU=Open the analysis report in a new Excel workbook. This creates an Excel workbook on your device.;
                                 ESM=Permite abrir el informe de an lisis en un nuevo libro de Excel. De este modo, se crea un libro de Excel en el dispositivo.;
                                 FRC=Ouvrir le rapport d'analyse dans un nouveau classeur Excel. Cela cr‚e un classeur Excel sur votre appareil.;
                                 ENC=Open the analysis report in a new Excel workbook. This creates an Excel workbook on your device.];
                      ApplicationArea=#SalesBudget;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportItemBudgetToExcel@1000 : Report 7132;
                               BEGIN
                                 ExportItemBudgetToExcel.SetOptions(
                                   CurrentAnalysisArea,
                                   CurrentBudgetName,
                                   ValueType,
                                   GlobalDim1Filter,GlobalDim2Filter,
                                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter,
                                   DateFilter,
                                   SourceTypeFilter,SourceNoFilter,
                                   ItemFilter,
                                   InternalDateFilter,PeriodInitialized,PeriodType,
                                   LineDimOption,ColumnDimOption,LineDimCode,ColumnDimCode,RoundingFactor);
                                 ExportItemBudgetToExcel.RUN;
                               END;
                                }
      { 4       ;2   ;Action    ;
                      CaptionML=[ENU=Update Existing Document;
                                 ESM=Actualizar documento existente;
                                 FRC=Mettre … jour le document existant;
                                 ENC=Update Existing Document];
                      ToolTipML=[ENU=Refresh the data in an existing Excel workbook. You must specify the workbook that you want to update.;
                                 ESM=Permite actualizar los datos de un libro de Excel existente. Debe especificar el libro que desea actualizar.;
                                 FRC=Actualiser les donn‚es dans un classeur Excel existant. Vous devez sp‚cifier le classeur que vous voulez mettre … jour.;
                                 ENC=Refresh the data in an existing Excel workbook. You must specify the workbook that you want to update.];
                      ApplicationArea=#SalesBudget;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportItemBudgetToExcel@1000 : Report 7132;
                               BEGIN
                                 ExportItemBudgetToExcel.SetOptions(
                                   CurrentAnalysisArea,
                                   CurrentBudgetName,
                                   ValueType,
                                   GlobalDim1Filter,GlobalDim2Filter,
                                   BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter,
                                   DateFilter,
                                   SourceTypeFilter,SourceNoFilter,
                                   ItemFilter,
                                   InternalDateFilter,PeriodInitialized,PeriodType,
                                   LineDimOption,ColumnDimOption,LineDimCode,ColumnDimCode,RoundingFactor);
                                 ExportItemBudgetToExcel.SetUpdateExistingWorksheet(TRUE);
                                 ExportItemBudgetToExcel.RUN;
                               END;
                                }
      { 56      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import from Excel;
                                 ESM=Importar desde Excel;
                                 FRC=Importer d'Excel;
                                 ENC=Import from Excel];
                      ToolTipML=[ENU=Import a budget that you exported to Excel earlier.;
                                 ESM=Importar un presupuesto que se export¢ a Excel anteriormente.;
                                 FRC=Importer un budget que vous avez export‚ vers Excel pr‚c‚demment.;
                                 ENC=Import a budget that you exported to Excel earlier.];
                      ApplicationArea=#SalesBudget;
                      Image=ImportExcel;
                      OnAction=VAR
                                 ImportItemBudgetFromExcel@1000 : Report 7131;
                               BEGIN
                                 ImportItemBudgetFromExcel.SetParameters(CurrentBudgetName,CurrentAnalysisArea,ValueType);
                                 ImportItemBudgetFromExcel.RUNMODAL;
                                 CLEAR(ImportItemBudgetFromExcel);
                               END;
                                }
      { 13      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESM=Periodo siguiente;
                                 FRC=Prochaine p‚riode;
                                 ENC=Next Period];
                      ToolTipML=[ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                                 ESM=Muestra la informaci¢n en funci¢n del per¡odo siguiente. Si se establece el campo Ver por en D¡a, el filtro de fecha cambia al d¡a anterior.;
                                 FRC=Afficher les informations en fonction de la p‚riode suivante. Si vous d‚finissez le champ Afficher par, le filtre date passe sur le jour pr‚c‚dent.;
                                 ENC=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                   EXIT;
                                 FindPeriod('>');
                                 CurrPage.UPDATE;
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ESM=Periodo anterior;
                                 FRC=P‚riode pr‚c‚dente;
                                 ENC=Previous Period];
                      ToolTipML=[ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                                 ESM=Muestra la informaci¢n en funci¢n del periodo anterior. Si se establece el campo Ver por en D¡a, el filtro de fecha cambia al d¡a anterior.;
                                 FRC=Afficher les informations en fonction de la p‚riode pr‚c‚dente. Si vous d‚finissez le champ Afficher par, le filtre date passe sur le jour pr‚c‚dent.;
                                 ENC=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF (LineDimOption = LineDimOption::Period) OR (ColumnDimOption = ColumnDimOption::Period) THEN
                                   EXIT;
                                 FindPeriod('<');
                                 CurrPage.UPDATE;
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 23      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 ESM=Permite desplazarse al conjunto de datos anterior.;
                                 FRC=Allez … l'ensemble de donn‚es pr‚c‚dent.;
                                 ENC=Go to the previous set of data.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Previous);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 9       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Column;
                                 ESM=Columna anterior;
                                 FRC=Colonne pr‚c‚dente;
                                 ENC=Previous Column];
                      ToolTipML=[ENU=Go to the previous column.;
                                 ESM=Permite desplazarse a la columna anterior.;
                                 FRC=Acc‚dez … la colonne pr‚c‚dente.;
                                 ENC=Go to the previous column.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::PreviousColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      CaptionML=[ENU=Next Column;
                                 ESM=Columna siguiente;
                                 FRC=Colonne suivante;
                                 ENC=Next Column];
                      ToolTipML=[ENU=Go to the next column.;
                                 ESM=Permite desplazarse a la columna siguiente.;
                                 FRC=Acc‚der … la colonne suivante.;
                                 ENC=Go to the next column.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::NextColumn);
                                 UpdateMatrixSubForm;
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 ESM=Permite desplazarse al conjunto de datos siguiente.;
                                 FRC=Allez … l'ensemble de donn‚es suivant.;
                                 ENC=Go to the next set of data.];
                      ApplicationArea=#SalesBudget;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 MATRIX_Step@1001 : 'Initial,Previous,Same,Next';
                               BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_Step::Next);
                                 UpdateMatrixSubForm;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Item Budget Name;
                           ESM=Nombre ppto. producto;
                           FRC=Nom de budget d'article;
                           ENC=Item Budget Name];
                ToolTipML=[ENU=Specifies the name of the budget to be shown in the window.;
                           ESM=Especifica el nombre del presupuesto que va a aparecer en la ventana.;
                           FRC=Sp‚cifie le nom du budget qui doit ˆtre affich‚ dans la fenˆtre.;
                           ENC=Specifies the name of the budget to be shown in the window.];
                ApplicationArea=#SalesBudget;
                SourceExpr=CurrentBudgetName;
                OnValidate=BEGIN
                             ItemBudgetManagement.CheckBudgetName(CurrentAnalysisArea,CurrentBudgetName,ItemBudgetName);
                             UpdateMatrixSubForm;
                             CurrentBudgetNameOnAfterValida;
                           END;

                OnLookup=BEGIN
                           ItemBudgetManagement.LookupItemBudgetName(
                             CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
                             BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
                           ItemBudgetManagement.ValidateLineDimCode(
                             ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                             InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                           ItemBudgetManagement.ValidateColumnDimCode(
                             ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                             InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                           UpdateDimCtrls;
                           UpdateMatrixSubForm;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Show as Lines;
                           ESM=Muestra como l¡neas;
                           FRC=Afficher lignes;
                           ENC=Show as Lines];
                ToolTipML=[ENU=Specifies which values you want to show as lines in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.;
                           ESM=Especifica los valores que desea mostrar como l¡neas en la ventana. Esto le permite ver la misma ventana de la matriz desde distintas perspectivas, especialmente cuando usa el campo Muestra como l¡neas y el campo Muestra como columnas.;
                           FRC=Sp‚cifie les valeurs … afficher en tant que lignes dans la fenˆtre. Cela vous permet d'afficher la mˆme fenˆtre de matrice de diff‚rentes fa‡ons, en particulier si vous utilisez … la fois le champ Afficher lignes et le champ Afficher colonnes.;
                           ENC=Specifies which values you want to show as lines in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.];
                ApplicationArea=#SalesBudget;
                SourceExpr=LineDimCode;
                OnValidate=BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               ColumnDimCode := '';
                               ItemBudgetManagement.ValidateColumnDimCode(
                                 ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemBudgetManagement.ValidateLineDimCode(
                               ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             LineDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1000 : Text[30];
                         BEGIN
                           NewCode := ItemBudgetManagement.GetDimSelection(LineDimCode,ItemBudgetName);
                           IF NewCode <> LineDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Show as Columns;
                           ESM=Muestra como columnas;
                           FRC=Afficher colonnes;
                           ENC=Show as Columns];
                ToolTipML=[ENU=Specifies which values you want to show as columns in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.;
                           ESM=Especifica los valores que desea mostrar como columnas en la ventana. Esto le permite ver la misma ventana de la matriz desde distintas perspectivas, especialmente cuando use el campo Muestra como l¡neas y el campo Muestra como columnas.;
                           FRC=Sp‚cifie les valeurs … afficher en tant que colonnes dans la fenˆtre. Cela vous permet d'afficher la mˆme fenˆtre de matrice de diff‚rentes fa‡ons, en particulier si vous utilisez … la fois le champ Afficher lignes et le champ Afficher colonnes.;
                           ENC=Specifies which values you want to show as columns in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.];
                ApplicationArea=#SalesBudget;
                SourceExpr=ColumnDimCode;
                OnValidate=BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               LineDimCode := '';
                               ItemBudgetManagement.ValidateLineDimCode(
                                 ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemBudgetManagement.ValidateColumnDimCode(
                               ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);

                             MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
                             ColumnDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1000 : Text[30];
                         BEGIN
                           NewCode := ItemBudgetManagement.GetDimSelection(ColumnDimCode,ItemBudgetName);
                           IF NewCode <> ColumnDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;

                ShowMandatory=TRUE }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Show Value as;
                           ESM=Mostrar valor como;
                           FRC=Afficher la valeur en tant que;
                           ENC=Show Value as];
                ToolTipML=[ENU=Specifies if you want to view the item values by sales amount, cost amount, or quantity.;
                           ESM=Especifica si desea ver los valores de los productos por importe de ventas, importe de costo o cantidad.;
                           FRC=Sp‚cifie si vous souhaitez afficher les valeurs article par montant vente, co–t indiqu‚ ou quantit‚.;
                           ENC=Specifies if you want to view the item values by sales amount, cost amount, or quantity.];
                OptionCaptionML=[ENU=Sales Amount,Cost Amount,Quantity;
                                 ESM=Importe ventas,Importe costo,Cantidad;
                                 FRC=Montant de vente,Co–t indiqu‚,Quantit‚;
                                 ENC=Sales Amount,Cost Amount,Quantity];
                ApplicationArea=#SalesBudget;
                SourceExpr=ValueType;
                OnValidate=BEGIN
                             ValueTypeOnAfterValidate;
                           END;
                            }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESM=Ver por;
                           FRC=Afficher par;
                           ENC=View by];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           ESM=Especifica para qu‚ periodos se muestran los importes.;
                           FRC=Indique selon quelle p‚riodicit‚ les montants sont affich‚s.;
                           ENC=Specifies by which period amounts are displayed.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESM=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable;
                                 FRC=Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode comptable;
                                 ENC=Day,Week,Month,Quarter,Year,Accounting Period];
                ApplicationArea=#SalesBudget;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             PeriodTypeOnAfterValidate;
                           END;
                            }

    { 27  ;2   ;Field     ;
                CaptionML=[ENU=Rounding Factor;
                           ESM=Factor redondeo;
                           FRC=Facteur d'arrondissement;
                           ENC=Rounding Factor];
                ToolTipML=[ENU=Specifies the factor that is used to round the amounts in the columns.;
                           ESM=Especifica el factor que se usa para redondear los importes en las columnas.;
                           FRC=Sp‚cifie le facteur qui est utilis‚ pour arrondir les montants des colonnes.;
                           ENC=Specifies the factor that is used to round the amounts in the columns.];
                OptionCaptionML=[ENU=None,1,1000,1000000;
                                 ESM=No,1,1000,1000000;
                                 FRC=Aucun,1,1000,1000000;
                                 ENC=None,1,1000,1000000];
                ApplicationArea=#SalesBudget;
                SourceExpr=RoundingFactor;
                OnValidate=BEGIN
                             RoundingFactorOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Show Column Name;
                           ESM=Muestra nombre columna;
                           FRC=Afficher nom de colonne;
                           ENC=Show Column Name];
                ToolTipML=[ENU=Specifies that the names of columns are shown in the matrix window.;
                           ESM=Especifica que los nombres de las columnas se muestran en la ventana de la matriz.;
                           FRC=Sp‚cifie que les noms de colonnes sont affich‚s dans la fenˆtre de la matrice.;
                           ENC=Specifies that the names of columns are shown in the matrix window.];
                ApplicationArea=#SalesBudget;
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;
                            }

    { 17  ;1   ;Part      ;
                Name=MATRIX;
                ApplicationArea=#SalesBudget;
                PagePartID=Page9239 }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           ESM=Filtros;
                           FRC=Filtres;
                           ENC=Filters] }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ESM=Filtro fecha;
                           FRC=Filtre date;
                           ENC=Date Filter];
                ToolTipML=[ENU=Specifies a date filter by which budget amounts are displayed.;
                           ESM=Especifica un filtro de fecha para el que se mostrar n los importes de presupuesto.;
                           FRC=Sp‚cifie un filtre date d‚finissant l'affichage des montants budg‚t‚s.;
                           ENC=Specifies a date filter by which budget amounts are displayed.];
                ApplicationArea=#SalesBudget;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             TextManagement@1000 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(DateFilter);
                             ItemStatisticsBuffer.SETFILTER("Date Filter",DateFilter);
                             DateFilter := ItemStatisticsBuffer.GETFILTER("Date Filter");
                             InternalDateFilter := DateFilter;
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 31  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Customer Filter;
                           ESM=Filtro cliente;
                           FRC=Filtre client;
                           ENC=Customer Filter];
                ToolTipML=[ENU=Specifies the filter that applies to the customers to whom items are sold.;
                           ESM=Especifica el filtro que se aplica a los clientes a los que se venden los productos.;
                           FRC=Sp‚cifie le filtre qui s'applique aux clients auxquels des articles sont vendus.;
                           ENC=Specifies the filter that applies to the customers to whom items are sold.];
                ApplicationArea=#SalesBudget;
                SourceExpr=SourceNoFilter;
                OnValidate=BEGIN
                             SourceNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page 22;
                           VendList@1004 : Page 27;
                         BEGIN
                           CASE SourceTypeFilter OF
                             SourceTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SourceTypeFilter::Vendor:
                               BEGIN
                                 VendList.LOOKUPMODE := TRUE;
                                 IF VendList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := VendList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Item Filter;
                           ESM=Filtro producto;
                           FRC=Filtre article;
                           ENC=Item Filter];
                ToolTipML=[ENU=Specifies which items to include in the budget overview.;
                           ESM=Especifica qu‚ productos incluir en la informaci¢n general del presupuesto.;
                           FRC=Sp‚cifie les articles … inclure dans la vue d'ensemble budget.;
                           ENC=Specifies which items to include in the budget overview.];
                ApplicationArea=#SalesBudget;
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             ItemFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                         BEGIN
                           ItemList.LOOKUPMODE(TRUE);
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Text := ItemList.GetSelectionFilter;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 47  ;2   ;Field     ;
                Name=BudgetDim1Filter;
                CaptionML=[ENU=Budget Dimension 1 Filter;
                           ESM=Filtro dim. presupuesto 1;
                           FRC=Filtre de dimension budget 1;
                           ENC=Budget Dimension 1 Filter];
                ToolTipML=[ENU="Specifies a filter by a budget dimension. ";
                           ESM="Especifica un filtro por dimensi¢n de presupuesto. ";
                           FRC="Sp‚cifie un filtre par dimension budget. ";
                           ENC="Specifies a filter by a budget dimension. "];
                ApplicationArea=#Dimensions;
                SourceExpr=BudgetDim1Filter;
                CaptionClass=GetCaptionClass(1);
                Enabled=BudgetDim1FilterEnable;
                OnValidate=BEGIN
                             BudgetDim1FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 1 Code",Text));
                         END;
                          }

    { 44  ;2   ;Field     ;
                Name=BudgetDim2Filter;
                CaptionML=[ENU=Budget Dimension 2 Filter;
                           ESM=Filtro dim. presupuesto 2;
                           FRC=Filtre de dimension budget 2;
                           ENC=Budget Dimension 2 Filter];
                ToolTipML=[ENU="Specifies a second filter by a budget dimension. ";
                           ESM="Especifica un segundo filtro por dimensi¢n de presupuesto. ";
                           FRC="Sp‚cifie un deuxiŠme filtre par dimension budget. ";
                           ENC="Specifies a second filter by a budget dimension. "];
                ApplicationArea=#Dimensions;
                SourceExpr=BudgetDim2Filter;
                CaptionClass=GetCaptionClass(2);
                Enabled=BudgetDim2FilterEnable;
                OnValidate=BEGIN
                             BudgetDim2FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 2 Code",Text));
                         END;
                          }

    { 43  ;2   ;Field     ;
                Name=BudgetDim3Filter;
                CaptionML=[ENU=Budget Dimension 3 Filter;
                           ESM=Filtro dim. presupuesto 3;
                           FRC=Filtre de dimension budget 3;
                           ENC=Budget Dimension 3 Filter];
                ToolTipML=[ENU="Specifies a third filter by a budget dimension. ";
                           ESM="Especifica un tercer filtro por dimensi¢n de presupuesto. ";
                           FRC="Sp‚cifie un troisiŠme filtre par dimension budget. ";
                           ENC="Specifies a third filter by a budget dimension. "];
                ApplicationArea=#Dimensions;
                SourceExpr=BudgetDim3Filter;
                CaptionClass=GetCaptionClass(3);
                Enabled=BudgetDim3FilterEnable;
                OnValidate=BEGIN
                             BudgetDim3FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(ItemBudgetName."Budget Dimension 3 Code",Text));
                         END;
                          }

    { 50  ;2   ;Field     ;
                Name=GlobalDim1Filter;
                CaptionML=[ENU=Global Dimension 1 Filter;
                           ESM=Filtro dimensi¢n global 1;
                           FRC=Filtre dimension principale 1;
                           ENC=Global Dimension 1 Filter];
                ToolTipML=[ENU=Specifies by which global dimension data is shown. Global dimensions are the dimensions that you analyze most frequently. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                           ESM=Especifica en qu‚ dimensi¢n global se muestran los datos. Las dimensiones globales son las dimensiones que se analizan con m s frecuencia. Hay dos dimensiones globales, normalmente para las actividades m s importantes de la empresa, disponibles en todas las fichas, documentos, informes y listas.;
                           FRC=Sp‚cifie la dimension principale selon laquelle les donn‚es sont affich‚es. Les dimensions principales sont celles que vous analysez le plus souvent. Deux dimensions principales, g‚n‚ralement pour les activit‚s les plus importantes de la compagnie, sont disponibles sur l'ensemble des fiches, documents, rapports et listes.;
                           ENC=Specifies by which global dimension data is shown. Global dimensions are the dimensions that you analyse most frequently. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.];
                ApplicationArea=#Dimensions;
                SourceExpr=GlobalDim1Filter;
                CaptionClass='1,3,1';
                OnValidate=BEGIN
                             GlobalDim1FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                         END;
                          }

    { 49  ;2   ;Field     ;
                Name=GlobalDim2Filter;
                CaptionML=[ENU=Global Dimension 2 Filter;
                           ESM=Filtro dimensi¢n global  2;
                           FRC=Filtre dimension principale 2;
                           ENC=Global Dimension 2 Filter];
                ToolTipML=[ENU=Specifies by which global dimension data is shown. Global dimensions are the dimensions that you analyze most frequently. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.;
                           ESM=Especifica en qu‚ dimensi¢n global se muestran los datos. Las dimensiones globales son las dimensiones que se analizan con m s frecuencia. Hay dos dimensiones globales, normalmente para las actividades m s importantes de la empresa, disponibles en todas las fichas, documentos, informes y listas.;
                           FRC=Sp‚cifie la dimension principale selon laquelle les donn‚es sont affich‚es. Les dimensions principales sont celles que vous analysez le plus souvent. Deux dimensions principales, g‚n‚ralement pour les activit‚s les plus importantes de la compagnie, sont disponibles sur l'ensemble des fiches, documents, rapports et listes.;
                           ENC=Specifies by which global dimension data is shown. Global dimensions are the dimensions that you analyse most frequently. Two global dimensions, typically for the company's most important activities, are available on all cards, documents, reports, and lists.];
                ApplicationArea=#Dimensions;
                SourceExpr=GlobalDim2Filter;
                CaptionClass='1,3,2';
                OnValidate=BEGIN
                             GlobalDim2FilterOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                         END;
                          }

  }
  CODE
  {
    VAR
      GLSetup@1026 : Record 98;
      ItemBudgetName@1010 : Record 7132;
      ItemStatisticsBuffer@1006 : Record 5821;
      MATRIX_MatrixRecords@1137 : ARRAY [32] OF Record 367;
      ItemBudgetManagement@1003 : Codeunit 7130;
      MATRIX_CaptionSet@1138 : ARRAY [32] OF Text[80];
      MATRIX_CaptionRange@1139 : Text;
      FirstColumn@1020 : Text;
      LastColumn@1021 : Text;
      MATRIX_PrimKeyFirstCaptionInCu@1143 : Text;
      MATRIX_CurrentNoOfColumns@1144 : Integer;
      CurrentAnalysisArea@1005 : 'Sales,Purchase,Inventory';
      CurrentBudgetName@1002 : Code[10];
      SourceTypeFilter@1017 : ' ,Customer,Vendor,Item';
      SourceNoFilter@1016 : Text;
      ItemFilter@1019 : Text;
      ValueType@1018 : 'Sales Amount,Cost Amount,Quantity';
      RoundingFactor@1028 : 'None,1,1000,1000000';
      LineDimOption@1001 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3';
      ColumnDimOption@1000 : 'Item,Customer,Vendor,Period,Location,Global Dimension 1,Global Dimension 2,Budget Dimension 1,Budget Dimension 2,Budget Dimension 3';
      PeriodType@1022 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      GlobalDim1Filter@1024 : Text;
      GlobalDim2Filter@1023 : Text;
      BudgetDim1Filter@1009 : Text;
      BudgetDim2Filter@1008 : Text;
      BudgetDim3Filter@1007 : Text;
      LineDimCode@1012 : Text[30];
      ColumnDimCode@1011 : Text[30];
      DateFilter@1014 : Text;
      InternalDateFilter@1013 : Text;
      PeriodInitialized@1015 : Boolean;
      ShowColumnName@1025 : Boolean;
      Text003@1034 : TextConst 'ENU=1,6,,Budget Dimension 1 Filter;ESM=1,6,,Filtro dimensi¢n presupuesto 1;FRC=1,6,,Filtre de dimension budget 1;ENC=1,6,,Budget Dimension 1 Filter';
      Text004@1033 : TextConst 'ENU=1,6,,Budget Dimension 2 Filter;ESM=1,6,,Filtro dimensi¢n presupuesto 2;FRC=1,6,,Filtre de dimension budget 2;ENC=1,6,,Budget Dimension 2 Filter';
      Text005@1004 : TextConst 'ENU=1,6,,Budget Dimension 3 Filter;ESM=1,6,,Filtro dimensi¢n presupuesto 3;FRC=1,6,,Filtre de dimension budget 3;ENC=1,6,,Budget Dimension 3 Filter';
      Text100@1036 : TextConst 'ENU=Period;ESM=Periodo;FRC=P‚riode;ENC=Period';
      NewBudgetName@1037 : Code[10];
      MATRIX_Step@1029 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn';
      BudgetDim1FilterEnable@19060021 : Boolean INDATASET;
      BudgetDim2FilterEnable@19020249 : Boolean INDATASET;
      BudgetDim3FilterEnable@19077914 : Boolean INDATASET;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@1152(MATRIX_SetWanted@1000 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      MATRIX_PeriodRecords@1001 : ARRAY [32] OF Record 2000000007;
      Location@1005 : Record 14;
      Item@1007 : Record 27;
      Customer@1008 : Record 18;
      Vendor@1009 : Record 23;
      MatrixMgt@1003 : Codeunit 9200;
      RecRef@1004 : RecordRef;
      FieldRef@1011 : FieldRef;
      i@1002 : Integer;
    BEGIN
      CLEAR(MATRIX_CaptionSet);
      CLEAR(MATRIX_MatrixRecords);
      FirstColumn := '';
      LastColumn := '';
      MATRIX_CurrentNoOfColumns := 12;

      IF ColumnDimCode = '' THEN
        EXIT;

      CASE ColumnDimCode OF
        Text100:  // Period
          BEGIN
            MatrixMgt.GeneratePeriodMatrixData(
              MATRIX_SetWanted,12,ShowColumnName,
              PeriodType,DateFilter,MATRIX_PrimKeyFirstCaptionInCu,
              MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns,MATRIX_PeriodRecords);
            FOR i := 1 TO 12 DO BEGIN
              MATRIX_MatrixRecords[i]."Period Start" := MATRIX_PeriodRecords[i]."Period Start";
              MATRIX_MatrixRecords[i]."Period End" := MATRIX_PeriodRecords[i]."Period End";
            END;
            FirstColumn := FORMAT(MATRIX_PeriodRecords[1]."Period Start");
            LastColumn := FORMAT(MATRIX_PeriodRecords[MATRIX_CurrentNoOfColumns]."Period End");
          END;
        Location.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Location);
            RecRef.SETTABLE(Location);
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Item.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Item);
            RecRef.SETTABLE(Item);
            IF ItemFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELD(Item.FIELDNO("No."));
              FieldRef.SETFILTER(ItemFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,3,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Customer.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Customer);
            RecRef.SETTABLE(Customer);
            IF SourceNoFilter <> '' THEN BEGIN
              FieldRef := RecRef.FIELD(Customer.FIELDNO("No."));
              FieldRef.SETFILTER(SourceNoFilter);
            END;
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        Vendor.TABLECAPTION:
          BEGIN
            CLEAR(MATRIX_CaptionSet);
            RecRef.GETTABLE(Vendor);
            RecRef.SETTABLE(Vendor);
            MatrixMgt.GenerateMatrixData(
              RecRef,MATRIX_SetWanted,12,1,
              MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
            FOR i := 1 TO MATRIX_CurrentNoOfColumns DO
              MATRIX_MatrixRecords[i].Code := MATRIX_CaptionSet[i];
            IF ShowColumnName THEN
              MatrixMgt.GenerateMatrixData(
                RecRef,MATRIX_SetWanted::Same,12,2,
                MATRIX_PrimKeyFirstCaptionInCu,MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrentNoOfColumns);
          END;
        GLSetup."Global Dimension 1 Code":
          MatrixMgt.GenerateDimColumnCaption(
            GLSetup."Global Dimension 1 Code",
            GlobalDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,
            MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
        GLSetup."Global Dimension 2 Code":
          MatrixMgt.GenerateDimColumnCaption(
            GLSetup."Global Dimension 2 Code",
            GlobalDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,
            MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
        ItemBudgetName."Budget Dimension 1 Code":
          MatrixMgt.GenerateDimColumnCaption(
            ItemBudgetName."Budget Dimension 1 Code",
            BudgetDim1Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,
            MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
        ItemBudgetName."Budget Dimension 2 Code":
          MatrixMgt.GenerateDimColumnCaption(
            ItemBudgetName."Budget Dimension 2 Code",
            BudgetDim2Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,
            MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
        ItemBudgetName."Budget Dimension 3 Code":
          MatrixMgt.GenerateDimColumnCaption(
            ItemBudgetName."Budget Dimension 3 Code",
            BudgetDim3Filter,MATRIX_SetWanted,MATRIX_PrimKeyFirstCaptionInCu,FirstColumn,LastColumn,
            MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,ShowColumnName,MATRIX_CaptionRange);
      END;
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[3]);
    VAR
      PeriodFormMgt@1003 : Codeunit 359;
    BEGIN
      PeriodFormMgt.FindPeriodOnMatrixPage(
        DateFilter,InternalDateFilter,SearchText,PeriodType,
        (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period));
    END;

    LOCAL PROCEDURE GetCaptionClass@13(BudgetDimType@1000 : Integer) : Text[250];
    BEGIN
      IF ItemBudgetName.Name <> CurrentBudgetName THEN
        ItemBudgetName.GET(CurrentAnalysisArea,CurrentBudgetName);
      CASE BudgetDimType OF
        1:
          BEGIN
            IF ItemBudgetName."Budget Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 1 Code");
            EXIT(Text003);
          END;
        2:
          BEGIN
            IF ItemBudgetName."Budget Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 2 Code");
            EXIT(Text004);
          END;
        3:
          BEGIN
            IF ItemBudgetName."Budget Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + ItemBudgetName."Budget Dimension 3 Code");
            EXIT(Text005);
          END;
      END;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Page 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.LOOKUPMODE(TRUE);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE UpdateDimCtrls@1();
    BEGIN
      BudgetDim1FilterEnable := ItemBudgetName."Budget Dimension 1 Code" <> '';
      BudgetDim2FilterEnable := ItemBudgetName."Budget Dimension 2 Code" <> '';
      BudgetDim3FilterEnable := ItemBudgetName."Budget Dimension 3 Code" <> '';
    END;

    [External]
    PROCEDURE SetNewBudgetName@5(NewPurchBudgetName@1000 : Code[10]);
    BEGIN
      NewBudgetName := NewPurchBudgetName;
    END;

    LOCAL PROCEDURE UpdateMatrixSubForm@7();
    BEGIN
      CurrPage.MATRIX.PAGE.SetFilters(
        DateFilter,ItemFilter,SourceNoFilter,
        GlobalDim1Filter,GlobalDim2Filter,
        BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      CurrPage.MATRIX.PAGE.Load(
        MATRIX_CaptionSet,MATRIX_MatrixRecords,MATRIX_CurrentNoOfColumns,
        CurrentBudgetName,LineDimOption,ColumnDimOption,RoundingFactor,ValueType,PeriodType);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentBudgetNameOnAfterValida@19022925();
    BEGIN
      ItemBudgetManagement.SetItemBudgetName(
        CurrentBudgetName,ItemBudgetName,ItemStatisticsBuffer,
        BudgetDim1Filter,BudgetDim2Filter,BudgetDim3Filter);
      ItemBudgetManagement.ValidateLineDimCode(
        ItemBudgetName,LineDimCode,LineDimOption,ColumnDimOption,
        InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
      ItemBudgetManagement.ValidateColumnDimCode(
        ItemBudgetName,ColumnDimCode,ColumnDimOption,LineDimOption,
        InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
      UpdateDimCtrls;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ColumnDimCodeOnAfterValidate@19023109();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE LineDimCodeOnAfterValidate@19031201();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ValueTypeOnAfterValidate@19028630();
    BEGIN
      FindPeriod('');
      MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE PeriodTypeOnAfterValidate@19015506();
    VAR
      MATRIX_Step@1001 : 'First,Previous,Next';
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Period THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::First);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    VAR
      MATRIX_SetWanted@1000 : 'First,Previous,Same,Next';
    BEGIN
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Same);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE RoundingFactorOnAfterValidate@19029817();
    BEGIN
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim3FilterOnAfterValidat@19015715();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 3" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim2FilterOnAfterValidat@19061952();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 2" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE BudgetDim1FilterOnAfterValidat@19002351();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Budget Dimension 1" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE GlobalDim2FilterOnAfterValidat@19025957();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Global Dimension 2" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE GlobalDim1FilterOnAfterValidat@19037628();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::"Global Dimension 1" THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE SourceNoFilterOnAfterValidate@19003103();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Customer THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE ItemFilterOnAfterValidate@19051257();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Item THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      IF ColumnDimOption = ColumnDimOption::Period THEN
        MATRIX_GenerateColumnCaptions(MATRIX_Step::Initial);
      UpdateMatrixSubForm;
    END;

    BEGIN
    END.
  }
}

