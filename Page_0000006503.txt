OBJECT Page 6503 Avail. - Item Tracking Lines
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    Permissions=TableData 337=rm;
    Editable=No;
    CaptionML=[ENU=Avail. - Item Tracking Lines;
               ESM=Disponib. - L¡ns. seg. prod.;
               FRC=ParamŠtres tra‡abilit‚;
               ENC=Avail. - Item Tracking Lines];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table337;
    DataCaptionExpr=CaptionText;
    DataCaptionFields=Lot No.,Serial No.;
    PageType=List;
    OnInit=BEGIN
             FunctionButton2Visible := TRUE;
             FunctionButton1Visible := TRUE;
           END;

    OnOpenPage=BEGIN
                 FunctionButton1Visible := EnableReservations;
                 FunctionButton2Visible := NOT EnableReservations;
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      Name=FunctionButton2;
                      CaptionML=[ENU=F&unctions;
                                 ESM=Acci&ones;
                                 FRC=F&onctions;
                                 ENC=F&unctions];
                      Visible=FunctionButton2Visible;
                      Image=Action }
      { 21      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=&Show Document;
                                 ESM=&Mostrar documento;
                                 FRC=&Afficher le document;
                                 ENC=&Show Document];
                      ToolTipML=[ENU=Open the document that the information on the line comes from.;
                                 ESM=Abrir el documento del que procede la informaci¢n de la l¡nea.;
                                 FRC=Ouvrir le document d'o— proviennent les informations de la ligne.;
                                 ENC=Open the document that the information on the line comes from.];
                      ApplicationArea=#ItemTracking;
                      Image=View;
                      OnAction=BEGIN
                                 ReservMgt.LookupDocument("Source Type","Source Subtype","Source ID",
                                   "Source Batch Name","Source Prod. Order Line","Source Ref. No.");
                               END;
                                }
      { 22      ;1   ;ActionGroup;
                      Name=FunctionButton1;
                      CaptionML=[ENU=F&unctions;
                                 ESM=Acci&ones;
                                 FRC=F&onctions;
                                 ENC=F&unctions];
                      Visible=FunctionButton1Visible;
                      Image=Action }
      { 35      ;2   ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=[ENU=&Cancel Reservation;
                                 ESM=&Cancelar reserva;
                                 FRC=&Annuler la r‚servation;
                                 ENC=&Cancel Reservation];
                      ToolTipML=[ENU=Cancel the reservation that exists for the document line that you opened this window for.;
                                 ESM=Permite cancelar la reserva que existe para la l¡nea de documento cuya ventana ha abierto.;
                                 FRC=Annuler la r‚servation qui existe pour la ligne document pour laquelle vous avez ouvert cette fenˆtre.;
                                 ENC=Cancel the reservation that exists for the document line that you opened this window for.];
                      ApplicationArea=#Reservation;
                      Image=Cancel;
                      OnAction=BEGIN
                                 IF NOT EnableReservations THEN
                                   EXIT;
                                 IF NOT CONFIRM(Text001,FALSE) THEN
                                   EXIT;
                                 ReservEngineMgt.CancelReservation(Rec);
                                 UpdateReservFrom;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=&Show Document;
                                 ESM=&Mostrar documento;
                                 FRC=&Afficher le document;
                                 ENC=&Show Document];
                      ToolTipML=[ENU=Open the document that the information on the line comes from.;
                                 ESM=Abrir el documento del que procede la informaci¢n de la l¡nea.;
                                 FRC=Ouvrir le document d'o— proviennent les informations de la ligne.;
                                 ENC=Open the document that the information on the line comes from.];
                      ApplicationArea=#ItemTracking;
                      Image=View;
                      OnAction=BEGIN
                                 ReservMgt.LookupDocument("Source Type","Source Subtype","Source ID",
                                   "Source Batch Name","Source Prod. Order Line","Source Ref. No.");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the reservation.;
                           ESM=Especifica el estado de la reserva.;
                           FRC=Sp‚cifie l'‚tat de la r‚servation.;
                           ENC=Specifies the status of the reservation.];
                ApplicationArea=#Reservation;
                SourceExpr="Reservation Status";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Document Type;
                           ESM=Tipo documento;
                           FRC=Type de document;
                           ENC=Document Type];
                ToolTipML=[ENU=Specifies the type of document.;
                           ESM=Especifica el tipo de documento.;
                           FRC=Sp‚cifie le type de document.;
                           ENC=Specifies the type of document.];
                ApplicationArea=#ItemTracking;
                SourceExpr=TextCaption }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies for which source type the reservation entry is related to.;
                           ESM=Especifica con qu‚ tipo de origen se relaciona el movimiento de reserva.;
                           FRC=Sp‚cifie … quel type de source l'‚criture r‚servation est li‚e.;
                           ENC=Specifies for which source type the reservation entry is related to.];
                ApplicationArea=#Reservation;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which source ID the reservation entry is related to.;
                           ESM=Especifica con qu‚ id. de origen se relaciona el movimiento de reserva.;
                           FRC=Sp‚cifie … quel code origine l'‚criture r‚servation est li‚e.;
                           ENC=Specifies which source ID the reservation entry is related to.];
                ApplicationArea=#Reservation;
                SourceExpr="Source ID" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Location of the items that have been reserved in the entry.;
                           ESM=Especifica el almac‚n de los producto que se han reservado en el movimiento.;
                           FRC=Sp‚cifie l'emplacement des articles qui ont ‚t‚ r‚serv‚s dans l'‚criture.;
                           ENC=Specifies the Location of the items that have been reserved in the entry.];
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number of the item that is being handled on the document line.;
                           ESM=Especifica el n£mero de serie del producto que se manipula en la l¡nea del documento.;
                           FRC=Sp‚cifie le num‚ro de s‚rie de l'article trait‚ sur la ligne document.;
                           ENC=Specifies the serial number of the item that is being handled on the document line.];
                ApplicationArea=#ItemTracking;
                SourceExpr="Serial No." }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lot number of the item that is being handled with the associated document line.;
                           ESM=Especifica el n£mero de lote del art¡culo que se manipula con la l¡nea del documento asociada.;
                           FRC=Sp‚cifie le num‚ro de lot de l'article trait‚ avec la ligne document associ‚e.;
                           ENC=Specifies the lot number of the item that is being handled with the associated document line.];
                ApplicationArea=#ItemTracking;
                SourceExpr="Lot No." }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the reserved items are expected to enter inventory.;
                           ESM=Especifica la fecha en la que se espera que los productos reservados entren en existencias.;
                           FRC=Sp‚cifie la date … laquelle les articles r‚serv‚s sont attendus dans l'inventaire.;
                           ENC=Specifies the date on which the reserved items are expected to enter inventory.];
                ApplicationArea=#Reservation;
                SourceExpr="Expected Receipt Date" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item that has been reserved in the entry.;
                           ESM=Especifica la cantidad del producto que se ha reservado en el movimiento.;
                           FRC=Sp‚cifie la quantit‚ de l'article r‚serv‚ dans l'‚criture.;
                           ENC=Specifies the quantity of the item that has been reserved in the entry.];
                ApplicationArea=#Reservation;
                SourceExpr="Quantity (Base)" }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Reserved Qty. (Base);
                           ESM=Cdad. reservada (base);
                           FRC=Quantit‚ r‚serv‚e (base);
                           ENC=Reserved Qty. (Base)];
                ToolTipML=[ENU=Specifies the quantity that has been reserved for the item.;
                           ESM=Especifica la cantidad del producto reservada.;
                           FRC=Sp‚cifie la quantit‚ qui a ‚t‚ re‡ue pour l'article.;
                           ENC=Specifies the quantity that has been reserved for the item.];
                ApplicationArea=#Reservation;
                SourceExpr=ReservedQtyBase;
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Available Quantity;
                           ESM=Cdad. disponible;
                           FRC=Quantit‚ disponible;
                           ENC=Available Quantity];
                ToolTipML=[ENU=Specifies the quantity of the item that is available for reservation.;
                           ESM=Especifica la cantidad del producto que est  disponible para la reserva.;
                           FRC=Sp‚cifie la quantit‚ de l'article disponible pour r‚servation.;
                           ENC=Specifies the quantity of the item that is available for reservation.];
                ApplicationArea=#Reservation;
                DecimalPlaces=0:5;
                SourceExpr=QtyToReserve;
                Editable=FALSE }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Current Reserved Quantity;
                           ESM=Cdad. reservada actualmente;
                           FRC=R‚servation en cours;
                           ENC=Current Reserved Quantity];
                ToolTipML=[ENU=Specifies the quantity of the item that is reserved for the document type.;
                           ESM=Especifica la cantidad del producto que est  reservada para el tipo de documento.;
                           FRC=Sp‚cifie la quantit‚ de l'article r‚serv‚e pour le type de document.;
                           ENC=Specifies the quantity of the item that is reserved for the document type.];
                ApplicationArea=#Reservation;
                DecimalPlaces=0:5;
                SourceExpr=ReservedThisLine }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Cancel reservation?;ESM=¨Confirma que desea cancelar la/s reserva/s?;FRC=Annuler la r‚servation?;ENC=Cancel reservation?';
      ReservEntry@1003 : Record 337;
      SalesLine@1006 : Record 37;
      PurchLine@1007 : Record 39;
      ItemJnlLine@1008 : Record 83;
      ReqLine@1009 : Record 246;
      ProdOrderLine@1010 : Record 5406;
      ProdOrderComp@1011 : Record 5407;
      PlanningComponent@1012 : Record 99000829;
      TransLine@1013 : Record 5741;
      ServiceInvLine@1014 : Record 5902;
      JobPlanningLine@1000 : Record 1003;
      AssemblyHeader@1027 : Record 900;
      AssemblyLine@1036 : Record 901;
      AssemblyLineReserve@1035 : Codeunit 926;
      AssemblyHeaderReserve@1004 : Codeunit 925;
      ReservMgt@1015 : Codeunit 99000845;
      ReservEngineMgt@1016 : Codeunit 99000831;
      ReserveSalesLine@1017 : Codeunit 99000832;
      ReserveReqLine@1018 : Codeunit 99000833;
      ReservePurchLine@1019 : Codeunit 99000834;
      ReserveItemJnlLine@1020 : Codeunit 99000835;
      ReserveProdOrderLine@1021 : Codeunit 99000837;
      ReserveProdOrderComp@1022 : Codeunit 99000838;
      ReservePlanningComponent@1023 : Codeunit 99000840;
      ReserveTransLine@1024 : Codeunit 99000836;
      ReserveServiceInvLine@1025 : Codeunit 99000842;
      JobPlanningLineReserve@1002 : Codeunit 1032;
      QtyToReserve@1026 : Decimal;
      CaptionText@1029 : Text[80];
      EnableReservations@1030 : Boolean;
      FunctionButton1Visible@8739 : Boolean INDATASET;
      FunctionButton2Visible@9714 : Boolean INDATASET;

    [External]
    PROCEDURE SetSalesLine@24(VAR CurrentSalesLine@1000 : Record 37;CurrentReservEntry@1001 : Record 337);
    BEGIN
      CurrentSalesLine.TESTFIELD(Type,CurrentSalesLine.Type::Item);
      SalesLine := CurrentSalesLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetSalesLine(SalesLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveSalesLine.FilterReservFor(ReservEntry,SalesLine);
      CaptionText := ReserveSalesLine.Caption(SalesLine);
    END;

    [External]
    PROCEDURE SetReqLine@23(VAR CurrentReqLine@1000 : Record 246;CurrentReservEntry@1001 : Record 337);
    BEGIN
      ReqLine := CurrentReqLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetReqLine(ReqLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveReqLine.FilterReservFor(ReservEntry,ReqLine);
      CaptionText := ReserveReqLine.Caption(ReqLine);
    END;

    [External]
    PROCEDURE SetPurchLine@22(VAR CurrentPurchLine@1000 : Record 39;CurrentReservEntry@1001 : Record 337);
    BEGIN
      CurrentPurchLine.TESTFIELD(Type,CurrentPurchLine.Type::Item);
      PurchLine := CurrentPurchLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetPurchLine(PurchLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReservePurchLine.FilterReservFor(ReservEntry,PurchLine);
      CaptionText := ReservePurchLine.Caption(PurchLine);
    END;

    [External]
    PROCEDURE SetItemJnlLine@21(VAR CurrentItemJnlLine@1000 : Record 83;CurrentReservEntry@1001 : Record 337);
    BEGIN
      ItemJnlLine := CurrentItemJnlLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetItemJnlLine(ItemJnlLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveItemJnlLine.FilterReservFor(ReservEntry,ItemJnlLine);
      CaptionText := ReserveItemJnlLine.Caption(ItemJnlLine);
    END;

    [External]
    PROCEDURE SetProdOrderLine@19(VAR CurrentProdOrderLine@1000 : Record 5406;CurrentReservEntry@1001 : Record 337);
    BEGIN
      ProdOrderLine := CurrentProdOrderLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetProdOrderLine(ProdOrderLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveProdOrderLine.FilterReservFor(ReservEntry,ProdOrderLine);
      CaptionText := ReserveProdOrderLine.Caption(ProdOrderLine);
    END;

    [External]
    PROCEDURE SetProdOrderComponent@1(VAR CurrentProdOrderComp@1000 : Record 5407;CurrentReservEntry@1001 : Record 337);
    BEGIN
      ProdOrderComp := CurrentProdOrderComp;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetProdOrderComponent(ProdOrderComp);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveProdOrderComp.FilterReservFor(ReservEntry,ProdOrderComp);
      CaptionText := ReserveProdOrderComp.Caption(ProdOrderComp);
    END;

    [External]
    PROCEDURE SetPlanningComponent@15(VAR CurrentPlanningComponent@1000 : Record 99000829;CurrentReservEntry@1001 : Record 337);
    BEGIN
      PlanningComponent := CurrentPlanningComponent;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetPlanningComponent(PlanningComponent);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReservePlanningComponent.FilterReservFor(ReservEntry,PlanningComponent);
      CaptionText := ReservePlanningComponent.Caption(PlanningComponent);
    END;

    [External]
    PROCEDURE SetTransferLine@16(VAR CurrentTransLine@1000 : Record 5741;CurrentReservEntry@1001 : Record 337;Direction@1002 : 'Outbound,Inbound');
    BEGIN
      TransLine := CurrentTransLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetTransferLine(TransLine,Direction);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveTransLine.FilterReservFor(ReservEntry,TransLine,Direction);
      CaptionText := ReserveTransLine.Caption(TransLine);
    END;

    [External]
    PROCEDURE SetServiceInvLine@8(VAR CurrentServiceInvLine@1000 : Record 5902;CurrentReservEntry@1001 : Record 337);
    BEGIN
      CurrentServiceInvLine.TESTFIELD(Type,CurrentServiceInvLine.Type::Item);
      ServiceInvLine := CurrentServiceInvLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetServLine(ServiceInvLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveServiceInvLine.FilterReservFor(ReservEntry,ServiceInvLine);
      CaptionText := ReserveServiceInvLine.Caption(ServiceInvLine);
    END;

    [External]
    PROCEDURE SetJobPlanningLine@9(VAR CurrentJobPlanningLine@1000 : Record 1003;CurrentReservEntry@1001 : Record 337);
    BEGIN
      CurrentJobPlanningLine.TESTFIELD(Type,CurrentJobPlanningLine.Type::Item);
      JobPlanningLine := CurrentJobPlanningLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetJobPlanningLine(JobPlanningLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      JobPlanningLineReserve.FilterReservFor(ReservEntry,JobPlanningLine);
      CaptionText := JobPlanningLineReserve.Caption(JobPlanningLine);
    END;

    [External]
    PROCEDURE SetItemTrackingLine@3(LookupType@1000 : Integer;LookupSubtype@1002 : Integer;CurrentReservEntry@1001 : Record 337;SearchForSupply@1004 : Boolean;AvailabilityDate@1003 : Date);
    BEGIN
      ReservMgt.SetMatchFilter(CurrentReservEntry,Rec,SearchForSupply,AvailabilityDate);
      SETRANGE("Source Type",LookupType);
      SETRANGE("Source Subtype",LookupSubtype);
      EnableReservations := TRUE;
    END;

    LOCAL PROCEDURE UpdateReservFrom@17();
    BEGIN
      CASE ReservEntry."Source Type" OF
        DATABASE::"Sales Line":
          BEGIN
            SalesLine.FIND;
            SetSalesLine(SalesLine,ReservEntry);
          END;
        DATABASE::"Requisition Line":
          BEGIN
            ReqLine.FIND;
            SetReqLine(ReqLine,ReservEntry);
          END;
        DATABASE::"Purchase Line":
          BEGIN
            PurchLine.FIND;
            SetPurchLine(PurchLine,ReservEntry);
          END;
        DATABASE::"Item Journal Line":
          BEGIN
            ItemJnlLine.FIND;
            SetItemJnlLine(ItemJnlLine,ReservEntry);
          END;
        DATABASE::"Prod. Order Line":
          BEGIN
            ProdOrderLine.FIND;
            SetProdOrderLine(ProdOrderLine,ReservEntry);
          END;
        DATABASE::"Prod. Order Component":
          BEGIN
            ProdOrderComp.FIND;
            SetProdOrderComponent(ProdOrderComp,ReservEntry);
          END;
        DATABASE::"Planning Component":
          BEGIN
            PlanningComponent.FIND;
            SetPlanningComponent(PlanningComponent,ReservEntry);
          END;
        DATABASE::"Transfer Line":
          BEGIN
            TransLine.FIND;
            SetTransferLine(TransLine,ReservEntry,ReservEntry."Source Subtype");
          END;
        DATABASE::"Service Line":
          BEGIN
            ServiceInvLine.FIND;
            SetServiceInvLine(ServiceInvLine,ReservEntry);
          END;
        DATABASE::"Job Planning Line":
          BEGIN
            JobPlanningLine.FIND;
            SetJobPlanningLine(JobPlanningLine,ReservEntry);
          END;
      END;
    END;

    LOCAL PROCEDURE ReservedThisLine@2() : Decimal;
    BEGIN
      // This procedure is intentionally left blank.
    END;

    LOCAL PROCEDURE ReservedQtyBase@5() : Decimal;
    BEGIN
      // This procedure is intentionally left blank.
    END;

    [External]
    PROCEDURE SetAssemblyLine@4(VAR CurrentAsmLine@1002 : Record 901;CurrentReservEntry@1001 : Record 337);
    BEGIN
      CurrentAsmLine.TESTFIELD(Type,CurrentAsmLine.Type::Item);
      AssemblyLine := CurrentAsmLine;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetAssemblyLine(AssemblyLine);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      AssemblyLineReserve.FilterReservFor(ReservEntry,AssemblyLine);
      CaptionText := AssemblyLineReserve.Caption(AssemblyLine);
    END;

    [External]
    PROCEDURE SetAssemblyHeader@7(VAR CurrentAsmHeader@1000 : Record 900;CurrentReservEntry@1001 : Record 337);
    BEGIN
      AssemblyHeader := CurrentAsmHeader;
      ReservEntry := CurrentReservEntry;

      CLEAR(ReservMgt);
      ReservMgt.SetAssemblyHeader(AssemblyHeader);
      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      AssemblyHeaderReserve.FilterReservFor(ReservEntry,AssemblyHeader);
      CaptionText := AssemblyHeaderReserve.Caption(AssemblyHeader);
    END;

    BEGIN
    END.
  }
}

