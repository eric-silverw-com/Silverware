OBJECT Page 7118 Purchase Analysis Report
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Analysis Report;
               ESM=Informe de an lisis de compras;
               FRC=Rapport d'analyse des achats;
               ENC=Purchase Analysis Report];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table7114;
    DataCaptionExpr=GetCaption;
    SourceTableView=WHERE(Analysis Area=CONST(Purchase));
    PageType=Card;
    OnOpenPage=VAR
                 AnalysisLineTemplate@1001 : Record 7112;
               BEGIN
                 IF (NewCurrentReportName <> '') AND (NewCurrentReportName <> CurrentReportName) THEN BEGIN
                   CurrentReportName := NewCurrentReportName;
                   AnalysisReportMgt.CheckReportName(CurrentReportName,Rec);
                   ValidateReportName;
                   AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
                   ValidateAnalysisTemplateName;
                 END;

                 AnalysisReportMgt.OpenAnalysisLines(CurrentLineTemplate,Rec);
                 AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,AnalysisColumn);

                 AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
                 AnalysisReportMgt.SetSourceType(Rec,CurrentSourceTypeFilter);
                 AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);

                 GLSetup.GET;

                 IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
                   IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
                     ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
                   ELSE BEGIN
                     CLEAR(ItemAnalysisView);
                     ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;

                 FindPeriod('');

                 NoOfColumns := PurchAnalysisMatrix.GetMatrixDimension;
                 Direction := Direction::Forward;

                 ClearPoints;
                 SetPointsAnalysisColumn;
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Actions;
                                 ESM=&Acciones;
                                 FRC=&Actions;
                                 ENC=&Actions];
                      Image=Action }
      { 17      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Set Up &Lines;
                                 ESM=Configurar &l¡neas;
                                 FRC=D‚finir les &lignes;
                                 ENC=Set Up &Lines];
                      ToolTipML=[ENU=Open the list of analysis lines that exist for this type of analysis report, for example to set up new lines that you can select from.;
                                 ESM=Permite abrir la lista de l¡neas de an lisis que existen para este tipo de informe de an lisis. Por ejemplo, para configurar nuevas l¡neas entre las que seleccionar.;
                                 FRC=Ouvrez la liste des lignes d'analyse qui existent pour ce type de rapport d'analyse, par exemple pour configurer de nouvelles lignes parmi lesquelles vous pouvez op‚rer une s‚lection.;
                                 ENC=Open the list of analysis lines that exist for this type of analysis report, for example to set up new lines that you can select from.];
                      ApplicationArea=#PurchaseAnalysis;
                      Image=SetupLines;
                      OnAction=BEGIN
                                 AnalysisReportMgt.OpenAnalysisLinesForm(Rec,CurrentLineTemplate);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Set Up &Columns;
                                 ESM=Configurar &columnas;
                                 FRC=D‚finir les &colonnes;
                                 ENC=Set Up &Columns];
                      ToolTipML=[ENU=Open the list of analysis columns that exist for this type of analysis report, for example to set up new columns that you can select from.;
                                 ESM=Permite abrir la lista de columnas de an lisis que existen para este tipo de informe de an lisis. Por ejemplo, para configurar nuevas columnas entre las que seleccionar.;
                                 FRC=Ouvrez la liste des colonnes d'analyse qui existent pour ce type de rapport d'analyse, par exemple pour configurer de nouvelles colonnes parmi lesquelles vous pouvez op‚rer une s‚lection.;
                                 ENC=Open the list of analysis columns that exist for this type of analysis report, for example to set up new columns that you can select from.];
                      ApplicationArea=#PurchaseAnalysis;
                      Image=SetupColumns;
                      OnAction=BEGIN
                                 AnalysisReportMgt.OpenAnalysisColumnsForm(Rec,CurrentColumnTemplate);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 19      ;2   ;Separator  }
      { 3       ;2   ;ActionGroup;
                      CaptionML=[ENU=Export to Excel;
                                 ESM=Exportar a Excel;
                                 FRC=Exporter dans Excel;
                                 ENC=Export to Excel];
                      Image=ExportToExcel }
      { 20      ;3   ;Action    ;
                      CaptionML=[ENU=Create New Document;
                                 ESM=Crear documento nuevo;
                                 FRC=Cr‚er un document;
                                 ENC=Create New Document];
                      ToolTipML=[ENU=Open the analysis report in a new Excel workbook. This creates an Excel workbook on your device.;
                                 ESM=Permite abrir el informe de an lisis en un nuevo libro de Excel. De este modo, se crea un libro de Excel en el dispositivo.;
                                 FRC=Ouvrez le rapport d'analyse dans un nouveau classeur Excel. Cela cr‚e un classeur Excel sur votre appareil.;
                                 ENC=Open the analysis report in a new Excel workbook. This creates an Excel workbook on your device.];
                      ApplicationArea=#PurchaseAnalysis;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportAnalysisRepToExcel@1000 : Report 7113;
                               BEGIN
                                 ExportAnalysisRepToExcel.SetOptions(Rec,CurrentColumnTemplate,CurrentLineTemplate);
                                 ExportAnalysisRepToExcel.RUN;
                               END;
                                }
      { 4       ;3   ;Action    ;
                      CaptionML=[ENU=Update Existing Document;
                                 ESM=Actualizar documento existente;
                                 FRC=Mettre … jour le document existant;
                                 ENC=Update Existing Document];
                      ToolTipML=[ENU=Refresh the analysis report in an existing Excel workbook. You must specify the workbook that you want to update.;
                                 ESM=Actualiza el informe de an lisis de un libro de Excel existente. Debe especificar el libro que desea actualizar.;
                                 FRC=Actualisez le rapport d'analyse dans un classeur Excel existant. Vous devez sp‚cifier le classeur que vous voulez mettre … jour.;
                                 ENC=Refresh the analysis report in an existing Excel workbook. You must specify the workbook that you want to update.];
                      ApplicationArea=#PurchaseAnalysis;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ExportAnalysisRepToExcel@1000 : Report 7113;
                               BEGIN
                                 ExportAnalysisRepToExcel.SetOptions(Rec,CurrentColumnTemplate,CurrentLineTemplate);
                                 ExportAnalysisRepToExcel.SetUpdateExistingWorksheet(TRUE);
                                 ExportAnalysisRepToExcel.RUN;
                               END;
                                }
      { 22      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Reports;
                                 ESM=&Informes;
                                 FRC=&Rapports;
                                 ENC=&Reports];
                      Image=Report }
      { 37      ;2   ;Action    ;
                      CaptionML=[ENU=Print;
                                 ESM=Imprimir;
                                 FRC=Imprimer;
                                 ENC=Print];
                      ToolTipML=[ENU=Print the information in the window. A print request window opens where you can specify what to include on the print-out.;
                                 ESM=Permite imprimir la informaci¢n de la ventana. Se abre una ventana de solicitud de impresi¢n en la que puede especificar qu‚ incluir en la copia impresa.;
                                 FRC=Imprimez les informations dans la fenˆtre. Une fenˆtre de demande d'impression s'ouvre et vous permet d'indiquer les ‚l‚ments … imprimer.;
                                 ENC=Print the information in the window. A print request window opens where you can specify what to include on the print-out.];
                      ApplicationArea=#PurchaseAnalysis;
                      Image=Print;
                      OnAction=VAR
                                 AnalysisReport@1006 : Report 7112;
                                 DateFilter@1005 : Text;
                                 ItemBudgetFilter@1004 : Text;
                                 LocationFilter@1003 : Text;
                                 Dim1Filter@1002 : Text;
                                 Dim2Filter@1001 : Text;
                                 Dim3Filter@1000 : Text;
                               BEGIN
                                 AnalysisReport.SetParams(GETRANGEMAX("Analysis Area"),CurrentReportName,CurrentLineTemplate,CurrentColumnTemplate);
                                 DateFilter := GETFILTER("Date Filter");
                                 ItemBudgetFilter := GETFILTER("Item Budget Filter");
                                 LocationFilter := GETFILTER("Location Filter");
                                 Dim1Filter := GETFILTER("Dimension 1 Filter");
                                 Dim2Filter := GETFILTER("Dimension 2 Filter");
                                 Dim3Filter := GETFILTER("Dimension 3 Filter");
                                 AnalysisReport.SetFilters(
                                   DateFilter,ItemBudgetFilter,LocationFilter,Dim1Filter,Dim2Filter,Dim3Filter,
                                   CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                                 AnalysisReport.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1       ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=&Show Matrix;
                                 ESM=&Mostrar matriz;
                                 FRC=&Afficher matrice;
                                 ENC=&Show Matrix];
                      ToolTipML=[ENU=View the actual analysis report according to the selected filters and options.;
                                 ESM=Permite ver el informe de an lisis real en funci¢n de los filtros y las opciones seleccionados.;
                                 FRC=Affichez le rapport d'analyse r‚el en fonction des filtres et options s‚lectionn‚s.;
                                 ENC=View the actual analysis report according to the selected filters and options.];
                      ApplicationArea=#PurchaseAnalysis;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 SetFilters;

                                 CLEAR(MatrixColumnCaptions);

                                 FillMatrixColumns;

                                 CLEAR(PurchAnalysisMatrix);
                                 PurchAnalysisMatrix.Load(AnalysisColumn,MatrixColumnCaptions,FirstLineNo,LastLineNo);
                                 PurchAnalysisMatrix.SETTABLEVIEW(AnalysisLine);
                                 PurchAnalysisMatrix.RUNMODAL;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 ESM=Va al conjunto de datos anterior.;
                                 FRC=Allez … l'ensemble de donn‚es pr‚c‚dent.;
                                 ENC=Go to the previous set of data.];
                      ApplicationArea=#PurchaseAnalysis;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 Direction := Direction::Backward;
                                 SetPointsAnalysisColumn;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 ESM=Va al siguiente conjunto de datos.;
                                 FRC=Allez … l'ensemble de donn‚es suivant.;
                                 ENC=Go to the next set of data.];
                      ApplicationArea=#PurchaseAnalysis;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 Direction := Direction::Forward;
                                 SetPointsAnalysisColumn;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 29  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 40  ;2   ;Field     ;
                CaptionML=[ENU=Analysis Report Name;
                           ESM=Nombre del informe de an lisis;
                           FRC=Nom du rapport d'analyse;
                           ENC=Analysis Report Name];
                ToolTipML=[ENU=Specifies the name of the analysis report.;
                           ESM=Especifica el nombre del informe de an lisis.;
                           FRC=Sp‚cifie le nom du rapport d'analyse.;
                           ENC=Specifies the name of the analysis report.];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentReportName;
                OnValidate=BEGIN
                             AnalysisReportMgt.CheckReportName(CurrentReportName,Rec);
                             CurrentReportNameOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF AnalysisReportMgt.LookupReportName(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
                             Text := CurrentReportName;
                             CurrentReportNameOnAfterValidate;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Analysis Line Template;
                           ESM=Plantilla de l¡nea de an lisis;
                           FRC=ModŠle de ligne d'analyse;
                           ENC=Analysis Line Template];
                ToolTipML=[ENU=Specifies the line template that is used for the analysis view.;
                           ESM=Especifica la plantilla de l¡neas que se usa para la vista de an lisis.;
                           FRC=Sp‚cifie le modŠle de ligne utilis‚ pour la vue d'analyse.;
                           ENC=Specifies the line template that is used for the analysis view.];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentLineTemplate;
                OnValidate=BEGIN
                             AnalysisReportMgt.CheckAnalysisLineTemplName(CurrentLineTemplate,Rec);
                             CurrentLineTemplateOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           AnalysisReportMgt.LookupAnalysisLineTemplName(CurrentLineTemplate,Rec);
                           ValidateAnalysisTemplateName;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Analysis Column Template;
                           ESM=Plantilla columna de an lisis;
                           FRC=ModŠle de colonne d'analyse;
                           ENC=Analysis Column Template];
                ToolTipML=[ENU=Specifies the column template that is used for the analysis view.;
                           ESM=Especifica la plantilla de columnas que se usa para la vista de an lisis.;
                           FRC=Sp‚cifie le modŠle de colonne utilis‚ pour la vue d'analyse.;
                           ENC=Specifies the column template that is used for the analysis view.];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentColumnTemplate;
                OnValidate=BEGIN
                             AnalysisReportMgt.GetColumnTemplate(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate);
                             CurrentColumnTemplateOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           IF AnalysisReportMgt.LookupColumnName(GETRANGEMAX("Analysis Area"),CurrentColumnTemplate) THEN BEGIN
                             Text := CurrentColumnTemplate;
                             CurrentColumnTemplateOnAfterValidate;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           ESM=Filtros;
                           FRC=Filtres;
                           ENC=Filters] }

    { 27  ;2   ;Field     ;
                CaptionML=[ENU=Source Type Filter;
                           ESM=Filtro tipo origen;
                           FRC=Filtre type d'origine;
                           ENC=Source Type Filter];
                ToolTipML=[ENU=Specifies filters for what is shown in the analysis view.;
                           ESM=Especifica los filtros para indicar qu‚ se muestra en la vista de an lisis.;
                           FRC=Sp‚cifie des filtres pour afficher le contenu de la vue d'analyse.;
                           ENC=Specifies filters for what is shown in the analysis view.];
                OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                 ESM=" ,Cliente,Proveedor,Producto";
                                 FRC=" ,Client,Fournisseur,Article";
                                 ENC=" ,Customer,Vendor,Item"];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentSourceTypeFilter;
                OnValidate=BEGIN
                             SETRANGE("Source Type Filter",CurrentSourceTypeFilter);
                             CurrentSourceTypeNoFilter := '';
                             AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
                             CurrentSourceTypeFilterOnAfterValidate;
                           END;
                            }

    { 25  ;2   ;Field     ;
                CaptionML=[ENU=Source No. Filter;
                           ESM=Filtro n§ origen;
                           FRC=Filtre nø d'origine;
                           ENC=Source No. Filter];
                ToolTipML=[ENU=Specifies filters for what is shown in the analysis view.;
                           ESM=Especifica los filtros para indicar qu‚ se muestra en la vista de an lisis.;
                           FRC=Sp‚cifie des filtres pour afficher le contenu de la vue d'analyse.;
                           ENC=Specifies filters for what is shown in the analysis view.];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=CurrentSourceTypeNoFilter;
                OnValidate=BEGIN
                             CurrentSourceTypeNoFilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           AnalysisReportMgt.LookupSourceNo(Rec,CurrentSourceTypeFilter,CurrentSourceTypeNoFilter);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ESM=Opciones matriz;
                           FRC=Options de matrice;
                           ENC=Matrix Options] }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESM=Ver por;
                           FRC=Afficher par;
                           ENC=View by];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           ESM=Especifica para qu‚ periodos se muestran los importes.;
                           FRC=Indique selon quelle p‚riodicit‚ les montants sont affich‚s.;
                           ENC=Specifies by which period amounts are displayed.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESM=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable;
                                 FRC=Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode comptable;
                                 ENC=Day,Week,Month,Quarter,Year,Accounting Period];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           ESM=Conjunto de columnas;
                           FRC=Jeu de colonnes;
                           ENC=Column Set];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           ESM=Especifica el rango de valores que se muestran en la ventana de la matriz, por ejemplo, el periodo total. Para modificar el contenido de este campo, elija la opci¢n Conjunto siguiente o Conjunto anterior.;
                           FRC=Sp‚cifie la plage de valeurs affich‚e dans la fenˆtre de matrice (par exemple, total de la p‚riode). Pour modifier le contenu de ce champ, choisissez Jeu pr‚c‚dent ou Jeu suivant.;
                           ENC=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.];
                ApplicationArea=#PurchaseAnalysis;
                SourceExpr=ColumnsSet }

  }
  CODE
  {
    VAR
      GLSetup@1017 : Record 98;
      AnalysisColumn@1003 : TEMPORARY Record 7118;
      ItemAnalysisView@1016 : Record 7152;
      AnalysisLine@1020 : Record 7114;
      AnalysisReportMgt@1000 : Codeunit 7110;
      PurchAnalysisMatrix@1004 : Page 9205;
      CurrentReportName@1005 : Code[10];
      CurrentLineTemplate@1001 : Code[10];
      CurrentColumnTemplate@1002 : Code[10];
      NewCurrentReportName@1010 : Code[10];
      CurrentSourceTypeNoFilter@1015 : Text;
      CurrentSourceTypeFilter@1014 : ' ,Customer,Vendor,Item';
      PeriodType@1006 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      Direction@1012 : 'Backward,Forward';
      NoOfColumns@1013 : Integer;
      FirstLineNo@1018 : Integer;
      LastLineNo@1019 : Integer;
      FirstColumn@1021 : Text[1024];
      LastColumn@1022 : Text[1024];
      MatrixColumnCaptions@1009 : ARRAY [32] OF Text[1024];

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType);
      SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
        SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
    END;

    LOCAL PROCEDURE ValidateAnalysisTemplateName@3();
    VAR
      AnalysisLineTemplate@1001 : Record 7112;
      PrevItemAnalysisView@1000 : Record 7152;
    BEGIN
      IF AnalysisLineTemplate.GET(GETRANGEMAX("Analysis Area"),CurrentLineTemplate) THEN
        IF (AnalysisLineTemplate."Default Column Template Name" <> '') AND
           (CurrentColumnTemplate <> AnalysisLineTemplate."Default Column Template Name")
        THEN BEGIN
          CurrentColumnTemplate := AnalysisLineTemplate."Default Column Template Name";
          AnalysisReportMgt.OpenColumns(CurrentColumnTemplate,Rec,AnalysisColumn);
          AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
        END;

      IF AnalysisLineTemplate."Item Analysis View Code" <> ItemAnalysisView.Code THEN BEGIN
        PrevItemAnalysisView := ItemAnalysisView;
        IF AnalysisLineTemplate."Item Analysis View Code" <> '' THEN
          ItemAnalysisView.GET(GETRANGEMAX("Analysis Area"),AnalysisLineTemplate."Item Analysis View Code")
        ELSE BEGIN
          CLEAR(ItemAnalysisView);
          ItemAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
          ItemAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
        END;
        IF PrevItemAnalysisView."Dimension 1 Code" <> ItemAnalysisView."Dimension 1 Code" THEN
          SETRANGE("Dimension 1 Filter");
        IF PrevItemAnalysisView."Dimension 2 Code" <> ItemAnalysisView."Dimension 2 Code" THEN
          SETRANGE("Dimension 2 Filter");
        IF PrevItemAnalysisView."Dimension 3 Code" <> ItemAnalysisView."Dimension 3 Code" THEN
          SETRANGE("Dimension 3 Filter");
      END;
    END;

    LOCAL PROCEDURE ValidateReportName@1();
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF AnalysisReportName.GET(GETRANGEMAX("Analysis Area"),CurrentReportName) THEN BEGIN
        IF AnalysisReportName."Analysis Line Template Name" <> '' THEN
          CurrentLineTemplate := AnalysisReportName."Analysis Line Template Name";
        IF AnalysisReportName."Analysis Column Template Name" <> '' THEN
          CurrentColumnTemplate := AnalysisReportName."Analysis Column Template Name";
      END;
    END;

    LOCAL PROCEDURE GetCaption@6() : Text[250];
    VAR
      AnalysisReportName@1000 : Record 7111;
    BEGIN
      IF CurrentReportName <> '' THEN
        IF AnalysisReportName.GET("Analysis Area"::Purchase,CurrentReportName) THEN
          EXIT(AnalysisReportName.Name + ' ' + AnalysisReportName.Description);
    END;

    [External]
    PROCEDURE SetFilters@4();
    BEGIN
      AnalysisColumn.RESET;
      AnalysisColumn.SETRANGE("Analysis Area","Analysis Area"::Purchase);
      AnalysisColumn.SETRANGE("Analysis Column Template",CurrentColumnTemplate);

      AnalysisLine.COPY(Rec);
      AnalysisLine.SETRANGE("Analysis Area","Analysis Area"::Purchase);
      AnalysisLine.SETRANGE("Analysis Line Template Name",CurrentLineTemplate);
    END;

    LOCAL PROCEDURE ColumnsSet@7() : Text[80];
    BEGIN
      IF FirstColumn = LastColumn THEN
        EXIT(FirstColumn);

      EXIT(FirstColumn + '..' + LastColumn);
    END;

    LOCAL PROCEDURE SetPointsAnalysisColumn@22();
    VAR
      AnalysisColumn2@1013 : Record 7118;
      tmpFirstColumn@1000 : Text[80];
      tmpLastColumn@1001 : Text[80];
      tmpFirstLineNo@1003 : Integer;
      tmpLastLineNo@1002 : Integer;
    BEGIN
      AnalysisColumn2.SETRANGE("Analysis Area",AnalysisColumn2."Analysis Area"::Purchase);
      AnalysisColumn2.SETRANGE("Analysis Column Template",CurrentColumnTemplate);

      IF (Direction = Direction::Forward) OR
         (FirstColumn = '')
      THEN BEGIN
        IF LastColumn = '' THEN BEGIN
          IF AnalysisColumn2.FIND('-') THEN;
          tmpFirstColumn := AnalysisColumn2."Column Header";
          tmpFirstLineNo := AnalysisColumn2."Line No.";
          AnalysisColumn2.NEXT(NoOfColumns - 1);
          tmpLastColumn := AnalysisColumn2."Column Header";
          tmpLastLineNo := AnalysisColumn2."Line No.";
        END ELSE BEGIN
          IF AnalysisColumn2.GET(AnalysisColumn2."Analysis Area"::Purchase,CurrentColumnTemplate,LastLineNo) THEN;
          AnalysisColumn2.NEXT(1);
          tmpFirstColumn := AnalysisColumn2."Column Header";
          tmpFirstLineNo := AnalysisColumn2."Line No.";
          AnalysisColumn2.NEXT(NoOfColumns - 1);
          tmpLastColumn := AnalysisColumn2."Column Header";
          tmpLastLineNo := AnalysisColumn2."Line No.";
        END;
      END ELSE BEGIN
        IF AnalysisColumn2.GET(AnalysisColumn2."Analysis Area"::Purchase,CurrentColumnTemplate,FirstLineNo) THEN;
        AnalysisColumn2.NEXT(-1);
        tmpLastColumn := AnalysisColumn2."Column Header";
        tmpLastLineNo := AnalysisColumn2."Line No.";
        AnalysisColumn2.NEXT(-NoOfColumns + 1);
        tmpFirstColumn := AnalysisColumn2."Column Header";
        tmpFirstLineNo := AnalysisColumn2."Line No.";
      END;

      IF (tmpFirstColumn = tmpLastColumn) AND
         ((tmpLastColumn = LastColumn) OR (tmpFirstColumn = FirstColumn))
      THEN
        EXIT;

      FirstColumn := tmpFirstColumn;
      LastColumn := tmpLastColumn;
      FirstLineNo := tmpFirstLineNo;
      LastLineNo := tmpLastLineNo;
    END;

    LOCAL PROCEDURE FillMatrixColumns@8();
    VAR
      AnalysisColumn2@1013 : Record 7118;
      i@1004 : Integer;
    BEGIN
      AnalysisColumn2.SETRANGE("Analysis Area",AnalysisColumn2."Analysis Area"::Purchase);
      AnalysisColumn2.SETRANGE("Analysis Column Template",CurrentColumnTemplate);
      AnalysisColumn2.SETRANGE("Line No.",FirstLineNo,LastLineNo);
      AnalysisColumn2.SETFILTER(Show,'<>%1',AnalysisColumn2.Show::Never);
      i := 1;

      IF AnalysisColumn2.FIND('-') THEN
        REPEAT
          MatrixColumnCaptions[i] := AnalysisColumn2."Column Header";
          i := i + 1;
        UNTIL (AnalysisColumn2.NEXT = 0) OR (i > ARRAYLEN(MatrixColumnCaptions));
    END;

    LOCAL PROCEDURE ClearPoints@5();
    BEGIN
      CLEAR(FirstColumn);
      CLEAR(LastColumn);
    END;

    [External]
    PROCEDURE SetReportName@10(NewReportName@1000 : Code[10]);
    BEGIN
      NewCurrentReportName := NewReportName;
    END;

    LOCAL PROCEDURE CurrentReportNameOnAfterValidate@19043622();
    BEGIN
      CurrPage.SAVERECORD;
      ValidateReportName;
      AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
      ValidateAnalysisTemplateName;
      AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
      CurrPage.UPDATE(FALSE);
      ClearPoints;
      SetPointsAnalysisColumn;
    END;

    LOCAL PROCEDURE CurrentLineTemplateOnAfterValidate@19002239();
    BEGIN
      CurrPage.SAVERECORD;
      AnalysisReportMgt.SetAnalysisLineTemplName(CurrentLineTemplate,Rec);
      ValidateAnalysisTemplateName;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentColumnTemplateOnAfterValidate@19007060();
    BEGIN
      AnalysisReportMgt.CopyColumnsToTemp(Rec,CurrentColumnTemplate,AnalysisColumn);
      CurrPage.UPDATE(FALSE);
      ClearPoints;
      SetPointsAnalysisColumn;
    END;

    LOCAL PROCEDURE CurrentSourceTypeNoFilterOnAfterValidate@19027013();
    BEGIN
      AnalysisReportMgt.SetSourceNo(Rec,CurrentSourceTypeNoFilter);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE CurrentSourceTypeFilterOnAfterValidate@19072332();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    BEGIN
    END.
  }
}

