OBJECT Page 10123 Bank Rec. Adj. Lines Subform
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:10 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Bank Rec. Adj. Lines Subform;
    SourceTable=Table10121;
    SourceTableView=SORTING(Bank Account No.,Statement No.,Record Type,Line No.)
                    WHERE(Record Type=CONST(Adjustment));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       OnActivateForm;
                       ShowShortcutDimCode(ShortcutDimCode);
                       AfterGetCurrentRecord;
                     END;

    OnNewRecord=BEGIN
                  SetUpNewLine(xRec,0,BelowxRec);
                  AfterGetCurrentRecord;
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1902420004;2 ;Action    ;
                      CaptionML=ENU=&Adjustment Dimensions;
                      ToolTipML=ENU=View this adjustment's default dimensions.;
                      ApplicationArea=#Suite;
                      OnAction=BEGIN
                                 LookupLineDimensions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1020022;1;Field     ;
                CaptionML=ENU=Bank Account No.;
                ToolTipML=ENU=Specifies the bank account that the bank statement line applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankRecHdr."Bank Account No.";
                Editable=FALSE }

    { 1020023;1;Field     ;
                CaptionML=ENU=Statement No.;
                ToolTipML=ENU=Specifies the bank reconciliation statement number that this line applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankRecHdr."Statement No.";
                Editable=FALSE }

    { 1020020;1;Field     ;
                CaptionML=ENU=Statement Date;
                ToolTipML=ENU=Specifies the bank reconciliation statement date that this line applies to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankRecHdr."Statement Date";
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Statement Date for Check or Deposit type. For Adjustment type lines, the entry will be the actual date the posting.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of document that the entry on the journal line is.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 1020012;2;Field     ;
                ToolTipML=ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1020000;2;Field     ;
                ToolTipML=ENU=Specifies the type of account that the journal line entry will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type" }

    { 1020002;2;Field     ;
                ToolTipML=ENU=Specifies the account number that the journal line entry will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             AccountNoOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the transaction on the bank reconciliation line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of the item, such as a check, that was deposited.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                OnValidate=BEGIN
                             AmountOnAfterValidate;
                           END;
                            }

    { 1020008;2;Field     ;
                ToolTipML=ENU=Specifies the currency code for the amounts on the line, as it will be posted to the G/L.;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 1020010;2;Field     ;
                ToolTipML=ENU=Specifies a currency factor for the reconciliation sub-line entry. The value is calculated based on currency code, exchange rate, and the bank record header's statement date.;
                SourceExpr="Currency Factor";
                Visible=FALSE }

    { 1020004;2;Field     ;
                ToolTipML=ENU=Specifies the code for the Balance Account Type that will be posted to the general ledger.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account Type" }

    { 1020006;2;Field     ;
                ToolTipML=ENU=Specifies that you can select the number of the G/L, customer, vendor or bank account to which a balancing entry for the line will posted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                OnValidate=BEGIN
                             BalAccountNoOnAfterValidate;
                           END;
                            }

    { 1020030;2;Field     ;
                ToolTipML=ENU=Specifies the dimension value code the journal line is linked to.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 1020032;2;Field     ;
                ToolTipML=ENU=Specifies the dimension value code the journal line is linked to.;
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 1020034;2;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 1020036;2;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 1020038;2;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 1020040;2;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 1020042;2;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 1020044;2;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 1020014;2;Field     ;
                ToolTipML=ENU=Specifies what type of Bank Rec. Line record was the source for the created Adjustment line. The valid types are Check or Deposit.;
                SourceExpr="Adj. Source Record ID";
                Visible=FALSE }

    { 1020016;2;Field     ;
                ToolTipML=ENU=Specifies the Document number from the Bank Rec. Line record that was the source for the created Adjustment line.;
                SourceExpr="Adj. Source Document No.";
                Visible=FALSE }

    { 1020028;1;Field     ;
                CaptionML=ENU=Account Name;
                ToolTipML=ENU=Specifies the name of the bank account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE }

    { 1020026;1;Field     ;
                CaptionML=ENU=Bal. Account Name;
                ToolTipML=ENU=Specifies the name of the balancing account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 1020018;1;Field     ;
                Name=TotalAdjustments;
                CaptionML=ENU=Total Adjustments;
                ToolTipML=ENU=Specifies the total amount of the lines that are adjustments.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankRecHdr."Total Adjustments" - BankRecHdr."Total Balanced Adjustments";
                Editable=FALSE }

  }
  CODE
  {
    VAR
      AccName@1020003 : Text[50];
      BalAccName@1020002 : Text[50];
      ShortcutDimCode@1020005 : ARRAY [8] OF Code[20];
      BankRecHdr@1020000 : Record 10120;
      LastBankRecLine@1020004 : Record 10121;

    [External]
    PROCEDURE SetupTotals@1020002();
    BEGIN
      IF BankRecHdr.GET("Bank Account No.","Statement No.") THEN
        BankRecHdr.CALCFIELDS("Total Adjustments","Total Balanced Adjustments");
    END;

    [External]
    PROCEDURE LookupLineDimensions@1020000();
    BEGIN
      ShowDimensions;
      CurrPage.SAVERECORD;
    END;

    [External]
    PROCEDURE GetTableID@1020001() : Integer;
    VAR
      Object@1020001 : Record 2000000001;
    BEGIN
      Object.SETRANGE(Type,Object.Type::Table);
      Object.SETRANGE(Name,TABLENAME);
      Object.FINDFIRST;
      EXIT(Object.ID);
    END;

    [External]
    PROCEDURE GetAccounts@7(VAR BankRecLine@1000 : Record 10121;VAR AccName@1001 : Text[50];VAR BalAccName@1002 : Text[50]);
    VAR
      GLAcc@1003 : Record 15;
      Cust@1004 : Record 18;
      Vend@1005 : Record 23;
      BankAcc@1006 : Record 270;
      FA@1007 : Record 5600;
    BEGIN
      IF (BankRecLine."Account Type" <> LastBankRecLine."Account Type") OR
         (BankRecLine."Account No." <> LastBankRecLine."Account No.")
      THEN BEGIN
        AccName := '';
        IF BankRecLine."Account No." <> '' THEN
          CASE BankRecLine."Account Type" OF
            BankRecLine."Account Type"::"G/L Account":
              IF GLAcc.GET(BankRecLine."Account No.") THEN
                AccName := GLAcc.Name;
            BankRecLine."Account Type"::Customer:
              IF Cust.GET(BankRecLine."Account No.") THEN
                AccName := Cust.Name;
            BankRecLine."Account Type"::Vendor:
              IF Vend.GET(BankRecLine."Account No.") THEN
                AccName := Vend.Name;
            BankRecLine."Account Type"::"Bank Account":
              IF BankAcc.GET(BankRecLine."Account No.") THEN
                AccName := BankAcc.Name;
            BankRecLine."Account Type"::"Fixed Asset":
              IF FA.GET(BankRecLine."Account No.") THEN
                AccName := FA.Description;
          END;
      END;

      IF (BankRecLine."Bal. Account Type" <> LastBankRecLine."Bal. Account Type") OR
         (BankRecLine."Bal. Account No." <> LastBankRecLine."Bal. Account No.")
      THEN BEGIN
        BalAccName := '';
        IF BankRecLine."Bal. Account No." <> '' THEN
          CASE BankRecLine."Bal. Account Type" OF
            BankRecLine."Bal. Account Type"::"G/L Account":
              IF GLAcc.GET(BankRecLine."Bal. Account No.") THEN
                BalAccName := GLAcc.Name;
            BankRecLine."Bal. Account Type"::Customer:
              IF Cust.GET(BankRecLine."Bal. Account No.") THEN
                BalAccName := Cust.Name;
            BankRecLine."Bal. Account Type"::Vendor:
              IF Vend.GET(BankRecLine."Bal. Account No.") THEN
                BalAccName := Vend.Name;
            BankRecLine."Bal. Account Type"::"Bank Account":
              IF BankAcc.GET(BankRecLine."Bal. Account No.") THEN
                BalAccName := BankAcc.Name;
            BankRecLine."Bal. Account Type"::"Fixed Asset":
              IF FA.GET(BankRecLine."Bal. Account No.") THEN
                BalAccName := FA.Description;
          END;
      END;

      LastBankRecLine := BankRecLine;
    END;

    LOCAL PROCEDURE AccountNoOnAfterValidate@19049580();
    BEGIN
      GetAccounts(Rec,AccName,BalAccName);
      ShowShortcutDimCode(ShortcutDimCode);
    END;

    LOCAL PROCEDURE AmountOnAfterValidate@19024931();
    BEGIN
      CurrPage.UPDATE(TRUE);
      SetupTotals;
    END;

    LOCAL PROCEDURE BalAccountNoOnAfterValidate@19028835();
    BEGIN
      GetAccounts(Rec,AccName,BalAccName);
      ShowShortcutDimCode(ShortcutDimCode);
    END;

    LOCAL PROCEDURE AfterGetCurrentRecord@19077479();
    BEGIN
      xRec := Rec;
      GetAccounts(Rec,AccName,BalAccName);
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      SetupTotals;
    END;

    BEGIN
    END.
  }
}

