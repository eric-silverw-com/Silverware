OBJECT Table 6086374 EM Bank Acc. Reconciliation
{
  OBJECT-PROPERTIES
  {
    Date=05/10/17;
    Time=[ 1:00:00 AM];
    Version List=EMW16.00.10.2.60;
  }
  PROPERTIES
  {
    DataCaptionFields=Bank Account No.,Statement No.;
    OnInsert=VAR
               EMPostedBankAccStmt@1000 : Record 6086376;
             BEGIN
               TESTFIELD("Bank Account No.");
               TESTFIELD("Statement No.");

               IF EMPostedBankAccStmt.GET("Bank Account Type","Bank Account No.","Statement No.") THEN
                 ERROR(Text000,"Statement No.");
             END;

    OnDelete=BEGIN
               EMBankAccReconLine.RESET;
               EMBankAccReconLine.SETRANGE("Bank Account Type","Bank Account Type");
               EMBankAccReconLine.SETRANGE("Bank Account No.","Bank Account No.");
               EMBankAccReconLine.SETRANGE("Statement No.","Statement No.");
               EMBankAccReconLine.DELETEALL(TRUE);
             END;

    OnRename=VAR
               ReconLine@1160040000 : Record 6086375;
             BEGIN
               ReconLine.SETRANGE("Bank Account Type",xRec."Bank Account Type");
               ReconLine.SETRANGE("Bank Account No.",xRec."Bank Account No.");
               ReconLine.SETRANGE("Statement No.",xRec."Statement No.");
               IF NOT ReconLine.ISEMPTY THEN
                 ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=ENU=Bank Account Reconciliation;
    LookupPageID=Page6086413;
  }
  FIELDS
  {
    { 1   ;   ;Bank Account Type   ;Option        ;OnValidate=BEGIN
                                                                IF "Bank Account Type" <> xRec."Bank Account Type" THEN
                                                                  VALIDATE("Bank Account No.",'');
                                                              END;

                                                   CaptionML=ENU=Bank Account Type;
                                                   OptionCaptionML=ENU=G/L Account,,Vendor,Bank Account;
                                                   OptionString=G/L Account,,Vendor,Bank Account }
    { 2   ;   ;Bank Account No.    ;Code20        ;TableRelation=IF (Bank Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bank Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bank Account Type=CONST(Vendor)) Vendor;
                                                   OnValidate=VAR
                                                                EMSetup@1000 : Record 6086300;
                                                              BEGIN
                                                                ValidateAccount;

                                                                IF Rec."Statement No." = '' THEN BEGIN
                                                                  EMSetup.LOCKTABLE;
                                                                  EMSetup.GET;
                                                                  IF EMSetup."Last Statement No." <> '' THEN
                                                                    "Statement No." := INCSTR(EMSetup."Last Statement No.")
                                                                  ELSE
                                                                    "Statement No." := FORMAT(1);
                                                                  EMSetup."Last Statement No." := "Statement No.";
                                                                  EMSetup.MODIFY;
                                                                END;

                                                                "Balance Last Statement" := GetBalanceLastStatement;
                                                              END;

                                                   CaptionML=ENU=Bank Account No.;
                                                   NotBlank=Yes }
    { 3   ;   ;Statement No.       ;Code20        ;CaptionML=ENU=Statement No.;
                                                   NotBlank=Yes }
    { 4   ;   ;Statement Ending Balance;Decimal   ;CaptionML=ENU=Statement Ending Balance;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 5   ;   ;Statement Date      ;Date          ;CaptionML=ENU=Statement Date }
    { 6   ;   ;Balance Last Statement;Decimal     ;CaptionML=ENU=Balance Last Statement;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
  }
  KEYS
  {
    {    ;Bank Account Type,Bank Account No.,Statement No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Statement %1 already exists.';
      Text001@1001 : TextConst 'ENU=You cannot rename a %1.';
      BankAcc@1003 : Record 270;
      EMBankAccRecon@1004 : Record 6086374;
      EMBankAccReconLine@1005 : Record 6086375;

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      ContiniaUserCreditCard@1160040000 : Record 6086311;
    BEGIN
      ContiniaUserCreditCard.GetAccountCurrencyCode("Bank Account Type","Bank Account No.");
    END;

    LOCAL PROCEDURE ValidateAccount@1160040001();
    VAR
      ContiniaUserCreditCard@1160040000 : Record 6086311;
    BEGIN
      ContiniaUserCreditCard.CheckAccount("Bank Account Type","Bank Account No.");
    END;

    PROCEDURE GetBalanceLastStatement@2() : Decimal;
    VAR
      EMBankAccStatement@1000 : Record 6086376;
    BEGIN
      EMBankAccStatement.SETRANGE("Bank Account Type","Bank Account Type");
      EMBankAccStatement.SETRANGE("Bank Account No.","Bank Account No.");
      IF EMBankAccStatement.FINDLAST THEN
        EXIT(EMBankAccStatement."Statement Ending Balance");
    END;

    PROCEDURE MatchSingle@5(DateRange@1008 : Integer;ExpType@1160040000 : Code[20]);
    VAR
      MatchBankRecLines@1000 : Codeunit 6086394;
    BEGIN
      MatchBankRecLines.MatchSingle(Rec,DateRange,ExpType);
    END;

    BEGIN
    END.
  }
}

