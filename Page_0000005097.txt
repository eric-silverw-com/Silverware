OBJECT Page 5097 Create Task
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Task;
               ESM=Crear tarea;
               FRC=Cr‚er Tƒche;
               ENC=Create Task];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5080;
    DataCaptionExpr=Caption;
    PageType=Card;
    OnInit=VAR
             PermissionManager@1000 : Codeunit 9002;
           BEGIN
             AttachmentEnable := TRUE;
             LanguageCodeEnable := TRUE;
             CalcDueDateFromEnable := TRUE;
             RecurringDateIntervalEnable := TRUE;
             WizardContactNameEnable := TRUE;
             AllDayEventEnable := TRUE;
             LocationEnable := TRUE;
             DurationEnable := TRUE;
             EndingTimeEnable := TRUE;
             StartTimeEnable := TRUE;
             SalespersonCodeEnable := TRUE;
             SalespersonCodeEditable := TRUE;
             WizardOpportunityDescriptionEd := TRUE;
             WizardCampaignDescriptionEdita := TRUE;
             WizardContactNameEditable := TRUE;
             TeamTaskEditable := TRUE;
             IsSoftwareAsAService := PermissionManager.SoftwareAsAService;
           END;

    OnOpenPage=BEGIN
                 IsOnMobile := ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::Phone;

                 WizardContactNameEditable := FALSE;
                 WizardCampaignDescriptionEdita := FALSE;
                 WizardOpportunityDescriptionEd := FALSE;

                 IF SalesPurchPerson.GET(GETFILTER("Salesperson Code")) THEN BEGIN
                   SalespersonCodeEditable := FALSE;
                   TeamTaskEditable := FALSE;
                 END;

                 IF "Segment Description" <> '' THEN
                   SegmentDescEditable := FALSE;

                 IsMeeting := (Type = Type::Meeting);
               END;

    OnAfterGetRecord=BEGIN
                       EnableFields;
                       WizardContactNameOnFormat(FORMAT("Wizard Contact Name"));
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::OK,ACTION::LookupOK] THEN
                         FinishPage;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;Action    ;
                      Name=Finish;
                      CaptionML=[ENU=&Finish;
                                 ESM=&Terminar;
                                 FRC=&Terminer;
                                 ENC=&Finish];
                      ToolTipML=[ENU=Finish the task.;
                                 ESM=Permite finalizar la tarea.;
                                 FRC=Terminez la tƒche.;
                                 ENC=Finish the task.];
                      ApplicationArea=#RelationshipMgmt;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishPage;
                                 CurrPage.CLOSE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General];
                GroupType=Group }

    { 18  ;2   ;Field     ;
                Name=TypeSaaS;
                CaptionML=[ENU=Type;
                           ESM=Tipo;
                           FRC=Type;
                           ENC=Type];
                ToolTipML=[ENU=Specifies the type of the Task.;
                           ESM=Especifica el tipo de tarea.;
                           FRC=Sp‚cifie le type de la tƒche.;
                           ENC=Specifies the type of the Task.];
                OptionCaptionML=[ENU=" ,,Phone Call";
                                 ESM=" ,,Llamada telef¢nica";
                                 FRC=" ,,Appel t‚l‚phonique";
                                 ENC=" ,,Phone Call"];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type;
                Visible=IsSoftwareAsAService;
                OnValidate=BEGIN
                             ValidateTypeField;
                           END;
                            }

    { 7   ;2   ;Field     ;
                Name=TypeOnPrem;
                CaptionML=[ENU=Type;
                           ESM=Tipo;
                           FRC=Type;
                           ENC=Type];
                ToolTipML=[ENU=Specifies the type of the Task.;
                           ESM=Especifica el tipo de tarea.;
                           FRC=Sp‚cifie le type de la tƒche.;
                           ENC=Specifies the type of the Task.];
                OptionCaptionML=[ENU=" ,Meeting,Phone Call";
                                 ESM=" ,Reuni¢n,Llamada";
                                 FRC=" ,R‚union,Appel t‚l‚phonique";
                                 ENC=" ,Meeting,Phone Call"];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type;
                Visible=NOT IsSoftwareAsAService;
                OnValidate=BEGIN
                             ValidateTypeField;
                           END;
                            }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the Task.;
                           ESM=Especifica la descripci¢n de la tarea.;
                           FRC=Sp‚cifie une description de la tƒche.;
                           ENC=Specifies the description of the Task.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Description }

    { 44  ;2   ;Field     ;
                Name=AllDayEvent;
                CaptionML=[ENU=All Day Event;
                           ESM=Todo el d¡a;
                           FRC=Journ‚e entiŠre;
                           ENC=All Day Event];
                ToolTipML=[ENU=Specifies that the Task of the Meeting type is an all-day event, which is an activity that lasts 24 hours or longer.;
                           ESM=Especifica que la tarea de tipo Reuni¢n es un evento de d¡a completo, es decir, una actividad que dura 24 horas o m s.;
                           FRC=Sp‚cifie que la tƒche de type R‚union est un ‚v‚nement (une activit‚) se d‚roulant sur 24 heures ou plus.;
                           ENC=Specifies that the Task of the Meeting type is an all-day event, which is an activity that lasts 24 hours or longer.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="All Day Event";
                Enabled=AllDayEventEnable;
                OnValidate=BEGIN
                             AllDayEventOnAfterValidate;
                           END;
                            }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Start Date;
                           ESM=Fecha inicial;
                           FRC=Date d‚but;
                           ENC=Start Date];
                ToolTipML=[ENU=Specifies the date when the Task should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.;
                           ESM=Especifica la fecha en la que debe iniciarse la tarea. En el apartado How to: Enter Dates and Times (C¢mo especificar fechas y horas), encontrar  ciertas normas acerca de c¢mo deben introducirse las fechas.;
                           FRC=Sp‚cifie la date de d‚but de la tƒche. Il existe un certain nombre de rŠgles pour entrer les dates dans la rubrique How to: Enter Dates and Times (Comment entrer des dates et des heures).;
                           ENC=Specifies the date when the Task should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Date }

    { 49  ;2   ;Field     ;
                Name=Start Time;
                CaptionML=[ENU=Start Time;
                           ESM=Hora de inicio;
                           FRC=Heure d‚but;
                           ENC=Start Time];
                ToolTipML=[ENU=Specifies the time when the Task of the Meeting type should be started.;
                           ESM=Especifica la hora en la que debe iniciarse la tarea de tipo Reuni¢n.;
                           FRC=Sp‚cifie la date de d‚but pr‚vue de la tƒche de type R‚union.;
                           ENC=Specifies the time when the Task of the Meeting type should be started.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Start Time";
                Enabled=StartTimeEnable }

    { 51  ;2   ;Field     ;
                CaptionML=[ENU=Duration;
                           ESM=Duraci¢n;
                           FRC=Dur‚e;
                           ENC=Duration];
                ToolTipML=[ENU=Specifies the duration of the Task of the Meeting type.;
                           ESM=Especifica la duraci¢n de la tarea de tipo Reuni¢n.;
                           FRC=Sp‚cifie la dur‚e de la tƒche de type R‚union.;
                           ENC=Specifies the duration of the Task of the Meeting type.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Duration;
                Enabled=DurationEnable }

    { 45  ;2   ;Field     ;
                Name=Ending Date;
                CaptionML=[ENU=Ending Date;
                           ESM=Fecha final;
                           FRC=Date fin;
                           ENC=Ending Date];
                ToolTipML=[ENU=Specifies the date of when the Task should end. There are certain rules for how dates should be entered. For more information, see How to: Enter Dates and Times.;
                           ESM=Especifica la fecha en la que debe finalizar la tarea. En el apartado How to: Enter Dates and Times (C¢mo especificar fechas y horas), encontrar  ciertas reglas acerca de c¢mo deben especificarse las fechas.;
                           FRC=Sp‚cifie la date de fin de la tƒche. Il existe un certain nombre de rŠgles pour entrer les dates. Pour plus d'informations, reportez-vous … la rubrique How to: Enter Dates and Times (Comment entrer des dates et des heures).;
                           ENC=Specifies the date of when the Task should end. There are certain rules for how dates should be entered. For more information, see How to: Enter Dates and Times.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Date" }

    { 55  ;2   ;Field     ;
                Name=Ending Time;
                CaptionML=[ENU=Ending Time;
                           ESM=Hora final;
                           FRC=Heure de fin;
                           ENC=Ending Time];
                ToolTipML=[ENU=Specifies the time of when the Task of the Meeting type should end.;
                           ESM=Especifica la hora en la que debe finalizar la tarea de tipo Reuni¢n.;
                           FRC=Sp‚cifie l'heure de fin pr‚vue de la tƒche de type R‚union.;
                           ENC=Specifies the time of when the Task of the Meeting type should end.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Time";
                Enabled=EndingTimeEnable }

    { 29  ;2   ;Field     ;
                Name=TeamTask;
                CaptionML=[ENU=Team Task;
                           ESM=Tarea de equipo;
                           FRC=Tƒche ‚quipe;
                           ENC=Team Task];
                ToolTipML=[ENU=Specifies if the Task is meant to be done team-wide. Select the check box to specify that the Task applies to the entire Team.;
                           ESM=Especifica si todo el equipo debe realizar la tarea. Active la casilla para especificar que la tarea se aplica a todo el equipo.;
                           FRC=Sp‚cifie si la tƒche est cens‚e ˆtre effectu‚e par l'ensemble de l'‚quipe. Cochez la case pour sp‚cifier que la tƒche s'applique … toute l'‚quipe.;
                           ENC=Specifies if the Task is meant to be done team-wide. Select the check box to specify that the Task applies to the entire Team.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team To-do";
                Editable=TeamTaskEditable;
                OnValidate=BEGIN
                             IF NOT "Team To-do" THEN BEGIN
                               "Team Code" := '';
                               SalespersonCodeEnable := FALSE;
                               IF Type = Type::Meeting THEN BEGIN
                                 ClearDefaultAttendeeInfo;
                                 AssignDefaultAttendeeInfo;
                               END;
                             END;
                           END;
                            }

    { 21  ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Contact;
                           ESM=Contacto;
                           FRC=Contact;
                           ENC=Contact];
                ToolTipML=[ENU=Specifies a Contact name from the wizard.;
                           ESM=Especifica un nombre de contacto del asistente.;
                           FRC=Sp‚cifie un nom de contact depuis l'assistant.;
                           ENC=Specifies a Contact name from the wizard.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Wizard Contact Name";
                TableRelation=Contact;
                Enabled=WizardContactNameEnable;
                Editable=WizardContactNameEditable;
                OnAssistEdit=VAR
                               Cont@1102601001 : Record 5050;
                             BEGIN
                               IF (GETFILTER("Contact No.") = '') AND (GETFILTER("Contact Company No.") = '') AND ("Segment Description" = '') THEN BEGIN
                                 IF Cont.GET("Contact No.") THEN ;
                                 IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Contact No.",Cont."No.");
                                   "Wizard Contact Name" := Cont.Name;
                                 END;
                               END;
                             END;
                              }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Salesperson;
                           ESM=Vendedor;
                           FRC=Vendeur;
                           ENC=Salesperson];
                ToolTipML=[ENU=Specifies the code of the Salesperson assigned to the Task.;
                           ESM=Especifica el c¢digo del vendedor asignado a la tarea.;
                           FRC=Sp‚cifie le code du repr‚sentant affect‚ … la tƒche.;
                           ENC=Specifies the code of the Salesperson assigned to the Task.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code";
                Enabled=SalespersonCodeEnable;
                Editable=SalespersonCodeEditable }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Team;
                           ESM=Equipo;
                           FRC=Equipe;
                           ENC=Team];
                ToolTipML=[ENU=Specifies the code of the Team to which the Task is assigned.;
                           ESM=Especifica el c¢digo del equipo al que est  asignada la tarea.;
                           FRC=Sp‚cifie le code de l'‚quipe … laquelle la tƒche est affect‚e.;
                           ENC=Specifies the code of the Team to which the Task is assigned.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team Code";
                Enabled="Team To-do" OR NOT IsMeeting;
                Editable="Team To-do";
                OnValidate=BEGIN
                             IF (xRec."Team Code" <> "Team Code") AND
                                ("Team Code" <> '') AND
                                (Type = Type::Meeting)
                             THEN BEGIN
                               ClearDefaultAttendeeInfo;
                               AssignDefaultAttendeeInfo
                             END
                           END;
                            }

    { 11  ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Campaign;
                           ESM=Campa¤a;
                           FRC=Promotion;
                           ENC=Campaign];
                ToolTipML=[ENU=Specifies a description of the campaign that is related to the task. The description is copied from the campaign card.;
                           ESM=Especifica una descripci¢n de la campa¤a relacionada con la tarea. La descripci¢n se copia de la ficha de campa¤a.;
                           FRC=Sp‚cifie une description de la promotion associ‚e … la tƒche. La description est copi‚e depuis la fiche promotion.;
                           ENC=Specifies a description of the campaign that is related to the task. The description is copied from the campaign card.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Wizard Campaign Description";
                TableRelation=Campaign;
                Importance=Additional;
                Editable=WizardCampaignDescriptionEdita;
                OnAssistEdit=VAR
                               Campaign@1102601001 : Record 5071;
                             BEGIN
                               IF GETFILTER("Campaign No.") = '' THEN BEGIN
                                 IF Campaign.GET("Campaign No.") THEN ;
                                 IF PAGE.RUNMODAL(0,Campaign) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Campaign No.",Campaign."No.");
                                   "Wizard Campaign Description" := Campaign.Description;
                                 END;
                               END;
                             END;
                              }

    { 5   ;2   ;Field     ;
                Lookup=No;
                CaptionML=[ENU=Opportunity;
                           ESM=Oportunidad;
                           FRC=Opportunit‚;
                           ENC=Opportunity];
                ToolTipML=[ENU=Specifies a description of the Opportunity that is related to the Task. The description is copied from the Campaign card.;
                           ESM=Especifica una descripci¢n de la oportunidad relacionada con la tarea. La descripci¢n se copia de la ficha Campa¤a.;
                           FRC=Sp‚cifie une description de l'opportunit‚ associ‚e … la tƒche. La description est copi‚e depuis la fiche promotion.;
                           ENC=Specifies a description of the Opportunity that is related to the Task. The description is copied from the Campaign card.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Wizard Opportunity Description";
                TableRelation=Opportunity;
                Importance=Additional;
                Editable=WizardOpportunityDescriptionEd;
                OnAssistEdit=VAR
                               Opp@1102601001 : Record 5092;
                             BEGIN
                               IF GETFILTER("Opportunity No.") = '' THEN BEGIN
                                 IF Opp.GET("Opportunity No.") THEN ;
                                 IF PAGE.RUNMODAL(0,Opp) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Opportunity No.",Opp."No.");
                                   "Wizard Opportunity Description" := Opp.Description;
                                 END;
                               END;
                             END;
                              }

    { 6   ;2   ;Field     ;
                Name=SegmentDesc;
                Lookup=No;
                CaptionML=[ENU=Create Tasks for Segment Contacts;
                           ESM=Crear tareas para los contactos del segmento;
                           FRC=Cr‚er des tƒches pour des contacts du segment;
                           ENC=Create Tasks for Segment Contacts];
                ToolTipML=[ENU=Specifies a description of the Segment related to the Task. The description is copied from the Segment Card.;
                           ESM=Especifica una descripci¢n del segmento relacionado con la tarea. La descripci¢n se copia de la ficha de segmento.;
                           FRC=Sp‚cifie une description du segment associ‚ … la tƒche. La description est copi‚e depuis la fiche segment.;
                           ENC=Specifies a description of the Segment related to the Task. The description is copied from the Segment Card.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Segment Description";
                TableRelation="Segment Header";
                Importance=Additional;
                Editable=SegmentDescEditable;
                OnAssistEdit=VAR
                               SegmentHeader@1102601000 : Record 5076;
                             BEGIN
                               IF GETFILTER("Segment No.") = '' THEN BEGIN
                                 IF SegmentHeader.GET("Segment No.") THEN ;
                                 IF PAGE.RUNMODAL(0,SegmentHeader) = ACTION::LookupOK THEN BEGIN
                                   VALIDATE("Segment No.",SegmentHeader."No.");
                                   "Segment Description" := SegmentHeader.Description;
                                 END;
                               END;
                             END;
                              }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Priority;
                           ESM=Prioridad;
                           FRC=Priorit‚;
                           ENC=Priority];
                ToolTipML=[ENU=Specifies the priority of the Task. There are three options:;
                           ESM=Especifica la prioridad de la tarea. Existen tres opciones:;
                           FRC=Sp‚cifie la priorit‚ de la tƒche. Trois options sont disponiblesÿ:;
                           ENC=Specifies the priority of the Task. There are three options:];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Priority;
                Importance=Additional }

    { 3   ;2   ;Field     ;
                Name=Location;
                CaptionML=[ENU=Location;
                           ESM=Almac‚n;
                           FRC=Emplacement;
                           ENC=Location];
                ToolTipML=[ENU=Specifies the Location where the Meeting will take place.;
                           ESM=Especifica el lugar donde se celebrar  la reuni¢n.;
                           FRC=Sp‚cifie l'emplacement o— la r‚union aura lieu.;
                           ENC=Specifies the Location where the Meeting will take place.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Location;
                Importance=Promoted;
                Visible=NOT IsSoftwareAsAService;
                Enabled=LocationEnable }

    { 20  ;1   ;Group     ;
                Name=MeetingAttendees;
                CaptionML=[ENU=Meeting Attendees;
                           ESM=Asistentes de la reuni¢n;
                           FRC=Participants … la r‚union;
                           ENC=Meeting Attendees];
                Visible=IsMeeting;
                GroupType=Group }

    { 19  ;2   ;Part      ;
                Name=AttendeeSubform;
                ApplicationArea=#RelationshipMgmt;
                SubPageLink=To-do No.=FIELD(No.);
                PagePartID=Page5198;
                PartType=Page }

    { 22  ;2   ;Group     ;
                Name=MeetingInteraction;
                CaptionML=[ENU=Interaction;
                           ESM=Interacci¢n;
                           FRC=Interaction;
                           ENC=Interaction];
                GroupType=Group }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=Send Invitation(s) on Finish;
                           ESM=Enviar invitaciones al terminar;
                           FRC=Envoyer la ou les invitations en s‚lectionnant Terminer;
                           ENC=Send Invitation(s) on Finish];
                ToolTipML=[ENU=Specifies if the meeting invitation task will be sent when the Create Task wizard is finished.;
                           ESM=Especifica si la tarea de invitaci¢n a la reuni¢n se realizar  cuando finalice el asistente para crear tareas.;
                           FRC=Sp‚cifie si la tƒche Invitation … une r‚union sera envoy‚e … la fin de l'Assistant Cr‚er Tƒche.;
                           ENC=Specifies if the meeting invitation task will be sent when the Create Task wizard is finished.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Send on finish" }

    { 15  ;3   ;Field     ;
                CaptionML=[ENU=Interaction Template;
                           ESM=Plantilla Interacci¢n;
                           FRC=ModŠle interaction;
                           ENC=Interaction Template];
                ToolTipML=[ENU=Specifies the code for the Interaction Template that you have selected.;
                           ESM=Especifica el c¢digo de la plantilla Interacci¢n que ha seleccionado.;
                           FRC=Sp‚cifie le code du modŠle Interaction que vous avez s‚lectionn‚.;
                           ENC=Specifies the code for the Interaction Template that you have selected.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Interaction Template Code";
                TableRelation="Interaction Template";
                OnValidate=BEGIN
                             ValidateInteractionTemplCode;
                             InteractionTemplateCodeOnAfter;
                           END;
                            }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the language that is used when translating specified text on documents to foreign business partner, such as an item description on an order confirmation.;
                           ESM=Especifica el idioma que se usa al traducir el texto especificado en los documentos destinados a un socio comercial extranjero, como, por ejemplo, la descripci¢n del producto en una confirmaci¢n de pedido.;
                           FRC=Sp‚cifie la langue utilis‚e lors de la traduction du texte sp‚cifi‚ sur les documents du partenaire commercial ‚tranger, par exemple une description d'article sur une confirmation de commande.;
                           ENC=Specifies the language that is used when translating specified text on documents to foreign business partner, such as an item description on an order confirmation.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Language Code";
                Enabled=LanguageCodeEnable;
                OnValidate=BEGIN
                             ValidateLanguageCode;
                           END;

                OnLookup=BEGIN
                           LookupLanguageCode;
                         END;
                          }

    { 13  ;3   ;Field     ;
                Name=Attachment;
                AssistEdit=Yes;
                CaptionML=[ENU=Attachment;
                           ESM=Archivo adjunto;
                           FRC=PiŠce jointe;
                           ENC=Attachment];
                ToolTipML=[ENU=Specifies if the linked attachment is inherited or unique.;
                           ESM=Especifica si el archivo adjunto vinculado es heredado o £nico.;
                           FRC=Sp‚cifie si la piŠce jointe associ‚e est h‚rit‚e ou unique.;
                           ENC=Specifies if the linked attachment is inherited or unique.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attachment No." > 0;
                Enabled=AttachmentEnable;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               AssistEditAttachment;
                             END;
                              }

    { 4   ;1   ;Group     ;
                Name=RecurringOptions;
                CaptionML=[ENU=Recurring;
                           ESM=Peri¢dico;
                           FRC=R‚current(e);
                           ENC=Recurring];
                GroupType=Group }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Recurring Task;
                           ESM=Tarea peri¢dica;
                           FRC=Tƒche r‚currente;
                           ENC=Recurring Task];
                ToolTipML=[ENU=Specifies that the Task occurs periodically.;
                           ESM=Especifica que la tarea se repite peri¢dicamente.;
                           FRC=Sp‚cifie que la tƒche survient de maniŠre p‚riodique.;
                           ENC=Specifies that the Task occurs periodically.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Recurring;
                OnValidate=BEGIN
                             RecurringOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Recurring Date Interval;
                           ESM=Intervalo de fechas recurrente;
                           FRC=Intervalle de r‚currence;
                           ENC=Recurring Date Interval];
                ToolTipML=[ENU=Specifies the date formula to assign automatically a recurring Task to a Salesperson or Team.;
                           ESM=Especifica la f¢rmula de fecha para asignar autom ticamente una tarea recurrente a un vendedor o equipo.;
                           FRC=Sp‚cifie la formule de date pour affecter automatiquement une tƒche r‚currente … un repr‚sentant ou … une ‚quipe.;
                           ENC=Specifies the date formula to assign automatically a recurring Task to a Salesperson or Team.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Recurring Date Interval";
                Enabled=RecurringDateIntervalEnable }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Calculate from Date;
                           ESM=Calcular desde la fecha;
                           FRC=Calculer … partir de la date;
                           ENC=Calculate from Date];
                ToolTipML=[ENU=Specifies the date to use to calculate the date on which the next Task should be completed.;
                           ESM=Especifica la fecha que se usar  para calcular la fecha en la que debe completarse la siguiente tarea.;
                           FRC=Sp‚cifie la date … utiliser pour calculer la date de fin pr‚vue de la tƒche suivante.;
                           ENC=Specifies the date to use to calculate the date on which the next Task should be completed.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Calc. Due Date From";
                Enabled=CalcDueDateFromEnable }

  }
  CODE
  {
    VAR
      Text000@1025 : TextConst 'ENU=(Multiple);ESM=(Multiple);FRC=(Multiple);ENC=(Multiple)';
      Text001@1001 : TextConst 'ENU=untitled;ESM=SinT¡tulo;FRC=Sans titre;ENC=untitled';
      Cont@1004 : Record 5050;
      SalesPurchPerson@1005 : Record 13;
      Campaign@1006 : Record 5071;
      Team@1007 : Record 5083;
      Opp@1008 : Record 5092;
      SegHeader@1009 : Record 5076;
      AttendeeTemp@1012 : TEMPORARY Record 5199;
      ClientTypeManagement@1003 : Codeunit 4;
      SalespersonFilter@1026 : Code[20];
      ContactFilter@1030 : Code[20];
      TeamTaskEditable@19073246 : Boolean INDATASET;
      WizardContactNameEditable@19024232 : Boolean INDATASET;
      WizardCampaignDescriptionEdita@19073396 : Boolean INDATASET;
      WizardOpportunityDescriptionEd@19027967 : Boolean INDATASET;
      SalespersonCodeEditable@19071610 : Boolean INDATASET;
      SegmentDescEditable@19045407 : Boolean INDATASET;
      IsMeeting@1000 : Boolean;
      IsOnMobile@1002 : Boolean;
      SalespersonCodeEnable@19074307 : Boolean INDATASET;
      StartTimeEnable@19064228 : Boolean INDATASET;
      EndingTimeEnable@19019613 : Boolean INDATASET;
      DurationEnable@19035217 : Boolean INDATASET;
      LocationEnable@19013618 : Boolean INDATASET;
      AllDayEventEnable@19049519 : Boolean INDATASET;
      WizardContactNameEnable@19059568 : Boolean INDATASET;
      RecurringDateIntervalEnable@19019953 : Boolean INDATASET;
      CalcDueDateFromEnable@19036769 : Boolean INDATASET;
      LanguageCodeEnable@19042658 : Boolean INDATASET;
      AttachmentEnable@19033701 : Boolean INDATASET;
      IsSoftwareAsAService@1010 : Boolean;

    LOCAL PROCEDURE Caption@1() : Text[260];
    VAR
      CaptionStr@1000 : Text[260];
    BEGIN
      IF Cont.GET(GETFILTER("Contact Company No.")) THEN
        CaptionStr := COPYSTR(Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      IF Cont.GET(GETFILTER("Contact No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Cont."No." + ' ' + Cont.Name,1,MAXSTRLEN(CaptionStr));
      IF SalesPurchPerson.GET(GETFILTER("Salesperson Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + SalesPurchPerson.Code + ' ' + SalesPurchPerson.Name,1,MAXSTRLEN(CaptionStr));
      IF Team.GET(GETFILTER("Team Code")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Team.Code + ' ' + Team.Name,1,MAXSTRLEN(CaptionStr));
      IF Campaign.GET(GETFILTER("Campaign No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Campaign."No." + ' ' + Campaign.Description,1,MAXSTRLEN(CaptionStr));
      IF Opp.GET(GETFILTER("Opportunity No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + Opp."No." + ' ' + Opp.Description,1,MAXSTRLEN(CaptionStr));
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        CaptionStr := COPYSTR(CaptionStr + ' ' + SegHeader."No." + ' ' + SegHeader.Description,1,MAXSTRLEN(CaptionStr));
      IF CaptionStr = '' THEN
        CaptionStr := Text001;

      EXIT(CaptionStr);
    END;

    LOCAL PROCEDURE EnableFields@21();
    BEGIN
      RecurringDateIntervalEnable := Recurring;
      CalcDueDateFromEnable := Recurring;

      IF NOT Recurring THEN BEGIN
        EVALUATE("Recurring Date Interval",'');
        CLEAR("Calc. Due Date From");
      END;

      IsMeeting := Type = Type::Meeting;

      IF IsMeeting THEN BEGIN
        StartTimeEnable := NOT "All Day Event";
        EndingTimeEnable := NOT "All Day Event";
        DurationEnable := NOT "All Day Event";
        LocationEnable := TRUE;
        AllDayEventEnable := TRUE;
        LanguageCodeEnable := "Interaction Template Code" <> '';
        AttachmentEnable := "Interaction Template Code" <> '';
      END ELSE BEGIN
        StartTimeEnable := FALSE;
        EndingTimeEnable := FALSE;
        LocationEnable := FALSE;
        DurationEnable := FALSE;
        AllDayEventEnable := FALSE;
      END;
    END;

    LOCAL PROCEDURE ValidateTypeField@3();
    BEGIN
      IF Type <> xRec.Type THEN
        IF Type = Type::Meeting THEN BEGIN
          ClearDefaultAttendeeInfo;
          AssignDefaultAttendeeInfo;
          LoadTempAttachment;
          IF NOT "Team To-do" THEN
            IF "Salesperson Code" = '' THEN BEGIN
              IF Cont.GET("Contact No.") THEN
                VALIDATE("Salesperson Code",Cont."Salesperson Code")
              ELSE
                IF Cont.GET("Contact Company No.") THEN
                  VALIDATE("Salesperson Code",Cont."Salesperson Code");
              IF Campaign.GET(GETFILTER("Campaign No.")) THEN
                VALIDATE("Salesperson Code",Campaign."Salesperson Code");
              IF Opp.GET(GETFILTER("Opportunity No.")) THEN
                VALIDATE("Salesperson Code",Opp."Salesperson Code");
              IF SegHeader.GET(GETFILTER("Segment No.")) THEN
                VALIDATE("Salesperson Code",SegHeader."Salesperson Code");
              MODIFY;
            END;
          GetAttendee(AttendeeTemp);
          CurrPage.AttendeeSubform.PAGE.SetAttendee(AttendeeTemp);
          CurrPage.AttendeeSubform.PAGE.SetTaskFilter(SalespersonFilter,ContactFilter);
          CurrPage.AttendeeSubform.PAGE.UpdateForm;
        END ELSE BEGIN
          ClearDefaultAttendeeInfo;
          CurrPage.AttendeeSubform.PAGE.GetAttendee(AttendeeTemp);
          SetAttendee(AttendeeTemp);
          SalespersonCodeEnable := FALSE;
          WizardContactNameEnable := TRUE;
        END;
      IsMeeting := (Type = Type::Meeting);
      TypeOnAfterValidate;
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE AllDayEventOnAfterValidate@19020274();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE RecurringOnAfterValidate@19068337();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE InteractionTemplateCodeOnAfter@19000597();
    BEGIN
      EnableFields
    END;

    LOCAL PROCEDURE WizardContactNameOnFormat@19031225(Text@19070643 : Text[1024]);
    BEGIN
      IF SegHeader.GET(GETFILTER("Segment No.")) THEN
        Text := Text000;
    END;

    LOCAL PROCEDURE FinishPage@2();
    BEGIN
      CurrPage.AttendeeSubform.PAGE.GetAttendee(AttendeeTemp);
      SetAttendee(AttendeeTemp);

      CheckStatus;
      FinishWizard(FALSE);
    END;

    BEGIN
    END.
  }
}

