OBJECT Report 950 Create Time Sheets
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:13:02 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Time Sheets;
    ApplicationArea=#Basic,#Suite;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ResourcesSetup.GET;
                 END;

    OnPreReport=VAR
                  UserSetup@1005 : Record 91;
                  i@1000 : Integer;
                  LastDate@1001 : Date;
                  FirstAccPeriodStartingDate@1002 : Date;
                  LastAccPeriodStartingDate@1003 : Date;
                BEGIN
                  IF (NOT UserSetup.GET(USERID) OR NOT UserSetup."Time Sheet Admin.") AND UserSetup.WRITEPERMISSION THEN BEGIN
                    IF CONFIRM(OpenUserSetupQst,TRUE) THEN
                      PAGE.RUN(PAGE::"User Setup");
                    ERROR('');
                  END;

                  IF NOT UserSetup."Time Sheet Admin." THEN
                    ERROR(Text002);

                  IF StartingDate = 0D THEN
                    ERROR(Text004,Text005);

                  IF NoOfPeriods = 0 THEN
                    ERROR(Text004,Text006);

                  ResourcesSetup.TESTFIELD("Time Sheet Nos.");

                  EndingDate := CALCDATE('<1W>',StartingDate);

                  LastDate := StartingDate;
                  FOR i := 1 TO NoOfPeriods DO
                    LastDate := CALCDATE('<1W>',LastDate);

                  IF AccountingPeriod.ISEMPTY THEN BEGIN
                    FirstAccPeriodStartingDate := CALCDATE('<-CM>',StartingDate);
                    LastAccPeriodStartingDate := CALCDATE('<CM>',StartingDate);
                  END ELSE BEGIN
                    AccountingPeriod.SETFILTER("Starting Date",'..%1',StartingDate);
                    AccountingPeriod.FINDLAST;
                    FirstAccPeriodStartingDate := AccountingPeriod."Starting Date";

                    AccountingPeriod.SETFILTER("Starting Date",'..%1',LastDate);
                    AccountingPeriod.FINDLAST;
                    LastAccPeriodStartingDate := AccountingPeriod."Starting Date";

                    AccountingPeriod.SETRANGE("Starting Date",FirstAccPeriodStartingDate,LastAccPeriodStartingDate);
                    AccountingPeriod.FINDSET;
                    REPEAT
                      AccountingPeriod.TESTFIELD(Closed,FALSE);
                    UNTIL AccountingPeriod.NEXT = 0;
                  END;
                END;

    OnPostReport=BEGIN
                   IF NOT HideDialog THEN
                     MESSAGE(Text003,TimeSheetCounter);
                 END;

    UsageCategory=Tasks;
  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,NoOfPeriods);
                             END;

               OnAfterGetRecord=BEGIN
                                  EndingDate := CALCDATE('<1W>',StartingDate) - 1;
                                END;
                                 }

    { 5508;1   ;DataItem;                    ;
               DataItemTable=Table156;
               DataItemTableView=WHERE(Use Time Sheet=CONST(Yes));
               OnPreDataItem=BEGIN
                               IF HidResourceFilter <> '' THEN
                                 SETFILTER("No.",HidResourceFilter);
                             END;

               OnAfterGetRecord=VAR
                                  TimeSheetMgt@1000 : Codeunit 950;
                                BEGIN
                                  IF CheckExistingPeriods THEN BEGIN
                                    TimeSheetHeader.INIT;
                                    TimeSheetHeader."No." := NoSeriesMgt.GetNextNo(ResourcesSetup."Time Sheet Nos.",TODAY,TRUE);
                                    TimeSheetHeader."Starting Date" := StartingDate;
                                    TimeSheetHeader."Ending Date" := EndingDate;
                                    TimeSheetHeader.VALIDATE("Resource No.","No.");
                                    TimeSheetHeader.INSERT(TRUE);
                                    TimeSheetCounter += 1;

                                    IF CreateLinesFromJobPlanning THEN
                                      TimeSheetMgt.CreateLinesFromJobPlanning(TimeSheetHeader);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                StartingDate := CALCDATE('<1W>',StartingDate);
                              END;

               ReqFilterFields=No.,Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=VAR
                   TimeSheetMgt@1000 : Codeunit 950;
                 BEGIN
                   IF NoOfPeriods = 0 THEN
                     NoOfPeriods := 1;

                   IF TimeSheetHeader.FINDLAST THEN
                     StartingDate := TimeSheetHeader."Ending Date" + 1
                   ELSE
                     StartingDate := TimeSheetMgt.FindNearestTimeSheetStartDate(WORKDATE);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the first date of the time sheet.;
                  ApplicationArea=#Jobs;
                  SourceExpr=StartingDate;
                  OnValidate=BEGIN
                               ValidateStartingDate;
                             END;
                              }

      { 2   ;2   ;Field     ;
                  CaptionML=ENU=No. of Periods;
                  ToolTipML=ENU=Specifies the number of periods that the time sheet covers, such as 1 or 4.;
                  ApplicationArea=#Jobs;
                  SourceExpr=NoOfPeriods;
                  MinValue=1 }

      { 4   ;2   ;Field     ;
                  CaptionML=ENU=Create Lines From Job Planning;
                  ToolTipML=ENU=Specifies if you want to create time sheet lines that are based on job planning lines.;
                  ApplicationArea=#Jobs;
                  SourceExpr=CreateLinesFromJobPlanning }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      AccountingPeriod@1016 : Record 50;
      ResourcesSetup@1009 : Record 314;
      TimeSheetHeader@1005 : Record 950;
      NoSeriesMgt@1010 : Codeunit 396;
      HidResourceFilter@1001 : Code[250];
      StartingDate@1008 : Date;
      EndingDate@1000 : Date;
      TimeSheetCounter@1012 : Integer;
      NoOfPeriods@1006 : Integer;
      CreateLinesFromJobPlanning@1013 : Boolean;
      Text002@1011 : TextConst 'ENU=Time sheet administrator only is allowed to create time sheets.';
      Text003@1002 : TextConst 'ENU=%1 time sheets have been created.';
      Text004@1003 : TextConst 'ENU=%1 must be filled in.';
      Text005@1004 : TextConst 'ENU=Starting Date';
      Text006@1014 : TextConst 'ENU=No. of Periods';
      Text010@1019 : TextConst 'ENU=Starting Date must be %1.';
      HideDialog@1017 : Boolean;
      OpenUserSetupQst@1007 : TextConst 'ENU=You aren''t allowed to run this report. If you want, you can give yourself the Time Sheet Admin. rights, and then try again.\\ Do you want to do that now?';

    [External]
    PROCEDURE InitParameters@1(NewStartingDate@1000 : Date;NewNoOfPeriods@1002 : Integer;NewResourceFilter@1001 : Code[250];NewCreateLinesFromJobPlanning@1003 : Boolean;NewHideDialog@1004 : Boolean);
    BEGIN
      CLEARALL;
      ResourcesSetup.GET;
      StartingDate := NewStartingDate;
      NoOfPeriods := NewNoOfPeriods;
      HidResourceFilter := NewResourceFilter;
      CreateLinesFromJobPlanning := NewCreateLinesFromJobPlanning;
      HideDialog := NewHideDialog;
    END;

    LOCAL PROCEDURE CheckExistingPeriods@3() : Boolean;
    BEGIN
      TimeSheetHeader.SETRANGE("Resource No.",Resource."No.");
      TimeSheetHeader.SETRANGE("Starting Date",StartingDate);
      TimeSheetHeader.SETRANGE("Ending Date",EndingDate);
      IF TimeSheetHeader.FINDFIRST THEN
        EXIT(FALSE);

      EXIT(TRUE);
    END;

    LOCAL PROCEDURE ValidateStartingDate@9();
    BEGIN
      IF DATE2DWY(StartingDate,1) <> ResourcesSetup."Time Sheet First Weekday" + 1 THEN
        ERROR(Text010,ResourcesSetup."Time Sheet First Weekday");
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

