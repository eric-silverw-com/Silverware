OBJECT Report 188 Create Reminders
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Reminders;
               ESM=Crear recordatorios;
               FRC=Cr‚er rappels;
               ENC=Create Reminders];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   OverdueEntriesOnly := TRUE;
                 END;

    OnPreReport=BEGIN
                  CustLedgEntry.COPY(CustLedgEntry2);
                  IF CustLedgEntryLineFeeOnFilters.GETFILTERS <> '' THEN
                    CustLedgEntryLineFeeOn.COPYFILTERS(CustLedgEntryLineFeeOnFilters);
                END;

  }
  DATASET
  {
    { 6836;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=VAR
                               SalesSetup@1000 : Record 311;
                             BEGIN
                               IF ReminderHeaderReq."Document Date" = 0D THEN
                                 ERROR(Text000,ReminderHeaderReq.FIELDCAPTION("Document Date"));
                               FILTERGROUP := 2;
                               SETFILTER("Reminder Terms Code",'<>%1','');
                               FILTERGROUP := 0;
                               NoOfRecords := COUNT;
                               SalesSetup.GET;
                               SalesSetup.TESTFIELD("Reminder Nos.");
                               IF NoOfRecords = 1 THEN
                                 Window.OPEN(Text001)
                               ELSE BEGIN
                                 Window.OPEN(Text002);
                                 OldDateTime := CURRENTDATETIME;
                               END;
                               ReminderHeaderReq."Use Header Level" := UseHeaderLevel;
                             END;

               OnAfterGetRecord=BEGIN
                                  RecordNo := RecordNo + 1;
                                  CLEAR(MakeReminder);
                                  MakeReminder.Set(Customer,CustLedgEntry,ReminderHeaderReq,OverdueEntriesOnly,IncludeEntriesOnHold,CustLedgEntryLineFeeOn);
                                  IF NoOfRecords = 1 THEN BEGIN
                                    MakeReminder.Code;
                                    MARK := FALSE;
                                  END ELSE BEGIN
                                    NewDateTime := CURRENTDATETIME;
                                    IF (NewDateTime - OldDateTime > 100) OR (NewDateTime < OldDateTime) THEN BEGIN
                                      NewProgress := ROUND(RecordNo / NoOfRecords * 100,1);
                                      IF NewProgress <> OldProgress THEN BEGIN
                                        Window.UPDATE(1,NewProgress * 100);
                                        OldProgress := NewProgress;
                                      END;
                                      OldDateTime := CURRENTDATETIME;
                                    END;
                                    MARK := NOT MakeReminder.Code;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                Window.CLOSE;
                                MARKEDONLY := TRUE;
                                COMMIT;
                                IF FIND('-') THEN
                                  IF CONFIRM(Text003,TRUE) THEN
                                    PAGE.RUNMODAL(0,Customer);
                              END;

               ReqFilterFields=No. }

    { 9065;    ;DataItem;CustLedgEntry2      ;
               DataItemTable=Table21;
               DataItemTableView=SORTING(Customer No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               ReqFilterFields=Document Type }

    { 1000;    ;DataItem;CustLedgEntryLineFeeOn;
               DataItemTable=Table21;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending);
               ReqFilterHeadingML=[ENU=Apply Fee per Line On;
                                   ESM=Aplicar recargo por l¡nea en;
                                   FRC=Affecter les frais par ligne;
                                   ENC=Apply Fee per Line On];
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               ReqFilterFields=Document Type }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF ReminderHeaderReq."Document Date" = 0D THEN BEGIN
                     ReminderHeaderReq."Document Date" := WORKDATE;
                     ReminderHeaderReq."Posting Date" := WORKDATE;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             ESM=Fecha registro;
                             FRC=Date de report;
                             ENC=Posting Date];
                  ToolTipML=[ENU=Specifies the date that will appear as the posting date on the header of the reminder that is created by the batch job.;
                             ESM=Especifica la fecha que aparece como la de registro en la cabecera del recordatorio creado por el proceso.;
                             FRC=Sp‚cifie la date qui apparaŒtra en tant que date de report sur l'en-tˆte rappel cr‚‚e par le traitement en lot.;
                             ENC=Specifies the date that will appear as the posting date on the header of the reminder that is created by the batch job.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ReminderHeaderReq."Posting Date" }

      { 1   ;2   ;Field     ;
                  Name=DocumentDate;
                  CaptionML=[ENU=Document Date;
                             ESM=Fecha emisi¢n documento;
                             FRC=Date document;
                             ENC=Document Date];
                  ToolTipML=[ENU=Specifies the date that will appear as the document date on the header of the reminder that is created by the batch job. This date is used for any interest calculations and to determine the due date of the reminder.;
                             ESM=Especifica la fecha que aparecer  como la de emisi¢n del documento en la cabecera del recordatorio creado por el proceso. Esta fecha sirve para realizar todo tipo de c lculos de inter‚s y para determinar la fecha de vencimiento del recordatorio.;
                             FRC=Sp‚cifie la date qui apparaŒtra comme date du document sur l'en-tˆte du rappel cr‚‚ par le traitement en lot. Cette date est utilis‚e pour calculer les int‚rˆts et pour d‚terminer la date d'‚ch‚ance du rappel.;
                             ENC=Specifies the date that will appear as the document date on the header of the reminder that is created by the batch job. This date is used for any interest calculations and to determine the due date of the reminder.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ReminderHeaderReq."Document Date" }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Only Entries with Overdue Amounts;
                             ESM=S¢lo movs. con importes vencidos;
                             FRC=Seules les ‚critures avec des montants en souffrance;
                             ENC=Only Entries with Overdue Amounts];
                  ToolTipML=[ENU=Specifies if the batch job will only insert open entries that are overdue, meaning they have a due date earlier than the document date on the reminder header.;
                             ESM=Especifica si el proceso solo inserta los movimientos pendientes vencidos, lo que significa que tienen una fecha de caducidad anterior a la fecha de documento en la cabecera del recordatorio.;
                             FRC=Sp‚cifie si le traitement en lot insŠre uniquement les ‚critures ouvertes qui sont ‚chues, ce qui signifie qu'elles ont une date d'‚ch‚ance ant‚rieure … la date de document de l'en-tˆte rappel.;
                             ENC=Specifies if the batch job will only insert open entries that are overdue, meaning they have a due date earlier than the document date on the reminder header.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=OverdueEntriesOnly;
                  MultiLine=Yes }

      { 1102601001;2;Field  ;
                  CaptionML=[ENU=Include Entries On Hold;
                             ESM=Incluir movimientos en espera;
                             FRC=Inclure les ‚critures en attente;
                             ENC=Include Entries On Hold];
                  ToolTipML=[ENU=Specifies if you want to create reminders for entries that are on hold.;
                             ESM=Especifica si desea crear recordatorios para movimientos en espera.;
                             FRC=Sp‚cifie si vous souhaitez cr‚er des rappels pour les ‚critures en attente.;
                             ENC=Specifies if you want to create reminders for entries that are on hold.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=IncludeEntriesOnHold }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Use Header Level;
                             ESM=Usar nivel recordatorio;
                             FRC=Utiliser le niveau d'en-tˆte;
                             ENC=Use Header Level];
                  ToolTipML=[ENU=Specifies if the batch job will apply the condition of the reminder level to all the reminder lines.;
                             ESM=Especifica si el proceso aplicar  la condici¢n del nivel de recordatorio a todas las l¡neas de recordatorio.;
                             FRC=Sp‚cifie si le traitement en lot applique la condition du niveau rappel … toutes les lignes rappel.;
                             ENC=Specifies if the batch job will apply the condition of the reminder level to all the reminder lines.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=UseHeaderLevel }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be specified.;ESM=Se debe indicar %1.;FRC=%1 doit ˆtre sp‚cifi‚.;ENC=%1 must be specified.';
      Text001@1001 : TextConst 'ENU=Making reminders...;ESM=Realizando recordatorios...;FRC=Cr‚ation rappels...;ENC=Making reminders...';
      Text002@1002 : TextConst 'ENU=Making reminders @1@@@@@@@@@@@@@;ESM=Realizando recordatorios @1@@@@@@@@@@@@@;FRC=Produire les rappels @1@@@@@@@@@@@@@;ENC=Making reminders @1@@@@@@@@@@@@@';
      Text003@1003 : TextConst 'ENU=It was not possible to create reminders for some of the selected customers.\Do you want to see these customers?;ESM=No se han podido crear recordatorios para algunos de los clientes seleccionados.\¨Desea ver estos clientes?;FRC=Il n''a pas ‚t‚ possible de cr‚er des rappels pour certains clients s‚lectionn‚s.\Voulez-vous visualiser ces clientsÿ?;ENC=It was not possible to create reminders for some of the selected customers.\Do you want to see these customers?';
      CustLedgEntry@1005 : Record 21;
      ReminderHeaderReq@1006 : Record 295;
      CustLedgEntryLineFeeOnFilters@1004 : Record 21;
      MakeReminder@1007 : Codeunit 392;
      Window@1008 : Dialog;
      NoOfRecords@1009 : Integer;
      RecordNo@1010 : Integer;
      NewProgress@1011 : Integer;
      OldProgress@1012 : Integer;
      NewDateTime@1013 : DateTime;
      OldDateTime@1014 : DateTime;
      OverdueEntriesOnly@1015 : Boolean;
      UseHeaderLevel@1016 : Boolean;
      IncludeEntriesOnHold@1102601000 : Boolean;

    PROCEDURE InitializeRequest@1(DocumentDate@1000 : Date;PostingDate@1001 : Date;OverdueEntries@1002 : Boolean;NewUseHeaderLevel@1003 : Boolean;IncludeEntries@1004 : Boolean);
    BEGIN
      ReminderHeaderReq."Document Date" := DocumentDate;
      ReminderHeaderReq."Posting Date" := PostingDate;
      OverdueEntriesOnly := OverdueEntries;
      UseHeaderLevel := NewUseHeaderLevel;
      IncludeEntriesOnHold := IncludeEntries;
    END;

    PROCEDURE SetApplyLineFeeOnFilters@1000(VAR CustLedgEntryLineFeeOn2@1000 : Record 21);
    BEGIN
      CustLedgEntryLineFeeOnFilters.COPYFILTERS(CustLedgEntryLineFeeOn2);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

