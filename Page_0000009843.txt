OBJECT Page 9843 User Lookup
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:06 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Users;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000120;
    PageType=List;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 HideExternalUsers;
               END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the user's name. If the user is required to present credentials when starting the client, this is the name that the user must present.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User Name" }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies an ID that uniquely identifies the user. This value is generated automatically and should not be changed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="User Security ID";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Windows Security ID of the user. This is only relevant for Windows authentication.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Windows Security ID";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                Name=Authentication Email;
                ExtendedDatatype=E-Mail;
                ToolTipML=ENU=Specifies the Microsoft account that this user signs into Office 365 or SharePoint Online with.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Authentication Email";
                Visible=FALSE }

  }
  CODE
  {

    [External]
    PROCEDURE GetSelectionFilter@2(VAR User@1000 : Record 2000000120);
    BEGIN
      CurrPage.SETSELECTIONFILTER(User);
    END;

    LOCAL PROCEDURE HideExternalUsers@1();
    VAR
      PermissionManager@1001 : Codeunit 9002;
      OriginalFilterGroup@1000 : Integer;
    BEGIN
      IF NOT PermissionManager.SoftwareAsAService THEN
        EXIT;

      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 2;
      SETFILTER("License Type",'<>%1',"License Type"::"External User");
      FILTERGROUP := OriginalFilterGroup;
    END;

    BEGIN
    END.
  }
}

