OBJECT Page 5933 Service Invoice
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:17 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Service Invoice;
    SourceTable=Table5900;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 SetSecurityFilterOnRespCenter;
                 IF ("No." <> '') AND ("Customer No." = '') THEN
                   DocumentIsPosted := (NOT GET("Document Type","No."));

                 ActivateFields;
               END;

    OnFindRecord=BEGIN
                   IF FIND(Which) THEN
                     EXIT(TRUE);

                   SETRANGE("No.");
                   EXIT(FIND(Which));
                 END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetServiceFilter;
                  IF "No." = '' THEN
                    SetCustomerFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     CLEAR(ServLogMgt);
                     ServLogMgt.ServHeaderManualDelete(Rec);
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=ENU=&Invoice;
                      Image=Invoice }
      { 59      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=ENU=Statistics;
                      ToolTipML=ENU=View statistical information, such as the value of posted entries, for the record.;
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 OnBeforeCalculateSalesTaxStatistics(Rec,TRUE);
                                 IF "Tax Area Code" = '' THEN
                                   PAGE.RUNMODAL(PAGE::"Service Statistics",Rec)
                                 ELSE
                                   PAGE.RUNMODAL(PAGE::"Service Stats.",Rec)
                               END;
                                }
      { 60      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Service;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Customer No.);
                      Image=EditLines }
      { 61      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Comments;
                      RunObject=Page 5911;
                      RunPageLink=Table Name=CONST(Service Header),
                                  Table Subtype=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Type=CONST(General);
                      Image=ViewComments }
      { 116     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=&Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to journal lines to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 67      ;2   ;Action    ;
                      CaptionML=ENU=Service Document Lo&g;
                      ToolTipML=ENU=View a list of the service document changes that have been logged. The program creates entries in the window when, for example, the response time or service order status changed, a resource was allocated, a service order was shipped or invoiced, and so on. Each line in this window identifies the event that occurred to the service document. The line contains the information about the field that was changed, its old and new value, the date and time when the change took place, and the ID of the user who actually made the changes.;
                      ApplicationArea=#Service;
                      Image=Log;
                      OnAction=VAR
                                 TempServDocLog@1001 : TEMPORARY Record 5912;
                               BEGIN
                                 TempServDocLog.RESET;
                                 TempServDocLog.DELETEALL;
                                 TempServDocLog.CopyServLog(TempServDocLog."Document Type"::Invoice,"No.");

                                 TempServDocLog.RESET;
                                 TempServDocLog.SETCURRENTKEY("Change Date","Change Time");
                                 TempServDocLog.ASCENDING(FALSE);

                                 PAGE.RUN(0,TempServDocLog);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 62      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 63      ;2   ;Action    ;
                      Name=Calculate Invoice Discount;
                      CaptionML=ENU=Calculate &Invoice Discount;
                      ToolTipML=ENU=Calculate the invoice discount that applies to the service order.;
                      ApplicationArea=#Service;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                               END;
                                }
      { 134     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Get St&d. Service Codes;
                      ToolTipML=ENU="Insert service order lines that you have set up for recurring services. ";
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      Image=ServiceCode;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdServCode@1001 : Record 5996;
                               BEGIN
                                 StdServCode.InsertServiceLines(Rec);
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      CaptionML=ENU=P&osting;
                      Image=Post }
      { 70      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Service;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintServiceHeader(Rec);
                               END;
                                }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceHeader@1001 : Record 5900;
                                 ServPostYesNo@1000 : Codeunit 5981;
                                 InstructionMgt@1003 : Codeunit 1330;
                                 PreAssignedNo@1002 : Code[20];
                               BEGIN
                                 PreAssignedNo := "No.";
                                 ServPostYesNo.PostDocument(Rec);

                                 DocumentIsPosted := NOT ServiceHeader.GET("Document Type","No.");

                                 IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
                                   ShowPostedConfirmationMessage(PreAssignedNo);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Service;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 ServPostYesNo@1000 : Codeunit 5981;
                               BEGIN
                                 ServPostYesNo.PreviewDocument(Rec);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=PostAndSend;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post and &Send;
                      ToolTipML=ENU=Finalize and prepare to send the document according to the customer's sending profile, such as attached to an email. The Send document to window opens first so you can confirm or select a sending profile.;
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostSendTo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceHeader@1000 : Record 5900;
                               BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Service-Post and Send",Rec);
                                 DocumentIsPosted := NOT ServiceHeader.GET("Document Type","No.");
                               END;
                                }
      { 72      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Service;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ServiceHeader@1001 : Record 5900;
                                 ServPostPrint@1000 : Codeunit 5982;
                               BEGIN
                                 ServPostPrint.PostDocument(Rec);
                                 DocumentIsPosted := NOT ServiceHeader.GET("Document Type","No.");
                               END;
                                }
      { 73      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Post &Batch;
                      ToolTipML=ENU=Post several documents at once. A report request window opens where you can specify which documents to post.;
                      ApplicationArea=#Service;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Service Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                ApplicationArea=#Service;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the customer who owns the items in the service document.;
                ApplicationArea=#Service;
                SourceExpr="Customer No.";
                OnValidate=BEGIN
                             CustomerNoOnAfterValidate;
                           END;
                            }

    { 128 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the contact to whom you will deliver the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact No.";
                OnValidate=BEGIN
                             IF GETFILTER("Contact No.") = xRec."Contact No." THEN
                               IF "Contact No." <> xRec."Contact No." THEN
                                 SETRANGE("Contact No.");
                           END;
                            }

    { 7   ;2   ;Group     ;
                CaptionML=ENU=Sell-to;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                ToolTipML=ENU=Specifies the name of the customer to whom the items on the document will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Name }

    { 75  ;3   ;Field     ;
                ToolTipML=ENU=Specifies the address of the customer to whom the service will be shipped.;
                ApplicationArea=#Service;
                SourceExpr=Address }

    { 77  ;3   ;Field     ;
                ToolTipML=ENU=Specifies additional address information.;
                ApplicationArea=#Service;
                SourceExpr="Address 2" }

    { 13  ;3   ;Group     ;
                Visible=IsSellToCountyVisible;
                GroupType=Group }

    { 9   ;4   ;Field     ;
                ApplicationArea=#Service;
                SourceExpr=County }

    { 80  ;3   ;Field     ;
                ToolTipML=ENU=Specifies the ZIP Code.;
                ApplicationArea=#Service;
                SourceExpr="Post Code" }

    { 79  ;3   ;Field     ;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr=City }

    { 11  ;3   ;Field     ;
                ApplicationArea=#Service;
                SourceExpr="Country/Region Code";
                OnValidate=BEGIN
                             IsSellToCountyVisible := FormatAddress.UseCounty("Country/Region Code");
                           END;
                            }

    { 8   ;3   ;Field     ;
                ToolTipML=ENU=Specifies the name of the contact who will receive the service.;
                ApplicationArea=#Service;
                SourceExpr="Contact Name" }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the service document should be posted.;
                ApplicationArea=#Service;
                SourceExpr="Posting Date" }

    { 43  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the related document was created.;
                ApplicationArea=#Service;
                SourceExpr="Document Date" }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the salesperson assigned to this service document.;
                ApplicationArea=#Service;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 118 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the responsibility center, such as a distribution hub, that is associated with the involved user, company, customer, or vendor.;
                ApplicationArea=#Suite;
                SourceExpr="Responsibility Center";
                OnValidate=BEGIN
                             ResponsibilityCenterOnAfterVal;
                           END;
                            }

    { 147 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the ID of the user who is responsible for the document.;
                ApplicationArea=#Service;
                SourceExpr="Assigned User ID" }

    { 56  ;1   ;Part      ;
                Name=ServLines;
                ApplicationArea=#Service;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page5934 }

    { 1905885101;1;Group  ;
                CaptionML=ENU=Invoicing }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Customer No.";
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 132 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact No." }

    { 15  ;2   ;Group     ;
                CaptionML=ENU=Bill-to;
                GroupType=Group }

    { 16  ;3   ;Field     ;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the customer that you send or sent the invoice or credit memo to.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Name" }

    { 18  ;3   ;Field     ;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address of the customer to whom you will send the invoice.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address" }

    { 20  ;3   ;Field     ;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies an additional line of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Address 2" }

    { 21  ;3   ;Group     ;
                Visible=IsBillToCountyVisible;
                GroupType=Group }

    { 19  ;4   ;Field     ;
                CaptionML=ENU=State;
                ApplicationArea=#Service;
                SourceExpr="Bill-to County" }

    { 85  ;3   ;Field     ;
                CaptionML=ENU=ZIP Code;
                ToolTipML=ENU=Specifies the ZIP Code of the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Post Code" }

    { 22  ;3   ;Field     ;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to City" }

    { 17  ;3   ;Field     ;
                CaptionML=ENU=Country/Region;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Country/Region Code";
                OnValidate=BEGIN
                             IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
                           END;
                            }

    { 24  ;3   ;Field     ;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the customer's billing address.;
                ApplicationArea=#Service;
                SourceExpr="Bill-to Contact" }

    { 84  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 88  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount.;
                ApplicationArea=#Service;
                SourceExpr="Payment Terms Code" }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies when the related invoice must be paid.;
                ApplicationArea=#Service;
                SourceExpr="Due Date" }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the percentage of payment discount given, if the customer pays by the date entered in the Pmt. Discount Date field.;
                ApplicationArea=#Service;
                SourceExpr="Payment Discount %" }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                ApplicationArea=#Service;
                SourceExpr="Pmt. Discount Date" }

    { 101 ;2   ;Field     ;
                ToolTipML=ENU=Specifies how to make payment, such as with bank transfer, cash, or check.;
                ApplicationArea=#Service;
                SourceExpr="Payment Method Code" }

    { 1020004;2;Field     ;
                ToolTipML=ENU=Specifies if the customer or vendor is liable for sales tax.;
                SourceExpr="Tax Liable" }

    { 1020006;2;Field     ;
                ToolTipML=ENU=Specifies the tax area that is used to calculate and post sales tax.;
                SourceExpr="Tax Area Code" }

    { 1906801201;1;Group  ;
                CaptionML=ENU=Shipping }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a code for an alternate shipment address if you want to ship to another address than the one that has been entered automatically. This field is also used in case of drop shipment.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Code";
                OnValidate=BEGIN
                             ShiptoCodeOnAfterValidate;
                           END;
                            }

    { 23  ;2   ;Group     ;
                CaptionML=ENU=Ship-to;
                GroupType=Group }

    { 36  ;3   ;Field     ;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the customer at the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Name" }

    { 38  ;3   ;Field     ;
                CaptionML=ENU=Address;
                ToolTipML=ENU=Specifies the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address" }

    { 40  ;3   ;Field     ;
                CaptionML=ENU=Address 2;
                ToolTipML=ENU=Specifies an additional part of the ship-to address, in case it is a long address.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Address 2" }

    { 29  ;3   ;Group     ;
                Visible=IsShipToCountyVisible;
                GroupType=Group }

    { 25  ;4   ;Field     ;
                CaptionML=ENU=State;
                ApplicationArea=#Service;
                SourceExpr="Ship-to County" }

    { 93  ;3   ;Field     ;
                CaptionML=ENU=ZIP Code;
                ToolTipML=ENU=Specifies the ZIP Code of the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Post Code" }

    { 42  ;3   ;Field     ;
                CaptionML=ENU=City;
                ToolTipML=ENU=Specifies the city of the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to City" }

    { 27  ;3   ;Field     ;
                CaptionML=ENU=Country/Region Code;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Country/Region Code";
                OnValidate=BEGIN
                             IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
                           END;
                            }

    { 44  ;3   ;Field     ;
                CaptionML=ENU=Contact;
                ToolTipML=ENU=Specifies the name of the contact person at the address that the items are shipped to.;
                ApplicationArea=#Service;
                SourceExpr="Ship-to Contact" }

    { 90  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the location (for example, warehouse or distribution center) of the items specified on the service item lines.;
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 1907468901;1;Group  ;
                CaptionML=ENU=Foreign Trade }

    { 107 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the currency code for various amounts on the service lines.;
                ApplicationArea=#Service;
                SourceExpr="Currency Code";
                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 50  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the transaction is related to trade with a third party within the EU.;
                ApplicationArea=#Service;
                SourceExpr="EU 3-Party Trade" }

    { 52  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of transaction that the document represents, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Type" }

    { 99  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a specification of the document's transaction, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Service;
                SourceExpr="Transaction Specification" }

    { 54  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Service;
                SourceExpr="Transport Method" }

    { 95  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                ApplicationArea=#Service;
                SourceExpr="Exit Point" }

    { 97  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the area of the customer or vendor, for the purpose of reporting to INTRASTAT.;
                ApplicationArea=#Service;
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1902018507;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                PartType=Page }

    { 1900316107;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9084;
                Visible=FALSE;
                PartType=Page }

    { 1907829707;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Customer No.);
                PagePartID=Page9085;
                Visible=FALSE;
                PartType=Page }

    { 1902613707;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9086;
                Visible=FALSE;
                PartType=Page }

    { 1906530507;1;Part   ;
                ApplicationArea=#Service;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9088;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      ServLogMgt@1007 : Codeunit 5906;
      FormatAddress@1009 : Codeunit 365;
      ChangeExchangeRate@1001 : Page 511;
      DocumentIsPosted@1000 : Boolean;
      OpenPostedServiceInvQst@1002 : TextConst '@@@="%1 = posted document number";ENU=The invoice is posted as number %1 and moved to the Posted Service Invoices window.\\Do you want to open the posted invoice?';
      IsBillToCountyVisible@1005 : Boolean;
      IsSellToCountyVisible@1006 : Boolean;
      IsShipToCountyVisible@1008 : Boolean;

    LOCAL PROCEDURE ActivateFields@5();
    BEGIN
      IsSellToCountyVisible := FormatAddress.UseCounty("Country/Region Code");
      IsBillToCountyVisible := FormatAddress.UseCounty("Bill-to Country/Region Code");
      IsShipToCountyVisible := FormatAddress.UseCounty("Ship-to Country/Region Code");
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.ServLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE CustomerNoOnAfterValidate@19016267();
    BEGIN
      IF GETFILTER("Customer No.") = xRec."Customer No." THEN
        IF "Customer No." <> xRec."Customer No." THEN
          SETRANGE("Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ResponsibilityCenterOnAfterVal@19032024();
    BEGIN
      CurrPage.ServLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShiptoCodeOnAfterValidate@19065015();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17(PreAssignedNo@1001 : Code[20]);
    VAR
      ServiceInvoiceHeader@1000 : Record 5992;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      ServiceInvoiceHeader.SETCURRENTKEY("Pre-Assigned No.");
      ServiceInvoiceHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF ServiceInvoiceHeader.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(STRSUBSTNO(OpenPostedServiceInvQst,ServiceInvoiceHeader."No."),
             InstructionMgt.ShowPostedConfirmationMessageCode)
        THEN
          PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCalculateSalesTaxStatistics@1020000(VAR ServiceHeader@1000 : Record 5900;ShowDialog@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

