OBJECT Report 5706 Create Stockkeeping Unit
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:13:13 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Stockkeeping Unit;
    ApplicationArea=#Warehouse;
    ProcessingOnly=Yes;
    UsageCategory=Administration;
  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               Location.SETRANGE("Use As In-Transit",FALSE);

                               DialogWindow.OPEN(
                                 Text000 +
                                 Text001 +
                                 Text002);

                               SaveFilters := TRUE;
                             END;

               OnAfterGetRecord=VAR
                                  ItemVariant@1000 : Record 5401;
                                BEGIN
                                  IF SaveFilters THEN BEGIN
                                    LocationFilter := GETFILTER("Location Filter");
                                    VariantFilter := GETFILTER("Variant Filter");
                                    SaveFilters := FALSE;
                                  END;
                                  SETFILTER("Location Filter",LocationFilter);
                                  SETFILTER("Variant Filter",VariantFilter);

                                  Location.SETFILTER(Code,GETFILTER("Location Filter"));

                                  IF ReplacePreviousSKUs THEN BEGIN
                                    StockkeepingUnit.RESET;
                                    StockkeepingUnit.SETRANGE("Item No.","No.");
                                    IF GETFILTER("Variant Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Variant Code",GETFILTER("Variant Filter"));
                                    IF GETFILTER("Location Filter") <> '' THEN
                                      StockkeepingUnit.SETFILTER("Location Code",GETFILTER("Location Filter"));
                                    StockkeepingUnit.DELETEALL;
                                  END;

                                  DialogWindow.UPDATE(1,"No.");
                                  ItemVariant.SETRANGE("Item No.","No.");
                                  ItemVariant.SETFILTER(Code,GETFILTER("Variant Filter"));
                                  CASE TRUE OF
                                    (SKUCreationMethod = SKUCreationMethod::Location) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT ItemVariant.FIND('-'))):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            CreateSKU(Item,Location.Code,'');
                                          UNTIL Location.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::Variant) OR
                                    ((SKUCreationMethod = SKUCreationMethod::"Location & Variant") AND
                                     (NOT Location.FIND('-'))):
                                      BEGIN
                                        IF ItemVariant.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(3,ItemVariant.Code);
                                            SETRANGE("Variant Filter",ItemVariant.Code);
                                            CreateSKU(Item,'',ItemVariant.Code);
                                          UNTIL ItemVariant.NEXT = 0;
                                      END;
                                    (SKUCreationMethod = SKUCreationMethod::"Location & Variant"):
                                      BEGIN
                                        IF Location.FIND('-') THEN
                                          REPEAT
                                            DialogWindow.UPDATE(2,Location.Code);
                                            SETRANGE("Location Filter",Location.Code);
                                            IF ItemVariant.FIND('-') THEN
                                              REPEAT
                                                DialogWindow.UPDATE(3,ItemVariant.Code);
                                                SETRANGE("Variant Filter",ItemVariant.Code);
                                                CreateSKU(Item,Location.Code,ItemVariant.Code);
                                              UNTIL ItemVariant.NEXT = 0;
                                          UNTIL Location.NEXT = 0;
                                      END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                DialogWindow.CLOSE;
                              END;

               ReqFilterFields=No.,Inventory Posting Group,Location Filter,Variant Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   ReplacePreviousSKUs := FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 3   ;2   ;Field     ;
                  CaptionML=ENU=Create Per;
                  ToolTipML=ENU=Specifies if you want to create stockkeeping units per location or per variant or per location combined with variant.;
                  OptionCaptionML=ENU=Location,Variant,Location & Variant;
                  ApplicationArea=#Location;
                  SourceExpr=SKUCreationMethod }

      { 1   ;2   ;Field     ;
                  CaptionML=ENU=Item In Inventory Only;
                  ToolTipML=ENU=Specifies if you only want the batch job to create stockkeeping units for items that are in your inventory (that is, for items where the value in the Inventory field is above 0).;
                  ApplicationArea=#Location;
                  SourceExpr=ItemInInventoryOnly }

      { 7   ;2   ;Field     ;
                  CaptionML=ENU=Replace Previous SKUs;
                  ToolTipML=ENU=Specifies if you want the batch job to replace all previous created stockkeeping units on the items you have included in the batch job.;
                  ApplicationArea=#Warehouse;
                  SourceExpr=ReplacePreviousSKUs }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Item No.       #1##################\';
      Text001@1001 : TextConst 'ENU=Location Code  #2########\';
      Text002@1002 : TextConst 'ENU=Variant Code   #3########\';
      StockkeepingUnit@1003 : Record 5700;
      Location@1004 : Record 14;
      DialogWindow@1008 : Dialog;
      SKUCreationMethod@1005 : 'Location,Variant,Location & Variant';
      ItemInInventoryOnly@1006 : Boolean;
      ReplacePreviousSKUs@1007 : Boolean;
      SaveFilters@1009 : Boolean;
      LocationFilter@1010 : Code[1024];
      VariantFilter@1011 : Code[1024];

    LOCAL PROCEDURE CreateSKU@26(VAR Item2@1000 : Record 27;LocationCode@1001 : Code[10];VariantCode@1002 : Code[10]);
    VAR
      IsHandled@1003 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnBeforeCreateSKU(Item2,LocationCode,VariantCode,ItemInInventoryOnly,IsHandled);
      IF IsHandled THEN
        EXIT;

      Item2.CALCFIELDS(Inventory);
      IF (ItemInInventoryOnly AND (Item2.Inventory > 0)) OR
         (NOT ItemInInventoryOnly)
      THEN
        IF NOT StockkeepingUnit.GET(LocationCode,Item2."No.",VariantCode) THEN BEGIN
          StockkeepingUnit.INIT;
          StockkeepingUnit."Item No." := Item2."No.";
          StockkeepingUnit."Location Code" := LocationCode;
          StockkeepingUnit."Variant Code" := VariantCode;
          StockkeepingUnit.CopyFromItem(Item2);
          StockkeepingUnit."Last Date Modified" := WORKDATE;
          StockkeepingUnit."Special Equipment Code" := Item2."Special Equipment Code";
          StockkeepingUnit."Put-away Template Code" := Item2."Put-away Template Code";
          StockkeepingUnit.SetHideValidationDialog(TRUE);
          StockkeepingUnit.VALIDATE("Phys Invt Counting Period Code",Item2."Phys Invt Counting Period Code");
          StockkeepingUnit."Put-away Unit of Measure Code" := Item2."Put-away Unit of Measure Code";
          StockkeepingUnit."Use Cross-Docking" := Item2."Use Cross-Docking";
          OnBeforeStockkeepingUnitInsert(StockkeepingUnit,Item2);
          StockkeepingUnit.INSERT(TRUE);
        END;
    END;

    PROCEDURE InitializeRequest@1(CreatePerOption@1000 : 'Location,Variant,Location & Variant';NewItemInInventoryOnly@1001 : Boolean;NewReplacePreviousSKUs@1002 : Boolean);
    BEGIN
      SKUCreationMethod := CreatePerOption;
      ItemInInventoryOnly := NewItemInInventoryOnly;
      ReplacePreviousSKUs := NewReplacePreviousSKUs;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateSKU@3(VAR Item@1000 : Record 27;LocationCode@1002 : Code[10];VariantCode@1001 : Code[10];ItemInInventoryOnly@1003 : Boolean;VAR IsHandled@1004 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStockkeepingUnitInsert@2(VAR StockkeepingUnit@1000 : Record 5700;Item@1001 : Record 27);
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

