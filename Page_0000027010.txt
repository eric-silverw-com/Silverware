OBJECT Page 27010 Mexican CFDI Wizard
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:13 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Set up Mexican CFDI information;
    ApplicationArea=#Basic,#Suite;
    PageType=NavigatePage;
    UsageCategory=Administration;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 CompanyInformation@1020001 : Record 79;
               BEGIN
                 Step := Step::Start;
                 EnableControls;
                 IF CompanyInformation.FINDFIRST THEN BEGIN
                   PostCode := CompanyInformation."SAT Postal Code";
                   TaxScheme := CompanyInformation."SAT Tax Regime Classification";
                 END;
               END;

    OnQueryClosePage=BEGIN
                       IF (CloseAction = ACTION::OK) AND (NOT Finished) THEN
                         IF NOT CONFIRM(SetupNotCompletedQst,FALSE) THEN
                           ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1020000 : Record 1803;
                               BEGIN
                                 Finished := TRUE;
                                 AssistedSetup.SetStatus(PAGE::"Mexican CFDI Wizard",AssistedSetup.Status::Completed);
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 25  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=ENU=Welcome to the assisted setup guide for Mexican CFDI reporting;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 1020000;3;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This guide helps you set up the Mexican CFDI features for reporting information to SAT. }

    { 19  ;1   ;Group     ;
                Visible=PopulateStepVisible;
                GroupType=Group }

    { 20  ;2   ;Group     ;
                CaptionML=ENU=Get the information that SAT requires;
                Visible=PopulateStepVisible;
                GroupType=Group }

    { 1020001;3;Group     ;
                Visible=PopulateStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Click Next to get the information that SAT requires for CFDI reporting. }

    { 1020004;1;Group     ;
                Visible=MapStepVisible;
                GroupType=Group }

    { 1020003;2;Group     ;
                CaptionML=ENU=Map Information to SAT requirements;
                Visible=MapStepVisible;
                GroupType=Group }

    { 1020002;3;Group     ;
                Visible=MapStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Click Next to map your country codes and units of measure to the values that SAT requires. }

    { 1020007;1;Group     ;
                Visible=CompanyStepVisible;
                GroupType=Group }

    { 1020006;2;Group     ;
                CaptionML=ENU=Set company SAT information;
                Visible=CompanyStepVisible;
                GroupType=Group }

    { 1020005;3;Group     ;
                Visible=CompanyStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=You will need to set your SAT ZIP Code and SAT Tax Regime Classification for your company. }

    { 1020008;4;Field     ;
                CaptionML=ENU=SAT ZIP Code;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PostCode;
                Visible=CompanyStepVisible;
                OnValidate=BEGIN
                             NextActionEnabled := (PostCode <> '') AND (TaxScheme <> '');
                           END;
                            }

    { 1020009;4;Field     ;
                CaptionML=ENU=SAT Tax Regime Classification;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TaxScheme;
                TableRelation="SAT Tax Scheme"."SAT Tax Scheme";
                Visible=CompanyStepVisible;
                OnValidate=BEGIN
                             NextActionEnabled := (PostCode <> '') AND (TaxScheme <> '');
                           END;
                            }

    { 1020020;1;Group     ;
                Visible=PaymentTermsStepVisible;
                GroupType=Group }

    { 1020021;2;Group     ;
                CaptionML=ENU=Map your payment terms to those that SAT requires.;
                Visible=PaymentTermsStepVisible;
                GroupType=Group }

    { 1020022;3;Part      ;
                CaptionML=ENU=Payment Terms;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page27011;
                Visible=PaymentTermsStepVisible;
                PartType=Page }

    { 1020025;1;Group     ;
                Visible=PaymentMethodsStepVisible;
                GroupType=Group }

    { 1020024;2;Group     ;
                CaptionML=ENU=Map your payment methods to those that SAT requires.;
                Visible=PaymentMethodsStepVisible;
                GroupType=Group }

    { 1020023;3;Part      ;
                CaptionML=ENU=Payment Methods;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page27012;
                Visible=PaymentMethodsStepVisible;
                PartType=Page }

    { 1020017;1;Group     ;
                Visible=ItemStepVisible;
                GroupType=Group }

    { 1020018;2;Group     ;
                CaptionML=ENU=Set the SAT Item Classification for each item you will be using in your sales documents;
                Visible=ItemStepVisible;
                GroupType=Group }

    { 1020019;3;Part      ;
                PagePartID=Page27013;
                Visible=ItemStepVisible;
                PartType=Page }

    { 1020028;1;Group     ;
                Visible=CustomerStepVisible;
                GroupType=Group }

    { 1020027;2;Group     ;
                CaptionML=ENU=Set up SAT information for each customer you will be using in your sales documents;
                Visible=CustomerStepVisible;
                GroupType=Group }

    { 1020026;3;Part      ;
                PagePartID=Page27014;
                Visible=CustomerStepVisible;
                PartType=Page }

    { 8   ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 1020010;3;Group     ;
                Visible=FinalStepVisible AND NOT AllCountriesMapped;
                GroupType=Group;
                InstructionalTextML=ENU=You still have Country Codes that have not had their SAT Country Codes set. }

    { 1020016;3;Group     ;
                Visible=FinalStepVisible AND NOT AllUofMsMapped;
                GroupType=Group;
                InstructionalTextML=ENU=You still have Units of Measure that have not had their SAT Unit of Measure Codes set. }

    { 1020011;3;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to complete this assisted setup guide. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1002 : Record 2000000182;
      MediaResourcesDone@1001 : Record 2000000182;
      Step@1012 : 'Start,Populate,Map,Company,PaymentMethods,PaymentTerms,Item,Customer,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      PopulateStepVisible@1010 : Boolean;
      MapStepVisible@1020000 : Boolean;
      CompanyStepVisible@1020001 : Boolean;
      PaymentTermsStepVisible@1020004 : Boolean;
      PaymentMethodsStepVisible@1020016 : Boolean;
      ItemStepVisible@1020009 : Boolean;
      CustomerStepVisible@1020010 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      SetupNotCompletedQst@1020002 : TextConst 'ENU=The setup has not yet been completed.\\Are you sure that you want to exit?';
      Finished@1020003 : Boolean;
      AllCountriesMapped@1020005 : Boolean;
      AllUofMsMapped@1020006 : Boolean;
      PostCode@1020007 : Code[10];
      TaxScheme@1020008 : Code[10];

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Populate:
          ShowPopulateStep;
        Step::Map:
          ShowMapStep;
        Step::Company:
          ShowCompanyStep;
        Step::PaymentTerms:
          ShowPaymentTermsStep;
        Step::PaymentMethods:
          ShowPaymentMethodsStep;
        Step::Item:
          ShowItemStep;
        Step::Customer:
          ShowCustomerStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    VAR
      SATUtilities@1020000 : Codeunit 27030;
    BEGIN
      // find out if system data already entered.  Then move by 2.
      IF (Step = Step::Start) AND (NOT Backwards) THEN
        IF DoesSATInfoAlreadyExist THEN BEGIN
          Step := Step + 2;
          EnableControls;
          EXIT;
        END;
      IF (Step = Step::Map) AND Backwards THEN
        IF DoesSATInfoAlreadyExist THEN BEGIN
          Step := Step - 2;
          EnableControls;
          EXIT;
        END;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      IF (Step = Step::Company) AND (NOT Backwards) THEN  // Came from Map step, need to run the mapping
        MapSATInformation;
      IF (Step = Step::PaymentMethods) AND (NOT Backwards) THEN // Came from Company Info setting, save the values
        SetCompanyInformation;
      IF (Step = Step::Map) AND (NOT Backwards) THEN // Came from Populate setting, save the values
        SATUtilities.PopulateSATInformation;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowPopulateStep@33();
    BEGIN
      FirstStepVisible := FALSE;
      PopulateStepVisible := TRUE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowMapStep@1020002();
    BEGIN
      BackActionEnabled := FALSE;
      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := TRUE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowCompanyStep@1020003();
    BEGIN
      BackActionEnabled := TRUE;
      NextActionEnabled := (PostCode <> '') OR (TaxScheme <> '');

      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := TRUE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowPaymentTermsStep@1020001();
    BEGIN
      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := TRUE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowPaymentMethodsStep@1020004();
    BEGIN
      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := TRUE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowItemStep@1020005();
    BEGIN
      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := TRUE;
      CustomerStepVisible := FALSE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowCustomerStep@1020007();
    BEGIN
      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := TRUE;
      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    BEGIN
      FinalStepVisible := TRUE;
      BackActionEnabled := FALSE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      PopulateStepVisible := FALSE;
      MapStepVisible := FALSE;
      CompanyStepVisible := FALSE;
      PaymentTermsStepVisible := FALSE;
      PaymentMethodsStepVisible := FALSE;
      ItemStepVisible := FALSE;
      CustomerStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
      EnableControls;
    END;

    LOCAL PROCEDURE DoesSATInfoAlreadyExist@1020000() : Boolean;
    VAR
      SATRelationshipType@1020000 : Record 27011;
    BEGIN
      IF SATRelationshipType.FINDFIRST THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE MapSATInformation@1020006();
    VAR
      CountryRegion@1020001 : Record 9;
      UnitOfMeasure@1020002 : Record 204;
      SATUtilities@1020000 : Codeunit 27030;
    BEGIN
      CountryRegion.SETRANGE("SAT Country Code",'');
      IF CountryRegion.FINDFIRST THEN BEGIN
        SATUtilities.MapCountryCodes;
        CountryRegion.SETRANGE("SAT Country Code",'');
        IF CountryRegion.FINDFIRST THEN
          AllCountriesMapped := FALSE
        ELSE
          AllCountriesMapped := TRUE;
      END ELSE
        AllCountriesMapped := TRUE;

      UnitOfMeasure.SETRANGE("SAT UofM Classification",'');
      IF UnitOfMeasure.FINDFIRST THEN BEGIN
        SATUtilities.MapUnitsofMeasure;
        UnitOfMeasure.SETRANGE("SAT UofM Classification",'');
        IF UnitOfMeasure.FINDFIRST THEN
          AllUofMsMapped := FALSE
        ELSE
          AllUofMsMapped := TRUE;
      END ELSE
        AllUofMsMapped := TRUE;
    END;

    LOCAL PROCEDURE SetCompanyInformation@1020020();
    VAR
      CompanyInformation@1020000 : Record 79;
    BEGIN
      WITH CompanyInformation DO
        IF FINDFIRST THEN BEGIN
          "SAT Postal Code" := PostCode;
          "SAT Tax Regime Classification" := TaxScheme;
          MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

