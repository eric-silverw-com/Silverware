OBJECT Table 1313 Activities Cue
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:31 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Activities Cue;
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=ENU=Primary Key }
    { 2   ;   ;Due Date Filter     ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Due Date Filter;
                                                   Editable=No }
    { 3   ;   ;Overdue Date Filter ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Overdue Date Filter }
    { 4   ;   ;Ongoing Sales Invoices;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=FILTER(Invoice)));
                                                   CaptionML=ENU=Ongoing Sales Invoices }
    { 5   ;   ;Ongoing Purchase Invoices;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=FILTER(Invoice)));
                                                   CaptionML=ENU=Ongoing Purchase Invoices }
    { 6   ;   ;Sales This Month    ;Decimal       ;CaptionML=ENU=Sales This Month;
                                                   DecimalPlaces=0:0;
                                                   AutoFormatType=10;
                                                   AutoFormatExpr=GetAmountFormat }
    { 7   ;   ;Top 10 Customer Sales YTD;Decimal  ;CaptionML=ENU=Top 10 Customer Sales YTD;
                                                   AutoFormatType=10;
                                                   AutoFormatExpr='<Precision,1:1><Standard Format,9>%' }
    { 8   ;   ;Overdue Purch. Invoice Amount;Decimal;
                                                   CaptionML=ENU=Overdue Purch. Invoice Amount;
                                                   DecimalPlaces=0:0;
                                                   AutoFormatType=10;
                                                   AutoFormatExpr=GetAmountFormat }
    { 9   ;   ;Overdue Sales Invoice Amount;Decimal;
                                                   CaptionML=ENU=Overdue Sales Invoice Amount;
                                                   DecimalPlaces=0:0;
                                                   AutoFormatType=10;
                                                   AutoFormatExpr=GetAmountFormat }
    { 10  ;   ;Average Collection Days;Decimal    ;CaptionML=ENU=Average Collection Days;
                                                   DecimalPlaces=1:1 }
    { 11  ;   ;Ongoing Sales Quotes;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=FILTER(Quote)));
                                                   CaptionML=ENU=Ongoing Sales Quotes }
    { 12  ;   ;Requests to Approve ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Approval Entry" WHERE (Approver ID=FIELD(User ID Filter),
                                                                                             Status=FILTER(Open)));
                                                   CaptionML=ENU=Requests to Approve }
    { 13  ;   ;Sales Inv. - Pending Doc.Exch.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (Document Exchange Status=FILTER(Sent to Document Exchange Service|Delivery Failed)));
                                                   CaptionML=ENU=Sales Invoices - Pending Document Exchange;
                                                   Editable=No }
    { 14  ;   ;Sales CrM. - Pending Doc.Exch.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Cr.Memo Header" WHERE (Document Exchange Status=FILTER(Sent to Document Exchange Service|Delivery Failed)));
                                                   CaptionML=ENU=Sales Credit Memos - Pending Document Exchange;
                                                   Editable=No }
    { 15  ;   ;User ID Filter      ;Code50        ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=User ID Filter }
    { 17  ;   ;Due Next Week Filter;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Due Next Week Filter }
    { 20  ;   ;My Incoming Documents;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Incoming Document" WHERE (Processed=CONST(No)));
                                                   CaptionML=ENU=My Incoming Documents }
    { 21  ;   ;Non-Applied Payments;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Bank Acc. Reconciliation" WHERE (Statement Type=CONST(Payment Application)));
                                                   CaptionML=ENU=Non-Applied Payments }
    { 22  ;   ;Purch. Invoices Due Next Week;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor Ledger Entry" WHERE (Document Type=FILTER(Invoice|Credit Memo),
                                                                                                  Due Date=FIELD(Due Next Week Filter),
                                                                                                  Open=CONST(Yes)));
                                                   CaptionML=ENU=Purch. Invoices Due Next Week;
                                                   Editable=No }
    { 23  ;   ;Sales Invoices Due Next Week;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Cust. Ledger Entry" WHERE (Document Type=FILTER(Invoice|Credit Memo),
                                                                                                 Due Date=FIELD(Due Next Week Filter),
                                                                                                 Open=CONST(Yes)));
                                                   CaptionML=ENU=Sales Invoices Due Next Week;
                                                   Editable=No }
    { 24  ;   ;Ongoing Sales Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=FILTER(Order)));
                                                   CaptionML=ENU=Ongoing Sales Orders }
    { 25  ;   ;Inc. Doc. Awaiting Verfication;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Incoming Document" WHERE (OCR Status=CONST(Awaiting Verification)));
                                                   CaptionML=ENU=Inc. Doc. Awaiting Verfication }
    { 26  ;   ;Purchase Orders     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=FILTER(Order)));
                                                   CaptionML=ENU=Purchase Orders }
    { 27  ;   ;Uninvoiced Bookings ;Integer       ;CaptionML=ENU=Uninvoiced Bookings;
                                                   Editable=No }
    { 28  ;   ;IC Inbox Transactions;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("IC Inbox Transaction");
                                                   CaptionML=ENU=IC Inbox Transactions }
    { 29  ;   ;IC Outbox Transactions;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("IC Outbox Transaction");
                                                   CaptionML=ENU=IC Outbox Transactions }
    { 30  ;   ;Pending Tasks       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("User Task" WHERE (Assigned To User Name=FIELD(User ID Filter),
                                                                                        Percent Complete=FILTER(<>100)));
                                                   CaptionML=ENU=Pending Tasks }
    { 31  ;   ;Outstanding Vendor Invoices;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Vendor Ledger Entry" WHERE (Document Type=FILTER(Invoice),
                                                                                                  Remaining Amount=FILTER(<0),
                                                                                                  Applies-to ID=FILTER('')));
                                                   CaptionML=ENU=Outstanding Vendor Invoices;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetAmountFormat@1() : Text;
    VAR
      GeneralLedgerSetup@1000 : Record 98;
      UserPersonalization@1002 : Record 2000000073;
      CurrencySymbol@1001 : Text[10];
    BEGIN
      GeneralLedgerSetup.GET;
      CurrencySymbol := GeneralLedgerSetup.GetCurrencySymbol;

      IF UserPersonalization.GET(USERSECURITYID) AND (CurrencySymbol <> '') THEN
        CASE UserPersonalization."Locale ID" OF
          1030, // da-DK
          1053, // sv-Se
          1044: // no-no
            EXIT('<Precision,0:0><Standard Format,0>' + CurrencySymbol);
          2057, // en-gb
          1033, // en-us
          4108, // fr-ch
          1031, // de-de
          2055, // de-ch
          1040, // it-it
          2064, // it-ch
          1043, // nl-nl
          2067, // nl-be
          2060, // fr-be
          3079, // de-at
          1035, // fi
          1034: // es-es
            EXIT(CurrencySymbol + '<Precision,0:0><Standard Format,0>');
        END;

      EXIT(GetDefaultAmountFormat);
    END;

    LOCAL PROCEDURE GetDefaultAmountFormat@5() : Text;
    BEGIN
      EXIT('$<Precision,0:0><Standard Format,0>');
    END;

    BEGIN
    END.
  }
}

