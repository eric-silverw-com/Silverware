OBJECT Page 1042 Copy Job Planning Lines
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Job Planning Lines;
               ESM=Copiar l¡neas de planificaci¢n de proyecto;
               FRC=Copier les lignes planification projet;
               ENC=Copy Job Planning Lines];
    PageType=StandardDialog;
    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::OK,ACTION::LookupOK] THEN BEGIN
                         ValidateUserInput;
                         CopyJob.SetCopyQuantity(CopyQuantity);
                         CopyJob.SetCopyJobPlanningLineType(PlanningLineType);
                         CopyJob.SetJobTaskDateRange(FromDate,ToDate);
                         CopyJob.CopyJobPlanningLines(SourceJobTask,TargetJobTask);
                         MESSAGE(Text001);
                       END
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 15  ;1   ;Group     ;
                CaptionML=[ENU=Copy from;
                           ESM=Copiar desde;
                           FRC=Copier de;
                           ENC=Copy from] }

    { 11  ;2   ;Field     ;
                CaptionML=[ENU=Job No.;
                           ESM=N§ proyecto;
                           FRC=Nø projet;
                           ENC=Job No.];
                ToolTipML=[ENU=Specifies the job number.;
                           ESM=Especifica el n£mero de trabajo.;
                           FRC=Sp‚cifie le num‚ro de projet.;
                           ENC=Specifies the job number.];
                ApplicationArea=#Jobs;
                SourceExpr=SourceJobNo;
                TableRelation=Job;
                OnValidate=VAR
                             SourceJob@1001 : Record 167;
                           BEGIN
                             IF (SourceJobNo <> '') AND NOT SourceJob.GET(SourceJobNo) THEN
                               ERROR(Text003,SourceJob.TABLECAPTION,SourceJobNo);

                             SourceJobTaskNo := '';
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Job Task No.;
                           ESM=N§ tarea proyecto;
                           FRC=Nø tƒche de projet;
                           ENC=Job Task No.];
                ToolTipML=[ENU=Specifies the job task number.;
                           ESM=Especifica el n£mero de tarea de trabajo.;
                           FRC=Sp‚cifie le num‚ro de tƒche projet.;
                           ENC=Specifies the job task number.];
                ApplicationArea=#Jobs;
                SourceExpr=SourceJobTaskNo;
                OnValidate=VAR
                             JobTask@1000 : Record 1001;
                           BEGIN
                             IF (SourceJobTaskNo <> '') AND NOT JobTask.GET(SourceJobNo,SourceJobTaskNo) THEN
                               ERROR(Text003,JobTask.TABLECAPTION,SourceJobTaskNo);
                           END;

                OnLookup=VAR
                           JobTask@1000 : Record 1001;
                         BEGIN
                           IF SourceJobNo <> '' THEN BEGIN
                             JobTask.SETRANGE("Job No.",SourceJobNo);
                             IF PAGE.RUNMODAL(PAGE::"Job Task List",JobTask) = ACTION::LookupOK THEN
                               SourceJobTaskNo := JobTask."Job Task No.";
                           END;
                         END;
                          }

    { 2   ;2   ;Field     ;
                Name=Planning Line Type;
                CaptionML=[ENU=Incl. Planning Line Type;
                           ESM=Incl. tipo l¡nea planificaci¢n;
                           FRC=Type lignes planification … inclure;
                           ENC=Incl. Planning Line Type];
                ToolTipML=[ENU=Specifies how copy planning lines. Budget+Billable: All planning lines are copied. Budget: Only lines of type Budget or type Both Budget and Billable are copied. Billable: Only lines of type Billable or type Both Budget and Billable are copied.;
                           ESM=Especifica c¢mo se copian las l¡neas de planificaci¢n. Presupuesto + Facturable: se copian todas las l¡neas de planificaci¢n. Presupuesto: solo se copian las l¡neas de tipo Presupuesto o Presupuesto y Facturable. Facturable: solo se copian las l¡neas de tipo Facturable o Presupuesto y Facturable.;
                           FRC=Sp‚cifie la maniŠre de copier les lignes planification. Budget+Facturableÿ: toutes les lignes planification sont copi‚es. Budgetÿ: seules les lignes du type Budget ou du type Budget et Facturable sont copi‚es. Facturableÿ: seules les lignes du type Facturable ou du type Budget et Facturable sont copi‚es.;
                           ENC=Specifies how copy planning lines. Budget+Billable: All planning lines are copied. Budget: Only lines of type Budget or type Both Budget and Billable are copied. Billable: Only lines of type Billable or type Both Budget and Billable are copied.];
                OptionCaptionML=[ENU=Budget+Billable,Budget,Billable;
                                 ESM=Presupuesto+Facturable,Presupuesto,Facturable;
                                 FRC=Budget+Facturable,Budget,Facturable;
                                 ENC=Budget+Billable,Budget,Billable];
                ApplicationArea=#Jobs;
                SourceExpr=PlanningLineType }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Starting Date;
                           ESM=Fecha inicial;
                           FRC=Date d‚but;
                           ENC=Starting Date];
                ToolTipML=[ENU=Specifies the date from which the report or batch job processes information.;
                           ESM=Especifica la fecha a partir de la cual el informe o trabajo por lotes procesa la informaci¢n.;
                           FRC=Sp‚cifie la date … partir de laquelle le rapport ou le traitement en lot traite les informations.;
                           ENC=Specifies the date from which the report or batch job processes information.];
                ApplicationArea=#Jobs;
                SourceExpr=FromDate }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Ending Date;
                           ESM=Fecha final;
                           FRC=Date fin;
                           ENC=Ending Date];
                ToolTipML=[ENU=Specifies the date to which the report or batch job processes information.;
                           ESM=Especifica la fecha hasta la cual el informe o trabajo por lotes procesa la informaci¢n.;
                           FRC=Sp‚cifie la date jusqu'… laquelle le rapport ou le traitement en lot traite les informations.;
                           ENC=Specifies the date to which the report or batch job processes information.];
                ApplicationArea=#Jobs;
                SourceExpr=ToDate }

    { 5   ;1   ;Group     ;
                CaptionML=[ENU=Copy to;
                           ESM=Copiar a;
                           FRC=Copier vers;
                           ENC=Copy to] }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Job No.;
                           ESM=N§ proyecto;
                           FRC=Nø projet;
                           ENC=Job No.];
                ToolTipML=[ENU=Specifies the job number.;
                           ESM=Especifica el n£mero de trabajo.;
                           FRC=Sp‚cifie le num‚ro de projet.;
                           ENC=Specifies the job number.];
                ApplicationArea=#Jobs;
                SourceExpr=TargetJobNo;
                TableRelation=Job;
                OnValidate=VAR
                             TargetJob@1001 : Record 167;
                           BEGIN
                             IF (TargetJobNo <> '') AND NOT TargetJob.GET(TargetJobNo) THEN
                               ERROR(Text003,TargetJob.TABLECAPTION,TargetJobNo);

                             TargetJobTaskNo := '';
                           END;
                            }

    { 1   ;2   ;Field     ;
                CaptionML=[ENU=Job Task No.;
                           ESM=N§ tarea proyecto;
                           FRC=Nø tƒche de projet;
                           ENC=Job Task No.];
                ToolTipML=[ENU=Specifies the job task number.;
                           ESM=Especifica el n£mero de tarea de trabajo.;
                           FRC=Sp‚cifie le num‚ro de tƒche projet.;
                           ENC=Specifies the job task number.];
                ApplicationArea=#Jobs;
                SourceExpr=TargetJobTaskNo;
                OnValidate=VAR
                             JobTask@1000 : Record 1001;
                           BEGIN
                             IF (TargetJobTaskNo <> '') AND NOT JobTask.GET(TargetJobNo,TargetJobTaskNo) THEN
                               ERROR(Text003,JobTask.TABLECAPTION,TargetJobTaskNo);
                           END;

                OnLookup=VAR
                           JobTask@1000 : Record 1001;
                         BEGIN
                           IF TargetJobNo <> '' THEN BEGIN
                             JobTask.SETRANGE("Job No.",TargetJobNo);
                             IF PAGE.RUNMODAL(PAGE::"Job Task List",JobTask) = ACTION::LookupOK THEN
                               TargetJobTaskNo := JobTask."Job Task No.";
                           END;
                         END;
                          }

    { 6   ;1   ;Group     ;
                CaptionML=[ENU=Apply;
                           ESM=Aplicar;
                           FRC=Affecter;
                           ENC=Apply] }

    { 26  ;2   ;Field     ;
                CaptionML=[ENU=Copy Quantity;
                           ESM=Copiar cantidad;
                           FRC=Copier quantit‚;
                           ENC=Copy Quantity];
                ToolTipML=[ENU=Specifies that the quantities will be copied to the new job.;
                           ESM=Especifica que las cantidades se copiar n al trabajo nuevo.;
                           FRC=Sp‚cifie que les quantit‚s seront copi‚es vers le nouveau projet.;
                           ENC=Specifies that the quantities will be copied to the new job.];
                ApplicationArea=#Jobs;
                SourceExpr=CopyQuantity }

  }
  CODE
  {
    VAR
      SourceJobTask@1003 : Record 1001;
      TargetJobTask@1000 : Record 1001;
      CopyJob@1012 : Codeunit 1006;
      SourceJobNo@1009 : Code[20];
      SourceJobTaskNo@1004 : Code[20];
      TargetJobNo@1008 : Code[20];
      TargetJobTaskNo@1001 : Code[20];
      Text001@1016 : TextConst 'ENU=The job was successfully copied.;ESM=El proyecto se copi¢ correctamente.;FRC=Le projet a ‚t‚ copi‚ avec succŠs.;ENC=The job was successfully copied.';
      Text003@1018 : TextConst '@@@=Job Task 1000 does not exist.;ENU=%1 %2 does not exist.;ESM=No existe %1 %2.;FRC=%1 %2 n''existe pas.;ENC=%1 %2 does not exist.';
      PlanningLineType@1005 : 'Budget+Billable,Budget,Billable';
      FromDate@1007 : Date;
      ToDate@1006 : Date;
      CopyQuantity@1011 : Boolean;
      Text004@1015 : TextConst 'ENU=Provide a valid source %1.;ESM=Proporcione un origen v lido %1.;FRC=Fournissez une source %1 valide.;ENC=Provide a valid source %1.';
      Text005@1002 : TextConst 'ENU=Provide a valid target %1.;ESM=Proporcione un destino v lido %1.;FRC=Fournissez un %1 cible valide.;ENC=Provide a valid target %1.';

    LOCAL PROCEDURE ValidateUserInput@1();
    VAR
      Job@1000 : Record 167;
    BEGIN
      IF SourceJobNo = '' THEN
        ERROR(Text004,Job.TABLECAPTION);
      IF (SourceJobTaskNo = '') OR NOT SourceJobTask.GET(SourceJobNo,SourceJobTaskNo) THEN
        ERROR(Text004,SourceJobTask.TABLECAPTION);

      IF TargetJobNo = '' THEN
        ERROR(Text005,Job.TABLECAPTION);
      IF (TargetJobTaskNo = '') OR NOT TargetJobTask.GET(TargetJobNo,TargetJobTaskNo) THEN
        ERROR(Text005,TargetJobTask.TABLECAPTION);
    END;

    [External]
    PROCEDURE SetFromJobTask@3(SourceJobTask2@1000 : Record 1001);
    BEGIN
      SourceJobNo := SourceJobTask2."Job No.";
      SourceJobTask := SourceJobTask2;
      SourceJobTaskNo := SourceJobTask2."Job Task No.";
    END;

    [External]
    PROCEDURE SetToJobTask@4(TargetJobTask2@1000 : Record 1001);
    BEGIN
      TargetJobNo := TargetJobTask2."Job No.";
      TargetJobTask := TargetJobTask2;
      TargetJobTaskNo := TargetJobTask2."Job Task No.";
    END;

    BEGIN
    END.
  }
}

