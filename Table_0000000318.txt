OBJECT Table 318 Tax Area
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:13 PM;
    Version List=;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               SetLastModifiedDateTime;
             END;

    OnModify=BEGIN
               SetLastModifiedDateTime;
             END;

    OnDelete=BEGIN
               IF IsTaxAreaInUse THEN
                 ERROR(TaxAreaInUseErr);

               TaxAreaLine.SETRANGE("Tax Area",Code);
               TaxAreaLine.DELETEALL;
             END;

    OnRename=BEGIN
               SetLastModifiedDateTime;
             END;

    CaptionML=ENU=Tax Area;
    LookupPageID=Page469;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 10  ;   ;Last Modified Date Time;DateTime   ;CaptionML=ENU=Last Modified Date Time;
                                                   Editable=No }
    { 8000;   ;Id                  ;GUID          ;CaptionML=ENU=Id }
    { 10010;  ;Country/Region      ;Option        ;OnValidate=BEGIN
                                                                TaxAreaLine.SETRANGE("Tax Area",Code);
                                                                IF TaxAreaLine.FIND('-') THEN BEGIN
                                                                  REPEAT
                                                                    TaxJurisdiction.GET(TaxAreaLine."Tax Jurisdiction Code");
                                                                    TESTFIELD("Country/Region",TaxJurisdiction."Country/Region");
                                                                  UNTIL TaxAreaLine.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Country/Region;
                                                   OptionCaptionML=ENU=US,CA;
                                                   OptionString=US,CA;
                                                   BlankZero=No }
    { 10011;  ;Round Tax           ;Option        ;CaptionML=ENU=Round Tax;
                                                   OptionCaptionML=ENU=To Nearest,Up,Down;
                                                   OptionString=To Nearest,Up,Down;
                                                   BlankZero=No }
    { 10012;  ;Use External Tax Engine;Boolean    ;CaptionML=ENU=Use External Tax Engine }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxAreaLine@1020000 : Record 319;
      TaxJurisdiction@1020001 : Record 320;
      TaxAreaInUseErr@1000 : TextConst 'ENU=You cannot delete this tax rate because it is used on one or more existing documents.';

    [External]
    PROCEDURE CreateTaxArea@1(NewTaxAreaCode@1000 : Code[20];City@1001 : Text[50];State@1002 : Text[50]);
    BEGIN
      INIT;
      Code := NewTaxAreaCode;
      Description := NewTaxAreaCode;
      IF INSERT THEN;

      IF City <> '' THEN
        CreateTaxAreaLine(Code,COPYSTR(City,1,10));
      IF State <> '' THEN
        CreateTaxAreaLine(Code,COPYSTR(State,1,10));
      IF (City = '') AND (State = '') THEN
        CreateTaxAreaLine(Code,COPYSTR(NewTaxAreaCode,1,10));
    END;

    LOCAL PROCEDURE CreateTaxAreaLine@4(NewTaxArea@1000 : Code[20];NewJurisdictionCode@1001 : Code[10]);
    VAR
      TaxAreaLine@1002 : Record 319;
      TaxJurisdiction@1003 : Record 320;
    BEGIN
      IF TaxAreaLine.GET(NewTaxArea,NewJurisdictionCode) THEN
        EXIT;
      TaxAreaLine.INIT;
      TaxAreaLine."Tax Area" := NewTaxArea;
      TaxAreaLine."Tax Jurisdiction Code" := NewJurisdictionCode;
      TaxAreaLine.INSERT;
      TaxJurisdiction.CreateTaxJurisdiction(NewJurisdictionCode);
    END;

    PROCEDURE GetDescriptionInCurrentLanguage@5() : Text[50];
    VAR
      TaxAreaTranslation@1001 : Record 316;
      Language@1002 : Record 8;
    BEGIN
      IF TaxAreaTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(TaxAreaTranslation.Description);
      EXIT(Description);
    END;

    LOCAL PROCEDURE SetLastModifiedDateTime@16();
    BEGIN
      "Last Modified Date Time" := CURRENTDATETIME;
    END;

    LOCAL PROCEDURE IsTaxAreaInUse@2() : Boolean;
    VAR
      SalesHeader@1000 : Record 36;
      SalesInvoiceHeader@1001 : Record 112;
      Customer@1002 : Record 18;
    BEGIN
      Customer.SETRANGE("Tax Area Code",Code);
      IF NOT Customer.ISEMPTY THEN
        EXIT(TRUE);

      SalesHeader.SETRANGE("Tax Area Code",Code);
      IF NOT SalesHeader.ISEMPTY THEN
        EXIT(TRUE);

      SalesInvoiceHeader.SETRANGE("Tax Area Code",Code);
      IF NOT SalesInvoiceHeader.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

