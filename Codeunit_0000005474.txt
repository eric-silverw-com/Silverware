OBJECT Codeunit 5474 Graph Mgt - Sales Header
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE UpdateIntegrationRecords@11(OnlyItemsWithoutId@1000 : Boolean);
    VAR
      DummySalesHeader@1002 : Record 36;
      GraphMgtGeneralTools@1001 : Codeunit 5465;
      SalesHeaderRecordRef@1019 : RecordRef;
    BEGIN
      SalesHeaderRecordRef.OPEN(DATABASE::"Sales Header");
      GraphMgtGeneralTools.UpdateIntegrationRecords(SalesHeaderRecordRef,DummySalesHeader.FIELDNO(Id),OnlyItemsWithoutId);
    END;

    [EventSubscriber(Codeunit,5150,OnUpdateReferencedIdField)]
    LOCAL PROCEDURE HandleUpdateReferencedIdFieldOnItem@19(VAR RecRef@1000 : RecordRef;NewId@1001 : GUID;VAR Handled@1002 : Boolean);
    VAR
      DummySalesHeader@1003 : Record 36;
      GraphMgtGeneralTools@1006 : Codeunit 5465;
    BEGIN
      IF NOT CheckSupportedTable(RecRef) THEN
        EXIT;

      GraphMgtGeneralTools.HandleUpdateReferencedIdFieldOnItem(RecRef,NewId,Handled,
        RecRef.NUMBER,DummySalesHeader.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5150,OnGetPredefinedIdValue)]
    LOCAL PROCEDURE HandleGetPredefinedIdValue@21(VAR Id@1000 : GUID;VAR RecRef@1001 : RecordRef;VAR Handled@1002 : Boolean);
    VAR
      DummySalesHeader@1003 : Record 36;
      GraphMgtGeneralTools@1007 : Codeunit 5465;
    BEGIN
      IF NOT CheckSupportedTable(RecRef) THEN
        EXIT;

      GraphMgtGeneralTools.HandleGetPredefinedIdValue(Id,RecRef,Handled,
        RecRef.NUMBER,DummySalesHeader.FIELDNO(Id));
    END;

    [EventSubscriber(Codeunit,5465,ApiSetup)]
    LOCAL PROCEDURE HandleApiSetup@16();
    BEGIN
      UpdateIntegrationRecords(FALSE);
      UpdateIds;
    END;

    LOCAL PROCEDURE CheckSupportedTable@3(VAR RecRef@1000 : RecordRef) : Boolean;
    VAR
      SalesHeader@1002 : Record 36;
    BEGIN
      IF RecRef.NUMBER = DATABASE::"Sales Header" THEN BEGIN
        RecRef.SETTABLE(SalesHeader);
        EXIT((SalesHeader."Document Type" <> SalesHeader."Document Type"::Order) AND
          (SalesHeader."Document Type" <> SalesHeader."Document Type"::Invoice));
      END;
      EXIT(FALSE);
    END;

    PROCEDURE UpdateIds@6();
    VAR
      SalesInvoiceEntityAggregate@1000 : Record 5475;
    BEGIN
      WITH SalesInvoiceEntityAggregate DO BEGIN
        IF FINDSET THEN
          REPEAT
            UpdateReferencedRecordIds;
            MODIFY(FALSE);
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    {
      // This Graph Mgt code unit is used to generate id fields for all
      // sales docs other than invoice and order. If special logic is required
      // for any of these sales docs, create a seperate code unit.
    }
    END.
  }
}

