OBJECT Codeunit 10322 Exp. Writing EFT
{
  OBJECT-PROPERTIES
  {
    Date=;
    Time=;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 1220=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE ExportEFT@1020000(DataExchEntryCodeDetail@1020000 : Integer;DataExchEntryCodeFooter@1020001 : Integer;FilePath@1020014 : Text;Filename@1020002 : Text;ACHFileName@1020015 : Text;DataExchEntryCodeFooterArray@1020003 : ARRAY [100] OF Integer;VAR TempNameValueBuffer@1020016 : TEMPORARY Record 823;VAR ZipFileName@1020017 : Text;VAR FileManagementUnit@1020018 : Codeunit 419);
    VAR
      DataExchFooter@1020013 : Record 1220;
      DataExchDetail@1020012 : Record 1220;
      TempBlob@1020011 : Record 99008535;
      TempBlob2@1020010 : Record 99008535;
      ExportEFTACH@1020019 : Codeunit 10094;
      CustomLayoutReporting@1020020 : Codeunit 8800;
      FileManagement@1020021 : Codeunit 419;
      ExportFile@1020009 : File;
      OutStream@1020008 : OutStream;
      InStream@1020007 : InStream;
      Filename2@1020006 : Text[250];
      RecordCount@1020005 : Integer;
      ArrayLength@1020004 : Integer;
      ClientFile@1020022 : Text;
    BEGIN
      // Need to copy the File Name and File from the footer to the Detail record.
      ExportFile.WRITEMODE := TRUE;
      ExportFile.TEXTMODE := TRUE;
      ExportFile.OPEN(Filename);

      // Copy current file contents to TempBlob
      ExportFile.CREATEINSTREAM(InStream);
      TempBlob.Blob.CREATEOUTSTREAM(OutStream);
      COPYSTREAM(OutStream,InStream);

      Filename2 := COPYSTR(Filename,1,250);

      DataExchDetail.SETRANGE("Entry No.",DataExchEntryCodeDetail);
      IF DataExchDetail.FINDFIRST THEN BEGIN
        DataExchDetail."File Name" := Filename2;
        DataExchDetail."File Content" := TempBlob.Blob;
        DataExchDetail.MODIFY;
      END;
      ExportFile.CLOSE;

      IF CustomLayoutReporting.IsWebClient THEN
        ExportEFTACH.AddFileToClientZip(Filename,ACHFileName,TempNameValueBuffer,ZipFileName,FileManagementUnit)
      ELSE BEGIN
        ClientFile := FileManagement.CombinePath(FilePath,ACHFileName);
        FileManagement.DownloadToFile(Filename,ClientFile);
      END;

      // Need to clear out the File Name and blob (File Content) for the footer record(s)
      DataExchFooter.SETRANGE("Entry No.",DataExchEntryCodeFooter);
      IF DataExchFooter.FINDFIRST THEN BEGIN
        ArrayLength := ARRAYLEN(DataExchEntryCodeFooterArray);
        RecordCount := 1;
        WHILE (DataExchEntryCodeFooterArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
          DataExchFooter."Entry No." := DataExchEntryCodeFooterArray[RecordCount];
          DataExchFooter."File Name" := '';
          TempBlob2.Blob.CREATEOUTSTREAM(OutStream);
          DataExchFooter."File Content" := TempBlob2.Blob;
          DataExchFooter.MODIFY;
          RecordCount := RecordCount + 1;
        END;
      END;
    END;

    [External]
    PROCEDURE CleanUpEFTWorkTables@2(DataExchEntryCodeHeaderArray@1005 : ARRAY [100] OF Integer;DataExchEntryCodeDetailArray@1004 : ARRAY [100] OF Integer;DataExchEntryCodeFooterArray@1003 : ARRAY [100] OF Integer);
    VAR
      ACHUSHeader@1009 : Record 10300;
      ACHUSDetail@1008 : Record 10301;
      ACHUSFooter@1007 : Record 10302;
      ACHRBHeader@1020000 : Record 10303;
      ACHRBDetail@1020001 : Record 10304;
      ACHRBFooter@1020002 : Record 10305;
      ACHCecobanHeader@1020003 : Record 10306;
      ACHCecobanDetail@1020004 : Record 10307;
      ACHCecobanFooter@1020005 : Record 10308;
      RecordCount@1002 : Integer;
      ArrayLength@1006 : Integer;
    BEGIN
      ArrayLength := ARRAYLEN(DataExchEntryCodeHeaderArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeHeaderArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHUSHeader.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeHeaderArray[RecordCount]);
        ACHUSHeader.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeDetailArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeDetailArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHUSDetail.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeDetailArray[RecordCount]);
        ACHUSDetail.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeFooterArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeFooterArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHUSFooter.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeFooterArray[RecordCount]);
        ACHUSFooter.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeHeaderArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeHeaderArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHRBHeader.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeHeaderArray[RecordCount]);
        ACHRBHeader.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeDetailArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeDetailArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHRBDetail.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeDetailArray[RecordCount]);
        ACHRBDetail.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeFooterArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeFooterArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHRBFooter.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeFooterArray[RecordCount]);
        ACHRBFooter.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeHeaderArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeHeaderArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHCecobanHeader.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeHeaderArray[RecordCount]);
        ACHCecobanHeader.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeDetailArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeDetailArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHCecobanDetail.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeDetailArray[RecordCount]);
        ACHCecobanDetail.DELETEALL;
        RecordCount := RecordCount + 1;
      END;

      ArrayLength := ARRAYLEN(DataExchEntryCodeFooterArray);
      RecordCount := 1;
      WHILE (DataExchEntryCodeFooterArray[RecordCount] > 0) AND (RecordCount < ArrayLength) DO BEGIN
        ACHCecobanFooter.SETRANGE("Data Exch. Entry No.",DataExchEntryCodeFooterArray[RecordCount]);
        ACHCecobanFooter.DELETEALL;
        RecordCount := RecordCount + 1;
      END;
    END;

    PROCEDURE PreCleanUpUSWorkTables@1020001();
    VAR
      ACHUSHeader@1020003 : Record 10300;
      ACHUSDetail@1020002 : Record 10301;
      ACHUSFooter@1020001 : Record 10302;
    BEGIN
      ACHUSHeader.DELETEALL;
      ACHUSDetail.DELETEALL;
      ACHUSFooter.DELETEALL;
      COMMIT;
    END;

    PROCEDURE PreCleanUpCAWorkTables@1020002();
    VAR
      ACHRBHeader@1020002 : Record 10303;
      ACHRBDetail@1020001 : Record 10304;
      ACHRBFooter@1020000 : Record 10305;
    BEGIN
      ACHRBHeader.DELETEALL;
      ACHRBDetail.DELETEALL;
      ACHRBFooter.DELETEALL;
      COMMIT;
    END;

    PROCEDURE PreCleanUpMXWorkTables@1020003();
    VAR
      ACHCecobanHeader@1020002 : Record 10306;
      ACHCecobanDetail@1020001 : Record 10307;
      ACHCecobanFooter@1020000 : Record 10308;
    BEGIN
      ACHCecobanHeader.DELETEALL;
      ACHCecobanDetail.DELETEALL;
      ACHCecobanFooter.DELETEALL;
      COMMIT;
    END;

    BEGIN
    END.
  }
}

