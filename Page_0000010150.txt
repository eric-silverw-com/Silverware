OBJECT Page 10150 O365 Tax Settings Card
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:12 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Tax Rate;
    DeleteAllowed=No;
    SourceTable=Table318;
    DelayedInsert=Yes;
    RefreshOnActivate=Yes;
    OnInit=BEGIN
             InitializeDefaultCountryCode;
           END;

    OnNewRecord=BEGIN
                  IF IsCanada THEN BEGIN
                    MESSAGE(AllTaxAreasAlreadyExistsMsg);
                    ERROR('');
                  END;
                END;

    OnQueryClosePage=BEGIN
                       EXIT(TryStoringTaxSettings);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetDefaults;
                           IF NOT IsCanada THEN BEGIN
                             StateNameEditable := (TempSalesTaxSetupWizard.State = '');
                             CityNameEditable := (TempSalesTaxSetupWizard.City = '');
                           END;
                         END;

    ActionList=ACTIONS
    {
      { 1020003 ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
    }
  }
  CONTROLS
  {
    { 1020000; ;Container ;
                ContainerType=ContentArea }

    { 1020019;1;Group     ;
                Visible=NOT IsCanada;
                GroupType=Group }

    { 1020001;2;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Enter your city tax information }

    { 1020011;3;Field     ;
                Name=City;
                CaptionML=ENU=City;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=TempSalesTaxSetupWizard.City;
                Enabled=CityNameEditable;
                OnValidate=BEGIN
                             UpdateDescriptionUS;
                           END;

                ShowCaption=No }

    { 1020010;3;Field     ;
                Name=CityRate;
                CaptionML=ENU=City Rate;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                BlankZero=Yes;
                SourceExpr=TempSalesTaxSetupWizard."City Rate";
                MinValue=0;
                OnValidate=BEGIN
                             IF TempSalesTaxSetupWizard.City <> '' THEN BEGIN
                               UpdateTotalTaxRate;
                               UpdateDescriptionUS;
                             END;
                           END;

                ShowCaption=No }

    { 1020006;2;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Enter your state tax information }

    { 1020005;3;Field     ;
                Name=State;
                CaptionML=ENU=State;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=TempSalesTaxSetupWizard.State;
                Enabled=StateNameEditable;
                OnValidate=BEGIN
                             UpdateDescriptionUS;
                           END;

                ShowCaption=No }

    { 1020004;3;Field     ;
                Name=StateRate;
                CaptionML=ENU=State Rate;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                BlankZero=Yes;
                SourceExpr=TempSalesTaxSetupWizard."State Rate";
                MinValue=0;
                OnValidate=BEGIN
                             IF TempSalesTaxSetupWizard.State <> '' THEN BEGIN
                               UpdateTotalTaxRate;
                               UpdateDescriptionUS;
                             END;
                           END;

                ShowCaption=No }

    { 1020017;1;Group     ;
                Visible=IsCanada;
                GroupType=Group }

    { 1020012;2;Group     ;
                Visible=GSTorHSTVisible;
                GroupType=Group }

    { 1020009;3;Field     ;
                CaptionML=ENU=GST/HST;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=GSTorHST;
                TableRelation="Tax Jurisdiction" WHERE (Country/Region=CONST(CA),
                                                        Report-to Jurisdiction=CONST(CA));
                Editable=FALSE;
                OnValidate=BEGIN
                             GSTorHSTCode := COPYSTR(GSTorHST,1,MAXSTRLEN(GSTorHSTCode));
                             GSTorHST := COPYSTR(GetProvince(GSTorHSTCode),1,MAXSTRLEN(GSTorHST));
                             GSTorHSTrate := O365TaxSettingsManagement.GetTaxRate(GSTorHSTCode)
                           END;
                            }

    { 1020007;3;Field     ;
                CaptionML=ENU=GST/HST Rate;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                SourceExpr=GSTorHSTrate;
                Editable=(GSTorHST <> '') }

    { 1020018;2;Group     ;
                Visible=PSTVisible;
                GroupType=Group }

    { 1020014;3;Field     ;
                CaptionML=ENU=PST;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=PST;
                TableRelation="Tax Jurisdiction" WHERE (Country/Region=CONST(CA),
                                                        Report-to Jurisdiction=FILTER(<>CA));
                Editable=FALSE;
                OnValidate=BEGIN
                             PSTCode := COPYSTR(PST,1,MAXSTRLEN(PSTCode));
                             PST := COPYSTR(GetProvince(PSTCode),1,MAXSTRLEN(GSTorHST));
                             PSTrate := O365TaxSettingsManagement.GetTaxRate(PSTCode)
                           END;
                            }

    { 1020015;3;Field     ;
                CaptionML=ENU=PST Rate;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                SourceExpr=PSTrate;
                Editable=(PST <> '') }

    { 1020021;1;Group     ;
                GroupType=Group }

    { 1020020;2;Field     ;
                Name=Total;
                CaptionML=ENU=Total rate;
                ToolTipML=ENU=Specifies the total tax rate.;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=1:3;
                SourceExpr=TotalRate;
                Editable=FALSE }

    { 1020008;1;Group     ;
                GroupType=Group }

    { 1020016;2;Field     ;
                Name=Default;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=DefaultTxt;
                Enabled=NOT IsDefaultArea;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              O365TaxSettingsManagement.UpdateSalesTaxSetupWizard(TempSalesTaxSetupWizard);
                              DefaultTxt := ThisIsDefaultTxt;
                              IsDefaultArea := TRUE;
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TempSalesTaxSetupWizard@1020005 : TEMPORARY Record 10807;
      O365TaxSettingsManagement@1020001 : Codeunit 10150;
      PSTCode@1020008 : Code[10];
      GSTorHSTCode@1020007 : Code[10];
      GSTorHST@1020002 : Text[50];
      PST@1020004 : Text[50];
      TaxRateDescription@1020017 : Text[50];
      DefaultTxt@1020011 : Text;
      GSTorHSTrate@1020003 : Decimal;
      PSTrate@1020006 : Decimal;
      TotalRate@1020012 : Decimal;
      TaxableCodeTxt@1030000 : TextConst '@@@={Locked};ENU=TAXABLE';
      CATxt@1030001 : TextConst '@@@={Locked};ENU=CA';
      PSTVisible@1020009 : Boolean;
      GSTorHSTVisible@1020010 : Boolean;
      ThisIsDefaultTxt@1020015 : TextConst 'ENU=This is the default tax rate';
      SetAsDefaultTxt@1020014 : TextConst 'ENU=Set as default tax rate';
      IsDefaultArea@1020016 : Boolean;
      IsCanada@1020000 : Boolean;
      CityNameEditable@1020013 : Boolean;
      StateNameEditable@1020019 : Boolean;
      AllTaxAreasAlreadyExistsMsg@1020020 : TextConst 'ENU=All tax rates already exists.';

    LOCAL PROCEDURE SetDefaults@1030001();
    BEGIN
      InitializeDefaultTaxAreaLabel;
      TempSalesTaxSetupWizard.Initialize;
      TempSalesTaxSetupWizard."Tax Area Code" := DELCHR(Code,'<>',' ');
      InitializeTaxAreaLines;
      IF NOT IsCanada THEN
        UpdateDescriptionUS;
    END;

    LOCAL PROCEDURE InitializeDefaultTaxAreaLabel@1020005();
    BEGIN
      IsDefaultArea := O365TaxSettingsManagement.IsDefaultTaxAreaAPI(Code);
      IF IsDefaultArea THEN
        DefaultTxt := ThisIsDefaultTxt
      ELSE
        DefaultTxt := SetAsDefaultTxt;
    END;

    LOCAL PROCEDURE InitializeDefaultCountryCode@1020004();
    VAR
      CompanyInformation@1020000 : Record 79;
    BEGIN
      IF CompanyInformation.IsCanada THEN BEGIN
        IsCanada := TRUE;
        "Country/Region" := "Country/Region"::CA;
      END ELSE
        "Country/Region" := "Country/Region"::US;
    END;

    LOCAL PROCEDURE InitializeTaxAreaLines@1020011();
    BEGIN
      IF TempSalesTaxSetupWizard."Tax Area Code" <> '' THEN BEGIN
        IF IsCanada THEN
          InitializeTaxSetupFromTaxAreaLinesForCA
        ELSE
          O365TaxSettingsManagement.InitializeTaxSetupFromTaxAreaLinesForUS(TempSalesTaxSetupWizard);
      END;
      UpdateTotalTaxRate;
    END;

    LOCAL PROCEDURE InitializeTaxSetupFromTaxAreaLinesForCA@1020001();
    VAR
      TaxAreaLine@1020000 : Record 319;
      TaxJurisdiction@1020001 : Record 320;
    BEGIN
      ClearFieldsForCA;
      TaxAreaLine.SETRANGE("Tax Area",TempSalesTaxSetupWizard."Tax Area Code");
      IF TaxAreaLine.FINDSET THEN
        REPEAT
          TaxJurisdiction.SETRANGE(Code,TaxAreaLine."Tax Jurisdiction Code");
          IF TaxJurisdiction.FINDFIRST THEN
            IF TaxJurisdiction."Report-to Jurisdiction" = CATxt THEN BEGIN
              GSTorHSTCode := TaxJurisdiction.Code;
              GSTorHST := GetProvince(GSTorHSTCode);
              GSTorHSTrate := O365TaxSettingsManagement.GetTaxRate(GSTorHSTCode)
            END ELSE BEGIN
              PSTCode := TaxJurisdiction.Code;
              PST := GetProvince(PSTCode);
              PSTrate := O365TaxSettingsManagement.GetTaxRate(PSTCode)
            END;
        UNTIL TaxAreaLine.NEXT = 0;
      GSTorHSTVisible := GSTorHST <> '';
      PSTVisible := PST <> '';
    END;

    LOCAL PROCEDURE ClearFieldsForCA@1020014();
    BEGIN
      CLEAR(PSTCode);
      CLEAR(PST);
      CLEAR(PSTrate);
      CLEAR(GSTorHST);
      CLEAR(GSTorHSTCode);
      CLEAR(GSTorHSTrate);
    END;

    LOCAL PROCEDURE GetProvince@1020002(JurisdictionCode@1020001 : Code[10]) : Text[50];
    VAR
      TaxJurisdiction@1020003 : Record 320;
    BEGIN
      IF NOT TaxJurisdiction.GET(JurisdictionCode) THEN
        EXIT('');

      EXIT(TaxJurisdiction.GetDescriptionInCurrentLanguage);
    END;

    LOCAL PROCEDURE UpdateTotalTaxRate@1020049();
    BEGIN
      IF IsCanada THEN
        TotalRate := GSTorHSTrate + PSTrate
      ELSE
        TotalRate := TempSalesTaxSetupWizard."City Rate" + TempSalesTaxSetupWizard."State Rate";
    END;

    LOCAL PROCEDURE TryStoringTaxSettings@1020021() CanClosePage : Boolean;
    BEGIN
      CanClosePage := TRUE;

      IF IsCanada THEN
        StoreTaxSettingsForCA
      ELSE
        CanClosePage := O365TaxSettingsManagement.StoreTaxSettingsForUS(TempSalesTaxSetupWizard,TaxRateDescription);

      IF IsDefaultArea THEN
        O365TaxSettingsManagement.AssignDefaultTaxArea(TempSalesTaxSetupWizard."Tax Area Code");
    END;

    LOCAL PROCEDURE StoreTaxSettingsForCA@1020063();
    VAR
      TaxArea@1020002 : Record 318;
      TaxAreaLine@1020001 : Record 319;
    BEGIN
      IF TempSalesTaxSetupWizard."Tax Area Code" = '' THEN
        EXIT;
      TempSalesTaxSetupWizard.SetTaxArea(TaxArea);
      TaxAreaLine.SETRANGE("Tax Area",TempSalesTaxSetupWizard."Tax Area Code");
      IF NOT TaxAreaLine.ISEMPTY THEN
        TaxAreaLine.DELETEALL;
      IF GSTorHSTCode <> '' THEN BEGIN
        TempSalesTaxSetupWizard.SetTaxJurisdiction(GSTorHSTCode,GSTorHST,CATxt);
        TempSalesTaxSetupWizard.SetTaxAreaLine(TaxArea,GSTorHSTCode);
        TempSalesTaxSetupWizard.SetTaxDetail(GSTorHSTCode,TaxableCodeTxt,GSTorHSTrate);
      END;
      IF PSTCode <> '' THEN BEGIN
        TempSalesTaxSetupWizard.SetTaxJurisdiction(PSTCode,PST,PSTCode);
        TempSalesTaxSetupWizard.SetTaxAreaLine(TaxArea,PSTCode);
        TempSalesTaxSetupWizard.SetTaxDetail(PSTCode,TaxableCodeTxt,PSTrate);
      END;
    END;

    PROCEDURE UpdateDescriptionUS@1020015();
    BEGIN
      TaxRateDescription :=
        O365TaxSettingsManagement.GenerateTaxAreaDescription(TotalRate,TempSalesTaxSetupWizard.City,TempSalesTaxSetupWizard.State);
    END;

    BEGIN
    END.
  }
}

