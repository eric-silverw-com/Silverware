OBJECT Page 2157 O365 Sales Invoice Line Card
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00,NAVNA13.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Invoice Line;
               ESM=L¡nea de factura;
               FRC=Ligne facture;
               ENC=Invoice Line];
    DeleteAllowed=No;
    SourceTable=Table37;
    PageType=Card;
    RefreshOnActivate=Yes;
    OnInit=VAR
             O365SalesInitialSetup@1000 : Record 2110;
           BEGIN
             SalesSetup.GET;
             IF TaxSetup.GET THEN;
             Currency.InitRoundingPrecision;
             O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
             IsUsingVAT := O365SalesInitialSetup.IsUsingVAT;
             EnterQuantity := FALSE;
             EnterDiscount := FALSE;
             Taxable := FALSE;
           END;

    OnOpenPage=BEGIN
                 EnterQuantity := Quantity > 1;
                 EnterDiscount := ("Line Discount %" > 0) OR ("Line Discount Amount" > 0);
               END;

    OnAfterGetRecord=BEGIN
                       UpdatePriceDescription;
                       O365SalesInvoiceMgmt.ConstructCurrencyFormatString(Rec,CurrencyFormat);
                     END;

    OnNewRecord=VAR
                  SalesLine@1000 : Record 37;
                BEGIN
                  Type := Type::Item;
                  SalesLine.SETRANGE("Document Type","Document Type");
                  SalesLine.SETRANGE("Document No.","Document No.");
                  IF SalesLine.FINDLAST THEN;
                  "Line No." := SalesLine."Line No." + 10000;
                  TaxRate := 0;
                  CLEAR(VATProductPostingGroupDescription);
                END;

    OnModifyRecord=BEGIN
                     UpdatePriceDescription
                   END;

    OnAfterGetCurrRecord=VAR
                           TaxDetail@1000 : Record 322;
                         BEGIN
                           UpdatePageCaption;
                           CALCFIELDS("Posting Date");
                           IF TaxSetup.GET THEN
                             Taxable := "Tax Group Code" <> TaxSetup."Non-Taxable Tax Group Code";
                           TaxRate := TaxDetail.GetSalesTaxRate("Tax Area Code","Tax Group Code","Posting Date","Tax Liable");
                           UpdateTaxRateText;
                           CalculateTotals;
                           DescriptionSelected := Description <> '';
                           LineQuantity := Quantity;
                           TaxRateEditable := DescriptionSelected AND (TaxSetup."Non-Taxable Tax Group Code" <> "Tax Group Code");
                           UpdateVATPostingGroupDescription;
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      CaptionML=[ENU=New;
                                 ESM=Nuevo;
                                 FRC=Cr‚er;
                                 ENC=New];
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=DeleteLine;
                      CaptionML=[ENU=Delete Line;
                                 ESM=Borrar l¡nea;
                                 FRC=Supprimer la ligne;
                                 ENC=Delete Line];
                      ToolTipML=[ENU=Delete the selected line.;
                                 ESM=Eliminar la l¡nea seleccionada.;
                                 FRC=Supprimer la ligne s‚lectionn‚e.;
                                 ENC=Delete the selected line.];
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Promoted=Yes;
                      Image=Delete;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 IdentityManagement@1000 : Codeunit 9801;
                               BEGIN
                                 IF "No." = '' THEN
                                   EXIT;

                                 IF NOT CONFIRM(DeleteQst,TRUE) THEN
                                   EXIT;
                                 DELETE(TRUE);
                                 IF NOT IdentityManagement.IsInvAppId THEN
                                   CurrPage.UPDATE;
                               END;

                      Gesture=RightSwipe }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=grpGeneral;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                           ESM=Especifica el n£mero de la entrada o el registro relacionado, seg£n la serie num‚rica especificada.;
                           FRC=Sp‚cifie le num‚ro de l'‚criture ou de l'enregistrement concern‚, en fonction de la s‚rie de num‚ros sp‚cifi‚e.;
                           ENC=Specifies the number of the involved entry or record, according to the specified number series.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 23  ;2   ;Group     ;
                Name=grpPricelist;
                CaptionML=[ENU="";
                           ESM="";
                           FRC="";
                           ENC=""];
                GroupType=Group }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Choose from price list;
                           ESM=Elegir de la lista de precios;
                           FRC=Choisir dans la liste des prix;
                           ENC=Choose from price list];
                ToolTipML=[ENU=Specifies a description of the item or service on the line.;
                           ESM=Especifica una descripci¢n del producto o el servicio que consta en la l¡nea.;
                           FRC=Sp‚cifie une description de l'article ou du service sur la ligne.;
                           ENC=Specifies a description of the item or service on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Description;
                LookupPageID=O365 Sales Item Lookup;
                OnValidate=BEGIN
                             IF IsLookupRequested THEN
                               IF NOT O365SalesInvoiceMgmt.LookupDescription(Rec,Description,DescriptionSelected) THEN
                                 ERROR('');

                             RedistributeTotalsOnAfterValidate;
                             DescriptionSelected := Description <> '';
                           END;

                ShowCaption=No }

    { 21  ;2   ;Group     ;
                Name=grpEnterQuantity;
                CaptionML=[ENU=Quantity & Price;
                           ESM=Cantidad y precio;
                           FRC=Quantit‚ et prix;
                           ENC=Quantity & Price];
                Visible=Description <> '';
                GroupType=Group }

    { 20  ;3   ;Field     ;
                Name=EnterQuantity;
                CaptionML=[ENU=Enter a quantity;
                           ESM=Indicar una cantidad;
                           FRC=Entrer une quantit‚;
                           ENC=Enter a quantity];
                ToolTipML=[ENU=Specifies if the user enters the quantity of the item or service on the line.;
                           ESM=Especifica si el usuario indica la cantidad del producto o el servicio que consta en la l¡nea.;
                           FRC=Sp‚cifie si l'utilisateur entre la quantit‚ de l'article ou le service sur la ligne.;
                           ENC=Specifies if the user enters the quantity of the item or service on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EnterQuantity }

    { 18  ;2   ;Group     ;
                Name=grpQuantity;
                CaptionML=[ENU="";
                           ESM="";
                           FRC="";
                           ENC=""];
                Visible=(Description <> '') AND EnterQuantity;
                GroupType=Group }

    { 5   ;3   ;Field     ;
                CaptionML=[ENU=Quantity;
                           ESM=Cantidad;
                           FRC=Quantit‚;
                           ENC=Quantity];
                ToolTipML=[ENU=Specifies the quantity of the item or service on the line.;
                           ESM=Especifica la cantidad del producto o el servicio que consta en la l¡nea.;
                           FRC=Sp‚cifie la quantit‚ de l'article ou le service sur la ligne.;
                           ENC=Specifies the quantity of the item or service on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=0:5;
                SourceExpr=LineQuantity;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             VALIDATE(Quantity,LineQuantity);
                             RedistributeTotalsOnAfterValidate;
                             ShowInvoiceDiscountNotification;
                           END;
                            }

    { 12  ;3   ;Field     ;
                CaptionML=[ENU=Price;
                           ESM=Precio;
                           FRC=Prix;
                           ENC=Price];
                ToolTipML=[ENU=Specifies the price for one unit on the sales line.;
                           ESM=Especifica el precio de una unidad en la l¡nea de venta.;
                           FRC=Sp‚cifie le prix d'une unit‚ de la ligne vente.;
                           ENC=Specifies the price for one unit on the sales line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit Price";
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 11  ;3   ;Field     ;
                Width=5;
                CaptionML=[ENU=Unit;
                           ESM=Unidad;
                           FRC=Unit‚;
                           ENC=Unit];
                ToolTipML=[ENU=Specifies the sales unit of measure for this product or service.;
                           ESM=Especifica la unidad de medida de ventas para este producto o servicio.;
                           FRC=Sp‚cifie l'unit‚ de mesure de vente pour ce produit ou service.;
                           ENC=Specifies the sales unit of measure for this product or service.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Unit of Measure";
                Editable=FALSE }

    { 13  ;2   ;Group     ;
                Name=grpGiveDiscount;
                CaptionML=[ENU=Discount;
                           ESM=Descuento;
                           FRC=Escompte;
                           ENC=Discount];
                Visible=Description <> '';
                GroupType=Group }

    { 26  ;3   ;Field     ;
                Name=EnterDiscount;
                CaptionML=[ENU=Give a discount;
                           ESM=Conceder un descuento;
                           FRC=Indiquer un escompte;
                           ENC=Give a discount];
                ToolTipML=[ENU=Specifies if the user enters the discount on the line.;
                           ESM=Especifica si el usuario indica el descuento en la l¡nea.;
                           FRC=Sp‚cifie si l'utilisateur entre l'escompte sur la ligne.;
                           ENC=Specifies if the user enters the discount on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EnterDiscount;
                OnValidate=BEGIN
                             IF NOT EnterDiscount THEN
                               VALIDATE("Line Discount %",0);
                           END;
                            }

    { 16  ;2   ;Group     ;
                Name=grpDiscount;
                CaptionML=[ENU="";
                           ESM="";
                           FRC="";
                           ENC=""];
                Visible=(Description <> '') AND EnterDiscount;
                GroupType=Group }

    { 17  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                             IF HasShownInvoiceDiscountNotification THEN
                               InvoiceDiscountNotification.RECALL;
                           END;
                            }

    { 7   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Line Discount Amount";
                OnValidate=VAR
                             LineDiscountAmount@1000 : Decimal;
                           BEGIN
                             GetTotalSalesHeader;
                             LineDiscountAmount :=
                               O365SalesInvoiceMgmt.GetValueWithinBounds(
                                 "Line Discount Amount",0,"Unit Price" * Quantity,AmountOutsideOfBoundsNotificationSend,TotalSalesHeader.RECORDID);
                             IF LineDiscountAmount <> "Line Discount Amount" THEN
                               VALIDATE("Line Discount Amount",LineDiscountAmount);
                             RedistributeTotalsOnAfterValidate;
                             IF HasShownInvoiceDiscountNotification THEN
                               InvoiceDiscountNotification.RECALL;
                           END;
                            }

    { 19  ;1   ;Group     ;
                Visible=Description <> '';
                GroupType=Group }

    { 28  ;2   ;Group     ;
                Name=grpEnterTax;
                CaptionML=[ENU=Tax;
                           ESM=Impuesto;
                           FRC=Taxes;
                           ENC=Tax];
                Visible=NOT IsUsingVAT;
                GroupType=Group }

    { 29  ;3   ;Field     ;
                Name=Taxable;
                CaptionML=[ENU=Add sales tax;
                           ESM=Agregar impuesto sobre las ventas;
                           FRC=Ajouter taxe de vente;
                           ENC=Add sales tax];
                ToolTipML=[ENU=Specifies the tax group code for the tax-detail entry.;
                           ESM=Especifica el c¢digo de grupo impositivo para el movimiento de detalle de impuestos.;
                           FRC=Sp‚cifie le code groupe fiscal de l'‚criture sp‚cification de taxe.;
                           ENC=Specifies the tax group code for the tax-detail entry.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Taxable;
                Enabled=DescriptionSelected;
                OnValidate=VAR
                             TaxSetup@1020000 : Record 326;
                             TaxGroup@1020001 : Record 321;
                           BEGIN
                             IF TaxSetup.GET AND (TaxSetup."Non-Taxable Tax Group Code" <> '') THEN BEGIN
                               IF Taxable THEN
                                 TaxGroup.SETFILTER(Code,'<>%1',TaxSetup."Non-Taxable Tax Group Code")
                               ELSE
                                 TaxGroup.SETFILTER(Code,'%1',TaxSetup."Non-Taxable Tax Group Code")
                             END;
                             IF TaxGroup.FINDFIRST THEN
                               VALIDATE("Tax Group Code",TaxGroup.Code);
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 25  ;2   ;Group     ;
                Name=grpTax;
                CaptionML=[ENU="";
                           ESM="";
                           FRC="";
                           ENC=""];
                Visible=(NOT IsUsingVAT) AND (Taxable);
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=TaxRate;
                CaptionML=[ENU=Tax %;
                           ESM=% de impuesto;
                           FRC=% taxes;
                           ENC=Tax %];
                ToolTipML=[ENU=Specifies the Tax % that was used on the sales or purchase lines with this Tax Identifier.;
                           ESM=Especifica el % de IVA que se us¢ en las l¡neas de venta o compra con este identificador de IVA.;
                           FRC=Sp‚cifie le taux de TVA utilis‚ dans les lignes vente ou achat avec cet identificateur TVA.;
                           ENC=Specifies the Tax % that was used on the sales or purchase lines with this Tax Identifier.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                DecimalPlaces=0:3;
                SourceExpr=TaxRateText;
                Enabled=TaxRateEditable;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=VAR
                           TaxDetail@1001 : Record 322;
                           TaxArea@1000 : Record 318;
                           SalesHeader@1003 : Record 36;
                           CompanyInformation@1020001 : Record 79;
                           PageNumber@1020002 : Integer;
                         BEGIN
                           CALCFIELDS("Posting Date");
                           IF CompanyInformation.IsCanada THEN
                             PageNumber := PAGE::"O365 Tax Area List"
                           ELSE
                             PageNumber := PAGE::"O365 Tax Settings List";
                           IF PAGE.RUNMODAL(PageNumber,TaxArea) = ACTION::LookupOK THEN BEGIN
                             IF SalesHeader.GET("Document Type","Document No.") THEN
                               SalesHeader.VALIDATE("Tax Area Code",TaxArea.Code);
                             TaxRate := TaxDetail.GetSalesTaxRate("Tax Area Code","Tax Group Code","Posting Date","Tax Liable");
                             UpdateTaxRateText;
                           END;
                         END;

                ShowCaption=No;
                QuickEntry=FALSE }

    { 24  ;2   ;Group     ;
                Name=grpVAT;
                CaptionML=[ENU=Tax;
                           ESM=IVA;
                           FRC=TVA;
                           ENC=Tax];
                Visible=IsUsingVAT;
                GroupType=Group }

    { 27  ;3   ;Field     ;
                CaptionML=[ENU=Tax;
                           ESM=IVA;
                           FRC=TVA;
                           ENC=Tax];
                ToolTipML=[ENU=Specifies the Tax group code for this item.;
                           ESM=Especifica el c¢digo de grupo de IVA de este producto.;
                           FRC=Sp‚cifie un code groupe TVA pour cet article.;
                           ENC=Specifies the Tax group code for this item.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                NotBlank=Yes;
                SourceExpr=VATProductPostingGroupDescription;
                Visible=IsUsingVAT;
                Enabled=DescriptionSelected;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                OnLookup=VAR
                           VATProductPostingGroup@1000 : Record 324;
                         BEGIN
                           IF PAGE.RUNMODAL(PAGE::"O365 VAT Product Posting Gr.",VATProductPostingGroup) = ACTION::LookupOK THEN BEGIN
                             VALIDATE("VAT Prod. Posting Group",VATProductPostingGroup.Code);
                             VATProductPostingGroupDescription := VATProductPostingGroup.Description;
                             RedistributeTotalsOnAfterValidate;
                           END;
                         END;

                ShowCaption=No;
                QuickEntry=FALSE }

    { 6   ;1   ;Group     ;
                Name=grpTotal;
                CaptionML=[ENU="";
                           ESM="";
                           FRC="";
                           ENC=""];
                Visible=Description <> '';
                GroupType=Group }

    { 9   ;2   ;Field     ;
                Name=LineAmountExclVAT;
                CaptionML=[ENU=Line Amount;
                           ESM=Importe de l¡nea;
                           FRC=Montant ligne;
                           ENC=Line Amount];
                ToolTipML=[ENU=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.;
                           ESM=Especifica el importe neto, menos cualquier importe de descuento en factura, que se debe pagar por los productos de la l¡nea.;
                           FRC=Sp‚cifie le montant net, hors montant d'escompte de la facture, … payer pour les produits sur la ligne.;
                           ENC=Specifies the net amount, excluding any invoice discount amount, that must be paid for products on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=GetLineAmountExclVAT;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Editable=False }

    { 10  ;2   ;Field     ;
                Name=LineAmountInclVAT;
                CaptionML=[ENU=Line Amount Incl. Tax;
                           ESM=Importe de l¡nea con IVA;
                           FRC=Montant ligne TTC;
                           ENC=Line Amount Incl. Tax];
                ToolTipML=[ENU=Specifies the net amount, including Tax and excluding any invoice discount, that must be paid for products on the line.;
                           ESM=Especifica el importe neto, con IVA y sin el descuento en factura, que se debe pagar por los productos de la l¡nea.;
                           FRC=Sp‚cifie le montant net, TVA comprise et hors escompte facture, … payer pour les produits sur la ligne.;
                           ENC=Specifies the net amount, including Tax and excluding any invoice discount, that must be paid for products on the line.];
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=GetLineAmountInclVAT;
                AutoFormatType=10;
                AutoFormatExpr=CurrencyFormat;
                Editable=False }

  }
  CODE
  {
    VAR
      Currency@1008 : Record 4;
      SalesSetup@1007 : Record 311;
      TotalSalesHeader@1006 : Record 36;
      TotalSalesLine@1005 : Record 37;
      TaxSetup@1012 : Record 326;
      O365SalesInvoiceMgmt@1021 : Codeunit 2310;
      DocumentTotals@1004 : Codeunit 57;
      InvoiceDiscountNotification@1019 : Notification;
      CurrencyFormat@1001 : Text;
      TaxRateText@1018 : Text;
      VATProductPostingGroupDescription@1027 : Text[50];
      VATAmount@1002 : Decimal;
      TaxRate@1009 : Decimal;
      LineQuantity@1003 : Decimal;
      TaxRateEditable@1011 : Boolean;
      HasShownInvoiceDiscountNotification@1000 : Boolean;
      AmountOutsideOfBoundsNotificationSend@1023 : Boolean;
      DescriptionSelected@1010 : Boolean;
      DeleteQst@1013 : TextConst 'ENU=Are you sure?;ESM=¨Est  seguro?;FRC=Òtes-vous certainÿ?;ENC=Are you sure?';
      IsUsingVAT@1017 : Boolean;
      Taxable@1020000 : Boolean;
      InvoiceCaptionTxt@1025 : TextConst 'ENU=Invoice Line;ESM=L¡nea de factura;FRC=Ligne facture;ENC=Invoice Line';
      EstimateCaptionTxt@1026 : TextConst 'ENU=Estimate Line;ESM=L¡nea de estimaci¢n;FRC=Ligne d''estimation;ENC=Estimate Line';
      EnterQuantity@1014 : Boolean;
      EnterDiscount@1015 : Boolean;
      PercentTxt@1020 : TextConst 'ENU=%;ESM=%;FRC=%;ENC=%';

    LOCAL PROCEDURE CalculateTotals@6();
    BEGIN
      GetTotalSalesHeader;
      IF SalesSetup."Calc. Inv. Discount" AND ("Document No." <> '') AND (TotalSalesHeader."Customer Posting Group" <> '') THEN
        CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);

      DocumentTotals.CalculateSalesTotals(TotalSalesLine,VATAmount,Rec);
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@2();
    BEGIN
      CurrPage.SAVERECORD;

      TotalSalesHeader.GET("Document Type","Document No.");
      DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE GetTotalSalesHeader@13();
    BEGIN
      IF NOT TotalSalesHeader.GET("Document Type","Document No.") THEN
        CLEAR(TotalSalesHeader);
      IF Currency.Code <> TotalSalesHeader."Currency Code" THEN
        IF NOT Currency.GET(TotalSalesHeader."Currency Code") THEN
          Currency.InitRoundingPrecision;
    END;

    LOCAL PROCEDURE UpdateTaxRateText@8();
    BEGIN
      TaxRateText := FORMAT(TaxRate) + PercentTxt;
    END;

    LOCAL PROCEDURE ShowInvoiceDiscountNotification@4();
    BEGIN
      IF HasShownInvoiceDiscountNotification THEN
        EXIT;
      IF "Line Discount %" = xRec."Line Discount %" THEN
        EXIT;
      GetTotalSalesHeader;
      O365SalesInvoiceMgmt.ShowInvoiceDiscountNotification(InvoiceDiscountNotification,TotalSalesHeader.RECORDID);
      HasShownInvoiceDiscountNotification := TRUE;
    END;

    LOCAL PROCEDURE UpdatePageCaption@5();
    BEGIN
      IF "Document Type" = "Document Type"::Invoice THEN
        CurrPage.CAPTION := InvoiceCaptionTxt
      ELSE
        IF "Document Type" = "Document Type"::Quote THEN
          CurrPage.CAPTION := EstimateCaptionTxt;
    END;

    LOCAL PROCEDURE UpdateVATPostingGroupDescription@10();
    VAR
      VATProductPostingGroup@1000 : Record 324;
    BEGIN
      IF VATProductPostingGroup.GET("VAT Prod. Posting Group") THEN
        VATProductPostingGroupDescription := VATProductPostingGroup.Description
      ELSE
        CLEAR(VATProductPostingGroup);
    END;

    BEGIN
    END.
  }
}

