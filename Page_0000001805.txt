OBJECT Page 1805 Email Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:43 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Email Setup;
    SourceTable=Table409;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=VAR
                 SMTPMailSetup@1000 : Record 409;
                 CompanyInformation@1001 : Record 79;
                 SMTPMail@1002 : Codeunit 400;
               BEGIN
                 INIT;
                 IF SMTPMailSetup.GET THEN BEGIN
                   TRANSFERFIELDS(SMTPMailSetup);
                   GetEmailProvider(SMTPMailSetup)
                 END ELSE BEGIN
                   SMTPMail.ApplyOffice365Smtp(Rec);
                   EmailProvider := EmailProvider::"Office 365";
                   IF CompanyInformation.GET THEN
                     "User ID" := CompanyInformation."E-Mail";
                 END;
                 INSERT;
                 IF SMTPMailSetup.HasPassword THEN
                   Password := DummyPasswordTxt;

                 Step := Step::Start;
                 EnableControls;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.GetStatus(PAGE::"Email Setup Wizard") = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NAVNotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 CASE Step OF
                                   Step::Settings:
                                     IF (Authentication = Authentication::Basic) AND (("User ID" = '') OR (Password = '')) THEN
                                       ERROR(EmailPasswordMissingErr);
                                 END;

                                 NextStep(FALSE);
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=ActionSendTestEmail;
                      CaptionML=ENU=Send Test Email;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Visible=FinishActionEnabled;
                      Enabled=True;
                      InFooterBar=Yes;
                      Image=Email;
                      OnAction=BEGIN
                                 SendTestEmailAction;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite,#Invoicing;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 20  ;1   ;Group     ;
                Name=<MediaRepositoryDone>;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=ENU=Welcome to Email Setup;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To send email messages using actions on documents, such as the Sales Invoice window, you must log on to the relevant email account. }

    { 21  ;2   ;Group     ;
                CaptionML=ENU=Let's go!;
                GroupType=Group }

    { 22  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next so you can set up email sending from documents. }

    { 2   ;1   ;Group     ;
                Visible=ProviderStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Choose your email provider. }

    { 3   ;2   ;Field     ;
                Name=Email Provider;
                CaptionML=ENU=Email Provider;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=EmailProvider;
                OnValidate=BEGIN
                             CASE EmailProvider OF
                               EmailProvider::"Office 365":
                                 SMTPMail.ApplyOffice365Smtp(Rec);
                               EmailProvider::Outlook:
                                 SMTPMail.ApplyOutlookSmtp(Rec);
                               EmailProvider::Gmail:
                                 SMTPMail.ApplyGmailSmtp(Rec);
                               EmailProvider::Yahoo:
                                 SMTPMail.ApplyYahooSmtp(Rec);
                               EmailProvider::"Other Email Provider":
                                 "SMTP Server" := '';
                             END;
                             AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
                             EnableControls;
                           END;
                            }

    { 12  ;1   ;Group     ;
                Visible=SettingsStepVisible;
                GroupType=Group }

    { 27  ;2   ;Group     ;
                Visible=AdvancedSettingsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the SMTP Server Details. }

    { 9   ;3   ;Field     ;
                Name=Authentication;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Authentication;
                OnValidate=BEGIN
                             EnableControls;
                           END;
                            }

    { 8   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server";
                OnValidate=BEGIN
                             EnableControls;
                           END;

                ShowMandatory=TRUE }

    { 7   ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="SMTP Server Port" }

    { 6   ;3   ;Field     ;
                Name=Secure Connection;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="Secure Connection" }

    { 26  ;2   ;Group     ;
                Visible=MailSettingsVisible;
                GroupType=Group;
                InstructionalTextML=ENU=Enter the credentials for the account, which will be used for sending emails. }

    { 5   ;3   ;Field     ;
                Name=Email;
                ExtendedDatatype=E-Mail;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr="User ID";
                OnValidate=BEGIN
                             EnableControls;
                           END;
                            }

    { 4   ;3   ;Field     ;
                Name=Password;
                ExtendedDatatype=Masked;
                CaptionML=ENU=Password;
                ApplicationArea=#Basic,#Suite,#Invoicing;
                SourceExpr=Password;
                OnValidate=BEGIN
                             EnableControls;
                           END;
                            }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To verify that the specified email setup works, choose Send Test Email. }

    { 24  ;2   ;Group     ;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 25  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=To enable email sending directly from documents, choose Finish. }

  }
  CODE
  {
    VAR
      AssistedSetup@1005 : Record 1803;
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1018 : Record 2000000182;
      MediaResourcesDone@1016 : Record 2000000182;
      SMTPMail@1008 : Codeunit 400;
      ClientTypeManagement@1019 : Codeunit 4;
      Step@1012 : 'Start,Provider,Settings,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      ProviderStepVisible@1010 : Boolean;
      SettingsStepVisible@1011 : Boolean;
      AdvancedSettingsVisible@1003 : Boolean;
      MailSettingsVisible@1002 : Boolean;
      FinalStepVisible@1015 : Boolean;
      EmailProvider@1001 : 'Office 365,Outlook,Gmail,Yahoo,Other Email Provider';
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      NAVNotSetUpQst@1004 : TextConst 'ENU=Email has not been set up.\\Are you sure you want to exit?';
      EmailPasswordMissingErr@1006 : TextConst 'ENU=Please enter a valid email address and password.';
      Password@1007 : Text[250];
      DummyPasswordTxt@1017 : TextConst '@@@={Locked};ENU=***';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Provider:
          ShowProviderStep;
        Step::Settings:
          ShowSettingsStep;
        Step::Finish:
          ShowFinishStep;
      END;
    END;

    LOCAL PROCEDURE StoreSMTPSetup@31();
    VAR
      SMTPMailSetup@1000 : Record 409;
    BEGIN
      IF NOT SMTPMailSetup.GET THEN BEGIN
        SMTPMailSetup.INIT;
        SMTPMailSetup.INSERT;
      END;

      SMTPMailSetup.TRANSFERFIELDS(Rec,FALSE);
      IF Password <> DummyPasswordTxt THEN
        SMTPMailSetup.SetPassword(Password);
      SMTPMailSetup.MODIFY(TRUE);
      COMMIT;
    END;

    LOCAL PROCEDURE SendTestEmailAction@10();
    BEGIN
      StoreSMTPSetup;
      CODEUNIT.RUN(CODEUNIT::"SMTP Test Mail");
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      StoreSMTPSetup;
      AssistedSetup.SetStatus(PAGE::"Email Setup Wizard",AssistedSetup.Status::Completed);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowProviderStep@33();
    BEGIN
      ProviderStepVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowSettingsStep@34();
    BEGIN
      SettingsStepVisible := TRUE;
      AdvancedSettingsVisible := EmailProvider = EmailProvider::"Other Email Provider";
      MailSettingsVisible := Authentication = Authentication::Basic;
      NextActionEnabled := "SMTP Server" <> '';
    END;

    LOCAL PROCEDURE ShowFinishStep@35();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
      FinishActionEnabled := TRUE;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := FALSE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      ProviderStepVisible := FALSE;
      SettingsStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE GetEmailProvider@11(VAR SMTPMailSetup@1000 : Record 409);
    BEGIN
      CASE TRUE OF
        SMTPMail.IsOffice365Setup(SMTPMailSetup):
          EmailProvider := EmailProvider::"Office 365";
        SMTPMail.IsOutlookSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Outlook;
        SMTPMail.IsGmailSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Gmail;
        SMTPMail.IsYahooSetup(SMTPMailSetup):
          EmailProvider := EmailProvider::Yahoo;
        ELSE
          EmailProvider := EmailProvider::"Other Email Provider";
      END;
    END;

    BEGIN
    END.
  }
}

