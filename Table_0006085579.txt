OBJECT Table 6085579 Template
{
  OBJECT-PROPERTIES
  {
    Date=06/11/18;
    Time=[ 1:00:00 AM];
    Version List=DCW13.70.00.5.00.01;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Type;
    OnInsert=VAR
               DCSetup@1000 : Record 6085573;
               NoSeriesMgt@1001 : Codeunit 396;
             BEGIN
               IF "No." = '' THEN BEGIN
                 DCSetup.GET;
                 DCSetup.TESTFIELD("Template Nos.");
                 NoSeriesMgt.InitSeries(DCSetup."Template Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
             END;

    OnDelete=VAR
               Field@1000000000 : Record 6085580;
               Document@1000000001 : Record 6085590;
               DataTransl@1000000003 : Record 6085584;
               SearchText@161024012 : Record 6085588;
             BEGIN
               IF Type <> Type::" " THEN
                 IF NOT CONFIRM(STRSUBSTNO(Text005,"No.")) THEN
                   ERROR('');

               Document.SETRANGE("Template No.","No.");
               Document.SETFILTER(Status,'>%1',Document.Status::Open);
               IF NOT Document.ISEMPTY THEN
                 ERROR(Text001);

               Document.SETRANGE(Status,Document.Status::Open);
               IF Document.COUNT > 0 THEN BEGIN
                 IF NOT CONFIRM(Text002,FALSE,Document.COUNT) THEN
                   ERROR('');
                 Document.MODIFYALL("Template No.",'',TRUE);
               END;

               DataTransl.SETRANGE("Template No.","No.");
               DataTransl.DELETEALL(TRUE);

               Field.SETRANGE("Template No.","No.");
               Field.DELETEALL(TRUE);

               SearchText.SETRANGE("Template No.","No.");
               SearchText.DELETEALL(TRUE);
             END;

    CaptionML=ENU=Template;
    LookupPageID=Page6085591;
    DrillDownPageID=Page6085591;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Category Code       ;Code10        ;TableRelation="DC Document Category";
                                                   OnValidate=BEGIN
                                                                CheckDuplicIdentTemplates;
                                                              END;

                                                   CaptionML=ENU=Category Code }
    { 5   ;   ;Source Record ID Tree ID;Integer   ;TableRelation="Record ID Tree";
                                                   OnValidate=VAR
                                                                RecIDMgt@1160040000 : Codeunit 6085604;
                                                                RecRef@1160040002 : RecordRef;
                                                                RecID@1160040001 : RecordID;
                                                              BEGIN
                                                                "Source Record Table ID" := 0;
                                                                "Source Record No." := '';
                                                                "Source Record Name" := '';

                                                                IF RecIDMgt.GetRecIDFromTreeID("Source Record ID Tree ID",RecID) THEN BEGIN
                                                                  RecRef := RecID.GETRECORD;
                                                                  IF RecIDMgt.KeyIsOneFieldCodeType(RecRef) THEN BEGIN
                                                                    "Source Record Table ID" := RecRef.NUMBER;
                                                                    "Source Record No." := COPYSTR(GetSourceID,1,MAXSTRLEN("Source Record No."));
                                                                    "Source Record Name" := GetSourceName;
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Source Record ID }
    { 6   ;   ;Default             ;Boolean       ;CaptionML=ENU=Default }
    { 7   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                CheckDuplicIdentTemplates;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=ENU=" ,Identification,Master";
                                                   OptionString=[ ,Identification,Master] }
    { 8   ;   ;Codeunit ID: After Capture;Integer ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: After Capture"),FIELDNO("Codeunit ID: After Capture"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: After Capture;
                                                   BlankZero=Yes }
    { 9   ;   ;Recognize Lines     ;Option        ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Recognize Lines",FIELDNO("Recognize Lines"));
                                                              END;

                                                   CaptionML=ENU=Recognize Lines;
                                                   OptionCaptionML=ENU=No,Yes;
                                                   OptionString=No,Yes }
    { 10  ;   ;Description         ;Text30        ;CaptionML=ENU=Description }
    { 11  ;   ;No. Series          ;Code20        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("No. Series"),FIELDNO("No. Series"));
                                                              END;

                                                   CaptionML=ENU=No. Series;
                                                   Editable=No }
    { 12  ;   ;Codeunit ID: Line Validation;Integer;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Line Validation"),FIELDNO("Codeunit ID: Line Validation"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Line Validation;
                                                   BlankZero=Yes }
    { 13  ;   ;Codeunit ID: Doc. Validation;Integer;
                                                   TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Doc. Validation"),FIELDNO("Codeunit ID: Doc. Validation"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Doc. Validation;
                                                   BlankZero=Yes }
    { 14  ;   ;Codeunit ID: Register;Integer      ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Register"),FIELDNO("Codeunit ID: Register"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Register;
                                                   BlankZero=Yes }
    { 19  ;   ;Search Text         ;Code200       ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::" ");
                                                              END;

                                                   CaptionML=ENU=Search Text }
    { 20  ;   ;Codeunit ID: Transl. (Doc);Integer ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Transl. (Doc)"),FIELDNO("Codeunit ID: Transl. (Doc)"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Transl. (Doc);
                                                   BlankZero=Yes }
    { 22  ;   ;Codeunit ID: Show Match;Integer    ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Show Match"),FIELDNO("Codeunit ID: Show Match"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Show Match;
                                                   BlankZero=Yes }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   OnValidate=VAR
                                                                Field@1000000000 : Record 6085580;
                                                              BEGIN
                                                                IF "Language Code" = xRec."Language Code" THEN
                                                                  EXIT;

                                                                IF GUIALLOWED THEN
                                                                  IF NOT CONFIRM(Text004,TRUE,FIELDCAPTION("Language Code")) THEN
                                                                    EXIT;

                                                                Field.SETRANGE("Template No.","No.");
                                                                Field.MODIFYALL("Language Code","Language Code");

                                                                ModifyAllTemplates(FORMAT("Language Code"),FIELDNO("Language Code"));
                                                              END;

                                                   CaptionML=ENU=Language Code }
    { 25  ;   ;Codeunit ID: Transl. (Temp);Integer;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Transl. (Temp)"),FIELDNO("Codeunit ID: Transl. (Temp)"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Transl. (Templ.);
                                                   BlankZero=Yes }
    { 27  ;   ;Codeunit ID: Register (Y/N);Integer;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Register (Y/N)"),FIELDNO("Codeunit ID: Register (Y/N)"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Register (Y/N);
                                                   BlankZero=Yes }
    { 29  ;   ;Hide Registration Messages;Boolean ;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Hide Registration Messages",0,9),FIELDNO("Hide Registration Messages"));
                                                              END;

                                                   CaptionML=ENU=Hide Registration Messages }
    { 30  ;   ;Show Document After Register;Option;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Show Document After Register",FIELDNO("Show Document After Register"));
                                                              END;

                                                   CaptionML=ENU=Show Document After Register;
                                                   OptionCaptionML=ENU=Ask,Always,Never;
                                                   OptionString=Ask,Always,Never }
    { 31  ;   ;Codeunit ID: After Step 1;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: After Step 1"),FIELDNO("Codeunit ID: After Step 1"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: After Step 1;
                                                   BlankZero=Yes }
    { 32  ;   ;Codeunit ID: After Step 2;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: After Step 2"),FIELDNO("Codeunit ID: After Step 2"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: After Step 2;
                                                   BlankZero=Yes }
    { 35  ;   ;First Table Line Has Captions;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("First Table Line Has Captions",0,9),FIELDNO("First Table Line Has Captions"));
                                                              END;

                                                   CaptionML=ENU=First Table Line Has Captions }
    { 36  ;   ;Codeunit ID: Line Capture;Integer  ;TableRelation=AllObj."Object ID" WHERE (Object Type=CONST(Codeunit));
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Codeunit ID: Line Capture"),FIELDNO("Codeunit ID: Line Capture"));
                                                              END;

                                                   CaptionML=ENU=Codeunit ID: Line Capture;
                                                   BlankZero=Yes }
    { 39  ;   ;Auto Receive Order Variance;Boolean;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Auto Receive Order Variance",0,9),FIELDNO("Auto Receive Order Variance"));
                                                              END;

                                                   CaptionML=ENU=Auto Receive Order Variance }
    { 40  ;   ;Auto Ship Return Order Var.;Boolean;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Auto Ship Return Order Var.",0,9),FIELDNO("Auto Ship Return Order Var."));
                                                              END;

                                                   CaptionML=ENU=Auto Ship Return Order Variance }
    { 41  ;   ;Posting Date        ;Option        ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Posting Date",FIELDNO("Posting Date"));
                                                              END;

                                                   CaptionML=ENU=Posting Date;
                                                   OptionCaptionML=ENU=Use Document Date (recognized on document),Use Today,Use Work Date;
                                                   OptionString=Use Document Date (recognized on document),Use Today,Use Work Date }
    { 42  ;   ;Date Format         ;Option        ;OnValidate=VAR
                                                                Field@161024012 : Record 6085580;
                                                              BEGIN
                                                                IF "Date Format" = xRec."Date Format" THEN
                                                                  EXIT;

                                                                IF GUIALLOWED THEN
                                                                  IF NOT CONFIRM(Text004,TRUE,FIELDCAPTION("Date Format")) THEN
                                                                    EXIT;

                                                                Field.SETRANGE("Template No.","No.");
                                                                Field.SETRANGE("Data Type",Field."Data Type"::Date);
                                                                Field.MODIFYALL("Date Format","Date Format" + 1);

                                                                ModifyAllTemplatesOptions("Date Format",FIELDNO("Date Format"));
                                                              END;

                                                   CaptionML=ENU=Date Format;
                                                   OptionCaptionML=ENU=Day / Month / Year,Month / Day / Year,Year / Day / Month,Year / Month / Day,Day / Year / Month,Month / Year / Day;
                                                   OptionString=Day / Month / Year,Month / Day / Year,Year / Day / Month,Year / Month / Day,Day / Year / Month,Month / Year / Day }
    { 43  ;   ;Master Template No. ;Code20        ;TableRelation=Template;
                                                   CaptionML=ENU=Master Template No. }
    { 44  ;   ;Prices Including VAT;Boolean       ;OnValidate=VAR
                                                                DocCat@1160040000 : Record 6085575;
                                                                Customer@1160040001 : Record 18;
                                                                Vendor@1160040002 : Record 23;
                                                              BEGIN
                                                                IF Type = Type::Master THEN BEGIN
                                                                  DocCat.GET("Category Code");
                                                                  CASE DocCat."Source Table No." OF
                                                                    DATABASE::Customer:
                                                                      MESSAGE(Text015,FIELDCAPTION("Prices Including VAT"),Customer.TABLECAPTION);
                                                                    DATABASE::Vendor:
                                                                      MESSAGE(Text015,FIELDCAPTION("Prices Including VAT"),Vendor.TABLECAPTION);
                                                                  END;
                                                                END;

                                                                ModifyAllTemplates(FORMAT("Prices Including VAT",0,9),FIELDNO("Prices Including VAT"));

                                                                IF NOT "Prices Including VAT" THEN
                                                                  EXIT;

                                                                IF CurrFieldNo <> 0 THEN
                                                                  IF NOT CONFIRM(Text013,TRUE,FIELDCAPTION("Amount Validation")) THEN
                                                                    EXIT;

                                                                "Amount Validation" := "Amount Validation"::"Only Amount Incl. VAT must match imported amounts";
                                                              END;

                                                   CaptionML=[ENU=Prices Including VAT;
                                                              ENC=Prices Including Tax] }
    { 45  ;   ;Source Record Table ID;Integer     ;CaptionML=ENU=Source Record Table ID }
    { 46  ;   ;Source Record No.   ;Code50        ;CaptionML=ENU=Source Record No. }
    { 47  ;   ;Source Record Name  ;Text100       ;CaptionML=ENU=Source Record Name }
    { 100 ;   ;Purch. Auto Match   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Purch. Auto Match" THEN BEGIN
                                                                  IF "Purch. Match Invoice" = "Purch. Match Invoice"::No THEN
                                                                    "Purch. Match Invoice" := "Purch. Match Invoice"::"Receipt Only";
                                                                  IF "Purch. Match Credit Memo" = "Purch. Match Credit Memo"::No THEN
                                                                    "Purch. Match Credit Memo" := "Purch. Match Credit Memo"::"Return Shipment Only";
                                                                END;

                                                                ModifyAllTemplates(FORMAT("Purch. Auto Match",0,9),FIELDNO("Purch. Auto Match"));
                                                              END;

                                                   CaptionML=ENU=Auto Match }
    { 101 ;   ;Purch. Match Invoice;Option        ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Invoice",FIELDNO("Purch. Match Invoice"));
                                                              END;

                                                   CaptionML=ENU=Match Invoice;
                                                   OptionCaptionML=ENU=No,Receipt Only,Order Only,Receipt or Order;
                                                   OptionString=No,Receipt Only,Order Only,Receipt or Order }
    { 102 ;   ;Purch. Validate VAT Calc.;Boolean  ;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Purch. Validate VAT Calc.",0,9),FIELDNO("Purch. Validate VAT Calc."));
                                                              END;

                                                   CaptionML=[ENU=Validate VAT Calculation;
                                                              ENC=Validate Tax Calculation] }
    { 103 ;   ;Validate Line Totals;Boolean       ;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Validate Line Totals",0,9),FIELDNO("Validate Line Totals"));
                                                              END;

                                                   CaptionML=ENU=Validate Line Totals }
    { 104 ;   ;Purch. Inv. Reg. Step 1;Option     ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Inv. Reg. Step 1",FIELDNO("Purch. Inv. Reg. Step 1"));
                                                              END;

                                                   CaptionML=ENU=Invoice Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Invoice,Match Order & Create Invoice,Match & Update Order";
                                                   OptionString=[ ,Create Invoice,Match Order & Create Invoice,Match & Update Order] }
    { 105 ;   ;Purch. Inv. Reg. Step 2;Option     ;OnValidate=BEGIN
                                                                IF ("Purch. Inv. Reg. Step 2" IN ["Purch. Inv. Reg. Step 2"::Release,"Purch. Inv. Reg. Step 2"::Post]) THEN
                                                                  IF NOT "Purch. Auto App. within Var." THEN
                                                                    VALIDATE("Purch. Auto App. within Var.",TRUE);

                                                                ModifyAllTemplatesOptions("Purch. Inv. Reg. Step 2",FIELDNO("Purch. Inv. Reg. Step 2"));
                                                              END;

                                                   CaptionML=ENU=Invoice Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release,Post";
                                                   OptionString=[ ,Submit for Approval,Release,Post] }
    { 106 ;   ;Max. Variance Amt Allowed LCY;Decimal;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Max. Variance Amt Allowed LCY"),FIELDNO("Max. Variance Amt Allowed LCY"));
                                                              END;

                                                   CaptionML=ENU=Max. Variance Amount Allowed (LCY) }
    { 107 ;   ;Purch. Match Order No.;Option      ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Order No.",FIELDNO("Purch. Match Order No."));
                                                              END;

                                                   CaptionML=ENU=Match Order No.;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 108 ;   ;Purch. Match Item No.;Option       ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Item No.",FIELDNO("Purch. Match Item No."));
                                                              END;

                                                   CaptionML=ENU=Match Item No.;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 109 ;   ;Purch. Match Quantity;Option       ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Quantity",FIELDNO("Purch. Match Quantity"));
                                                              END;

                                                   CaptionML=ENU=Match Quantity;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 110 ;   ;Purch. Match Unit Cost;Option      ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Unit Cost",FIELDNO("Purch. Match Unit Cost"));
                                                              END;

                                                   CaptionML=ENU=Match Unit Cost;
                                                   OptionCaptionML=ENU=No,Yes - always,Yes - if present;
                                                   OptionString=No,Yes - always,Yes - if present }
    { 111 ;   ;Purch. Use Vend. Purch. Code;Boolean;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Purch. Use Vend. Purch. Code",0,9),FIELDNO("Purch. Use Vend. Purch. Code"));
                                                              END;

                                                   CaptionML=ENU=Always Use Vend. Purch. Code }
    { 112 ;   ;Purch. Cr.Memo Reg. Step 1;Option  ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Cr.Memo Reg. Step 1",FIELDNO("Purch. Cr.Memo Reg. Step 1"));
                                                              END;

                                                   CaptionML=ENU=Credit Memo Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Credit Memo,Match Return Order & Create Credit Memo,Match & Update Return Order";
                                                   OptionString=[ ,Create Credit Memo,Match Return Order & Create Credit Memo,Match & Update Return Order] }
    { 113 ;   ;Purch. Cr.Memo Reg. Step 2;Option  ;OnValidate=BEGIN
                                                                IF ("Purch. Cr.Memo Reg. Step 2" IN ["Purch. Cr.Memo Reg. Step 2"::Release,"Purch. Cr.Memo Reg. Step 2"::Post]) THEN
                                                                  IF NOT "Purch. Auto App. within Var." THEN
                                                                    VALIDATE("Purch. Auto App. within Var.",TRUE);

                                                                ModifyAllTemplatesOptions("Purch. Cr.Memo Reg. Step 2",FIELDNO("Purch. Cr.Memo Reg. Step 2"));
                                                              END;

                                                   CaptionML=ENU=Credit Memo Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release,Post";
                                                   OptionString=[ ,Submit for Approval,Release,Post] }
    { 114 ;   ;Line Total Header Formula;Code250  ;CaptionML=ENU=Line Total Header Formula }
    { 115 ;   ;Allow Register without Amounts;Boolean;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Allow Register without Amounts",0,9),FIELDNO("Allow Register without Amounts"));
                                                              END;

                                                   CaptionML=ENU=Allow Register w/o Amounts }
    { 116 ;   ;Amount Validation   ;Option        ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Amount Validation",FIELDNO("Amount Validation"));
                                                              END;

                                                   CaptionML=ENU=Amount Validation;
                                                   OptionCaptionML=[ENU=Not Required,Amount Excl. VAT and Amount Incl. VAT must match imported amounts,Only Amount Incl. VAT must match imported amounts,Only Amount Excl. VAT must match imported amounts;
                                                                    ENC=Not Required,Amount Excl. Tax and Amount Incl. Tax must match imported amounts,Only Amount Incl. Tax must match imported amounts,Only Amount Excl. Tax must match imported amounts];
                                                   OptionString=Not Required,Amount Excl. VAT and Amount Incl. VAT must match imported amounts,Only Amount Incl. VAT must match imported amounts,Only Amount Excl. VAT must match imported amounts }
    { 117 ;   ;Variance Posting Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLAcc@161024012 : Record 15;
                                                              BEGIN
                                                                IF "Variance Posting Account" = '' THEN
                                                                  EXIT;

                                                                GLAcc.GET("Variance Posting Account");
                                                                GLAcc.TESTFIELD("Direct Posting",TRUE);
                                                                GLAcc.TESTFIELD(Blocked,FALSE);

                                                                ModifyAllTemplates(FORMAT("Variance Posting Account"),FIELDNO("Variance Posting Account"));
                                                              END;

                                                   CaptionML=ENU=Variance Posting Account }
    { 118 ;   ;Purch. Auto App. within Var.;Boolean;
                                                   OnValidate=BEGIN
                                                                IF NOT "Purch. Auto App. within Var." THEN BEGIN
                                                                  IF ("Purch. Inv. Reg. Step 2" IN ["Purch. Inv. Reg. Step 2"::Release,"Purch. Inv. Reg. Step 2"::Post]) THEN
                                                                    ERROR(PurchAutoAppErr,FIELDCAPTION("Purch. Auto App. within Var."),NOT "Purch. Auto App. within Var.",
                                                                      FIELDCAPTION("Purch. Inv. Reg. Step 2"),"Purch. Inv. Reg. Step 2",TABLECAPTION,"No.");

                                                                  IF ("Purch. Cr.Memo Reg. Step 2" IN ["Purch. Cr.Memo Reg. Step 2"::Release,"Purch. Cr.Memo Reg. Step 2"::Post]) THEN
                                                                    ERROR(PurchAutoAppErr,FIELDCAPTION("Purch. Auto App. within Var."),NOT "Purch. Auto App. within Var.",
                                                                      FIELDCAPTION("Purch. Cr.Memo Reg. Step 2"),"Purch. Cr.Memo Reg. Step 2",TABLECAPTION,"No.");
                                                                END;

                                                                ModifyAllTemplates(FORMAT("Purch. Auto App. within Var.",0,9),FIELDNO("Purch. Auto App. within Var."));
                                                              END;

                                                   CaptionML=ENU=Auto Approve within Variance }
    { 119 ;   ;Approval Flow Code  ;Code10        ;TableRelation="Approval Flow";
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Approval Flow Code"),FIELDNO("Approval Flow Code"));
                                                              END;

                                                   CaptionML=ENU=Approval Flow Code }
    { 120 ;   ;Use Vendor/Customer Item Nos.;Boolean;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Use Vendor/Customer Item Nos.",0,9),FIELDNO("Use Vendor/Customer Item Nos."));
                                                              END;

                                                   CaptionML=ENU=Vendor/Customer uses your Item Nos. }
    { 121 ;   ;Translate Item Nos. to;Option      ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Translate Item Nos. to",FIELDNO("Translate Item Nos. to"));
                                                              END;

                                                   CaptionML=ENU=Translate Item Nos. to;
                                                   OptionCaptionML=ENU=" ,Item Cross Reference,Vendor Item,Document Capture Line Translation";
                                                   OptionString=[ ,Item Cross Reference,Vendor Item,Document Capture Line Translation] }
    { 122 ;   ;Allowed Variance %  ;Decimal       ;OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Allowed Variance %"),FIELDNO("Allowed Variance %"));
                                                              END;

                                                   CaptionML=ENU=Max. Variance % Allowed;
                                                   DecimalPlaces=0:2;
                                                   MinValue=0 }
    { 123 ;   ;Copy Matched Header Dimensions;Boolean;
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Copy Matched Header Dimensions",0,9),FIELDNO("Copy Matched Header Dimensions"));
                                                              END;

                                                   CaptionML=ENU=Copy Matched Header Dimensions }
    { 124 ;   ;Purch. Match Credit Memo;Option    ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Purch. Match Credit Memo",FIELDNO("Purch. Match Credit Memo"));
                                                              END;

                                                   CaptionML=ENU=Match Credit Memo;
                                                   OptionCaptionML=ENU=No,Return Shipment Only,Return Order Only,Return Shipment or Return Order;
                                                   OptionString=No,Return Shipment Only,Return Order Only,Return Shipment or Return Order }
    { 130 ;   ;Translate to Type   ;Option        ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Translate to Type",FIELDNO("Translate to Type"));
                                                              END;

                                                   CaptionML=ENU=Translate to Type (Default);
                                                   OptionCaptionML=ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 200 ;   ;Interaction Template Code;Code10   ;TableRelation="Interaction Template";
                                                   OnValidate=BEGIN
                                                                ModifyAllTemplates(FORMAT("Interaction Template Code"),FIELDNO("Interaction Template Code"));
                                                              END;

                                                   CaptionML=ENU=Interaction Template Code }
    { 300 ;   ;Sales Order Reg. Step 1;Option     ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Sales Order Reg. Step 1",FIELDNO("Sales Order Reg. Step 1"));
                                                              END;

                                                   CaptionML=ENU=Order Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,,Create Order";
                                                   OptionString=[ ,,Create Order] }
    { 301 ;   ;Sales Order Reg. Step 2;Option     ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Sales Order Reg. Step 2",FIELDNO("Sales Order Reg. Step 2"));
                                                              END;

                                                   CaptionML=ENU=Order Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release";
                                                   OptionString=[ ,Submit for Approval,Release] }
    { 302 ;   ;Merge from same E-mail;Boolean     ;OnValidate=VAR
                                                                DCDocumentCategory@6085573 : Record 6085575;
                                                              BEGIN
                                                                // "Merge from same E-mail" only works when "Archive E-mails on Document" is populated
                                                                // so makes no sence to allow it to be set when "Archive E-mails on Document" = No
                                                                IF "Merge from same E-mail" THEN BEGIN
                                                                  TESTFIELD("Category Code");
                                                                  DCDocumentCategory.GET("Category Code");
                                                                  DCDocumentCategory.TESTFIELD("Archive E-mails on Document",TRUE);
                                                                END;

                                                                ModifyAllTemplates(FORMAT("Merge from same E-mail",0,9),FIELDNO("Merge from same E-mail"));
                                                              END;

                                                   CaptionML=ENU=Merge from same E-mail }
    { 303 ;   ;Sales Cr.Memo Reg. Step 1;Option   ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Sales Cr.Memo Reg. Step 1",FIELDNO("Sales Cr.Memo Reg. Step 1"));
                                                              END;

                                                   CaptionML=ENU=Credit Memo Reg. Step 1;
                                                   OptionCaptionML=ENU=" ,Create Credit Memo";
                                                   OptionString=[ ,Create Credit Memo] }
    { 304 ;   ;Sales Cr.Memo Reg. Step 2;Option   ;OnValidate=BEGIN
                                                                ModifyAllTemplatesOptions("Sales Cr.Memo Reg. Step 2",FIELDNO("Sales Cr.Memo Reg. Step 2"));
                                                              END;

                                                   CaptionML=ENU=Credit Memo Reg. Step 2;
                                                   OptionCaptionML=ENU=" ,Submit for Approval,Release";
                                                   OptionString=[ ,Submit for Approval,Release] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Category Code,Type                       }
    {    ;Search Text                              }
    {    ;Category Code,Source Record ID Tree ID   }
    {    ;Source Record Table ID,Source Record No.,Category Code }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1000000001 : TextConst 'ENU=This template cannot be deleted because it has been used on one or more registered or rejected documents.';
      Text002@1000000002 : TextConst 'ENU=This template is used on %1 open documents.\\If you delete this template it will be removed from these documents and you must manually select anohter template.\\Do you wish to continue?';
      Text003@1000000003 : TextConst 'ENU=&Create New';
      Text004@1000000005 : TextConst 'ENU=Do you wish to update %1 on all fields?';
      Text005@1000000006 : TextConst 'ENU=WARNING\\Your are about to delete system template %1.\\Do you wish to continue?';
      Text006@161024012 : TextConst 'ENU=N/A';
      Text007@161024013 : TextConst 'ENU=You must specify Source ID.';
      Text008@1160040000 : TextConst 'ENU=Source ID';
      UpdateTemplateQst@1000 : TextConst 'ENU="Do you wish to update %1 on all templates created from %2 = %3 for the document category %4?"';
      Text010@1001 : TextConst 'ENU=Updating templates\#1####################\@2@@@@@@@@@@@@@@@@@@@@';
      Text011@1002 : TextConst 'ENU=%1 of %2';
      Text012@1003 : TextConst 'ENU=Templates updated: %1';
      Text013@1160040001 : TextConst 'ENU=Do you want to set %1 to only check amounts including VAT and not amounts excluding VAT?';
      Text014@1160040002 : TextConst 'ENU=Do you want to remove the field ''%1'' from this template?';
      Text015@1160040003 : TextConst 'ENU=When a new template is created, %1 is automatically set to the same values as on the %2.';
      PurchAutoAppErr@6085573 : TextConst 'ENU=''%1'' must be %2 when ''%3'' is %4 in %5 %6';
      ChangeSourceIDErr@6085574 : TextConst 'ENU=You cannot change %1 because this template has been used on one or more documents.';
      SourceIDText@6085576 : TextConst 'ENU=Source ID';
      SourceNameText@6085575 : TextConst 'ENU=Source Name';
      SourceIDNotExistErr@6085577 : TextConst 'ENU=%1 %2 does not exist.';
      DuplicIdentTempErr@6085578 : TextConst 'ENU=You can only have one identification template for a document category.';
      HeaderText@6085579 : TextConst 'ENU=Header Fields';
      LineText@6085580 : TextConst 'ENU=Line Fields';

    PROCEDURE CreateNew@1000000008(DocCatCode@1000000000 : Code[20];NewRecIDTreeID@1000000004 : Integer;CopyAllFields@161024019 : Boolean) : Code[20];
    VAR
      DocCat@161024018 : Record 6085575;
      Template@1000000001 : Record 6085579;
      Template2@1000000002 : Record 6085579;
      TempTemplate@161024012 : TEMPORARY Record 6085579;
      Vendor@161024013 : Record 23;
      Customer@161024014 : Record 18;
      Field@161024016 : Record 6085580;
      TemplateNos@1000000007 : ARRAY [100] OF Code[20];
      NewLanguageCode@161024015 : Code[20];
      OptionString@1000000005 : Text[1024];
      i@1000000006 : Integer;
      OptionNumber@1000000008 : Integer;
    BEGIN
      DocCat.GET(DocCatCode);
      IF DocCat."Source Table No." <> 0 THEN
        IF (NewRecIDTreeID = 0) THEN
          ERROR(Text007);

      Template.SETCURRENTKEY("Category Code","Source Record ID Tree ID");
      Template.SETRANGE("Category Code",DocCatCode);
      Template.SETRANGE(Type,Type::" ");
      Template.SETRANGE("Source Record ID Tree ID",NewRecIDTreeID);
      MakeUniqueNames(Template,TempTemplate);
      IF TempTemplate.FINDSET THEN BEGIN
        REPEAT
          i := i + 1;
          TemplateNos[i] := TempTemplate."No.";

          IF OptionString = '' THEN
            OptionString := TempTemplate.Description
          ELSE
            OptionString := OptionString + ',' + TempTemplate.Description;

        UNTIL TempTemplate.NEXT = 0;
        OptionString := OptionString + ',' + Text003;

        IF STRLEN(OptionString) < 290 THEN BEGIN
          OptionNumber := STRMENU(OptionString);

          IF OptionNumber = 0 THEN
            EXIT;

          IF TemplateNos[OptionNumber] <> '' THEN
            EXIT(TemplateNos[OptionNumber]);
        END ELSE BEGIN
          TempTemplate.INIT;
          TempTemplate."No." := 'CREATE';
          TempTemplate.Description := DELCHR(Text003,'=','&');
          TempTemplate.INSERT;

          IF PAGE.RUNMODAL(0,TempTemplate) <> ACTION::LookupOK THEN
            EXIT;

          IF TempTemplate."No." <> 'CREATE' THEN
            EXIT(TempTemplate."No.");
        END;
      END;

      Template.RESET;
      Template.SETCURRENTKEY("Category Code",Type);
      Template.SETRANGE("Category Code",DocCatCode);
      Template.SETRANGE(Type,Template.Type::Master);
      Template.FINDFIRST;
      IF Template.COUNT > 1 THEN
        IF PAGE.RUNMODAL(0,Template) <> ACTION::LookupOK THEN
          EXIT;

      Template2.GET(Template.Clone('',Template,Template."Category Code",'',Template.Type,CopyAllFields,TRUE));

      Template2.VALIDATE("Source Record ID Tree ID",NewRecIDTreeID);
      Template2.Type := Template2.Type::" ";
      Template2.Default := OptionNumber = 0;
      Template2."Master Template No." := Template."No.";

      IF DocCat."Source Table No." = DATABASE::Vendor THEN BEGIN
        Vendor.GET(Template2.GetSourceID);

        IF Vendor."Language Code" <> Template2."Language Code" THEN
          NewLanguageCode := Vendor."Language Code";

        Template2.VALIDATE("Prices Including VAT",Vendor."Prices Including VAT");
      END ELSE
        IF DocCat."Source Table No." = DATABASE::Customer THEN BEGIN
          Customer.GET(Template2.GetSourceID);

          IF Customer."Language Code" <> Template2."Language Code" THEN
            NewLanguageCode := Customer."Language Code";

          Template2.VALIDATE("Prices Including VAT",Customer."Prices Including VAT");
        END;

      IF NewLanguageCode <> '' THEN BEGIN
        Template2."Language Code" := NewLanguageCode;
        Field.SETRANGE("Template No.",Template2."No.");
        Field.MODIFYALL("Language Code",NewLanguageCode);
      END;

      Template2.MODIFY(TRUE);
      EXIT(Template2."No.");
    END;

    PROCEDURE MakeUniqueNames@161024015(VAR Template@161024012 : Record 6085579;VAR TempTemplate@161024013 : Record 6085579);
    VAR
      CaptureMgt@6085573 : Codeunit 6085576;
      Desc@161024014 : Text[50];
      i@161024015 : Integer;
    BEGIN
      IF Template.FINDSET THEN
        REPEAT
          Desc := CaptureMgt.ReplaceIllegalFilterCharacters(Template.Description,FALSE,MAXSTRLEN(Template.Description));
          Desc := CaptureMgt.Replace(Desc,',','',FALSE);
          TempTemplate.SETRANGE(Description,Desc);
          WHILE TempTemplate.FINDFIRST DO BEGIN
            i := i + 1;
            Desc := CaptureMgt.ReplaceIllegalFilterCharacters(
              Template.Description,FALSE,
              MAXSTRLEN(Template.Description) - 3 - STRLEN(FORMAT(i))) + ' (' + FORMAT(i) + ')';
            TempTemplate.SETRANGE(Description,Desc);
          END;

          TempTemplate := Template;
          TempTemplate.Description := Desc;
          TempTemplate.INSERT;
        UNTIL Template.NEXT = 0;

      TempTemplate.SETRANGE(Description);
    END;

    PROCEDURE Clone@1000000000(FromCompany@1160040001 : Text[30];VAR FromTemplate@161024012 : Record 6085579;ToDocCatCode@1160040000 : Code[10];ToTemplNo@1160040002 : Code[20];ToTemplateType@1002 : ' ,Identification,Master';IncludeAllFields@161024014 : Boolean;CreatedFromMasterTemplate@6085573 : Boolean) : Code[20];
    VAR
      ToTemplate@1000000001 : Record 6085579;
      FromField@1000000000 : Record 6085580;
      FromDataTransl@1000000007 : Record 6085584;
      ToDataTransl@1000000008 : Record 6085584;
      FromDataTranslDim@1001 : Record 6085586;
      ToDataTranslDim@1000 : Record 6085586;
    BEGIN
      ToTemplate := FromTemplate;
      ToTemplate."Category Code" := ToDocCatCode;
      ToTemplate."No." := ToTemplNo;
      ToTemplate.VALIDATE(Type,ToTemplateType);
      IF (FromTemplate."Category Code" = ToDocCatCode) AND
        (FromTemplate.Type = FromTemplate.Type::Master) AND
        (ToTemplateType = ToTemplateType::" ")
      THEN
        ToTemplate."Master Template No." := FromTemplate."No.";
      ToTemplate.INSERT(TRUE);

      IF FromCompany <> '' THEN BEGIN
        FromField.CHANGECOMPANY(FromCompany);
        FromDataTransl.CHANGECOMPANY(FromCompany);
        FromDataTranslDim.CHANGECOMPANY(FromCompany);
      END;

      FromField.SETRANGE("Template No.",FromTemplate."No.");
      IF NOT IncludeAllFields THEN
        FromField.SETRANGE("Insert on new Templates",TRUE);

      IF FromField.FINDSET THEN
        REPEAT
          FromField.Clone(FromCompany,FromField,ToTemplate,CreatedFromMasterTemplate);
        UNTIL FromField.NEXT = 0;

      FromDataTransl.SETRANGE("Template No.",FromTemplate."No.");
      IF FromDataTransl.FINDSET THEN
        REPEAT
          ToDataTransl := FromDataTransl;
          ToDataTransl."Template No." := ToTemplate."No.";
          ToDataTransl.INSERT(TRUE);

          FromDataTranslDim.SETRANGE("Template No.",FromDataTransl."Template No.");
          FromDataTranslDim.SETRANGE("Field Type",FromDataTransl.Type);
          FromDataTranslDim.SETRANGE("Field Code",FromDataTransl."Field Code");
          FromDataTranslDim.SETRANGE("Translate From",FromDataTransl."Translate From");
          IF FromDataTranslDim.FINDSET THEN
            REPEAT
              ToDataTranslDim := FromDataTranslDim;
              ToDataTranslDim."Template No." := ToTemplate."No.";
              ToDataTranslDim.INSERT(TRUE);
            UNTIL FromDataTranslDim.NEXT = 0;
        UNTIL FromDataTransl.NEXT = 0;

      EXIT(ToTemplate."No.");
    END;

    PROCEDURE AssistEdit@2(OldTemplate@1000 : Record 6085579) : Boolean;
    VAR
      DCSetup@1002 : Record 6085573;
      Template@1001 : Record 6085579;
      NoSeriesMgt@1003 : Codeunit 396;
    BEGIN
      WITH Template DO BEGIN
        Template := Rec;
        DCSetup.GET;
        DCSetup.TESTFIELD("Template Nos.");

        IF NoSeriesMgt.SelectSeries(DCSetup."Template Nos.",OldTemplate."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Template;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE GetSourceName@161024012() : Text[1024];
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040000 : Codeunit 6085604;
      SourceName@1000 : Text[1024];
    BEGIN
      IF DocCat.GET("Category Code") THEN BEGIN
        SourceName := RecIDMgt.GetFieldValue("Source Record ID Tree ID",DocCat."Source Field No. (Name)");
        EXIT(COPYSTR(SourceName,1,MAXSTRLEN("Source Record Name")));
      END;
    END;

    PROCEDURE GetSourceIDCaption@6085574() Caption : Text[250];
    VAR
      DocCat@1160040001 : Record 6085575;
      AllObjWithCaption@1160040000 : Record 2000000058;
      RecIDMgt@1160040002 : Codeunit 6085604;
    BEGIN
      Caption := SourceIDText;
      IF DocCat.GET("Category Code") THEN
        IF DocCat."Source Table No." <> 0 THEN
          Caption := RecIDMgt.GetObjectCaption(AllObjWithCaption."Object Type"::Table,DocCat."Source Table No.");
    END;

    PROCEDURE GetSourceNameCaption@6085573() Caption : Text[250];
    VAR
      DocCat@1160040002 : Record 6085575;
      AllObjWithCaption@1160040001 : Record 2000000058;
      RecIDMgt@1160040000 : Codeunit 6085604;
    BEGIN
      Caption := SourceNameText;
      IF DocCat.GET("Category Code") THEN
        IF (DocCat."Source Table No." <> 0) AND (DocCat."Source Field No. (Name)" <> 0) THEN
          Caption := RecIDMgt.GetFieldCaption(DocCat."Source Table No.",DocCat."Source Field No. (Name)");
    END;

    PROCEDURE ManuallyAddTemplField@161024013() : Boolean;
    VAR
      Template@161024013 : Record 6085579;
      Field@161024014 : Record 6085580;
      Field2@161024016 : Record 6085580;
      TempField@161024015 : TEMPORARY Record 6085580;
      TemplFieldList@161024012 : Page 6085602;
      LastType@1000 : Text[50];
    BEGIN
      Template.SETRANGE("Category Code","Category Code");
      Template.SETRANGE(Type,Template.Type::Master);
      IF "Master Template No." <> '' THEN
        Template.SETRANGE("No.","Master Template No.");
      IF Template.FINDSET THEN
        REPEAT
          Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
          Field.SETRANGE("Template No.",Template."No.");
          IF Field.FINDSET THEN
            REPEAT
              IF NOT Field2.GET("No.",Field.Type,Field.Code) THEN BEGIN
                IF LastType <> FORMAT(Field.Type) THEN BEGIN
                  INIT;
                  TempField."Template No." := Template."No.";
                  TempField.Type := Field.Type;
                  IF Field.Type = 0 THEN BEGIN
                    TempField.Code := '#%&HEADERTYPE#%&';
                    TempField."Field Name" := HeaderText;
                  END ELSE BEGIN
                    TempField.Code := '#%&LINETYPE#%&';
                    TempField."Field Name" := LineText;
                  END;
                  TempField."Sort Order" := 0;
                  TempField.INSERT;
                  LastType := FORMAT(Field.Type);
                END;
                TempField.TRANSFERFIELDS(Field);
                TempField."Field Name" := '     '  + Field."Field Name";
                TempField.INSERT;
              END;
            UNTIL Field.NEXT = 0;
        UNTIL Template.NEXT = 0;

      TempField.SETCURRENTKEY("Template No.",Type,"Sort Order");
      IF TempField.FINDFIRST THEN
        IF TempField.NEXT = 0 THEN ;
      IF PAGE.RUNMODAL(PAGE::"Template Field List",TempField) = ACTION::LookupOK THEN BEGIN
        Field.GET(TempField."Template No.",TempField.Type,TempField.Code);
        Field.Clone('',Field,Rec,FALSE);

        IF TempField."G/L Account Field Code" <> '' THEN
          IF Field.GET(TempField."Template No.",TempField.Type,TempField."G/L Account Field Code") THEN
            Field.Clone('',Field,Rec,FALSE);

        EXIT(TRUE);
      END;
    END;

    PROCEDURE ManuallyRemoveTemplField@1160040002() : Boolean;
    VAR
      Field@161024014 : Record 6085580;
      TempField@6085573 : TEMPORARY Record 6085580;
      LastType@6085574 : Text[50];
    BEGIN
      Field.SETCURRENTKEY("Template No.",Type,"Sort Order");
      Field.SETRANGE("Template No.","No.");
      IF "Recognize Lines" = "Recognize Lines"::No THEN
        Field.SETRANGE(Type,Field.Type::Header);

      IF Field.FINDSET THEN BEGIN
        REPEAT
          IF LastType <> FORMAT(Field.Type) THEN BEGIN
                  INIT;
                  TempField."Template No." := "No.";
                  TempField.Type := Field.Type;
                  IF Field.Type = 0 THEN BEGIN
                    TempField.Code := '#%&HEADERTYPE#%&';
                    TempField."Field Name" := HeaderText;
                  END ELSE BEGIN
                    TempField.Code := '#%&LINETYPE#%&';
                    TempField."Field Name" := LineText;
                  END;
                  TempField."Sort Order" := 0;
                  TempField.INSERT;
                  LastType := FORMAT(Field.Type);
                END;
                TempField.TRANSFERFIELDS(Field);
                TempField."Field Name" := '     '  + Field."Field Name";
                TempField.INSERT;
        UNTIL Field.NEXT = 0;
      END;

      TempField.SETCURRENTKEY("Template No.",Type,"Sort Order");
      IF TempField.FINDFIRST THEN
        IF TempField.NEXT = 0 THEN ;

      IF PAGE.RUNMODAL(PAGE::"Template Field List",TempField) = ACTION::LookupOK THEN BEGIN
        IF Field.GET(TempField."Template No.",TempField.Type,TempField.Code) THEN
          IF CONFIRM(Text014,FALSE,Field."Field Name") THEN BEGIN
            Field.DELETE(TRUE);
            EXIT(TRUE);
          END;
      END;
    END;

    PROCEDURE FormulaOnLookup@161024014(VAR Text@161024012 : Text[1024]) : Boolean;
    VAR
      TemplField@161024013 : Record 6085580;
    BEGIN
      TemplField.FILTERGROUP(2);
      TemplField.SETCURRENTKEY("Template No.",Type,"Sort Order");
      TemplField.SETRANGE("Template No.","No.");
      TemplField.SETRANGE(Type,TemplField.Type::Header);
      TemplField.SETRANGE("Data Type",TemplField."Data Type"::Number);
      TemplField.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,TemplField) = ACTION::LookupOK THEN BEGIN
        Text := TemplField.Code;
        EXIT(TRUE);
      END;
    END;

    PROCEDURE SetSourceID@1160040001(KeyValues@1160040000 : Text[250]);
    VAR
      DocCat@6085575 : Record 6085575;
      Document@6085573 : Record 6085590;
      RecIDMgt@6085576 : Codeunit 6085604;
      NewSourceRecordIDTreeID@6085574 : Integer;
    BEGIN
      TESTFIELD(Type,Type::" ");
      TESTFIELD("Category Code");
      DocCat.GET("Category Code");
      NewSourceRecordIDTreeID :=
        RecIDMgt.GetRecIDTreeID2(DocCat."Source Table No.",DocCat."Source Field No.",DocCat."Document Category GUID",KeyValues);

      IF (NewSourceRecordIDTreeID = 0) AND (KeyValues <> '') THEN
        ERROR(SourceIDNotExistErr,GetSourceIDCaption,KeyValues);

      IF "Source Record ID Tree ID" = NewSourceRecordIDTreeID THEN
        EXIT;

      Document.SETRANGE("Template No.","No.");
      IF NOT Document.ISEMPTY THEN
        ERROR(ChangeSourceIDErr,GetSourceIDCaption);

      VALIDATE("Source Record ID Tree ID",NewSourceRecordIDTreeID);
      IF MODIFY THEN;
    END;

    PROCEDURE GetSourceID@1160040000() : Text[250];
    VAR
      DocCat@1160040001 : Record 6085575;
      RecIDMgt@1160040000 : Codeunit 6085604;
    BEGIN
      IF DocCat.GET("Category Code") THEN
        EXIT(RecIDMgt.GetKeyValue("Source Record ID Tree ID",DocCat."Source Field No."))
      ELSE
        EXIT(RecIDMgt.GetKeyValue("Source Record ID Tree ID",1));
    END;

    LOCAL PROCEDURE ModifyAllTemplates@1(FieldValue@1000 : Text[250];FieldNumber@6085573 : Integer);
    VAR
      Field@1002 : Record 2000000041;
      RecIDMgt@1004 : Codeunit 6085604;
      COConfigMgt@1003 : Codeunit 6086502;
      Window@1007 : Dialog;
      ToRecRef@1001 : RecordRef;
      ToFieldRef@1005 : FieldRef;
      Total@1006 : Integer;
      i@1008 : Integer;
    BEGIN
      IF NOT GUIALLOWED THEN
        EXIT;

      IF FieldNumber = 0 THEN
        EXIT;

      IF Type <> Type::Master THEN
        EXIT;

      IF NOT CONFIRM(STRSUBSTNO(UpdateTemplateQst,RecIDMgt.GetFieldCaption(DATABASE::Template,FieldNumber),FIELDCAPTION(
        "Master Template No."),"No.","Category Code"))
      THEN
        EXIT;

      ToRecRef.OPEN(DATABASE::Template);
      RecIDMgt.FilterRecRef(ToRecRef,FIELDNO("Category Code"),"Category Code");
      RecIDMgt.FilterRecRef(ToRecRef,FIELDNO(Type),'0');
      RecIDMgt.FilterRecRef(ToRecRef,FIELDNO("Master Template No."),"No.");

      Window.OPEN(Text010);

      IF ToRecRef.FINDSET(TRUE,FALSE) THEN BEGIN
        Total := ToRecRef.COUNT;
        Field.GET(DATABASE::Template,FieldNumber);

        REPEAT
          ToFieldRef := ToRecRef.FIELD(FieldNumber);

          IF FORMAT(ToFieldRef.VALUE) <> FieldValue THEN BEGIN
            i += 1;
            Window.UPDATE(1,STRSUBSTNO(Text011,i,Total));
            Window.UPDATE(2, (i / Total * 10000) DIV 1);

            COConfigMgt.AddFieldValue(ToFieldRef,Field,FieldValue,TRUE);
            ToRecRef.MODIFY;
          END;
        UNTIL ToRecRef.NEXT = 0;
      END;

      Window.CLOSE;
      MESSAGE(STRSUBSTNO(Text012,i));
    END;

    LOCAL PROCEDURE ModifyAllTemplatesOptions@7(FieldValue@1000 : Integer;FieldNumber@6085573 : Integer);
    BEGIN
      ModifyAllTemplates(FORMAT(FieldValue),FieldNumber);
    END;

    PROCEDURE ShowMatchingGroup@6085584() : Boolean;
    VAR
      VendorNo@6085573 : Code[20];
      PurchaseHeader@6085574 : Record 38;
      PurchRcptHeader@6085575 : Record 120;
      ReturnShipmentHeader@6085576 : Record 6650;
    BEGIN
      PurchaseHeader.SETRANGE("Document Type",PurchaseHeader."Document Type"::Order);
      IF NOT PurchaseHeader.ISEMPTY THEN
        EXIT(TRUE);

      PurchaseHeader.SETRANGE("Document Type",PurchaseHeader."Document Type"::"Return Order");
      IF NOT PurchaseHeader.ISEMPTY THEN
        EXIT(TRUE);

      IF NOT PurchRcptHeader.ISEMPTY THEN
        EXIT(TRUE);

      IF NOT ReturnShipmentHeader.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CheckDuplicIdentTemplates@6085575();
    VAR
      Template@6085573 : Record 6085579;
    BEGIN
      IF Type <> Type::Identification THEN
        EXIT;
      Template.SETCURRENTKEY("Category Code",Type);
      Template.SETRANGE("Category Code","Category Code");
      Template.SETRANGE(Type,Template.Type::Identification);
      Template.SETFILTER("No.",'<>%1',"No.");
      IF NOT Template.ISEMPTY THEN
        ERROR(DuplicIdentTempErr);
    END;

    PROCEDURE DrillDownSearchTexts@1160040003();
    VAR
      TemplateSearchText@1160040000 : Record 6085588;
      TempTemplateSearchText@1160040001 : TEMPORARY Record 6085588;
      EntryNo@1160040002 : Integer;
    BEGIN
      IF "Search Text" <> '' THEN BEGIN
        TempTemplateSearchText."Template No." := "No.";
        TempTemplateSearchText."Entry No." := 0;
        TempTemplateSearchText."Search Text" := "Search Text";
        TempTemplateSearchText.INSERT;
      END;

      TemplateSearchText.SETRANGE("Template No.","No.");
      IF TemplateSearchText.FINDFIRST THEN
        REPEAT
          TempTemplateSearchText.TRANSFERFIELDS(TemplateSearchText,TRUE);
          TempTemplateSearchText.INSERT;
        UNTIL TemplateSearchText.NEXT = 0;

      TempTemplateSearchText.FILTERGROUP(4);
      TempTemplateSearchText.SETRANGE("Template No.","No.");
      TempTemplateSearchText.FILTERGROUP(0);

      PAGE.RUNMODAL(0,TempTemplateSearchText);

      TemplateSearchText.DELETEALL;
      CASE TempTemplateSearchText.COUNT OF
        0:
          IF "Search Text" <> '' THEN BEGIN
            "Search Text" := '';
            MODIFY;
          END;

        1:
          BEGIN
            TempTemplateSearchText.FINDFIRST;
            "Search Text" := TempTemplateSearchText."Search Text";
            MODIFY;
          END;

        ELSE // More than 1
          BEGIN
            IF "Search Text" <> '' THEN BEGIN
              "Search Text" := '';
              MODIFY;
            END;

            TempTemplateSearchText.FINDSET;
            REPEAT
              EntryNo := EntryNo + 10000;

              TemplateSearchText.TRANSFERFIELDS(TempTemplateSearchText);
              TemplateSearchText."Template No." := "No.";
              TemplateSearchText."Entry No." := EntryNo;
              TemplateSearchText.INSERT;
            UNTIL TempTemplateSearchText.NEXT = 0
          END;
      END;
    END;

    BEGIN
    END.
  }
}

