OBJECT Page 515 Item Avail. by Location Lines
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:22 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=Yes;
    CaptionML=ENU=Lines;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table14;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             PeriodStart := 0D;
             PeriodEnd := DMY2DATE(31,12,1999);

             GetLocationsIncludingUnspecifiedLocation(FALSE,FALSE);
           END;

    OnAfterGetRecord=BEGIN
                       CalcAvailQuantities(
                         GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
                         PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 5   ;2   ;Field     ;
                Name=LocationCode;
                CaptionML=ENU=Code;
                ToolTipML=ENU=Specifies a location code for the warehouse or distribution center where your items are handled and stored before being sold.;
                ApplicationArea=#Location;
                SourceExpr=LocationCode }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the name or address of the location.;
                ApplicationArea=#Location;
                SourceExpr=Name }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Gross Requirement;
                ToolTipML=ENU=Specifies the sum of the total demand for the item. The gross requirement consists of independent demand (which include sales orders, service orders, transfer orders, and production forecasts) and dependent demand, which include production order components for planned, firm planned, and released production orders and requisition and planning worksheets lines.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=GrossRequirement;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(0);
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Receipt;
                ToolTipML=ENU=Specifies the sum of items from replenishment orders. This includes firm planned and released production orders, purchase orders, and transfer orders.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=ScheduledRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(2);
                            END;
                             }

    { 26  ;2   ;Field     ;
                CaptionML=ENU=Planned Receipt;
                ToolTipML=ENU=Specifies the quantity on planned production orders plus planning worksheet lines plus requisition worksheet lines.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=PlannedOrderRcpt;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(1);
                            END;
                             }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Hand;
                ToolTipML=ENU=Specifies the inventory level of an item.;
                ApplicationArea=#Location;
                DecimalPlaces=0:5;
                SourceExpr=Item.Inventory;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,FALSE);
                            END;
                             }

    { 28  ;2   ;Field     ;
                CaptionML=ENU=Projected Available Balance;
                ToolTipML=ENU=Specifies the item's availability. This quantity includes all known supply and demand but does not include anticipated demand from production forecasts or blanket sales orders or suggested supplies from planning or requisition worksheets.;
                ApplicationArea=#Location;
                DecimalPlaces=0:5;
                SourceExpr=ProjAvailableBalance;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(4);
                            END;
                             }

    { 10  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Purch. Order;
                ToolTipML=ENU=Specifies how many units of the item are inbound on purchase orders, meaning listed on outstanding purchase order lines.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Purch. Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowPurchLines(Item);
                            END;
                             }

    { 12  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Qty. on Sales Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to sales orders, meaning listed on outstanding sales orders lines.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Sales Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSalesLines(Item);
                            END;
                             }

    { 38  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Service Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Service Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowServLines(Item);
                            END;
                             }

    { 40  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Job Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to jobs, meaning listed on outstanding job planning lines. The field is automatically updated based on the Remaining Qty. field in the Job Planning Lines window.;
                ApplicationArea=#Jobs;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. on Job Order";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowJobPlanningLines(Item);
                            END;
                             }

    { 32  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Shipment (Qty.);
                ToolTipML=ENU=Specifies the quantity of the items that remains to be shipped. The program calculates this quantity as the difference between the Quantity and the Quantity Shipped fields. It automatically updates the field each time you either update the Quantity or Quantity Shipped field.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Trans. Ord. Shipment (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Shipment (Qty.)"));
                            END;
                             }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Asm. Comp. Lines;
                ToolTipML=ENU=Specifies how many units of the item are allocated to assembly component orders.;
                ApplicationArea=#Assembly;
                SourceExpr=Item."Qty. on Asm. Component";
                Visible=false;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.ShowAsmCompLines(Item);
                            END;
                             }

    { 3   ;2   ;Field     ;
                CaptionML=ENU=Qty. on Assembly Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to assembly orders, which is how many are listed on outstanding assembly order headers.;
                ApplicationArea=#Assembly;
                SourceExpr=Item."Qty. on Assembly Order";
                Visible=False;
                OnDrillDown=VAR
                              ItemAvailFormsMgt@1001 : Codeunit 353;
                            BEGIN
                              ItemAvailFormsMgt.ShowAsmOrders(Item);
                            END;
                             }

    { 34  ;2   ;Field     ;
                CaptionML=ENU=Qty. in Transit;
                ToolTipML=ENU=Specifies the quantity of the items that are currently in transit.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Qty. in Transit";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Qty. in Transit"));
                            END;
                             }

    { 30  ;2   ;Field     ;
                CaptionML=ENU=Trans. Ord. Receipt (Qty.);
                ToolTipML=ENU=Specifies the quantity of the items that remain to be received but are not yet shipped. The program calculates this quantity as the difference between the Quantity and the Quantity Shipped fields. It automatically updates the field each time you either update the Quantity or Quantity Shipped field.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Trans. Ord. Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowTransLines(Item,Item.FIELDNO("Trans. Ord. Receipt (Qty.)"));
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Expected Inventory;
                ToolTipML=ENU=Specifies how many units of the assembly component are expected to be available for the current assembly order on the due date.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=ExpectedInventory;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Available Inventory;
                ToolTipML=ENU=Specifies the quantity of the item that is currently in inventory and not reserved for other demand.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=QtyAvailable;
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Receipt (Qty.);
                ToolTipML=ENU=Specifies how many units of the item are scheduled for production orders. The program automatically calculates and updates the contents of the field, using the Remaining Quantity field on production order lines.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Scheduled Receipt (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSchedReceipt(Item);
                            END;
                             }

    { 22  ;2   ;Field     ;
                CaptionML=ENU=Scheduled Issue (Qty.);
                ToolTipML=ENU=Specifies the sum of items from planned production orders.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Scheduled Need (Qty.)";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowSchedNeed(Item);
                            END;
                             }

    { 24  ;2   ;Field     ;
                CaptionML=ENU=Planned Order Releases;
                ToolTipML=ENU=Specifies the sum of items from replenishment order proposals, which include planned production orders and planning or requisition worksheets lines, that are calculated according to the starting date in the planning worksheet and production order or the order date in the requisition worksheet. This sum is not included in the projected available inventory. However, it indicates which quantities should be converted from planned to scheduled receipts.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=PlannedOrderReleases;
                OnDrillDown=BEGIN
                              ShowItemAvailLineList(3);
                            END;
                             }

    { 36  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=ENU=Net Change;
                ToolTipML=ENU=Specifies the net change in the inventory of the item during the period entered in the Date Filter field.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Net Change";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              SetItemFilter;
                              ItemAvailFormsMgt.ShowItemLedgerEntries(Item,TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      ItemAvailFormsMgt@1022 : Codeunit 353;
      ExpectedInventory@1007 : Decimal;
      QtyAvailable@1008 : Decimal;
      AmountType@1010 : 'Net Change,Balance at Date';
      PlannedOrderReleases@1012 : Decimal;
      GrossRequirement@1013 : Decimal;
      PlannedOrderRcpt@1014 : Decimal;
      ScheduledRcpt@1015 : Decimal;
      ProjAvailableBalance@1016 : Decimal;
      PeriodStart@1017 : Date;
      PeriodEnd@1018 : Date;
      LocationCode@1001 : Code[10];

    [External]
    PROCEDURE Set@1(VAR NewItem@1000 : Record 27;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      Item.COPY(NewItem);
      PeriodStart := Item.GETRANGEMIN("Date Filter");
      PeriodEnd := Item.GETRANGEMAX("Date Filter");
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetItemFilter@6();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        Item.SETRANGE("Date Filter",PeriodStart,PeriodEnd)
      ELSE
        Item.SETRANGE("Date Filter",0D,PeriodEnd);
      LocationCode := Code;
      Item.SETRANGE("Location Filter",Code);
    END;

    LOCAL PROCEDURE ShowItemAvailLineList@3(What@1000 : Integer);
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.ShowItemAvailLineList(Item,What);
    END;

    LOCAL PROCEDURE CalcAvailQuantities@2(VAR GrossRequirement@1002 : Decimal;VAR PlannedOrderRcpt@1003 : Decimal;VAR ScheduledRcpt@1004 : Decimal;VAR PlannedOrderReleases@1005 : Decimal;VAR ProjAvailableBalance@1006 : Decimal;VAR ExpectedInventory@1007 : Decimal;VAR QtyAvailable@1008 : Decimal);
    BEGIN
      SetItemFilter;
      ItemAvailFormsMgt.CalcAvailQuantities(
        Item,AmountType = AmountType::"Balance at Date",
        GrossRequirement,PlannedOrderRcpt,ScheduledRcpt,
        PlannedOrderReleases,ProjAvailableBalance,ExpectedInventory,QtyAvailable);
    END;

    BEGIN
    END.
  }
}

