OBJECT Report 6085584 Export Purchase Invoices
{
  OBJECT-PROPERTIES
  {
    Date=02/28/17;
    Time=[ 1:00:00 AM];
    Version List=DCW17.00.00.4.50;
  }
  PROPERTIES
  {
    CaptionML=ENU=Export Purchase Invoices;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  DCSetup.GET;

                  DCSetup.CALCFIELDS("PDF Signature Certificate");
                  DCSetup.TESTFIELD("PDF Signature Certificate");

                  XmlDoc := XmlDoc.XmlDocument();

                  IF XMLOutputPath = '' THEN
                    ERROR(Text0002);

                  InvoicesNode := XmlDoc.CreateNode('element','PURCHASEINVOICES','');
                END;

    OnPostReport=BEGIN
                   XmlProcessingInstruction := XmlDoc.CreateProcessingInstruction('xml','version="1.0" encoding="UTF-8"');
                   XmlDoc.AppendChild(XmlProcessingInstruction);
                   XmlDoc.AppendChild(InvoicesNode);
                   SignAndStoreDocument(XmlDoc,XMLOutputPath);
                   CLEAR(XmlDoc);
                 END;

  }
  DATASET
  {
    { 3733;    ;DataItem;                    ;
               DataItemTable=Table122;
               ReqFilterFields=Posting Date }

    { 6357;1   ;DataItem;                    ;
               DataItemTable=Table6085590;
               DataItemTableView=SORTING(Created Doc. Type,Created Doc. Subtype,Created Doc. ID,Created Doc. Ref. No.)
                                 WHERE(Created Doc. Type=CONST(38),
                                       Created Doc. Subtype=CONST(2));
               OnAfterGetRecord=BEGIN
                                  ExportDocument("DC Document","Purch. Inv. Header",InvoicesNode);
                                END;

               DataItemLink=Created Doc. ID=FIELD(Pre-Assigned No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 6085573; ;Container ;
                  CaptionML=ENU=Export;
                  ContainerType=ContentArea }

      { 6085574;1;Field     ;
                  CaptionML=ENU=Export File Path;
                  SourceExpr=XMLOutputPath;
                  OnAssistEdit=VAR
                                 FileMgt@6085573 : Codeunit 419;
                               BEGIN
                                 XMLOutputPath := FileMgt.SaveFileDialog(Text0001,'Invoices.xml','XML File (*.xml)|.xml');
                               END;
                                }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DCSetup@1000 : Record 6085573;
      XmlLib@1160040002 : Codeunit 6085573;
      InvoicesNode@1160040003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      Text0001@1160040001 : TextConst 'ENU=Select file location';
      XmlDoc@1160040005 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";
      XmlProcessingInstruction@1160040004 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlProcessingInstruction";
      XMLOutputPath@1160040000 : Text[250];
      Text0002@1160040006 : TextConst 'ENU=XML Output File Path must be filled out.';

    PROCEDURE ExportDocument@1160040011(Document@1160040004 : Record 6085590;PurchInvHeader@1160040001 : Record 122;VAR InvoicesNode@1160040000 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode");
    VAR
      InvoiceNode@1160040002 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      NewNode@1160040003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlNode";
      Amount@1160040006 : Decimal;
      VATAmount@1160040005 : Decimal;
      VATPercent@1160040007 : Decimal;
    BEGIN
      CalculateVATAmount(PurchInvHeader,Amount,VATAmount,VATPercent);
      XmlLib.CreateXmlNode(InvoicesNode,'INVOICE','',InvoiceNode);
      XmlLib.CreateXmlNode(InvoiceNode,'ID',PurchInvHeader."No.",NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'VENDORNAME',PurchInvHeader."Pay-to Name",NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'VATNUMBER',PurchInvHeader."VAT Registration No.",NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'POSTINGDATE',FORMAT(PurchInvHeader."Posting Date"),NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'INVOICENUMBER',PurchInvHeader."No.",NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'AMOUNT',FORMAT(Amount,0,'<Integer><Decimals,3>'),NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'VATPERCENT',FORMAT(VATPercent,0,'<Integer><Decimals,3>'),NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'VATAMOUNT',FORMAT(VATAmount,0,'<Integer><Decimals,3>'),NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'DOCUMENTPATH',Document.GetPdfFileName,NewNode);
      XmlLib.CreateXmlNode(InvoiceNode,'HASH',Document."PDF File Hash",NewNode);
    END;

    PROCEDURE CalculateVATAmount@1160040001(PurchInvHeader@1160040000 : Record 122;VAR Amount@1160040003 : Decimal;VAR VATAmount@1160040004 : Decimal;VAR VATPercent@1160040002 : Decimal);
    VAR
      PurchInvLine@1160040001 : Record 123;
      AmountInclVAT@1160040005 : Decimal;
    BEGIN
      PurchInvLine.SETRANGE("Document No.",PurchInvHeader."No.");

      IF PurchInvLine.FIND('-') THEN
        REPEAT
          Amount := Amount + PurchInvLine.Amount;
          AmountInclVAT := AmountInclVAT + PurchInvLine."Amount Including VAT";
        UNTIL PurchInvLine.NEXT = 0;

      VATAmount := AmountInclVAT - Amount;
      VATPercent := (VATAmount/Amount) * 100;
    END;

    PROCEDURE SignAndStoreDocument@1160040000(XmlDoc@1160040003 : DotNet "'System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Xml.XmlDocument";OutputPath@1160040002 : Text[250]);
    VAR
      FileMgt@1000 : Codeunit 419;
      ServerTempFilePath@1001 : Text;
      CertificateExportPath@1160040001 : Text[250];
    BEGIN
      CertificateExportPath := STRSUBSTNO('%1\%2',TEMPORARYPATH,'Certificate.pfx');
      ServerTempFilePath := FileMgt.ServerTempFileName('.xml');

      DCSetup.CALCFIELDS("PDF Signature Certificate");
      DCSetup."PDF Signature Certificate".EXPORT(CertificateExportPath);

      XmlDoc.Save(ServerTempFilePath);
      XmlLib.SignDocument(ServerTempFilePath,ServerTempFilePath,CertificateExportPath,DCSetup."PDF Signature Cert. Password");

      FileMgt.DownloadToFile(ServerTempFilePath,OutputPath);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

