OBJECT Page 1347 Sales Pr. & Line Disc. Part
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:39 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Sales Prices;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table1304;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    OnNewRecord=BEGIN
                  IF ("Loaded Customer No." = GetLoadedCustNo) AND ("Loaded Item No." = GetLoadedItemNo) THEN
                    EXIT;

                  "Loaded Item No." := GetLoadedItemNo;
                  "Loaded Customer No." := GetLoadedCustNo;
                  "Loaded Price Group" := GetLoadedPriceGroup;
                  "Loaded Disc. Group" := GetLoadedDiscGroup;
                END;

    ActionList=ACTIONS
    {
      { 20      ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 14      ;1   ;ActionGroup;
                      CaptionML=ENU=Filtering }
      { 17      ;1   ;Action    ;
                      CaptionML=ENU=Show Current Only;
                      ToolTipML=ENU=Show only valid price and discount agreements that have ending dates later than today's date.;
                      ApplicationArea=#Basic,#Suite;
                      Image=ActivateDiscounts;
                      OnAction=BEGIN
                                 FilterToActualRecords
                               END;
                                }
      { 10      ;1   ;Action    ;
                      CaptionML=ENU=Show All;
                      ToolTipML=ENU=Show all price and discount agreements, including those with ending dates earlier than today's date.;
                      ApplicationArea=#Basic,#Suite;
                      Image=DeactivateDiscounts;
                      OnAction=BEGIN
                                 RESET;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      CaptionML=ENU=Refresh Data;
                      ToolTipML=ENU=Update sales prices or sales line discounts with values that other users may have added for the customer since you opened the window.;
                      ApplicationArea=#Basic,#Suite;
                      Image=RefreshLines;
                      OnAction=VAR
                                 Customer@1001 : Record 18;
                                 Item@1000 : Record 27;
                               BEGIN
                                 IF GetLoadedItemNo <> '' THEN
                                   IF Item.GET(GetLoadedItemNo) THEN BEGIN
                                     LoadDataForItem(Item);
                                     EXIT;
                                   END;
                                 IF Customer.GET(GetLoadedCustNo) THEN
                                   LoadDataForCustomer(Customer)
                               END;
                                }
      { 25      ;1   ;Action    ;
                      CaptionML=ENU=Set Special Prices;
                      ToolTipML=ENU=Set up different prices for items that you sell to the customer. An item price is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 7002;
                      RunPageView=SORTING(Item No.);
                      RunPageLink=Item No.=FIELD(Loaded Item No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Price;
                      PromotedCategory=Process }
      { 19      ;1   ;Action    ;
                      CaptionML=ENU=Set Special Discounts;
                      ToolTipML=ENU=Set up different discounts for items that you sell to the customer. An item discount is automatically granted on invoice lines when the specified criteria are met, such as customer, quantity, or ending date.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 7004;
                      RunPageView=SORTING(Type,Code);
                      RunPageLink=Type=CONST(Item),
                                  Code=FIELD(Loaded Item No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=LineDiscount;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the line is for a sales price or a sales line discount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Type" }

    { 3   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the sales type of the price or discount. The sales type defines whether the sales price or discount is for an individual customer, a customer discount group, or for all customers.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Type" }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the sales code of the price or discount. The sales code depends on the value in the Sales Type field. The code can represent an individual customer, a customer discount group, or for all customers.;
                ApplicationArea=#All;
                SourceExpr="Sales Code";
                Visible=SalesCodeIsVisible;
                Enabled=SalesCodeIsVisible }

    { 23  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the discount is valid for an item or for an item discount group.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type }

    { 22  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a code for the sales line price or discount.;
                ApplicationArea=#All;
                SourceExpr=Code;
                Visible=CodeIsVisible;
                Enabled=CodeIsVisible }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 21  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that must be entered on the sales document to warrant the sales price or discount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Minimum Quantity" }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the discount percentage that is granted for the item on the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Discount %";
                Enabled="Line Type" = 1 }

    { 13  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the price of one unit of the item or resource. You can enter a price manually or have it entered according to the Price/Profit Calculation field on the related card.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price";
                Enabled="Line Type" = 2 }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date from which the sales line discount is valid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Starting Date" }

    { 11  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date to which the sales line discount is valid.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date" }

    { 9   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the currency that must be used on the sales document line to warrant the sales price or discount.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the price that is granted includes tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if an invoice discount will be calculated when the sales price is offered.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the tax business posting group for customers who you want to apply the sales price to. This price includes tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant that must be used on the sales document line to warrant the sales price or discount.;
                ApplicationArea=#Suite;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies if line discounts are allowed.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Line Disc.";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      loadedItemNo@1001 : Code[20];
      loadedCustNo@1003 : Code[20];
      loadedPriceGroup@1002 : Code[20];
      loadedDiscGroup@1000 : Code[20];
      CodeIsVisible@1004 : Boolean;
      SalesCodeIsVisible@1005 : Boolean;

    [External]
    PROCEDURE InitPage@4(ForItem@1001 : Boolean);
    BEGIN
      IF ForItem THEN BEGIN
        CodeIsVisible := FALSE;
        SalesCodeIsVisible := TRUE;
      END ELSE BEGIN
        CodeIsVisible := TRUE;
        SalesCodeIsVisible := FALSE;
      END;
    END;

    [External]
    PROCEDURE LoadItem@1(Item@1000 : Record 27);
    BEGIN
      CLEAR(Rec);
      loadedItemNo := Item."No.";
      loadedDiscGroup := Item."Item Disc. Group";
      loadedPriceGroup := '';

      LoadDataForItem(Item);
    END;

    [External]
    PROCEDURE LoadCustomer@3(Customer@1000 : Record 18);
    BEGIN
      CLEAR(Rec);
      loadedCustNo := Customer."No.";
      loadedPriceGroup := Customer."Customer Price Group";
      loadedDiscGroup := Customer."Customer Disc. Group";

      LoadDataForCustomer(Customer);
    END;

    [External]
    PROCEDURE GetLoadedItemNo@2() : Code[20];
    BEGIN
      EXIT(loadedItemNo)
    END;

    [External]
    PROCEDURE GetLoadedCustNo@9() : Code[20];
    BEGIN
      EXIT(loadedCustNo)
    END;

    LOCAL PROCEDURE GetLoadedDiscGroup@8() : Code[20];
    BEGIN
      EXIT(loadedDiscGroup)
    END;

    LOCAL PROCEDURE GetLoadedPriceGroup@5() : Code[20];
    BEGIN
      EXIT(loadedPriceGroup)
    END;

    [External]
    PROCEDURE RunUpdatePriceIncludesVatAndPrices@6(IncludesVat@1000 : Boolean);
    VAR
      Item@1001 : Record 27;
    BEGIN
      Item.GET(loadedItemNo);
      UpdatePriceIncludesVatAndPrices(Item,IncludesVat);
    END;

    BEGIN
    END.
  }
}

