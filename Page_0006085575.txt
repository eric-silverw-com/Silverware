OBJECT Page 6085575 Document Capture Setup
{
  OBJECT-PROPERTIES
  {
    Date=08/03/18;
    Time=[ 1:00:00 AM];
    Version List=DCW16.00.00.5.00.02;
  }
  PROPERTIES
  {
    CaptionML=ENU=Document Capture Setup;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table6085573;
    PageType=Card;
    UsageCategory=Administration;
    PromotedActionCategoriesML=ENU=0,E-Mail,Company Activation,Approval Setup,About...;
    OnOpenPage=BEGIN
                 RESET;
                 IF NOT GET THEN BEGIN
                   INIT;
                   INSERT(TRUE);
                 END;

                 EnableFields;
               END;

    OnAfterGetRecord=BEGIN
                       EnableFields;
                     END;

    ActionList=ACTIONS
    {
      { 161024072;   ;ActionContainer;
                      Name=Actions;
                      ActionContainerType=ActionItems }
      { 161024076;1  ;ActionGroup;
                      Name=E-Mail;
                      CaptionML=ENU=&E-Mail }
      { 161024078;2  ;Action    ;
                      Name=SMTP Setup;
                      CaptionML=ENU=SMTP Setup;
                      RunObject=Page 409;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Process }
      { 2       ;2   ;Action    ;
                      Name=Send Test E-Mail;
                      CaptionML=ENU=Send Test E-Mail;
                      RunObject=Codeunit 6085598;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SendMail;
                      PromotedCategory=Process }
      { 6085599 ;1   ;ActionGroup;
                      Name=ApprovalGroup;
                      CaptionML=ENU=Approval }
      { 6085601 ;2   ;Action    ;
                      Name=PurchaseApproval;
                      CaptionML=ENU=Purchase Approval;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ApprovalSetup;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"DC Setup - Purchase Approval");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 6085600 ;2   ;Action    ;
                      Name=WebApproval;
                      CaptionML=ENU=Web Approval;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MapSetup;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"DC Setup - Web Approval");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 6085577 ;1   ;ActionGroup;
                      Name=Security Certificate;
                      CaptionML=ENU=&Security Certificate;
                      Image=Template }
      { 6085576 ;2   ;Action    ;
                      Name=ImportSecurityCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import;
                      Image=Import;
                      OnAction=VAR
                                 TempFile@1000 : TEMPORARY Record 6085608;
                                 CertExists@6085573 : Boolean;
                               BEGIN
                                 CALCFIELDS("Security Certificate");
                                 CertExists := "Security Certificate".HASVALUE;

                                 IF TempFile.BrowseFile(Text009,'certificate.cer','Certificate File (*.cer)|*.cer') = '' THEN
                                   EXIT;

                                 IF CertExists THEN
                                   IF NOT CONFIRM(Text003,FALSE,FIELDCAPTION("Security Certificate")) THEN
                                     EXIT;

                                 "Security Certificate" := TempFile.Data;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6085575 ;2   ;Action    ;
                      Name=ExportSecurityCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=E&xport;
                      Image=Export;
                      OnAction=VAR
                                 TempFile@1001 : TEMPORARY Record 6085608;
                               BEGIN
                                 IF NOT WRITEPERMISSION THEN
                                   ERROR(Text005,FIELDCAPTION("Security Certificate"));

                                 CALCFIELDS("Security Certificate");
                                 IF "Security Certificate".HASVALUE THEN BEGIN
                                   TempFile.Data := "Security Certificate";
                                   TempFile.Name := 'certificate.cer';
                                   TempFile.SaveFileWithDialog(Text010,'Certificate File (*.cer)|*.cer');
                                 END;
                               END;
                                }
      { 6085574 ;2   ;Action    ;
                      Name=DeleteSecurityCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Delete;
                      Image=Delete;
                      OnAction=BEGIN
                                 CALCFIELDS("Security Certificate");
                                 IF "Security Certificate".HASVALUE THEN
                                   IF CONFIRM(Text004,FALSE,FIELDCAPTION("Security Certificate")) THEN BEGIN
                                     CLEAR("Security Certificate");
                                     CurrPage.SAVERECORD;
                                   END;
                               END;
                                }
      { 6085587 ;1   ;ActionGroup;
                      Name=Scan Signature Certificate;
                      CaptionML=ENU=Scan Signature Certificate }
      { 6085590 ;2   ;Action    ;
                      Name=ImportScanSignatureCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Import;
                      Image=Import;
                      OnAction=VAR
                                 TempFile@1000 : TEMPORARY Record 6085608;
                                 CertExists@6085573 : Boolean;
                               BEGIN
                                 CALCFIELDS("PDF Signature Certificate");
                                 CertExists := "PDF Signature Certificate".HASVALUE;

                                 IF TempFile.BrowseFile(Text009,'certificate.pfx','PFX Certificate File (*.pfx)|*.pfx') = '' THEN
                                   EXIT;

                                 IF CertExists THEN
                                   IF NOT CONFIRM(Text003,FALSE,FIELDCAPTION("PDF Signature Certificate")) THEN
                                     EXIT;

                                 "PDF Signature Certificate" := TempFile.Data;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 6085589 ;2   ;Action    ;
                      Name=ExportScanSignatureCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=E&xport;
                      Image=Export;
                      OnAction=VAR
                                 TempFile@6085573 : TEMPORARY Record 6085608;
                               BEGIN
                                 IF NOT WRITEPERMISSION THEN
                                   ERROR(Text005,FIELDCAPTION("PDF Signature Certificate"));

                                 CALCFIELDS("PDF Signature Certificate");
                                 IF "PDF Signature Certificate".HASVALUE THEN BEGIN
                                   TempFile.Data := "Security Certificate";
                                   TempFile.Name := 'certificate.pfx';
                                   TempFile.SaveFileWithDialog(Text010,'PFX Certificate File (*.pfx)|*.pfx');
                                 END;
                               END;
                                }
      { 6085588 ;2   ;Action    ;
                      Name=DeleteScanSignatureCertificate;
                      Ellipsis=Yes;
                      CaptionML=ENU=Delete;
                      Image=Delete;
                      OnAction=BEGIN
                                 CALCFIELDS("PDF Signature Certificate");
                                 IF "PDF Signature Certificate".HASVALUE THEN
                                   IF CONFIRM(Text004,FALSE,FIELDCAPTION("PDF Signature Certificate")) THEN BEGIN
                                     CLEAR("PDF Signature Certificate");
                                     CurrPage.SAVERECORD;
                                   END;
                               END;
                                }
      { 161024074;1  ;ActionGroup;
                      Name=Functions;
                      CaptionML=ENU=F&unctions }
      { 1160040003;2 ;Action    ;
                      Name=ActivateCompany;
                      CaptionML=ENU=Activate Company;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AddToHome;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 ContiniaVersionMgt@6085573 : Codeunit 6192775;
                                 AboutDC@6085574 : Codeunit 6085589;
                                 ActivationWizard@6085575 : Page 6192777;
                               BEGIN
                                 IF ContiniaVersionMgt.NAVVersion >= 70000 THEN BEGIN
                                   ActivationWizard.SetupParameters(AboutDC.FullProductName,AboutDC.ShortProductName,AboutDC.ObjectVersion,AboutDC.ProductCode);
                                   ActivationWizard.RUNMODAL;
                                 END ELSE
                                   CODC.ActivateCompany;
                               END;
                                }
      { 1160040014;2 ;Action    ;
                      Name=DeactivateCompany;
                      CaptionML=ENU=Deactivate Company;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Cancel;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 CODC.DeactivateCompanyInNAV(TRUE);
                               END;
                                }
      { 161024082;2  ;Action    ;
                      Name=Upgrade Data to Latest Version;
                      Ellipsis=Yes;
                      CaptionML=ENU=Upgrade Data to Latest Version;
                      RunObject=Codeunit 6086100;
                      Image=Setup }
      { 3       ;2   ;Action    ;
                      Name=Import Continia Web Client Add-Ins;
                      CaptionML=ENU=Import Continia Web Client Add-Ins;
                      Visible=WebClientAddInSupport;
                      Image=ImportCodes;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 ClientAddInMgt@1000 : Codeunit 6085788;
                               BEGIN
                                 IF ClientAddInMgt.ImportWebClientAddIns(TRUE) THEN
                                   MESSAGE(Text006)
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Import Client Add-Ins;
                      CaptionML=ENU=Import Client Add-Ins;
                      Visible=ImportClientAddinsVisible;
                      Image=ImportCodes;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 IF CODEUNIT.RUN(6085788) THEN
                                   MESSAGE(Text008)
                               END;
                                }
      { 161024073;2  ;Action    ;
                      Name=About Document Capture;
                      CaptionML=ENU=About Document Capture;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NewSparkle;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 PAGE.RUN(PAGE::"About Document Capture");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                Name=Content;
                ContainerType=ContentArea }

    { 1000000001;1;Group  ;
                Name=General;
                CaptionML=ENU=General;
                GroupType=Group }

    { 4   ;2   ;Field     ;
                Name=Document Storage Type;
                SourceExpr="Document Storage Type";
                OnValidate=BEGIN
                             CurrPage.UPDATE(TRUE);
                             EnableFields;
                           END;
                            }

    { 6085595;2;Field     ;
                Name=Use Cloud OCR;
                SourceExpr="Use Cloud OCR";
                OnValidate=BEGIN
                             IF "Use Cloud OCR" THEN BEGIN
                               CurrPage.SAVERECORD;
                               CreateAndAssignConnEndpoints;
                             END;

                             CurrPage.UPDATE(TRUE);
                             EnableFields;
                           END;
                            }

    { 1160040004;2;Field  ;
                Name=Cloud OCR Cache Timeout;
                SourceExpr="Cloud OCR Cache Timeout";
                Visible=FALSE }

    { 6085591;2;Field     ;
                Name=EnableLocalScanner;
                CaptionML=ENU=Enable Local Scanner;
                SourceExpr=EnableLocalScanner;
                OnValidate=BEGIN
                             IF EnableLocalScanner THEN
                               VALIDATE("Scanner Driver Type","Scanner Driver Type"::Twain)
                             ELSE
                               VALIDATE("Scanner Driver Type","Scanner Driver Type"::None)
                           END;
                            }

    { 6085597;2;Field     ;
                Name=Activation Status;
                SourceExpr=GetActivationStatus;
                OnDrillDown=BEGIN
                              GetActivationStatusMsg;
                            END;
                             }

    { 6085581;2;Group     ;
                Name=OnPremiseOCRStorage;
                CaptionML=ENU=On-Premise OCR Storage;
                Visible=LocalOCREnabled;
                GroupType=Group }

    { 6085594;3;Field     ;
                Name=PDF File Path for OCR;
                SourceExpr="PDF File Path for OCR" }

    { 6085593;3;Field     ;
                Name=File Path for OCR-proc. files;
                SourceExpr="File Path for OCR-proc. files" }

    { 6085596;2;Group     ;
                Name=Archive File Storage;
                CaptionML=ENU=Archive File Storage;
                Visible=DocumentStorageEditable;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=Archive File Path;
                SourceExpr="Archive File Path" }

    { 161024015;3;Field   ;
                Name=Company Code in Archive;
                CaptionML=ENU=- Include Company Code;
                ToolTipML=ENU=Include Company Code in Archive paths;
                SourceExpr="Company Code in Archive" }

    { 1   ;3   ;Field     ;
                Name=Category Code in Archive;
                CaptionML=ENU=- Include Category Code;
                ToolTipML=ENU=Include Category Code in Archive paths;
                SourceExpr="Category Code in Archive" }

    { 6   ;3   ;Field     ;
                Name=Miscellaneous File Path;
                SourceExpr="Miscellaneous File Path" }

    { 6085578;3;Field     ;
                Name=Unidentified Company File Path;
                SourceExpr="Unidentified Company File Path" }

    { 6085598;3;Field     ;
                Name=Disk File Directory Structure;
                SourceExpr="Disk File Directory Structure" }

    { 6085579;2;Group     ;
                Name=PurchaseApprovalGroup;
                CaptionML=ENU=Purchase Approval;
                GroupType=Group }

    { 6085573;3;Field     ;
                Name=PAStatus;
                CaptionML=ENU=Status;
                SourceExpr=GetApprovalStatusText;
                Importance=Promoted;
                OnDrillDown=BEGIN
                              PAGE.RUNMODAL(PAGE::"DC Setup - Purchase Approval");
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 6085586;3;Field     ;
                Name=WebApprovalStatus;
                CaptionML=ENU=Web Approval;
                SourceExpr=GetWebApprovalStatus;
                OnDrillDown=BEGIN
                              PAGE.RUNMODAL(PAGE::"DC Setup - Web Approval");
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 6085608;2;Group     ;
                Name=LCY;
                CaptionML=ENU="";
                Visible=LCYVisible;
                GroupType=Group }

    { 1000000008;3;Field  ;
                Name=Fill-out LCY;
                SourceExpr="Fill-out LCY" }

    { 6085585;2;Group     ;
                Name=Scanning;
                CaptionML=ENU=Local Scanner Settings;
                Visible=EnableLocalScanner;
                GroupType=Group }

    { 6085583;3;Field     ;
                Name=Scanner Driver Type;
                CaptionML=ENU=Driver Type;
                SourceExpr="Scanner Driver Type" }

    { 6085592;3;Group     ;
                Name=ScannerSigningSettings;
                Visible=ShowScannerSigning;
                GroupType=Group }

    { 6085584;4;Field     ;
                Name=Sign Scanned Documents;
                SourceExpr="Sign Scanned Documents" }

    { 6085582;4;Field     ;
                Name=Control6085585;
                SourceExpr="PDF Signature Certificate".HASVALUE;
                CaptionClass=FIELDCAPTION("PDF Signature Certificate");
                Editable=FALSE }

    { 6085580;4;Field     ;
                Name=PDF Signature Cert. Password;
                ExtendedDatatype=Masked;
                SourceExpr="PDF Signature Cert. Password" }

    { 1160040012;2;Field  ;
                Name=Use UIC Documents;
                SourceExpr="Use UIC Documents" }

    { 1000000005;1;Group  ;
                Name=Numbering;
                CaptionML=ENU=Numbering;
                GroupType=Group }

    { 1000000003;2;Field  ;
                Name=Document Nos.;
                SourceExpr="Document Nos." }

    { 1000000002;2;Field  ;
                Name=Template Nos.;
                SourceExpr="Template Nos." }

    { 161024048;2;Field   ;
                Name=Purch. Allocation Nos.;
                SourceExpr="Purch. Allocation Nos." }

    { 1160040000;2;Field  ;
                Name=Barcode Nos.;
                SourceExpr="Barcode Nos.";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      CODC@6085576 : Codeunit 6085617;
      Text003@6085575 : TextConst 'ENU=Do you want to replace the existing %1?';
      Text004@6085574 : TextConst 'ENU=Do you want to delete the %1?';
      Text005@6085573 : TextConst 'ENU=You are not allowed to export the %1.';
      Text006@6085579 : TextConst 'ENU=Continia Web Client Add-Ins was successfully imported.';
      ContiniaLocalizationMgt@6085584 : Codeunit 6192776;
      ContiniaOnlineLicenseMgt@6085596 : Codeunit 6192773;
      LocalOCREnabled@6085577 : Boolean INDATASET;
      WebClientAddInSupport@6085587 : Boolean INDATASET;
      ImportClientAddinsVisible@6085580 : Boolean INDATASET;
      DocumentStorageEditable@6085588 : Boolean INDATASET;
      Text008@6085578 : TextConst 'ENU=Client Add-Ins was successfully imported.';
      LCYVisible@6085581 : Boolean INDATASET;
      Text009@6085585 : TextConst 'ENU=Import';
      Text010@6085586 : TextConst 'ENU=Export';
      OCREngine@6085583 : 'On-Premise,Cloud';
      EnabledForInvTxt@6085590 : TextConst 'ENU=Enabled for Invoices';
      EnabledForCrMemoTxt@6085591 : TextConst 'ENU=Enabled for Credit Memos';
      EnabledForInvCrMemoTxt@6085592 : TextConst 'ENU=Enabled for Invoices and Credit Memos';
      NotEanbledTxt@6085593 : TextConst 'ENU=Not configured';
      EnabledTxt@6085594 : TextConst 'ENU=Enabled';
      EnableLocalScanner@6085595 : Boolean INDATASET;
      ShowScannerSigning@6085589 : Boolean INDATASET;
      NeverActivatedTxt@6085597 : TextConst 'ENU=Never activated';
      NeedReactivationTxt@6085598 : TextConst 'ENU=Need reactivation';
      ActivatedTxt@6085599 : TextConst 'ENU=Activated';
      PendingOfflineActivationTxt@6085600 : TextConst 'ENU=Pending offline activation';

    PROCEDURE EnableFields@1160040000();
    VAR
      ContiniaVersionMgt@6085573 : Codeunit 6192775;
      GLSetup@6085574 : Record 98;
      Currency@6085575 : Record 4;
    BEGIN
      DocumentStorageEditable := "Document Storage Type" = "Document Storage Type"::"File System";
      LocalOCREnabled := NOT "Use Cloud OCR";
      WebClientAddInSupport := ContiniaVersionMgt.NAVVersion >= 90000;
      ImportClientAddinsVisible := ContiniaVersionMgt.NAVVersion >= 100000;
      EnableLocalScanner := "Scanner Driver Type" <> "Scanner Driver Type"::None;
      ShowScannerSigning := ContiniaLocalizationMgt.NAVLocalization = 'ES';
      IF "Fill-out LCY" THEN
        LCYVisible := TRUE
      ELSE BEGIN
        GLSetup.GET;
        IF GLSetup."LCY Code" <> '' THEN
          LCYVisible := Currency.GET(GLSetup."LCY Code");
      END;
    END;

    PROCEDURE GetApprovalStatusText@6085589() : Text[1024];
    VAR
      PurchHeader@6085573 : Record 38;
      DCApprovalsBridge@6085574 : Codeunit 6085790;
    BEGIN
      CASE TRUE OF
        DCApprovalsBridge.IsPurchApprovalEnabledDocType(PurchHeader."Document Type"::Invoice) AND
          DCApprovalsBridge.IsPurchApprovalEnabledDocType(PurchHeader."Document Type"::"Credit Memo"):
            EXIT(EnabledForInvCrMemoTxt);
        DCApprovalsBridge.IsPurchApprovalEnabledDocType(PurchHeader."Document Type"::Invoice):
          EXIT(EnabledForInvTxt);
        DCApprovalsBridge.IsPurchApprovalEnabledDocType(PurchHeader."Document Type"::"Credit Memo"):
          EXIT(EnabledForCrMemoTxt);
        ELSE
          EXIT(NotEanbledTxt);
      END;
    END;

    LOCAL PROCEDURE GetWebApprovalStatus@6085573() : Text[1024];
    VAR
      ContiniaCompanySetup@6085573 : Record 6192773;
      ContiniaWebPortal@6085574 : Record 6192774;
    BEGIN
      IF ContiniaCompanySetup.GET AND ContiniaWebPortal.GET(ContiniaCompanySetup."Web Portal Code") THEN
        EXIT(EnabledTxt)
      ELSE
        EXIT(NotEanbledTxt);
    END;

    LOCAL PROCEDURE GetActivationStatus@6085576() : Text[30];
    VAR
      AboutDC@6085574 : Codeunit 6085589;
      ActivationState@6085573 : 'Never activated,Need reactivation,Activated,Pending offline activation';
    BEGIN
      ActivationState := ContiniaOnlineLicenseMgt.GetProductActivationState(AboutDC.ProductCode,COMPANYNAME);
      CASE ActivationState OF
        ActivationState::Activated: EXIT(ActivatedTxt);
        ActivationState::"Need reactivation": EXIT(NeedReactivationTxt);
        ActivationState::"Never activated": EXIT(NeverActivatedTxt);
        ActivationState::"Pending offline activation": EXIT(PendingOfflineActivationTxt);
      END;
    END;

    LOCAL PROCEDURE GetActivationStatusMsg@6085574();
    VAR
      ContiniaOnlineLicenseMgt@6085576 : Codeunit 6192773;
      AboutDC@6085574 : Codeunit 6085589;
      ContiniaProductActivation@6085575 : Record 6192772;
      ActivationState@6085573 : 'Never Activated,Need Reactivation,Activated,Offline Started';
      TempTxt@6085577 : Text[1024];
    BEGIN
      ActivationState := ContiniaOnlineLicenseMgt.GetProductActivationState(AboutDC.ProductCode,COMPANYNAME);
      ContiniaOnlineLicenseMgt.GetActivationMsg(ActivationState,AboutDC.ProductCode,AboutDC.FullProductName,
        AboutDC.ShortProductName,TRUE,AboutDC.ObjectVersion);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

