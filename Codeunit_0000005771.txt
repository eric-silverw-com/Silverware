OBJECT Codeunit 5771 Whse.-Sales Release
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      WhseRqst@1000 : Record 5765;
      SalesLine@1001 : Record 37;
      Location@1002 : Record 14;
      OldLocationCode@1003 : Code[10];
      First@1004 : Boolean;

    [External]
    PROCEDURE Release@1(SalesHeader@1000 : Record 36);
    VAR
      WhseType@1001 : 'Inbound,Outbound';
      OldWhseType@1002 : 'Inbound,Outbound';
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            WhseRqst."Source Document" := WhseRqst."Source Document"::"Sales Order";
          "Document Type"::"Return Order":
            WhseRqst."Source Document" := WhseRqst."Source Document"::"Sales Return Order";
          ELSE
            EXIT;
        END;

        SalesLine.SETCURRENTKEY("Document Type","Document No.","Location Code");
        SalesLine.SETRANGE("Document Type","Document Type");
        SalesLine.SETRANGE("Document No.","No.");
        SalesLine.SETRANGE(Type,SalesLine.Type::Item);
        SalesLine.SETRANGE("Drop Shipment",FALSE);
        SalesLine.SETRANGE("Job No.",'');
        IF SalesLine.FINDSET THEN BEGIN
          First := TRUE;
          REPEAT
            IF (("Document Type" = "Document Type"::Order) AND (SalesLine.Quantity >= 0)) OR
               (("Document Type" = "Document Type"::"Return Order") AND (SalesLine.Quantity < 0))
            THEN
              WhseType := WhseType::Outbound
            ELSE
              WhseType := WhseType::Inbound;

            IF First OR (SalesLine."Location Code" <> OldLocationCode) OR (WhseType <> OldWhseType) THEN
              CreateWhseRqst(SalesHeader,SalesLine,WhseType);

            First := FALSE;
            OldLocationCode := SalesLine."Location Code";
            OldWhseType := WhseType;
          UNTIL SalesLine.NEXT = 0;
        END;

        WhseRqst.RESET;
        WhseRqst.SETCURRENTKEY("Source Type","Source Subtype","Source No.");
        WhseRqst.SETRANGE(Type,WhseRqst.Type);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",Status::Open);
        IF NOT WhseRqst.ISEMPTY THEN
          WhseRqst.DELETEALL(TRUE);
      END;

      OnAfterRelease(SalesHeader);
    END;

    [External]
    PROCEDURE Reopen@2(SalesHeader@1000 : Record 36);
    VAR
      WhseRqst@1001 : Record 5765;
    BEGIN
      WITH SalesHeader DO BEGIN
        CASE "Document Type" OF
          "Document Type"::Order:
            WhseRqst.Type := WhseRqst.Type::Outbound;
          "Document Type"::"Return Order":
            WhseRqst.Type := WhseRqst.Type::Inbound;
        END;

        WhseRqst.RESET;
        WhseRqst.SETCURRENTKEY("Source Type","Source Subtype","Source No.");
        WhseRqst.SETRANGE(Type,WhseRqst.Type);
        WhseRqst.SETRANGE("Source Type",DATABASE::"Sales Line");
        WhseRqst.SETRANGE("Source Subtype","Document Type");
        WhseRqst.SETRANGE("Source No.","No.");
        WhseRqst.SETRANGE("Document Status",Status::Released);
        WhseRqst.LOCKTABLE;
        IF NOT WhseRqst.ISEMPTY THEN
          WhseRqst.MODIFYALL("Document Status",WhseRqst."Document Status"::Open);
      END;

      OnAfterReopen(SalesHeader);
    END;

    LOCAL PROCEDURE CreateWhseRqst@3(SalesHeader@1000 : Record 36;VAR SalesLine@1003 : Record 37;WhseType@1002 : 'Inbound,Outbound');
    VAR
      SalesLine2@1001 : Record 37;
    BEGIN
      IF ((WhseType = WhseType::Outbound) AND
          (Location.RequireShipment(SalesLine."Location Code") OR
           Location.RequirePicking(SalesLine."Location Code"))) OR
         ((WhseType = WhseType::Inbound) AND
          (Location.RequireReceive(SalesLine."Location Code") OR
           Location.RequirePutaway(SalesLine."Location Code")))
      THEN BEGIN
        SalesLine2.COPY(SalesLine);
        SalesLine2.SETRANGE("Location Code",SalesLine."Location Code");
        SalesLine2.SETRANGE("Unit of Measure Code",'');
        IF SalesLine2.FINDFIRST THEN
          SalesLine2.TESTFIELD("Unit of Measure Code");

        WhseRqst.Type := WhseType;
        WhseRqst."Source Type" := DATABASE::"Sales Line";
        WhseRqst."Source Subtype" := SalesHeader."Document Type";
        WhseRqst."Source No." := SalesHeader."No.";
        WhseRqst."Shipment Method Code" := SalesHeader."Shipment Method Code";
        WhseRqst."Shipping Agent Code" := SalesHeader."Shipping Agent Code";
        WhseRqst."Shipping Advice" := SalesHeader."Shipping Advice";
        WhseRqst."Document Status" := SalesHeader.Status::Released;
        WhseRqst."Location Code" := SalesLine."Location Code";
        WhseRqst."Destination Type" := WhseRqst."Destination Type"::Customer;
        WhseRqst."Destination No." := SalesHeader."Sell-to Customer No.";
        WhseRqst."External Document No." := SalesHeader."External Document No.";
        IF WhseType = WhseType::Inbound THEN
          WhseRqst."Expected Receipt Date" := SalesHeader."Shipment Date"
        ELSE
          WhseRqst."Shipment Date" := SalesHeader."Shipment Date";
        SalesHeader.SETRANGE("Location Filter",SalesLine."Location Code");
        SalesHeader.CALCFIELDS("Completely Shipped");
        WhseRqst."Completely Handled" := SalesHeader."Completely Shipped";
        OnBeforeCreateWhseRequest(WhseRqst,SalesHeader,SalesLine);
        IF NOT WhseRqst.INSERT THEN
          WhseRqst.MODIFY;
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCreateWhseRequest@4(VAR WhseRqst@1000 : Record 5765;SalesHeader@1001 : Record 36;SalesLine@1002 : Record 37);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterRelease@5(VAR SalesHeader@1000 : Record 36);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterReopen@6(VAR SalesHeader@1000 : Record 36);
    BEGIN
    END;

    BEGIN
    END.
  }
}

