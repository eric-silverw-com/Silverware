OBJECT Codeunit 2201 Webhooks Adapter Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    Permissions=TableData 2000000199=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AzureKeyVaultManagement@1000 : Codeunit 2200;
      AzureADAuthFlow@1001 : Codeunit 6303;
      WebhooksAdapterUriTxt@1007 : TextConst '@@@={locked};ENU=webhooksadapteruri;ESM=webhooksadapteruri;FRC=webhooksadapteruri;ENC=webhooksadapteruri';
      KeyvaultAccessFailedErr@1006 : TextConst 'ENU=Can''t share data right now. The problem is on our end. Please try again later.;ESM=No se pueden compartir datos en este momento. El problema es nuestro. Int‚ntelo de nuevo m s tarde.;FRC=Impossible de partager des donn‚es pour l''instant. Le problŠme vient de nous. Veuillez r‚essayer plus tard.;ENC=Can''t share data right now. The problem is on our end. Please try again later.';
      WebhooksAdapterClientIdTxt@1005 : TextConst '@@@={locked};ENU=webhooksadapterclientid;ESM=webhooksadapterclientid;FRC=webhooksadapterclientid;ENC=webhooksadapterclientid';
      WebhooksAdapterClientSecretTxt@1004 : TextConst '@@@={locked};ENU=webhooksadapterclientsecret;ESM=webhooksadapterclientsecret;FRC=webhooksadapterclientsecret;ENC=webhooksadapterclientsecret';
      WebhooksAdapterResourceUriTxt@1003 : TextConst '@@@={locked};ENU=webhooksadapterresourceuri;ESM=webhooksadapterresourceuri;FRC=webhooksadapterresourceuri;ENC=webhooksadapterresourceuri';
      WebhooksAdapterAuthorityTxt@1002 : TextConst '@@@={locked};ENU=webhooksadapterauthority;ESM=webhooksadapterauthority;FRC=webhooksadapterauthority;ENC=webhooksadapterauthority';

    PROCEDURE GetAccessToken@2(ThrowErrors@1000 : Boolean) Token : Text;
    VAR
      AzureADMgt@1001 : Codeunit 6300;
      WebhooksAdapterClientId@1006 : Text;
      WebhooksAdapterClientSecret@1005 : Text;
      WebhooksAdapterResourceUri@1004 : Text;
      WebhooksAdapterAuthority@1003 : Text;
    BEGIN
      IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(WebhooksAdapterClientId,WebhooksAdapterClientIdTxt) OR
         NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(WebhooksAdapterClientSecret,WebhooksAdapterClientSecretTxt) OR
         NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(WebhooksAdapterResourceUri,WebhooksAdapterResourceUriTxt) OR
         NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(WebhooksAdapterAuthority,WebhooksAdapterAuthorityTxt) OR
         (WebhooksAdapterClientId = '') OR
         (WebhooksAdapterClientSecret = '') OR
         (WebhooksAdapterResourceUri = '') OR
         (WebhooksAdapterAuthority = '')
      THEN BEGIN
        IF ThrowErrors THEN
          ERROR(KeyvaultAccessFailedErr);
        Token := '';
        EXIT;
      END;

      AzureADAuthFlow.Initialize(AzureADMgt.GetRedirectUrl);
      Token :=
        AzureADAuthFlow.AcquireApplicationToken(
          WebhooksAdapterClientId,WebhooksAdapterClientSecret,WebhooksAdapterAuthority,WebhooksAdapterResourceUri);
    END;

    PROCEDURE GetWebhooksAdapterUri@20(ThrowError@1000 : Boolean) : Text;
    VAR
      WebhooksAdapterUri@1001 : Text;
    BEGIN
      IF NOT AzureKeyVaultManagement.GetAzureKeyVaultSecret(WebhooksAdapterUri,WebhooksAdapterUriTxt) THEN
        IF ThrowError THEN
          ERROR(KeyvaultAccessFailedErr);
      EXIT(WebhooksAdapterUri);
    END;

    PROCEDURE FindWebhookSubscription@17(VAR WebhookSubscription@1004 : Record 2000000199;SubscriptionUri@1000 : Text[250]) : Boolean;
    VAR
      WebhookManagement@1002 : Codeunit 5377;
      EndpointUri@1001 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Uri";
    BEGIN
      EndpointUri := EndpointUri.Uri(SubscriptionUri);
      EXIT(WebhookManagement.FindWebhookSubscriptionMatchingEndPoint(WebhookSubscription,EndpointUri,0,0));
    END;

    PROCEDURE DeleteWebhookSubscription@14(SubscriptionUri@1002 : Text[250]);
    VAR
      WebhookSubscription@1001 : Record 2000000199;
    BEGIN
      IF FindWebhookSubscription(WebhookSubscription,SubscriptionUri) THEN
        WebhookSubscription.DELETE(TRUE);
    END;

    PROCEDURE SetAzureKeyVaultManagement@3(NewAzureKeyVaultManagement@1000 : Codeunit 2200);
    BEGIN
      AzureKeyVaultManagement := NewAzureKeyVaultManagement;
    END;

    BEGIN
    END.
  }
}

