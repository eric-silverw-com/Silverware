OBJECT Page 1803 Assisted Company Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00,NAVNA13.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Company Setup;
               ESM=Configuraci¢n de la empresa;
               FRC=Configuration de la compagnie;
               ENC=Company Setup];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table8627;
    PageType=NavigatePage;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Step 4,Step 5;
                                ESM=Nuevo,Procesar,Informe,Paso 4,Paso 5;
                                FRC=Nouveau,Traitement,Rapport,êtapeˇ4,êtapeˇ5;
                                ENC=New,Process,Report,Step 4,Step 5];
    ShowFilter=No;
    OnInit=BEGIN
             InitializeRecord;
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 ResetWizardControls;
                 ShowIntroStep;
                 TypeSelectionEnabled := LoadConfigTypes AND NOT PackageImported;
               END;

    OnAfterGetRecord=BEGIN
                       LogoPositionOnDocumentsShown := Picture.HASVALUE;
                     END;

    OnQueryClosePage=VAR
                       AssistedSetup@1000 : Record 1803;
                     BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF AssistedSetup.GetStatus(PAGE::"Assisted Company Setup Wizard") = AssistedSetup.Status::"Not Completed" THEN
                           IF NOT CONFIRM(NotSetUpQst,FALSE) THEN
                             ERROR('');
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetTaxAreaCodeVisible;
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 ESM=Atr†s;
                                 FRC=PrÇcÇdent;
                                 ENC=Back];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 ESM=Siguiente;
                                 FRC=Suivant;
                                 ENC=Next];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 IF (Step = Step::"Select Type") AND NOT (TypeStandard OR TypeEvaluation) THEN
                                   IF NOT CONFIRM(NoSetupTypeSelectedQst,FALSE) THEN
                                     ERROR('');
                                 NextStep(FALSE);
                               END;
                                }
      { 1       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 ESM=Terminar;
                                 FRC=Terminer;
                                 ENC=Finish];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=VAR
                                 AssistedSetup@1001 : Record 1803;
                                 AssistedCompanySetup@1000 : Codeunit 1800;
                                 ErrorText@1002 : Text;
                               BEGIN
                                 AssistedCompanySetup.WaitForPackageImportToComplete;
                                 BankAccount.TRANSFERFIELDS(TempBankAccount,TRUE);
                                 AssistedCompanySetup.ApplyUserInput(Rec,BankAccount,AccountingPeriodStartDate,TypeEvaluation);
                                 AssistedSetup.SetStatus(PAGE::"Assisted Company Setup Wizard",AssistedSetup.Status::Completed);
                                 IF (BankAccount."No." <> '') AND (NOT TempOnlineBankAccLink.ISEMPTY) THEN
                                   IF NOT TryLinkBankAccount THEN
                                     ErrorText := GETLASTERRORTEXT;
                                 CurrPage.CLOSE;

                                 IF ErrorText <> '' THEN BEGIN
                                   MESSAGE(STRSUBSTNO(BankAccountLinkingFailedMsg,ErrorText));
                                   PAGE.RUN(PAGE::"Bank Account List");
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND DoneVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 8   ;1   ;Group     ;
                Visible=IntroVisible;
                GroupType=Group }

    { 5   ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Company Setup.;
                           ESM=Configuraci¢n de la empresa.;
                           FRC=Bienvenue dans la configuration de compagnie.;
                           ENC=Welcome to Company Setup.];
                GroupType=Group;
                InstructionalTextML=[ENU=To prepare Dynamics 365 Business Central for first use, you must specify some basic information about your company. This information is used on your external documents, such as sales invoices, and includes your company logo and bank information. You must also set up the fiscal year.;
                                     ESM=Para preparar Dynamics 365 Business Central para su primer uso, debe especificar cierta informaci¢n b†sica sobre la empresa. Esta informaci¢n se usa en los documentos externos, como facturas de venta, e incluye el logotipo de la empresa y la informaci¢n bancaria. TambiÇn debe establecer un ejercicio.;
                                     FRC=Pour prÇparer Dynamicsˇ365 Business Central Ö la premiäre utilisation, vous devez spÇcifier quelques informations de base sur votre compagnie. Elles seront prÇsentes sur vos documents externes, tels que les factures vente, et incluent le logo et les informations bancaires de votre compagnie. Vous devez Çgalement configurer l'exercice financier.;
                                     ENC=To prepare Dynamics 365 Business Central for first use, you must specify some basic information about your company. This information is used on your external documents, such as sales invoices, and includes your company logo and bank information. You must also set up the fiscal year.] }

    { 11  ;2   ;Group     ;
                CaptionML=[ENU=Let's go!;
                           ESM=Empecemos.;
                           FRC=Allons-yˇ!;
                           ENC=Let's go!];
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next so you can specify basic company information.;
                                     ESM=Elija Siguiente para poder especificar informaci¢n b†sica sobre la empresa.;
                                     FRC=SÇlectionnez Suivant pour pouvoir spÇcifier les informations gÇnÇrales de la compagnie.;
                                     ENC=Choose Next so you can specify basic company information.] }

    { 18  ;1   ;Group     ;
                Visible=SelectTypeVisible AND TypeSelectionEnabled;
                GroupType=Group }

    { 22  ;2   ;Group     ;
                CaptionML=[ENU=Standard Setup;
                           ESM=Configuraci¢n est†ndar;
                           FRC=Configuration standard;
                           ENC=Standard Setup];
                Visible=StandardVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The company will be ready to use when Setup has completed.;
                                     ESM=La empresa estar† lista para usar una vez completada la configuraci¢n.;
                                     FRC=La compagnie sera pràte Ö àtre utilisÇe une fois la configuration terminÇe.;
                                     ENC=The company will be ready to use when Setup has completed.] }

    { 19  ;3   ;Field     ;
                Name=Standard;
                CaptionML=[ENU=Set up as Standard;
                           ESM=Configurar como est†ndar;
                           FRC=Configurer comme standard;
                           ENC=Set up as Standard];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TypeStandard;
                OnValidate=BEGIN
                             IF TypeStandard THEN
                               TypeEvaluation := FALSE;
                             CalcCompanyData;
                           END;
                            }

    { 23  ;2   ;Group     ;
                CaptionML=[ENU=Evaluation Setup;
                           ESM=Configuraci¢n de evaluaci¢n;
                           FRC=Configuration d'Çvaluation;
                           ENC=Evaluation Setup];
                Visible=EvaluationVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The company will be set up in demonstration mode for exploring and testing.;
                                     ESM=La empresa se configurar† en modo de demostraci¢n para la exploraci¢n y pruebas.;
                                     FRC=La compagnie sera configurÇe en mode de dÇmonstration Ö des fins d'exploration et de tests.;
                                     ENC=The company will be set up in demonstration mode for exploring and testing.] }

    { 20  ;3   ;Field     ;
                Name=Evaluation;
                CaptionML=[ENU=Set up as Evaluation;
                           ESM=Configurar como evaluaci¢n;
                           FRC=Configurer comme Çvaluation;
                           ENC=Set up as Evaluation];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TypeEvaluation;
                OnValidate=BEGIN
                             IF TypeEvaluation THEN
                               TypeStandard := FALSE;
                             CalcCompanyData;
                           END;
                            }

    { 17  ;2   ;Group     ;
                CaptionML=[ENU=Important;
                           ESM=Importante;
                           FRC=Important;
                           ENC=Important];
                Visible=TypeStandard OR TypeEvaluation;
                GroupType=Group;
                InstructionalTextML=[ENU=You cannot change your choice of setup after you choose Next.;
                                     ESM=No se puede cambiar la elecci¢n de configuraci¢n despuÇs de elegir Siguiente.;
                                     FRC=Le choix de la configuration ne peut plus àtre modifiÇ une fois que vous avez cliquÇ sur Suivant.;
                                     ENC=You cannot change your choice of setup after you choose Next.] }

    { 56  ;1   ;Group     ;
                Visible=CompanyDetailsVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                CaptionML=[ENU=Specify your company's address information and logo.;
                           ESM=Especifique la informaci¢n sobre la direcci¢n y el logotipo de la empresa.;
                           FRC=SpÇcifiez l'adresse et le logo de votre compagnie.;
                           ENC=Specify your company's address information and logo.];
                GroupType=Group;
                InstructionalTextML=[ENU=This is used in invoices and other documents where general information about your company is printed.;
                                     ESM=Se usa en facturas y otros documentos donde se imprime la informaci¢n general sobre su empresa.;
                                     FRC=Ce paramätre est utilisÇ dans les factures et d'autres documents sur lesquels figurent des informations gÇnÇrales sur votre compagnie.;
                                     ENC=This is used in invoices and other documents where general information about your company is printed.] }

    { 55  ;3   ;Field     ;
                CaptionML=[ENU=Company Name;
                           ESM=Nombre de la empresa;
                           FRC=Nom de la compagnie;
                           ENC=Company Name];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr=Name;
                ShowMandatory=TRUE }

    { 54  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Address }

    { 53  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Address 2";
                Visible=FALSE }

    { 51  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=City }

    { 1020000;3;Field     ;
                CaptionML=[ENU=State;
                           ESM=Estado;
                           FRC=Province;
                           ENC=Province/State];
                ToolTipML=[ENU=Specifies the state as a part of the address.;
                           ESM=Especifica el estado o provincia como parte de la direcci¢n.;
                           FRC=SpÇcifie la province comme partie de l'adresse.;
                           ENC=Specifies the province/state as a part of the address.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=County }

    { 52  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Post Code" }

    { 50  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Country/Region Code";
                TableRelation=Country/Region.Code;
                OnValidate=BEGIN
                             SetTaxAreaCodeVisible;
                           END;
                            }

    { 48  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Registration No.";
                Visible=FALSE }

    { 47  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Industrial Classification";
                Visible=FALSE;
                ShowMandatory=TRUE }

    { 10  ;3   ;Field     ;
                CaptionML=[ENU=Company Logo;
                           ESM=Logotipo de la empresa;
                           FRC=Logo de la compagnie;
                           ENC=Company Logo];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Picture;
                OnValidate=BEGIN
                             LogoPositionOnDocumentsShown := Picture.HASVALUE;
                             IF LogoPositionOnDocumentsShown THEN BEGIN
                               IF "Logo Position on Documents" = "Logo Position on Documents"::"No Logo" THEN
                                 "Logo Position on Documents" := "Logo Position on Documents"::Right;
                             END ELSE
                               "Logo Position on Documents" := "Logo Position on Documents"::"No Logo";
                             CurrPage.UPDATE(TRUE);
                           END;
                            }

    { 1020001;2;Group     ;
                Visible=TaxAreaCodeVisible;
                GroupType=Group }

    { 1020002;3;Field     ;
                ToolTipML=[ENU=Specifies a tax area code for the company.;
                           ESM=Especifica el c¢digo del †rea fiscal de la empresa.;
                           FRC=SpÇcifie un code de rÇgion fiscale pour la compagnie.;
                           ENC=Specifies a tax area code for the company.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Area Code" }

    { 30  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Logo Position on Documents";
                Editable=LogoPositionOnDocumentsShown }

    { 45  ;1   ;Group     ;
                Visible=CommunicationDetailsVisible;
                GroupType=Group }

    { 13  ;2   ;Group     ;
                CaptionML=[ENU=Specify the contact details for your company.;
                           ESM=Especifique los detalles de contacto de la empresa.;
                           FRC=SpÇcifiez les informations de contact de votre compagnie.;
                           ENC=Specify the contact details for your company.];
                GroupType=Group;
                InstructionalTextML=[ENU=This is used in invoices and other documents where general information about your company is printed.;
                                     ESM=Se usa en facturas y otros documentos donde se imprime la informaci¢n general sobre su empresa.;
                                     FRC=Ce paramätre est utilisÇ dans les factures et autres documents lorsque les informations gÇnÇrales sur votre compagnie sont imprimÇes.;
                                     ENC=This is used in invoices and other documents where general information about your company is printed.] }

    { 44  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Phone No.";
                OnValidate=VAR
                             TypeHelper@1000 : Codeunit 10;
                           BEGIN
                             IF "Phone No." = '' THEN
                               EXIT;

                             IF NOT TypeHelper.IsPhoneNumber("Phone No.") THEN
                               ERROR(InvalidPhoneNumberErr)
                           END;
                            }

    { 42  ;3   ;Field     ;
                ExtendedDatatype=E-Mail;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="E-Mail";
                OnValidate=VAR
                             MailManagement@1000 : Codeunit 9520;
                           BEGIN
                             IF "E-Mail" = '' THEN
                               EXIT;

                             MailManagement.CheckValidEmailAddress("E-Mail");
                           END;
                            }

    { 41  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Home Page";
                OnValidate=VAR
                             WebRequestHelper@1000 : Codeunit 1299;
                           BEGIN
                             IF "Home Page" = '' THEN
                               EXIT;

                             WebRequestHelper.IsValidUriWithoutProtocol("Home Page");
                           END;
                            }

    { 29  ;1   ;Group     ;
                Visible=BankStatementConfirmationVisible;
                GroupType=Group }

    { 25  ;2   ;Group     ;
                CaptionML=[ENU=Bank Feed Service;
                           ESM=Servicio de fuente de banco;
                           FRC=Service de flux bancaire;
                           ENC=Bank Feed Service];
                GroupType=Group;
                InstructionalTextML=[ENU=You can use a bank feeds service to import electronic bank statements from your bank to quickly process payments.;
                                     ESM=Puede usar un servicio de fuente de banco para importar estados de cuenta bancarias electr¢nicos del banco para procesar los pagos r†pidamente.;
                                     FRC=Vous pouvez utiliser un service de flux bancaires pour importer des relevÇs bancaires Çlectroniques Ö partir de votre banque afin de traiter les paiements rapidement.;
                                     ENC=You can use a bank feeds service to import electronic bank statements from your bank to quickly process payments.] }

    { 46  ;3   ;Field     ;
                CaptionML=[ENU=Use a bank feed service;
                           ESM=Usar un servicio de fuente de banco;
                           FRC=Utilisez un service de flux bancaire;
                           ENC=Use a bank feed service];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UseBankStatementFeed }

    { 26  ;2   ;Group     ;
                CaptionML=[ENU=NOTE:;
                           ESM=NOTA:;
                           FRC=NOTEˇ:;
                           ENC=NOTE:];
                Visible=UseBankStatementFeed;
                GroupType=Group;
                InstructionalTextML=[ENU=When you choose Next, you accept the terms of use for the bank feed service.;
                                     ESM=Al elegir Siguiente, acepta las condiciones de uso del servicio de fuente de banco.;
                                     FRC=Lorsque vous sÇlectionnez Suivant, vous acceptez les conditions d'utilisation du service de flux bancaire.;
                                     ENC=When you choose Next, you accept the terms of use for the bank feed service.] }

    { 28  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TermsOfUseLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(TermsOfUseUrlTxt);
                            END;

                ShowCaption=No }

    { 32  ;1   ;Group     ;
                CaptionML=[ENU=Select bank account.;
                           ESM=Seleccione una cuenta bancaria.;
                           FRC=SÇlectionnez le compte bancaire.;
                           ENC=Select bank account.];
                Visible=SelectBankAccountVisible;
                GroupType=Group }

    { 24  ;2   ;Part      ;
                Name=OnlineBanckAccountLinkPagePart;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page270;
                PartType=Page }

    { 37  ;1   ;Group     ;
                Visible=PaymentDetailsVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                CaptionML=[ENU=Specify your company's bank information.;
                           ESM=Especifique la informaci¢n bancaria de la empresa.;
                           FRC=SpÇcifiez les informations bancaires de votre compagnie.;
                           ENC=Specify your company's bank information.];
                GroupType=Group;
                InstructionalTextML=[ENU=This information is included on documents that you send to customer and vendors to inform about payments to your bank account.;
                                     ESM=Esta informaci¢n se incluye en los documentos que env°a a clientes y proveedores para informar sobre los pagos a la cuenta bancaria.;
                                     FRC=Ces informations sont incluses sur les documents que vous envoyez aux clients et aux fournisseurs afin de les informer des paiements sur votre compte bancaire.;
                                     ENC=This information is included on documents that you send to customer and vendors to inform about payments to your bank account.] }

    { 36  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Name" }

    { 35  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Branch No." }

    { 34  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Account No.";
                OnValidate=BEGIN
                             ShowBankAccountCreationWarning := NOT ValidateBankAccountNotEmpty;
                           END;
                            }

    { 33  ;2   ;Group     ;
                CaptionML=[ENU=" ";
                           ESM=" ";
                           FRC=" ";
                           ENC=" "];
                Visible=ShowBankAccountCreationWarning;
                GroupType=Group;
                InstructionalTextML=[ENU=To create a bank account that is linked to the related online bank account, you must specify the bank account information above.;
                                     ESM=Para crear una cuenta bancaria vinculada a la cuenta bancaria en l°nea relacionada, debe especificar la informaci¢n de la cuenta bancaria que figura m†s arriba.;
                                     FRC=Pour crÇer un compte bancaire liÇ au compte bancaire en ligne associÇ, vous devez spÇcifier les informations de compte bancaire ci-dessus.;
                                     ENC=To create a bank account that is linked to the related online bank account, you must specify the bank account information above.] }

    { 6   ;1   ;Group     ;
                Visible=AccountingPeriodVisible;
                GroupType=Group }

    { 15  ;2   ;Group     ;
                CaptionML=[ENU=Specify the start date of the company's fiscal year.;
                           ESM=Especifique la fecha de inicio del ejercicio de la empresa.;
                           FRC=SpÇcifiez la date de dÇbut de l'exercice financier de la compagnie.;
                           ENC=Specify the start date of the company's fiscal year.];
                GroupType=Group;
                InstructionalTextML=[ENU=Specify the start of the company's fiscal year, or select the Skip for Now field if you want to define accounting periods later.;
                                     ESM=Especifique el inicio del ejercicio de la empresa o seleccione el campo Omitir por ahora para definir los periodos contables m†s tarde.;
                                     FRC=SpÇcifiez le dÇbut de l'exercice financier de la compagnie ou sÇlectionnez le champ Ignorer pour le moment si vous souhaitez dÇfinir les pÇriodes comptables ultÇrieurement.;
                                     ENC=Specify the start of the company's fiscal year, or select the Skip for Now field if you want to define accounting periods later.] }

    { 7   ;3   ;Field     ;
                CaptionML=[ENU=Fiscal Year Start Date;
                           ESM=Fecha de inicio del ejercicio;
                           FRC=Date de dÇbut de l'exercice financier;
                           ENC=Fiscal Year Start Date];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccountingPeriodStartDate;
                Editable=NOT SkipAccountingPeriod;
                OnValidate=BEGIN
                             IF (NOT SkipAccountingPeriod) AND (AccountingPeriodStartDate = 0D) THEN
                               ERROR(AccountingPeriodStartDateBlankErr);
                             UserAccountingPeriodStartDate := AccountingPeriodStartDate;
                           END;

                ShowMandatory=TRUE }

    { 38  ;3   ;Field     ;
                Name=SkipAccountingPeriod;
                CaptionML=[ENU=Skip for Now;
                           ESM=Omitir por ahora;
                           FRC=Ignorer pour le moment;
                           ENC=Skip for Now];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SkipAccountingPeriod;
                OnValidate=BEGIN
                             IF SkipAccountingPeriod THEN
                               CLEAR(AccountingPeriodStartDate)
                             ELSE
                               AccountingPeriodStartDate := UserAccountingPeriodStartDate;
                           END;
                            }

    { 57  ;1   ;Group     ;
                Visible=CostingMethodVisible;
                GroupType=Group }

    { 58  ;2   ;Group     ;
                CaptionML=[ENU=Specify the costing method for your inventory valuation.;
                           ESM=Especifique la valoraci¢n de existencias utilizada en este caso.;
                           FRC=SpÇcifiez le mode d'Çvaluation de votre inventaire.;
                           ENC=Specify the costing method for your inventory valuation.];
                GroupType=Group }

    { 122 ;3   ;Group     ;
                Name=CostingMethodLbl;
                GroupType=Group;
                InstructionalTextML=[ENU=The costing method works together with the posting date and sequence to determine how to record the cost flow.;
                                     ESM=La valoraci¢n de existencias funciona junto con la fecha de registro y la secuencia para determinar c¢mo registrar el flujo de costo.;
                                     FRC=La mÇthode d'Çvaluation coñt fonctionne avec la date et la sÇquence de report pour dÇterminer comment enregistrer le flux des coñts.;
                                     ENC=The costing method works together with the posting date and sequence to determine how to record the cost flow.] }

    { 123 ;4   ;Field     ;
                Name=Cost Method;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CostMethodeLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(CostMethodUrlTxt);
                            END;

                ShowCaption=No }

    { 59  ;4   ;Field     ;
                Name=Costing Method;
                CaptionML=[ENU=Costing Method;
                           ESM=Valoraci¢n existencias;
                           FRC=Mode Çvaluation stock;
                           ENC=Costing Method];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=InventorySetup."Default Costing Method";
                OnValidate=VAR
                             ExistingInventorySetup@1000 : Record 313;
                           BEGIN
                             IF NOT ExistingInventorySetup.GET THEN BEGIN
                               InventorySetup."Automatic Cost Adjustment" := InventorySetup."Automatic Cost Adjustment"::Always;
                               InventorySetup."Automatic Cost Posting" := TRUE;
                             END;

                             IF InventorySetup."Default Costing Method" = InventorySetup."Default Costing Method"::Average THEN BEGIN
                               InventorySetup."Average Cost Period" := InventorySetup."Average Cost Period"::Day;
                               InventorySetup."Average Cost Calc. Type" := InventorySetup."Average Cost Calc. Type"::Item;
                             END;

                             IF NOT InventorySetup.MODIFY THEN
                               InventorySetup.INSERT;
                           END;

                ShowMandatory=TRUE }

    { 9   ;1   ;Group     ;
                Visible=DoneVisible;
                GroupType=Group }

    { 16  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           ESM=Eso es todo.;
                           FRC=VoilÖˇ!;
                           ENC=That's it!];
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Finish to prepare the application for first use. This will take a few moments.;
                                     ESM=Elija Finalizar para preparar la aplicaci¢n para su uso inicial. Esto le llevar† unos minutos.;
                                     FRC=Choisissez Terminer pour prÇparer l'application Ö la premiäre utilisation. Cela peut prendre quelques instants.;
                                     ENC=Choose Finish to prepare the application for first use. This will take a few moments.] }

    { 21  ;3   ;Field     ;
                ExtendedDatatype=URL;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=HelpLbl;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              HYPERLINK(HelpLinkTxt);
                            END;
                             }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      TempSavedBankAccount@1044 : TEMPORARY Record 270;
      TempBankAccount@1029 : TEMPORARY Record 270;
      BankAccount@1039 : Record 270;
      TempOnlineBankAccLink@1033 : TEMPORARY Record 777;
      MediaRepositoryDone@1041 : Record 9400;
      MediaResourcesStandard@1055 : Record 2000000182;
      MediaResourcesDone@1057 : Record 2000000182;
      InventorySetup@1060 : Record 313;
      AssistedCompanySetup@1045 : Codeunit 1800;
      ClientTypeManagement@1014 : Codeunit 4;
      AccountingPeriodStartDate@1000 : Date;
      UserAccountingPeriodStartDate@1021 : Date;
      CompanyData@1046 : 'Evaluation Data,Standard Data,None,Extended Data,Full No Data';
      TypeStandard@1018 : Boolean;
      TypeEvaluation@1019 : Boolean;
      Step@1012 : 'Intro,Sync,Select Type,Company Details,Communication Details,BankStatementFeed,SelectBankAccont,Payment Details,Accounting Period,Costing Method,Done';
      BackEnabled@1003 : Boolean;
      NextEnabled@1004 : Boolean;
      FinishEnabled@1005 : Boolean;
      TopBannerVisible@1042 : Boolean;
      IntroVisible@1006 : Boolean;
      SelectTypeVisible@1015 : Boolean;
      CompanyDetailsVisible@1007 : Boolean;
      CommunicationDetailsVisible@1008 : Boolean;
      PaymentDetailsVisible@1010 : Boolean;
      AccountingPeriodVisible@1009 : Boolean;
      CostingMethodVisible@1049 : Boolean;
      DoneVisible@1011 : Boolean;
      TypeSelectionEnabled@1026 : Boolean;
      StandardVisible@1023 : Boolean;
      EvaluationVisible@1024 : Boolean;
      SkipAccountingPeriod@1013 : Boolean;
      NotSetUpQst@1001 : TextConst 'ENU=The application has not been set up. Setup will continue the next time you start the program.\\Are you sure that you want to exit?;ESM=La aplicaci¢n no se configur¢. La configuraci¢n continuar† la pr¢xima vez que inicie el programa.\\®Est† seguro de que quiere salir?;FRC=L''application n''a pas ÇtÇ configurÇe. La configuration va reprendre la prochaine fois que vous dÇmarrerez le programme.\\“tes-vous sñr de vouloir quitterˇ?;ENC=The application has not been set up. Setup will continue the next time you start the program.\\Are you sure that you want to exit?';
      HideBankStatementProvider@1028 : Boolean;
      NoSetupTypeSelectedQst@1020 : TextConst 'ENU=You have not selected any setup type. If you proceed, the application will not be fully functional, until you set it up manually.\\Do you want to continue?;ESM=No seleccion¢ ning£n tipo de configuraci¢n. Si contin£a, la aplicaci¢n no ser† completamente funcional hasta que la configure manualmente.\\®Desea continuar?;FRC=Vous n''avez pas sÇlectionnÇ de type de configuration. Si vous continuez, l''application ne sera pas entiärement fonctionnelle tant que vous ne l''aurez pas configurÇ manuellement.\\Voulez-vous continuerˇ?;ENC=You have not selected any setup type. If you proceed, the application will not be fully functional, until you set it up manually.\\Do you want to continue?';
      HelpLbl@1027 : TextConst 'ENU=Learn more about setting up your company;ESM=M†s informaci¢n acerca de la configuraci¢n de su empresa;FRC=En savoir plus sur la configuration de votre compagnie;ENC=Learn more about setting up your company';
      HelpLinkTxt@1022 : TextConst '@@@={Locked};ENU="http://go.microsoft.com/fwlink/?LinkId=746160";ESM="http://go.microsoft.com/fwlink/?LinkId=746160";FRC="http://go.microsoft.com/fwlink/?LinkId=746160";ENC="http://go.microsoft.com/fwlink/?LinkId=746160"';
      BankStatementConfirmationVisible@1030 : Boolean;
      UseBankStatementFeed@1032 : Boolean;
      UseBankStatementFeedInitialized@1017 : Boolean;
      BankAccountInformationUpdated@1037 : Boolean;
      SelectBankAccountVisible@1038 : Boolean;
      TaxAreaCodeVisible@1020000 : Boolean;
      TermsOfUseLbl@1031 : TextConst 'ENU=Envestnet Yodlee Terms of Use;ESM=Condiciones de uso de Envestnet Yodlee;FRC=Conditions d''utilisation Envestnet Yodlee;ENC=Envestnet Yodlee Terms of Use';
      TermsOfUseUrlTxt@1025 : TextConst '@@@={Locked};ENU="https://go.microsoft.com/fwlink/?LinkId=746179";ESM="https://go.microsoft.com/fwlink/?LinkId=746179";FRC="https://go.microsoft.com/fwlink/?LinkId=746179";ENC="https://go.microsoft.com/fwlink/?LinkId=746179"';
      LogoPositionOnDocumentsShown@1034 : Boolean;
      ShowBankAccountCreationWarning@1036 : Boolean;
      InvalidPhoneNumberErr@1002 : TextConst 'ENU=The phone number is invalid.;ESM=El n£mero de telÇfono no es v†lido.;FRC=Le numÇro de tÇlÇphone n''est pas valide.;ENC=The phone number is invalid.';
      CostMethodeLbl@1143 : TextConst 'ENU=Learn more;ESM=M†s informaci¢n;FRC=En savoir plus;ENC=Learn more';
      CostMethodUrlTxt@1145 : TextConst '@@@={Locked};ENU="https://go.microsoft.com/fwlink/?linkid=858295";ESM="https://go.microsoft.com/fwlink/?linkid=858295";FRC="https://go.microsoft.com/fwlink/?linkid=858295";ENC="https://go.microsoft.com/fwlink/?linkid=858295"';
      BankAccountLinkingFailedMsg@1016 : TextConst '@@@=%1 - an error message;ENU=Linking the company bank account failed with the following message:\''%1''\Link the company bank account from the Bank Accounts page.;ESM=Error de vinculaci¢n de la cuenta bancaria de la empresa con el siguiente mensaje: \''%1'' \Vincula la cuenta bancaria desde la p†gina de cuentas bancarias.;FRC=La liaison du compte bancaire de la compagnie a ÇchouÇ avec le message suivantˇ:\''%1''\Liez le compte bancaire de la compagnie Ö partir de la page Comptes bancaires.;ENC=Linking the company bank account failed with the following message:\''%1''\Link the company bank account from the Bank Accounts page.';
      AccountingPeriodStartDateBlankErr@1035 : TextConst 'ENU=You have not specified a start date for the fiscal year. You must either specify a date in the Fiscal Year Start Date field or select the Skip for Now field.;ESM=No ha especificado una fecha de inicio del ejercicio. Debe especificar una fecha en el campo Fecha de inicio del ejercicio o seleccionar el campo Omitir por ahora.;FRC=Vous n''avez pas spÇcifiÇ une date de dÇbut pour l''exercice financier. Vous devez spÇcifier une date dans le champ DÇbut exercice financier ou sÇlectionner le champ Ignorer pour le moment.;ENC=You have not specified a start date for the fiscal year. You must either specify a date in the Fiscal Year Start Date field or select the Skip for Now field.';

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      ResetWizardControls;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      CASE Step OF
        Step::Intro:
          ShowIntroStep;
        Step::Sync:
          ShowSyncStep(Backwards);
        Step::"Select Type":
          IF NOT TypeSelectionEnabled THEN
            NextStep(Backwards)
          ELSE
            ShowSelectTypeStep;
        Step::"Company Details":
          IF TypeEvaluation THEN BEGIN
            Step := Step::Done;
            ShowDoneStep;
          END ELSE
            ShowCompanyDetailsStep;
        Step::"Communication Details":
          ShowCommunicationDetailsStep;
        Step::BankStatementFeed:
          IF NOT ShowBankStatementFeedStep THEN
            NextStep(Backwards)
          ELSE
            ShowBankStatementFeedConfirmation;
        Step::SelectBankAccont:
          BEGIN
            IF NOT Backwards THEN
              ShowOnlineBankStatement;
            IF NOT ShowSelectBankAccountStep THEN
              NextStep(Backwards)
            ELSE
              ShowSelectBankAccount;
          END;
        Step::"Payment Details":
          BEGIN
            IF NOT Backwards THEN
              PopulateBankAccountInformation;
            ShowPaymentDetailsStep;
            ShowBankAccountCreationWarning := NOT ValidateBankAccountNotEmpty;
          END;
        Step::"Accounting Period":
          IF SkipAccountingPeriod THEN
            NextStep(Backwards)
          ELSE
            ShowAccountingPeriodStep;
        Step::"Costing Method":
          ShowCostingMethodStep;
        Step::Done:
          ShowDoneStep;
      END;
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ShowIntroStep@1();
    BEGIN
      IntroVisible := TRUE;
      BackEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowSyncStep@22(Backwards@1000 : Boolean);
    BEGIN
      NextStep(Backwards);
    END;

    LOCAL PROCEDURE ShowSelectTypeStep@12();
    BEGIN
      SelectTypeVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowCompanyDetailsStep@2();
    BEGIN
      CompanyDetailsVisible := TRUE;
      IF TypeSelectionEnabled THEN BEGIN
        StartConfigPackageImport;
        BackEnabled := FALSE;
      END;
    END;

    LOCAL PROCEDURE ShowCommunicationDetailsStep@4();
    BEGIN
      CommunicationDetailsVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowPaymentDetailsStep@5();
    BEGIN
      PaymentDetailsVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowOnlineBankStatement@19();
    VAR
      CompanyInformationMgt@1001 : Codeunit 1306;
    BEGIN
      IF CompanyInformationMgt.IsDemoCompany THEN
        EXIT;

      IF HideBankStatementProvider THEN
        EXIT;

      TempOnlineBankAccLink.RESET;
      TempOnlineBankAccLink.DELETEALL;

      IF NOT TempBankAccount.StatementProvidersExist THEN
        EXIT;

      IF UseBankStatementFeed THEN BEGIN
        TempBankAccount.SimpleLinkStatementProvider(TempOnlineBankAccLink);
        IF TempOnlineBankAccLink.FINDFIRST THEN
          IF NOT TempOnlineBankAccLink.ISEMPTY THEN BEGIN
            CurrPage.OnlineBanckAccountLinkPagePart.PAGE.SetRecs(TempOnlineBankAccLink);
            HideBankStatementProvider := TRUE;
          END;
      END ELSE BEGIN
        TempBankAccount.UnlinkStatementProvider;
        TempBankAccount.DisableStatementProviders;
      END;
    END;

    LOCAL PROCEDURE ShowAccountingPeriodStep@7();
    BEGIN
      AccountingPeriodVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowCostingMethodStep@23();
    BEGIN
      IF InventorySetup.GET THEN;
      CostingMethodVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowDoneStep@6();
    BEGIN
      DoneVisible := TRUE;
      NextEnabled := FALSE;
      FinishEnabled := TRUE;
      IF TypeEvaluation THEN BEGIN
        StartConfigPackageImport;
        BackEnabled := FALSE;
      END;
    END;

    LOCAL PROCEDURE ResetWizardControls@10();
    BEGIN
      CompanyData := CompanyData::None;

      // Buttons
      BackEnabled := TRUE;
      NextEnabled := TRUE;
      FinishEnabled := FALSE;

      // Tabs
      IntroVisible := FALSE;
      SelectTypeVisible := FALSE;
      CompanyDetailsVisible := FALSE;
      CommunicationDetailsVisible := FALSE;
      BankStatementConfirmationVisible := FALSE;
      SelectBankAccountVisible := FALSE;
      PaymentDetailsVisible := FALSE;
      AccountingPeriodVisible := FALSE;
      CostingMethodVisible := FALSE;
      DoneVisible := FALSE;
    END;

    LOCAL PROCEDURE InitializeRecord@8();
    VAR
      CompanyInformation@1001 : Record 79;
      AccountingPeriod@1000 : Record 50;
    BEGIN
      INIT;

      IF CompanyInformation.GET THEN BEGIN
        TRANSFERFIELDS(CompanyInformation);
        IF Name = '' THEN
          Name := COMPANYNAME;
      END ELSE
        Name := COMPANYNAME;

      SkipAccountingPeriod := NOT AccountingPeriod.ISEMPTY;
      IF NOT SkipAccountingPeriod THEN BEGIN
        AccountingPeriodStartDate := CALCDATE('<-CY>',TODAY);
        UserAccountingPeriodStartDate := AccountingPeriodStartDate;
      END;

      INSERT;
    END;

    LOCAL PROCEDURE CalcCompanyData@21();
    BEGIN
      CompanyData := CompanyData::None;
      IF TypeStandard THEN
        CompanyData := CompanyData::"Standard Data";
      IF TypeEvaluation THEN
        CompanyData := CompanyData::"Evaluation Data";
    END;

    LOCAL PROCEDURE StartConfigPackageImport@9();
    BEGIN
      IF NOT TypeSelectionEnabled THEN
        EXIT;
      IF CompanyData IN [CompanyData::None,CompanyData::"Full No Data"] THEN
        EXIT;
      IF AssistedCompanySetup.IsCompanySetupInProgress(COMPANYNAME) THEN
        EXIT;
      AssistedCompanySetup.FillCompanyData(COMPANYNAME,CompanyData);
    END;

    LOCAL PROCEDURE LoadConfigTypes@42() : Boolean;
    BEGIN
      StandardVisible :=
        AssistedCompanySetup.ExistsConfigurationPackageFile(CompanyData::"Standard Data");
      EvaluationVisible :=
        AssistedCompanySetup.ExistsConfigurationPackageFile(CompanyData::"Evaluation Data");
      EXIT(StandardVisible OR EvaluationVisible);
    END;

    LOCAL PROCEDURE PackageImported@11() : Boolean;
    VAR
      AssistedCompanySetupStatus@1000 : Record 1802;
    BEGIN
      AssistedCompanySetupStatus.GET(COMPANYNAME);
      EXIT(AssistedCompanySetupStatus."Package Imported" OR AssistedCompanySetupStatus."Import Failed");
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE PopulateBankAccountInformation@14();
    BEGIN
      IF BankAccountInformationUpdated THEN
        IF TempOnlineBankAccLink.COUNT = 0 THEN BEGIN
          RestoreBankAccountInformation(TempSavedBankAccount);
          EXIT;
        END;

      IF TempOnlineBankAccLink.COUNT = 1 THEN
        TempOnlineBankAccLink.FINDFIRST
      ELSE
        CurrPage.OnlineBanckAccountLinkPagePart.PAGE.GETRECORD(TempOnlineBankAccLink);

      IF (TempBankAccount."Bank Account No." = TempOnlineBankAccLink."Bank Account No.") AND
         (TempBankAccount.Name = TempOnlineBankAccLink.Name)
      THEN
        EXIT;

      IF NOT IsBankAccountFormatValid(TempOnlineBankAccLink."Bank Account No.") THEN
        CLEAR(TempOnlineBankAccLink."Bank Account No.");

      IF NOT BankAccountInformationUpdated THEN
        StoreBankAccountInformation(TempSavedBankAccount);

      TempBankAccount.INIT;
      TempBankAccount.CreateNewAccount(TempOnlineBankAccLink);
      RestoreBankAccountInformation(TempBankAccount);
      BankAccountInformationUpdated := TRUE;
    END;

    LOCAL PROCEDURE StoreBankAccountInformation@25(VAR BufferBankAccount@1000 : Record 270);
    BEGIN
      IF NOT BufferBankAccount.ISEMPTY THEN
        EXIT;
      BufferBankAccount.INIT;
      BufferBankAccount."Bank Account No." := "Bank Account No.";
      BufferBankAccount.Name := "Bank Name";
      BufferBankAccount."Bank Branch No." := "Bank Branch No.";
      BufferBankAccount."SWIFT Code" := "SWIFT Code";
      BufferBankAccount.IBAN := IBAN;
      BufferBankAccount.INSERT;
    END;

    LOCAL PROCEDURE RestoreBankAccountInformation@26(VAR BufferBankAccount@1000 : Record 270);
    BEGIN
      IF BufferBankAccount.ISEMPTY THEN
        EXIT;
      "Bank Account No." := BufferBankAccount."Bank Account No.";
      "Bank Name" := BufferBankAccount.Name;
      "Bank Branch No." := BufferBankAccount."Bank Branch No.";
      "SWIFT Code" := BufferBankAccount."SWIFT Code";
      IBAN := BufferBankAccount.IBAN;
    END;

    LOCAL PROCEDURE ShowBankStatementFeedConfirmation@18();
    BEGIN
      BankStatementConfirmationVisible := TRUE;
    END;

    LOCAL PROCEDURE ShowBankStatementFeedStep@37() : Boolean;
    VAR
      GeneralLedgerSetup@1000 : Record 98;
      BankStatementProviderExists@1001 : Boolean;
    BEGIN
      IF NOT GeneralLedgerSetup.GET THEN
        EXIT(FALSE);

      IF GeneralLedgerSetup."LCY Code" = '' THEN
        EXIT(FALSE);

      BankStatementProviderExists := BankAccount.StatementProvidersExist;

      IF NOT UseBankStatementFeedInitialized THEN BEGIN
        UseBankStatementFeed := BankStatementProviderExists;
        UseBankStatementFeedInitialized := TRUE;
      END;

      EXIT(BankStatementProviderExists);
    END;

    LOCAL PROCEDURE ShowSelectBankAccountStep@13() : Boolean;
    BEGIN
      EXIT(TempOnlineBankAccLink.COUNT > 1);
    END;

    LOCAL PROCEDURE ShowSelectBankAccount@16();
    BEGIN
      SelectBankAccountVisible := TRUE;
    END;

    LOCAL PROCEDURE SetTaxAreaCodeVisible@1020001();
    VAR
      TaxArea@1020000 : Record 318;
    BEGIN
      TaxAreaCodeVisible := FALSE;

      IF TaxArea.ISEMPTY THEN
        EXIT;

      IF "Country/Region Code" <> 'CA' THEN
        EXIT;

      TaxAreaCodeVisible := TRUE;
    END;

    LOCAL PROCEDURE IsBankAccountFormatValid@15(BankAccount@1000 : Text) : Boolean;
    VAR
      VarInt@1001 : Integer;
      Which@1002 : Text;
    BEGIN
      Which := ' -';
      EXIT(EVALUATE(VarInt,DELCHR(BankAccount,'=',Which)));
    END;

    LOCAL PROCEDURE ValidateBankAccountNotEmpty@17() : Boolean;
    BEGIN
      EXIT(("Bank Account No." <> '') OR TempOnlineBankAccLink.ISEMPTY);
    END;

    [TryFunction]
    LOCAL PROCEDURE TryLinkBankAccount@20();
    BEGIN
      BankAccount.OnMarkAccountLinkedEvent(TempOnlineBankAccLink,BankAccount);
    END;

    BEGIN
    END.
  }
}

