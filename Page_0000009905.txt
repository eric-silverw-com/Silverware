OBJECT Page 9905 Data Encryption Management
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:07 PM;
    Version List=;
  }
  PROPERTIES
  {
    AccessByPermission=System 5420=X;
    Editable=No;
    CaptionML=ENU=Data Encryption Management;
    ApplicationArea=#Advanced;
    PageType=Card;
    UsageCategory=Tasks;
    OnInit=VAR
             PermissionManager@1000 : Codeunit 9002;
           BEGIN
             IsSaaS := PermissionManager.SoftwareAsAService;
           END;

    OnAfterGetCurrRecord=BEGIN
                           RefreshEncryptionStatus;
                         END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 6       ;1   ;Action    ;
                      Name=Enable Encryption;
                      CaptionML=ENU=Enable Encryption;
                      ToolTipML=ENU=Generate an encryption key on the server to enable encryption.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSaaS;
                      Enabled=EnableEncryptionActionEnabled;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EncryptionManagement.EnableEncryption;
                                 RefreshEncryptionStatus;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=Import Encryption Key;
                      AccessByPermission=System 5420=X;
                      CaptionML=ENU=Import Encryption Key;
                      ToolTipML=ENU=Import the encryption key to a server instance from an encryption key file that was exported from another server instance or saved as a copy when the encryption was enabled.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSaaS;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EncryptionManagement.ImportKey;
                                 RefreshEncryptionStatus;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=Change Encryption Key;
                      AccessByPermission=System 5420=X;
                      CaptionML=ENU=Change Encryption Key;
                      ToolTipML=ENU=Change to a different encryption key file.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSaaS;
                      Enabled=ChangeKeyActionEnabled;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EncryptionManagement.ChangeKey;
                                 RefreshEncryptionStatus;
                               END;
                                }
      { 1       ;1   ;Action    ;
                      Name=Export Encryption Key;
                      AccessByPermission=System 5410=X;
                      CaptionML=ENU=Export Encryption Key;
                      ToolTipML=ENU=Export the encryption key to make a copy of the key or so that it can be imported on another server instance.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSaaS;
                      Enabled=ExportKeyActionEnabled;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 EncryptionManagement.ExportKey;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=Disable Encryption;
                      AccessByPermission=System 5420=X;
                      CaptionML=ENU=Disable Encryption;
                      ToolTipML=ENU=Decrypt encrypted data.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSaaS;
                      Enabled=DisableEncryptionActionEnabled;
                      Image=Delete;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF EncryptionKeyExistsState THEN
                                   EncryptionManagement.DisableEncryption(FALSE)
                                 ELSE
                                   EncryptionManagement.DeleteEncryptedDataInAllCompanies;
                                 RefreshEncryptionStatus;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 4   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                CaptionML=ENU=Encryption Enabled;
                ToolTipML=ENU=Specifies if an encryption key exists and is enabled on the Business Central Server.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EncryptionEnabledState;
                Editable=FALSE }

    { 3   ;1   ;Field     ;
                CaptionML=ENU=Encryption Key Exists;
                ToolTipML=ENU=Specifies if an encryption key exists on the Business Central Server.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EncryptionKeyExistsState }

  }
  CODE
  {
    VAR
      EncryptionManagement@1002 : Codeunit 1266;
      EncryptionEnabledState@1000 : Boolean;
      EncryptionKeyExistsState@1001 : Boolean;
      EnableEncryptionActionEnabled@1003 : Boolean;
      ChangeKeyActionEnabled@1008 : Boolean;
      ExportKeyActionEnabled@1005 : Boolean;
      DisableEncryptionActionEnabled@1006 : Boolean;
      IsSaaS@1004 : Boolean;

    LOCAL PROCEDURE RefreshEncryptionStatus@1();
    BEGIN
      EncryptionEnabledState := ENCRYPTIONENABLED;
      EncryptionKeyExistsState := ENCRYPTIONKEYEXISTS;

      EnableEncryptionActionEnabled := NOT EncryptionEnabledState;
      ExportKeyActionEnabled := EncryptionKeyExistsState;
      DisableEncryptionActionEnabled := EncryptionEnabledState;
      ChangeKeyActionEnabled := EncryptionKeyExistsState;
    END;

    BEGIN
    END.
  }
}

