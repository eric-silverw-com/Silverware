OBJECT Page 5432 Automation - Config. Package
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:00 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[@@@={Locked};
               ENU=configurationPackage];
    SourceTable=Table8623;
    DelayedInsert=Yes;
    PageType=API;
    APIPublisher=microsoft;
    APIGroup=automation;
    EntitySetName=configurationPackages;
    EntityName=configurationPackage;
    OnOpenPage=BEGIN
                 BINDSUBSCRIPTION(AutomationAPIManagement);
               END;

    OnInsertRecord=VAR
                     TenantConfigPackageFile@1001 : Record 5433;
                   BEGIN
                     VALIDATE("Import Status","Import Status"::No);
                     VALIDATE("Apply Status" ,"Apply Status"::No);

                     TenantConfigPackageFile.VALIDATE(Code,Code);
                     TenantConfigPackageFile.INSERT(TRUE);
                   END;

  }
  CONTROLS
  {
    { 18  ;0   ;Container ;
                ContainerType=ContentArea }

    { 17  ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 9   ;2   ;Field     ;
                Name=code;
                CaptionML=[@@@={Locked};
                           ENU=Code];
                ApplicationArea=#All;
                SourceExpr=Code }

    { 8   ;2   ;Field     ;
                Name=packageName;
                CaptionML=[@@@={Locked};
                           ENU=PackageName];
                ToolTipML=ENU=Specifies the name of the package.;
                ApplicationArea=#All;
                SourceExpr="Package Name" }

    { 7   ;2   ;Field     ;
                Name=languageId;
                CaptionML=[@@@={Locked};
                           ENU=LanguageId];
                ApplicationArea=#All;
                SourceExpr="Language ID" }

    { 6   ;2   ;Field     ;
                Name=productVersion;
                CaptionML=[@@@={Locked};
                           ENU=ProductVersion];
                ApplicationArea=#All;
                SourceExpr="Product Version" }

    { 5   ;2   ;Field     ;
                Name=processingOrder;
                CaptionML=[@@@={Locked};
                           ENU=ProcessingOrder];
                ApplicationArea=#All;
                SourceExpr="Processing Order" }

    { 4   ;2   ;Field     ;
                Name=excludeConfigurationTables;
                CaptionML=[@@@={Locked};
                           ENU=ExcludeConfigurationTables];
                ApplicationArea=#All;
                SourceExpr="Exclude Config. Tables" }

    { 3   ;2   ;Field     ;
                Name=numberOfTables;
                CaptionML=[@@@={Locked};
                           ENU=NumberOfTables];
                ApplicationArea=#All;
                SourceExpr="No. of Tables";
                Editable=false }

    { 2   ;2   ;Field     ;
                Name=numberOfRecords;
                CaptionML=[@@@={Locked};
                           ENU=NumberOfRecords];
                ApplicationArea=#All;
                SourceExpr="No. of Records";
                Editable=false }

    { 1   ;2   ;Field     ;
                Name=numberOfErrors;
                CaptionML=[@@@={Locked};
                           ENU=NumberOfErrors];
                ApplicationArea=#All;
                SourceExpr="No. of Errors";
                Editable=false }

    { 11  ;2   ;Field     ;
                Name=importStatus;
                CaptionML=[@@@={Locked};
                           ENU=ImportStatus];
                ApplicationArea=#All;
                SourceExpr="Import Status";
                Editable=false }

    { 12  ;2   ;Field     ;
                Name=applyStatus;
                CaptionML=[@@@={Locked};
                           ENU=ApplyStatus];
                ApplicationArea=#All;
                SourceExpr="Apply Status";
                Editable=false }

    { 10  ;2   ;Part      ;
                Name=file;
                CaptionML=[@@@={Locked};
                           ENU=File];
                ApplicationArea=#All;
                SubPageLink=Code=FIELD(Code);
                PagePartID=Page5433;
                EntitySetName=file;
                EntityName=file;
                PartType=Page }

  }
  CODE
  {
    VAR
      ApplyOrImportInProgressImportErr@1000 : TextConst 'ENU=Cannot import a package while import or apply is in progress.';
      ApplyOrImportInProgressApplyErr@1001 : TextConst 'ENU=Cannot apply a package while import or apply is in progress.';
      ImportNotCompletedErr@1005 : TextConst 'ENU=Import Status is not completed. You must import the package before you apply it.';
      AutomationAPIManagement@1002 : Codeunit 5435;
      MissingRapisStartFileErr@1003 : TextConst 'ENU=Please upload a Rapid Start File, before running the import.';

    [ServiceEnabled]
    [External]
    PROCEDURE Import@1(VAR ActionContext@1000 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.WebServiceActionContext");
    VAR
      TenantConfigPackageFile@1002 : Record 5433;
      ODataActionManagement@1001 : Codeunit 6711;
      ImportSessionID@1003 : Integer;
    BEGIN
      IF IsImportOrApplyPending THEN
        ERROR(ApplyOrImportInProgressImportErr);

      TenantConfigPackageFile.SETAUTOCALCFIELDS(Content);
      IF NOT TenantConfigPackageFile.GET(Code) THEN
        ERROR(MissingRapisStartFileErr);
      IF NOT TenantConfigPackageFile.Content.HASVALUE THEN
        ERROR(MissingRapisStartFileErr);

      VALIDATE("Import Status","Import Status"::Scheduled);
      MODIFY(TRUE);

      IF TASKSCHEDULER.CANCREATETASK THEN
        TASKSCHEDULER.CREATETASK(
          CODEUNIT::"Automation - Import RSPackage",CODEUNIT::"Automation - Failure RSPackage",TRUE,COMPANYNAME,CURRENTDATETIME + 200,
          RECORDID)
      ELSE BEGIN
        COMMIT;
        ImportSessionID := 0;
        STARTSESSION(ImportSessionID,CODEUNIT::"Automation - Import RSPackage",COMPANYNAME,Rec);
      END;

      ODataActionManagement.AddKey(FIELDNO(Code),Code);
      ODataActionManagement.SetUpdatedPageResponse(ActionContext,PAGE::"Automation - Config. Package");
    END;

    [ServiceEnabled]
    [External]
    PROCEDURE Apply@17(VAR ActionContext@1000 : DotNet "'Microsoft.Dynamics.Nav.Ncl, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Runtime.WebServiceActionContext");
    VAR
      ODataActionManagement@1001 : Codeunit 6711;
      ImportSessionID@1002 : Integer;
    BEGIN
      IF IsImportOrApplyPending THEN
        ERROR(ApplyOrImportInProgressApplyErr);

      IF "Import Status" <> "Import Status"::Completed THEN
        ERROR(ImportNotCompletedErr);

      VALIDATE("Apply Status","Apply Status"::Scheduled);
      MODIFY(TRUE);

      IF TASKSCHEDULER.CANCREATETASK THEN
        TASKSCHEDULER.CREATETASK(
          CODEUNIT::"Automation - Apply RSPackage",CODEUNIT::"Automation - Failure RSPackage",TRUE,COMPANYNAME,CURRENTDATETIME + 200,
          RECORDID)
      ELSE BEGIN
        COMMIT;
        ImportSessionID := 0;
        STARTSESSION(ImportSessionID,CODEUNIT::"Automation - Apply RSPackage",COMPANYNAME,Rec);
      END;
      ODataActionManagement.AddKey(FIELDNO(Code),Code);
      ODataActionManagement.SetUpdatedPageResponse(ActionContext,PAGE::"Automation - Config. Package");
    END;

    LOCAL PROCEDURE IsImportOrApplyPending@3() : Boolean;
    BEGIN
      EXIT(
        ("Import Status" IN ["Import Status"::InProgress,"Import Status"::Scheduled] ) OR
        ("Apply Status" IN ["Apply Status"::InProgress,"Apply Status"::Scheduled]));
    END;

    BEGIN
    END.
  }
}

