OBJECT Table 5468 Picture Entity
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:56 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Picture Entity;
  }
  FIELDS
  {
    { 1   ;   ;Id                  ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Id;
                                                   Editable=No }
    { 11  ;   ;Width               ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Width;
                                                   Editable=No }
    { 12  ;   ;Height              ;Integer       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Height;
                                                   Editable=No }
    { 13  ;   ;Mime Type           ;Text100       ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Mime Type;
                                                   Editable=No }
    { 20  ;   ;Content             ;BLOB          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Content }
  }
  KEYS
  {
    {    ;Id                                      ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      IdNotProvidedErr@1002 : TextConst '@@@={Locked};ENU=You must specify a resource ID to get the picture.';
      RequestedRecordDoesNotExistErr@1001 : TextConst '@@@={Locked};ENU=No resource with the specified ID exists.';
      RequestedRecordIsNotSupportedErr@1000 : TextConst '@@@={Locked};ENU=Images are not supported for requested entity - %1.';

    PROCEDURE LoadData@3(IdFilter@1000 : Text);
    VAR
      IntegrationRecord@1001 : Record 5151;
      MediaID@1002 : GUID;
    BEGIN
      FindIntegrationRecordFromFilter(IntegrationRecord,IdFilter);
      Id := IntegrationRecord."Integration ID";

      MediaID := GetMediaID(IntegrationRecord);
      SetValuesFromMediaID(MediaID);
    END;

    PROCEDURE SavePicture@30();
    VAR
      IntegrationRecord@1000 : Record 5151;
      Customer@1004 : Record 18;
      Item@1003 : Record 27;
      Vendor@1002 : Record 23;
      Employee@1001 : Record 5200;
      ImageInStream@1005 : InStream;
    BEGIN
      FindIntegrationRecordFromFilter(IntegrationRecord,STRSUBSTNO('=%1',Id));
      Content.CREATEINSTREAM(ImageInStream);

      CASE IntegrationRecord."Table ID" OF
        DATABASE::Item:
          BEGIN
            Item.GET(IntegrationRecord."Record ID");
            CLEAR(Item.Picture);
            Item.Picture.IMPORTSTREAM(ImageInStream,GetDefaultMediaDescription(Item));
            Item.MODIFY(TRUE);
          END;
        DATABASE::Customer:
          BEGIN
            Customer.GET(IntegrationRecord."Record ID");
            CLEAR(Customer.Image);
            Customer.Image.IMPORTSTREAM(ImageInStream,GetDefaultMediaDescription(Customer));
            Customer.MODIFY(TRUE);
          END;
        DATABASE::Vendor:
          BEGIN
            Vendor.GET(IntegrationRecord."Record ID");
            CLEAR(Vendor.Image);
            Vendor.Image.IMPORTSTREAM(ImageInStream,GetDefaultMediaDescription(Vendor));
            Vendor.MODIFY(TRUE);
          END;
        DATABASE::Employee:
          BEGIN
            Employee.GET(IntegrationRecord."Record ID");
            CLEAR(Employee.Image);
            Employee.Image.IMPORTSTREAM(
              ImageInStream,GetDefaultMediaDescription(Employee));
            Employee.MODIFY(TRUE);
          END;
        ELSE
          ThrowEntityNotSupportedError(IntegrationRecord);
      END;

      LoadData(STRSUBSTNO('=%1',Id));
    END;

    PROCEDURE DeletePicture@16();
    VAR
      IntegrationRecord@1005 : Record 5151;
      Customer@1004 : Record 18;
      Item@1003 : Record 27;
      Vendor@1002 : Record 23;
      Employee@1001 : Record 5200;
    BEGIN
      FindIntegrationRecordFromFilter(IntegrationRecord,STRSUBSTNO('=%1',Id));

      CASE IntegrationRecord."Table ID" OF
        DATABASE::Item:
          BEGIN
            Item.GET(IntegrationRecord."Record ID");
            CLEAR(Item.Picture);
            Item.MODIFY(TRUE);
          END;
        DATABASE::Customer:
          BEGIN
            Customer.GET(IntegrationRecord."Record ID");
            CLEAR(Customer.Image);
            Customer.MODIFY(TRUE);
          END;
        DATABASE::Vendor:
          BEGIN
            Vendor.GET(IntegrationRecord."Record ID");
            CLEAR(Vendor.Image);
            Vendor.MODIFY(TRUE);
          END;
        DATABASE::Employee:
          BEGIN
            Employee.GET(IntegrationRecord."Record ID");
            CLEAR(Employee.Image);
            Employee.MODIFY(TRUE);
          END;
        ELSE
          ThrowEntityNotSupportedError(IntegrationRecord);
      END;

      CLEAR(Rec);
      Id := IntegrationRecord."Integration ID";
    END;

    LOCAL PROCEDURE GetMediaID@11(VAR IntegrationRecord@1002 : Record 5151) : GUID;
    VAR
      Customer@1006 : Record 18;
      Item@1005 : Record 27;
      Vendor@1004 : Record 23;
      Employee@1003 : Record 5200;
      MediaID@1000 : GUID;
    BEGIN
      CASE IntegrationRecord."Table ID" OF
        DATABASE::Item:
          BEGIN
            Item.GET(IntegrationRecord."Record ID");
            IF Item.Picture.COUNT > 0 THEN
              MediaID := Item.Picture.ITEM(1);
          END;
        DATABASE::Customer:
          BEGIN
            Customer.GET(IntegrationRecord."Record ID");
            MediaID := Customer.Image.MEDIAID;
          END;
        DATABASE::Vendor:
          BEGIN
            Vendor.GET(IntegrationRecord."Record ID");
            MediaID := Vendor.Image.MEDIAID;
          END;
        DATABASE::Employee:
          BEGIN
            Employee.GET(IntegrationRecord."Record ID");
            MediaID := Employee.Image.MEDIAID;
          END;
        ELSE
          ThrowEntityNotSupportedError(IntegrationRecord);
      END;

      EXIT(MediaID);
    END;

    LOCAL PROCEDURE SetValuesFromMediaID@26(MediaID@1000 : GUID);
    VAR
      TenantMedia@1002 : Record 2000000184;
    BEGIN
      // TODO: This code should be replaced once we get a proper platform support
      // We should not build dependencies to TenantMedia table
      IF ISNULLGUID(MediaID) THEN
        EXIT;

      TenantMedia.SETAUTOCALCFIELDS(Content);
      IF NOT TenantMedia.GET(MediaID) THEN
        EXIT;

      "Mime Type" := TenantMedia."Mime Type";
      Width := TenantMedia.Width;
      Height := TenantMedia.Height;

      Content := TenantMedia.Content;
    END;

    LOCAL PROCEDURE FindIntegrationRecordFromFilter@27(VAR IntegrationRecord@1000 : Record 5151;IDFilter@1001 : Text);
    BEGIN
      IF IDFilter = '' THEN
        ERROR(IdNotProvidedErr);

      IntegrationRecord.SETFILTER("Integration ID",IDFilter);
      IF NOT IntegrationRecord.FINDFIRST THEN
        ERROR(RequestedRecordDoesNotExistErr);
    END;

    LOCAL PROCEDURE ThrowEntityNotSupportedError@35(VAR IntegrationRecord@1007 : Record 5151);
    VAR
      AllObjWithCaption@1006 : Record 2000000058;
    BEGIN
      AllObjWithCaption.SETRANGE("Object Type",AllObjWithCaption."Object Type"::Table);
      AllObjWithCaption.SETRANGE("Object ID",IntegrationRecord."Table ID");
      IF AllObjWithCaption.FINDFIRST THEN ;
      ERROR(STRSUBSTNO(RequestedRecordIsNotSupportedErr,AllObjWithCaption."Object Caption"));
    END;

    PROCEDURE GetDefaultMediaDescription@1(ParentRecord@1000 : Variant) : Text;
    VAR
      Item@1002 : Record 27;
      Customer@1003 : Record 18;
      Employee@1004 : Record 5200;
      Vendor@1005 : Record 23;
      ParentRecordRef@1001 : RecordRef;
    BEGIN
      ParentRecordRef.GETTABLE(ParentRecord);

      CASE ParentRecordRef.NUMBER OF
        DATABASE::Item:
          BEGIN
            ParentRecordRef.SETTABLE(Item);
            EXIT(STRSUBSTNO('%1 %2.%3',Item."No.",Item.Description,GetDefaultExtension));
          END;
        DATABASE::Customer:
          BEGIN
            ParentRecordRef.SETTABLE(Customer);
            EXIT(STRSUBSTNO('%1 %2.%3',Customer."No.",Customer.Name,GetDefaultExtension));
          END;
        DATABASE::Vendor:
          BEGIN
            ParentRecordRef.SETTABLE(Vendor);
            EXIT(STRSUBSTNO('%1 %2.%3',Vendor."No.",Vendor.Name,GetDefaultExtension));
          END;
        DATABASE::Employee:
          BEGIN
            ParentRecordRef.SETTABLE(Employee);
            EXIT(STRSUBSTNO('%1 %2 %3.%4',Employee."No.",Employee."First Name",Employee."Last Name",GetDefaultExtension));
          END;
      END;

      EXIT('');
    END;

    PROCEDURE GetDefaultExtension@2() : Text;
    BEGIN
      EXIT('jpg');
    END;

    BEGIN
    END.
  }
}

