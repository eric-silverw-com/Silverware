OBJECT Page 7002 Sales Prices
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Prices;
               ESM=Precios ventas;
               FRC=Prix de vente;
               ENC=Sales Prices];
    SaveValues=Yes;
    SourceTable=Table7002;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    PageType=List;
    ShowFilter=No;
    OnInit=BEGIN
             SalesCodeFilterCtrlEnable := TRUE;
             SalesCodeControlEditable := TRUE;
             IsLookupMode := CurrPage.LOOKUPMODE;
           END;

    OnOpenPage=BEGIN
                 IsOnMobile := ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::Phone;
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnAfterGetCurrRecord=BEGIN
                           SalesCodeControlEditable := SetSalesCodeEditable("Sales Type");
                         END;

    ActionList=ACTIONS
    {
      { 3       ;    ;ActionContainer;
                      Name=Filtering;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      Name=Filter;
                      CaptionML=[ENU=Filter;
                                 ESM=Filtro;
                                 FRC=Filtre;
                                 ENC=Filter];
                      ToolTipML=[ENU=Apply the filter.;
                                 ESM=Aplicar el filtro.;
                                 FRC=Appliquer le filtre.;
                                 ENC=Apply the filter.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=Filter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FilterLines;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=ClearFilter;
                      CaptionML=[ENU=Clear Filter;
                                 ESM=Borrar filtro;
                                 FRC=Effacer le filtre;
                                 ENC=Clear Filter];
                      ToolTipML=[ENU=Clear filter.;
                                 ESM=Borrar filtro.;
                                 FRC=Effacer le filtre.;
                                 ENC=Clear filter.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsOnMobile;
                      Image=ClearFilter;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RESET;
                                 UpdateBasicRecFilters;
                                 EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
                                 SetEditableFields;
                               END;
                                }
      { 48      ;1   ;Action    ;
                      Name=CopyPrices;
                      CaptionML=[ENU=Copy Prices;
                                 ESM=Copiar precios;
                                 FRC=Copier prix;
                                 ENC=Copy Prices];
                      ToolTipML=[ENU=Select prices and press OK to copy them to Customer No.;
                                 ESM=Seleccione precios y haga clic en Aceptar para copiarlos a N.§ de cliente.;
                                 FRC=S‚lectionnez les prix et appuyez sur OK pour les copier dans le champ Nø client.;
                                 ENC=Select prices and press OK to copy them to Customer No.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT IsLookupMode;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyPrices;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General];
                Visible=NOT IsOnMobile }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           ESM=Filtro tipo ventas;
                           FRC=Filtre type vente;
                           ENC=Sales Type Filter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign,None;
                                 ESM=Cliente,Grupo precio cliente,Todos los clientes,Campa¤a,Ninguno;
                                 FRC=Client,Groupe de prix du client,Tous les clients,Promotion,Aucun;
                                 ENC=Customer,Customer Price Group,All Customers,Campaign,None];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           ESM=Filtro c¢d. ventas;
                           FRC=Filtre code vente;
                           ENC=Sales Code Filter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page 22;
                           CustPriceGrList@1004 : Page 7;
                           CampaignList@1002 : Page 5087;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                             EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::"Customer Price Group":
                               BEGIN
                                 CustPriceGrList.LOOKUPMODE := TRUE;
                                 IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustPriceGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::Campaign:
                               BEGIN
                                 CampaignList.LOOKUPMODE := TRUE;
                                 IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CampaignList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                Name=ItemNoFilterCtrl;
                CaptionML=[ENU=Item No. Filter;
                           ESM=Filtro n§ prod.;
                           FRC=Filtre nø article;
                           ENC=Item No. Filter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                         BEGIN
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             Text := ItemList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           ESM=Filtro fecha inicio;
                           FRC=Filtre date d‚but;
                           ENC=Starting Date Filter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             TextManagement@1030 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(StartingDateFilter);
                             StartingDateFilterOnAfterValid;
                           END;
                            }

    { 38  ;2   ;Field     ;
                Name=CurrencyCodeFilterCtrl;
                CaptionML=[ENU=Currency Code Filter;
                           ESM=Filtro c¢d. divisa;
                           FRC=Filtre code devise;
                           ENC=Currency Code Filter];
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                ApplicationArea=#Suite;
                SourceExpr=CurrencyCodeFilter;
                OnValidate=BEGIN
                             CurrencyCodeFilterOnAfterValid;
                           END;

                OnLookup=VAR
                           CurrencyList@1000 : Page 5;
                         BEGIN
                           CurrencyList.LOOKUPMODE := TRUE;
                           IF CurrencyList.RUNMODAL = ACTION::LookupOK THEN
                             Text := CurrencyList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Filters;
                           ESM=Filtros;
                           FRC=Filtres;
                           ENC=Filters];
                Visible=IsOnMobile;
                GroupType=Group }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a filter for which sales prices to display.;
                           ESM=Especifica un filtro para indicar qu‚ precios de venta se deben mostrar.;
                           FRC=Sp‚cifie un filtre pour choisir les prix de vente … afficher.;
                           ENC=Specifies a filter for which sales prices to display.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetFilterDescription;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               FilterLines;
                               CurrPage.UPDATE(FALSE);
                             END;
                              }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the sales price type, which defines whether the price is for an individual, group, all customers, or a campaign.;
                           ESM=Especifica el tipo de precio de venta, que define si el precio es para un cliente individual, un grupo, todos los clientes o una campa¤a.;
                           FRC=Sp‚cifie le type de prix de vente, qui d‚finit si le prix concerne un client, un groupe, tous les clients ou une promotion.;
                           ENC=Specifies the sales price type, which defines whether the price is for an individual, group, all customers, or a campaign.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Type";
                Editable=SalesTypeControlEditable;
                OnValidate=BEGIN
                             SalesCodeControlEditable := SetSalesCodeEditable("Sales Type");
                           END;
                            }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that belongs to the Sales Type.;
                           ESM=Especifica el c¢digo que pertenece al tipo de venta.;
                           FRC=Sp‚cifie le code correspondant au type vente.;
                           ENC=Specifies the code that belongs to the Sales Type.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sales Code";
                Editable=SalesCodeControlEditable }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item for which the sales price is valid.;
                           ESM=Especifica el n£mero del producto para el que es v lido el precio de venta.;
                           FRC=Sp‚cifie le num‚ro de l'article pour lequel le prix de vente est valable.;
                           ENC=Specifies the number of the item for which the sales price is valid.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Item No." }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant of the item on the line.;
                           ESM=Especifica la variante del producto que figura en la l¡nea.;
                           FRC=Indique la variante de l'article sur la ligne.;
                           ENC=Specifies the variant of the item on the line.];
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the currency of the sales price.;
                           ESM=Especifica el c¢digo de divisa del precio de venta.;
                           FRC=Sp‚cifie le code de la devise du prix de vente.;
                           ENC=Specifies the code for the currency of the sales price.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           ESM=Especifica c¢mo se mide cada unidad del producto o el recurso, por ejemplo, en piezas u horas. De forma predeterminada, se inserta el valor en el campo Unidad de medida base de la ficha de producto o recurso.;
                           FRC=Sp‚cifie la maniŠre dont chaque unit‚ de mesure de l'article ou de la ressource est mesur‚e, par exemple en unit‚ de mesures ou en heures. Par d‚faut, la valeur du champ unit‚ de mesure de base de la fiche article ou la ressource est ins‚r‚e.;
                           ENC=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the minimum sales quantity required to warrant the sales price.;
                           ESM=Especifica la cantidad de venta m¡nima necesaria para garantizar el precio de venta.;
                           FRC=Sp‚cifie la quantit‚ vendue minimale requise pour garantir le prix ou la remise.;
                           ENC=Specifies the minimum sales quantity required to warrant the sales price.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Minimum Quantity" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the price of one unit of the item or resource. You can enter a price manually or have it entered according to the Price/Profit Calculation field on the related card.;
                           ESM=Especifica el precio de una unidad del producto o recurso. Puede introducir un precio manualmente o hacer que se introduzca bas ndose en el campo C lculo precio/bf§ bruto en la ficha relacionada.;
                           FRC=Sp‚cifie le prix d'une unit‚ de l'article ou de la ressource. Vous pouvez entrer un prix manuellement ou le g‚n‚rer automatiquement conform‚ment au champ Calcul prix ou profit de la fiche associ‚e.;
                           ENC=Specifies the price of one unit of the item or resource. You can enter a price manually or have it entered according to the Price/Profit Calculation field on the related card.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit Price" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date from which the sales price is valid.;
                           ESM=Especifica la fecha a partir de la cual es v lido el precio de venta.;
                           FRC=Sp‚cifie la date de d‚but de validit‚ du prix de vente.;
                           ENC=Specifies the date from which the sales price is valid.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Starting Date" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the calendar date when the sales price agreement ends.;
                           ESM=Especifica la fecha del calendario en la que finaliza el acuerdo de precios de venta.;
                           FRC=Sp‚cifie la date du calendrier … laquelle se termine l'entente sur le prix de vente.;
                           ENC=Specifies the calendar date when the sales price agreement ends.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the sales price includes tax.;
                           ESM=Especifica si el precio de venta incluye IVA.;
                           FRC=Indique si le prix de vente inclut la TVA.;
                           ENC=Specifies if the sales price includes tax.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Price Includes VAT";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if a line discount will be calculated when the sales price is offered.;
                           ESM=Especifica si se calcula un descuento de l¡nea cuando se ofrece el precio de venta.;
                           FRC=Sp‚cifie si un escompte ligne sera calcul‚ pour l'offre du prix vente.;
                           ENC=Specifies if a line discount will be calculated when the sales price is offered.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Line Disc.";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if an invoice discount will be calculated when the sales price is offered.;
                           ESM=Especifica si se calcula un descuento en factura cuando se ofrece el precio de venta.;
                           FRC=Sp‚cifie si un escompte de facture est calcul‚ lorsque le prix de vente est propos‚.;
                           ENC=Specifies if an invoice discount will be calculated when the sales price is offered.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Tax business posting group for customers for whom you want the sales price (which includes tax) to apply.;
                           ESM=Especifica el grupo de registro de IVA de negocio para los clientes a los que desea aplicar el precio de venta (que incluye el IVA).;
                           FRC=Sp‚cifie le groupe de report TVA pour les clients auxquels vous souhaitez appliquer le prix de vente (avec TVA).;
                           ENC=Specifies the Tax business posting group for customers for whom you want the sales price (which includes tax) to apply.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      CustPriceGr@1005 : Record 6;
      Campaign@1008 : Record 5071;
      ClientTypeManagement@1077 : Codeunit 4;
      SalesTypeFilter@1000 : 'Customer,Customer Price Group,All Customers,Campaign,None';
      SalesCodeFilter@1003 : Text;
      ItemNoFilter@1011 : Text;
      StartingDateFilter@1006 : Text[30];
      CurrencyCodeFilter@1002 : Text;
      Text000@1007 : TextConst 'ENU=All Customers;ESM=Todos clientes;FRC=Tous les clients;ENC=All Customers';
      Text001@1009 : TextConst 'ENU=No %1 within the filter %2.;ESM=El filtro %2 no contiene %1.;FRC=Aucun %1 dans le filtre %2.;ENC=No %1 within the filter %2.';
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;
      IsOnMobile@1004 : Boolean;
      IsLookupMode@1017 : Boolean;
      SalesTypeControlEditable@1012 : Boolean;
      SalesCodeControlEditable@1013 : Boolean;
      MultipleCustomersSelectedErr@1018 : TextConst 'ENU=More than one customer uses these sales prices. To copy prices, the Sales Code Filter field must contain one customer only.;ESM=M s de un cliente usa estos precios de venta. Para copiar precios, el campo Filtro c¢d. ventas debe contener un solo cliente.;FRC=Plus d''un client utilise ces prix de vente. Pour copier des prix, le champ Filtre code vente doit contenir un client uniquement.;ENC=More than one customer uses these sales prices. To copy prices, the Sales Code Filter field must contain one customer only.';
      IncorrectSalesTypeToCopyPricesErr@1010 : TextConst 'ENU=To copy sales prices, The Sales Type Filter field must contain Customer.;ESM=Para copiar precios de venta, el campo Filtro tipo ventas debe Cliente.;FRC=Pour copier les prix de vente, le champ Filtre type vente doit contenir un client.;ENC=To copy sales prices, The Sales Type Filter field must contain Customer.';

    LOCAL PROCEDURE GetRecFilters@2();
    BEGIN
      IF GETFILTERS <> '' THEN
        UpdateBasicRecFilters;

      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
    END;

    LOCAL PROCEDURE UpdateBasicRecFilters@17();
    BEGIN
      IF GETFILTER("Sales Type") <> '' THEN
        SalesTypeFilter := GetSalesTypeFilter
      ELSE
        SalesTypeFilter := SalesTypeFilter::None;

      SalesCodeFilter := GETFILTER("Sales Code");
      ItemNoFilter := GETFILTER("Item No.");
      CurrencyCodeFilter := GETFILTER("Currency Code");
    END;

    PROCEDURE SetRecFilters@1();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      IF ItemNoFilter <> '' THEN BEGIN
        SETFILTER("Item No.",ItemNoFilter);
      END ELSE
        SETRANGE("Item No.");

      IF CurrencyCodeFilter <> '' THEN BEGIN
        SETFILTER("Currency Code",CurrencyCodeFilter);
      END ELSE
        SETRANGE("Currency Code");

      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          CheckFilters(DATABASE::Customer,SalesCodeFilter);
        SalesTypeFilter::"Customer Price Group":
          CheckFilters(DATABASE::"Customer Price Group",SalesCodeFilter);
        SalesTypeFilter::Campaign:
          CheckFilters(DATABASE::Campaign,SalesCodeFilter);
      END;
      CheckFilters(DATABASE::Item,ItemNoFilter);
      CheckFilters(DATABASE::Currency,CurrencyCodeFilter);

      SetEditableFields;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE GetCaption@3() : Text;
    BEGIN
      IF IsOnMobile THEN
        EXIT('');

      EXIT(GetFilterDescription);
    END;

    LOCAL PROCEDURE GetFilterDescription@7() : Text;
    VAR
      ObjTranslation@1000 : Record 377;
      SourceTableName@1002 : Text;
      SalesSrcTableName@1003 : Text;
      Description@1001 : Text;
    BEGIN
      GetRecFilters;

      SourceTableName := '';
      IF ItemNoFilter <> '' THEN
        SourceTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,27);

      SalesSrcTableName := '';
      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,18);
            Cust."No." := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Cust."No."));
            IF Cust.FIND THEN
              Description := Cust.Name;
          END;
        SalesTypeFilter::"Customer Price Group":
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,6);
            CustPriceGr.Code := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CustPriceGr.Code));
            IF CustPriceGr.FIND THEN
              Description := CustPriceGr.Description;
          END;
        SalesTypeFilter::Campaign:
          BEGIN
            SalesSrcTableName := ObjTranslation.TranslateObject(ObjTranslation."Object Type"::Table,5071);
            Campaign."No." := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(Campaign."No."));
            IF Campaign.FIND THEN
              Description := Campaign.Description;
          END;
        SalesTypeFilter::"All Customers":
          BEGIN
            SalesSrcTableName := Text000;
            Description := '';
          END;
      END;

      IF SalesSrcTableName = Text000 THEN
        EXIT(STRSUBSTNO('%1 %2 %3',SalesSrcTableName,SourceTableName,ItemNoFilter));
      EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,ItemNoFilter));
    END;

    LOCAL PROCEDURE CheckFilters@4(TableNo@1000 : Integer;FilterTxt@1001 : Text);
    VAR
      FilterRecordRef@1002 : RecordRef;
      FilterFieldRef@1003 : FieldRef;
    BEGIN
      IF FilterTxt = '' THEN
        EXIT;
      CLEAR(FilterRecordRef);
      CLEAR(FilterFieldRef);
      FilterRecordRef.OPEN(TableNo);
      FilterFieldRef := FilterRecordRef.FIELD(1);
      FilterFieldRef.SETFILTER(FilterTxt);
      IF FilterRecordRef.ISEMPTY THEN
        ERROR(Text001,FilterRecordRef.CAPTION,FilterTxt);
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE CurrencyCodeFilterOnAfterValid@19015290();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE GetSalesTypeFilter@1000() : Integer;
    BEGIN
      CASE GETFILTER("Sales Type") OF
        FORMAT("Sales Type"::Customer):
          EXIT(0);
        FORMAT("Sales Type"::"Customer Price Group"):
          EXIT(1);
        FORMAT("Sales Type"::"All Customers"):
          EXIT(2);
        FORMAT("Sales Type"::Campaign):
          EXIT(3);
      END;
    END;

    LOCAL PROCEDURE SetSalesCodeEditable@5(SalesType@1000 : Option) : Boolean;
    BEGIN
      EXIT(SalesType <> "Sales Type"::"All Customers");
    END;

    LOCAL PROCEDURE SetEditableFields@10();
    BEGIN
      SalesTypeControlEditable := GETFILTER("Sales Type") = '';
      SalesCodeControlEditable :=
        SalesCodeControlEditable AND (GETFILTER("Sales Code") = '');
    END;

    LOCAL PROCEDURE FilterLines@6();
    VAR
      FilterPageBuilder@1000 : FilterPageBuilder;
    BEGIN
      FilterPageBuilder.ADDTABLE(TABLECAPTION,DATABASE::"Sales Price");

      FilterPageBuilder.SETVIEW(TABLECAPTION,GETVIEW);
      IF GETFILTER("Sales Type") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Type"));
      IF GETFILTER("Sales Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Sales Code"));
      IF GETFILTER("Item No.") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Item No."));
      IF GETFILTER("Starting Date") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Starting Date"));
      IF GETFILTER("Currency Code") = '' THEN
        FilterPageBuilder.ADDFIELDNO(TABLECAPTION,FIELDNO("Currency Code"));

      IF FilterPageBuilder.RUNMODAL THEN
        SETVIEW(FilterPageBuilder.GETVIEW(TABLECAPTION));

      UpdateBasicRecFilters;
      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
      SetEditableFields;
    END;

    LOCAL PROCEDURE CopyPrices@8();
    VAR
      Customer@1001 : Record 18;
      SalesPrice@1004 : Record 7002;
      SelectedSalesPrice@1005 : Record 7002;
      SalesPrices@1002 : Page 7002;
      CopyToCustomerNo@1003 : Code[20];
    BEGIN
      IF SalesTypeFilter <> SalesTypeFilter::Customer THEN
        ERROR(IncorrectSalesTypeToCopyPricesErr);
      Customer.SETFILTER("No.",SalesCodeFilter);
      IF Customer.COUNT <> 1 THEN
        ERROR(MultipleCustomersSelectedErr);
      CopyToCustomerNo := COPYSTR(SalesCodeFilter,1,MAXSTRLEN(CopyToCustomerNo));
      SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
      SalesPrice.SETFILTER("Sales Code",'<>%1',SalesCodeFilter);
      SalesPrices.LOOKUPMODE(TRUE);
      SalesPrices.SETTABLEVIEW(SalesPrice);
      IF SalesPrices.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SalesPrices.GetSelectionFilter(SelectedSalesPrice);
        CopySalesPriceToCustomersSalesPrice(SelectedSalesPrice,CopyToCustomerNo);
      END;
    END;

    PROCEDURE GetSelectionFilter@9(VAR SalesPrice@1000 : Record 7002);
    BEGIN
      CurrPage.SETSELECTIONFILTER(SalesPrice);
    END;

    BEGIN
    END.
  }
}

