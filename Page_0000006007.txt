OBJECT Page 6007 Res. Availability Lines (SM)
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:21 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Lines;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       Res.CALCFIELDS(Capacity,"Qty. on Service Order");
                       CapacityAfterOrders := Res.Capacity;
                       CapacityAfterQuotes := CapacityAfterOrders;
                       NetAvailability := CapacityAfterQuotes - Res."Qty. on Service Order";
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Period Start;
                ToolTipML=ENU=Specifies a series of dates according to the selected time interval.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Start" }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Period Name;
                ToolTipML=ENU=Specifies the name of the period shown in the line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Name" }

    { 4   ;2   ;Field     ;
                Name=Capacity;
                CaptionML=ENU=Capacity;
                ToolTipML=ENU=Specifies the total capacity for the corresponding time period.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=Res.Capacity;
                OnDrillDown=VAR
                              ResCapacityEntry@1001 : Record 160;
                            BEGIN
                              ResCapacityEntry.SETRANGE("Resource No.",Res."No.");
                              ResCapacityEntry.SETRANGE(Date,"Period Start","Period End");
                              PAGE.RUNMODAL(0,ResCapacityEntry);
                            END;
                             }

    { 16  ;2   ;Field     ;
                CaptionML=ENU=Qty. on Service Order;
                ToolTipML=ENU=Specifies how many units of the item are allocated to service orders, meaning listed on outstanding service order lines.;
                ApplicationArea=#Service;
                DecimalPlaces=0:5;
                SourceExpr=Res."Qty. on Service Order";
                OnDrillDown=BEGIN
                              ServOrderAlloc.SETCURRENTKEY("Resource No.","Document Type","Allocation Date",Status,Posted);
                              ServOrderAlloc.SETRANGE("Resource No.",Res."No.");
                              ServOrderAlloc.SETFILTER("Document Type",'%1|%2',ServOrderAlloc."Document Type"::Quote,ServOrderAlloc."Document Type"::Order);
                              ServOrderAlloc.SETRANGE("Allocation Date","Period Start","Period End");
                              ServOrderAlloc.SETFILTER(Status,'=%1|%2',ServOrderAlloc.Status::Active,ServOrderAlloc.Status::Finished);
                              ServOrderAlloc.SETRANGE(Posted,FALSE);
                              PAGE.RUNMODAL(0,ServOrderAlloc);
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Net Availability;
                ToolTipML=ENU=Specifies capacity, minus the quantity on order, minus the jobs quotes allocation.;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=NetAvailability }

  }
  CODE
  {
    VAR
      Res@1000 : Record 156;
      ServOrderAlloc@1007 : Record 5950;
      PeriodFormMgt@1001 : Codeunit 359;
      CapacityAfterOrders@1002 : Decimal;
      CapacityAfterQuotes@1003 : Decimal;
      NetAvailability@1004 : Decimal;
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1006 : 'Net Change,Balance at Date';

    [External]
    PROCEDURE Set@1(VAR NewRes@1000 : Record 156;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      Res.COPY(NewRes);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        Res.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        Res.SETRANGE("Date Filter",0D,"Period End");
    END;

    BEGIN
    END.
  }
}

