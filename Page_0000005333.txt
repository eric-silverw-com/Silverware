OBJECT Page 5333 CRM Skipped Records
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:59 PM;
    Version List=;
  }
  PROPERTIES
  {
    AccessByPermission=TableData 5331=R;
    Editable=No;
    CaptionML=ENU=Coupled Data Synchronization Errors;
    ApplicationArea=#Suite;
    SourceTable=Table5374;
    PageType=List;
    UsageCategory=Administration;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Synchronization,Broken Couplings;
    OnOpenPage=BEGIN
                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
                 IF NOT SetOutside AND CRMIntegrationEnabled THEN
                   CollectSkippedCRMIntegrationRecords;
               END;

    OnAfterGetCurrRecord=BEGIN
                           AreRecordsExist := TRUE;
                           IsOneOfRecordsDeleted := IsOneRecordDeleted;
                           DoBothOfRecordsExist := DoBothRecordsExist;
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 6       ;1   ;Action    ;
                      Name=Restore;
                      AccessByPermission=TableData 5331=IM;
                      CaptionML=ENU=Retry;
                      ToolTipML=ENU=Restore selected records for further Dynamics 365 for Sales synchronization.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND DoBothOfRecordsExist;
                      PromotedIsBig=Yes;
                      Image=ResetStatus;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CRMIntegrationRecord@1000 : Record 5331;
                                 CRMIntegrationManagement@1001 : Codeunit 5330;
                               BEGIN
                                 SetCurrentSelectionFilter(CRMIntegrationRecord);
                                 CRMIntegrationManagement.UpdateSkippedNow(CRMIntegrationRecord);
                                 Refresh(CRMIntegrationRecord);
                               END;
                                }
      { 9       ;1   ;Action    ;
                      Name=CRMSynchronizeNow;
                      CaptionML=ENU=Synchronize;
                      ToolTipML=ENU=Send or get updated data to or from Dynamics 365 for Sales.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND DoBothOfRecordsExist;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CRMIntegrationRecord@1000 : Record 5331;
                                 CRMIntegrationManagement@1001 : Codeunit 5330;
                               BEGIN
                                 SetCurrentSelectionFilter(CRMIntegrationRecord);
                                 CRMIntegrationManagement.UpdateMultipleNow(CRMIntegrationRecord);
                                 Refresh(CRMIntegrationRecord);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ShowLog;
                      CaptionML=ENU=Synchronization Log;
                      ToolTipML=ENU=View integration synchronization jobs for the skipped record.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND "Record Exists";
                      Image=Log;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 IntegrationRecord@1001 : Record 5151;
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 IntegrationRecord.FindByIntegrationId("Integration ID");
                                 CRMIntegrationManagement.ShowLog(IntegrationRecord."Record ID");
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ManageCRMCoupling;
                      CaptionML=ENU=Set Up Coupling;
                      ToolTipML=ENU=Create or modify the coupling to a Dynamics 365 for Sales entity.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND "Record Exists";
                      Image=LinkAccount;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CRMIntegrationRecord@1001 : Record 5331;
                                 IntegrationRecord@1002 : Record 5151;
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 IntegrationRecord.GET("Integration ID");
                                 IF CRMIntegrationRecord.FindByRecordID(IntegrationRecord."Record ID") THEN
                                   IF CRMIntegrationManagement.DefineCoupling(IntegrationRecord."Record ID") THEN BEGIN
                                     CRMIntegrationRecord.SETRECFILTER;
                                     Refresh(CRMIntegrationRecord);
                                   END;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=DeleteCRMCoupling;
                      AccessByPermission=TableData 5331=D;
                      CaptionML=ENU=Remove Coupling;
                      ToolTipML=ENU=Delete the coupling to a Dynamics 365 for Sales entity.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist;
                      Image=UnLinkAccount;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 DeleteCoupling;
                                 AreRecordsExist := FALSE;
                               END;
                                }
      { 7       ;1   ;Action    ;
                      Name=RestoreDeletedRec;
                      CaptionML=ENU=Restore Records;
                      ToolTipML=ENU=Restore the deleted coupled entity in Dynamics 365 for Sales. A synchronization job is run to achieve this.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND IsOneOfRecordsDeleted;
                      PromotedIsBig=Yes;
                      Image=CreateMovement;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 TempCRMSynchConflictBuffer@1000 : TEMPORARY Record 5374;
                               BEGIN
                                 TempCRMSynchConflictBuffer.COPY(Rec,TRUE);
                                 CurrPage.SETSELECTIONFILTER(TempCRMSynchConflictBuffer);
                                 TempCRMSynchConflictBuffer.RestoreDeletedRecords;
                               END;
                                }
      { 3       ;1   ;Action    ;
                      Name=DeleteCoupledRec;
                      CaptionML=ENU=Delete Records;
                      ToolTipML=ENU=Delete the coupled entity in Dynamics 365 for Sales.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=AreRecordsExist AND IsOneOfRecordsDeleted;
                      PromotedIsBig=Yes;
                      Image=CancelLine;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 TempCRMSynchConflictBuffer@1000 : TEMPORARY Record 5374;
                               BEGIN
                                 TempCRMSynchConflictBuffer.COPY(Rec,TRUE);
                                 CurrPage.SETSELECTIONFILTER(TempCRMSynchConflictBuffer);
                                 TempCRMSynchConflictBuffer.DeleteCoupledRecords;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 12  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Table ID" }

    { 13  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Table Name" }

    { 14  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=Description;
                OnDrillDown=BEGIN
                              CRMSynchHelper.ShowPage("Record ID");
                            END;
                             }

    { 17  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Record Exists" }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Coupled To;
                ApplicationArea=#Suite;
                SourceExpr="Int. Description";
                OnDrillDown=BEGIN
                              CRMSynchHelper.ShowPage("Int. Record ID");
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=ENU=Coupled Record Exists;
                ApplicationArea=#Suite;
                SourceExpr="Int. Record Exists" }

    { 15  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Error Message" }

    { 19  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Failed On" }

    { 16  ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr="Deleted On" }

  }
  CODE
  {
    VAR
      CRMIntegrationManagement@1001 : Codeunit 5330;
      CRMSynchHelper@1005 : Codeunit 5342;
      CRMIntegrationEnabled@1004 : Boolean;
      AreRecordsExist@1000 : Boolean;
      IsOneOfRecordsDeleted@1002 : Boolean;
      DoBothOfRecordsExist@1006 : Boolean;
      SetOutside@1003 : Boolean;

    LOCAL PROCEDURE CollectSkippedCRMIntegrationRecords@1();
    VAR
      CRMIntegrationRecord@1000 : Record 5331;
    BEGIN
      CRMIntegrationRecord.SETRANGE(Skipped,TRUE);
      SetRecords(CRMIntegrationRecord);
    END;

    LOCAL PROCEDURE SetCurrentSelectionFilter@2(VAR CRMIntegrationRecord@1000 : Record 5331);
    VAR
      TempCRMSynchConflictBuffer@1001 : TEMPORARY Record 5374;
    BEGIN
      TempCRMSynchConflictBuffer.COPY(Rec,TRUE);
      CurrPage.SETSELECTIONFILTER(TempCRMSynchConflictBuffer);
      TempCRMSynchConflictBuffer.SetSelectionFilter(CRMIntegrationRecord);
    END;

    [External]
    PROCEDURE SetRecords@3(VAR CRMIntegrationRecord@1000 : Record 5331);
    BEGIN
      Fill(CRMIntegrationRecord);
      SetOutside := TRUE;
    END;

    LOCAL PROCEDURE Refresh@4(VAR CRMIntegrationRecord@1000 : Record 5331);
    BEGIN
      UpdateSourceTable(CRMIntegrationRecord);
      AreRecordsExist := FALSE;
    END;

    BEGIN
    END.
  }
}

