OBJECT Table 1829 Consolidation Account
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:35 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Consolidation Account;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=ENU=No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=ENU=Name }
    { 3   ;   ;Income/Balance      ;Option        ;CaptionML=ENU=Income/Balance;
                                                   OptionCaptionML=ENU=Income Statement,Balance Sheet;
                                                   OptionString=Income Statement,Balance Sheet }
    { 4   ;   ;Blocked             ;Boolean       ;CaptionML=ENU=Blocked }
    { 5   ;   ;Direct Posting      ;Boolean       ;InitValue=Yes;
                                                   CaptionML=ENU=Direct Posting }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      XTaxesTok@1020129 : TextConst 'ENU=Taxes';
      XOtherMarketableSecuritiesTok@1020128 : TextConst 'ENU=Other Marketable Securities';
      XAccruedSalariesWagesTok@1020127 : TextConst 'ENU=Accrued Salaries & Wages';
      XHealthInsuranceTok@1020126 : TextConst 'ENU=Health Insurance';
      XGroupLifeInsuranceTok@1020125 : TextConst 'ENU=Group Life Insurance';
      XWorkersCompensationTok@1020124 : TextConst 'ENU=Workers Compensation';
      XStateIncomeTaxTok@1020123 : TextConst 'ENU=State Income Tax';
      XIncreasesduringtheYearTok@1020122 : TextConst 'ENU=Increases during the Year';
      XDecreasesduringtheYearTok@1020121 : TextConst 'ENU=Decreases during the Year';
      XAccumDepreciationBuildingsTok@1020120 : TextConst 'ENU=Accum. Depreciation, Buildings';
      XOperatingEquipmentTok@1020119 : TextConst 'ENU=Operating Equipment';
      XAccumDeprOperEquipTok@1020118 : TextConst 'ENU=Accum. Depr., Oper. Equip.';
      XVehiclesTok@1020117 : TextConst 'ENU=Vehicles';
      XAccumDepreciationVehiclesTok@1020116 : TextConst 'ENU=Accum. Depreciation, Vehicles';
      XResaleItemsTok@1020115 : TextConst 'ENU=Resale Items';
      XResaleItemsInterimTok@1020114 : TextConst 'ENU=Resale Items (Interim)';
      XCostofResaleSoldInterimTok@1020113 : TextConst 'ENU=Cost of Resale Sold (Interim)';
      XFinishedGoodsTok@1020112 : TextConst 'ENU=Finished Goods';
      XRawMaterialsTok@1020111 : TextConst 'ENU=Raw Materials';
      XCostofRawMatSoldInterimTok@1020110 : TextConst 'ENU=Cost of Raw Mat.Sold (Interim)';
      XCustomersDomesticTok@1020109 : TextConst 'ENU=Customers Domestic';
      XCustomersForeignTok@1020108 : TextConst 'ENU=Customers, Foreign';
      XAccruedInterestTok@1020107 : TextConst 'ENU=Accrued Interest';
      XOtherReceivablesTok@1020106 : TextConst 'ENU=Other Receivables';
      XBondsTok@1020105 : TextConst 'ENU=Bonds';
      XCashTok@1020104 : TextConst 'ENU=Cash';
      XBankLCYTok@1020103 : TextConst 'ENU=Bank, Checking';
      XBankCurrenciesTok@1020102 : TextConst 'ENU=Bank Currencies';
      XGiroAccountTok@1020101 : TextConst 'ENU=Bank Operations Cash';
      XCapitalStockTok@1020100 : TextConst 'ENU=Capital Stock';
      XRetainedEarningsTok@1020099 : TextConst 'ENU=Retained Earnings';
      XDeferredTaxesTok@1020098 : TextConst 'ENU=Deferred Taxes';
      XLongtermBankLoansTok@1020097 : TextConst 'ENU=Long-term Bank Loans';
      XMortgageTok@1020096 : TextConst 'ENU=Mortgage';
      XRevolvingCreditTok@1020095 : TextConst 'ENU=Revolving Credit';
      XVendorsDomesticTok@1020094 : TextConst 'ENU=Vendors, Domestic';
      XVendorsForeignTok@1020093 : TextConst 'ENU=Vendors, Foreign';
      XInvAdjmtInterimRetailTok@1020092 : TextConst 'ENU=Inv. Adjmt. (Interim), Retail';
      XInvAdjmtInterimRawMatTok@1020091 : TextConst 'ENU=Inv. Adjmt. (Interim), Raw Mat';
      XPurchaseTaxTokTok@1020090 : TextConst 'ENU=Purchase Tax';
      XWithholdingTaxesPayableTok@1020089 : TextConst 'ENU=Federal Withholding Payable';
      XSupplementaryTaxesPayableTok@1020088 : TextConst 'ENU=State Withholding Payable';
      XPayrollTaxesPayableTok@1020087 : TextConst 'ENU=Payroll Taxes Payable';
      XCorporateTaxesPayableTok@1020086 : TextConst 'ENU=Corporate Taxes Payable';
      XSalesRetailDomTok@1020085 : TextConst 'ENU=Sales, Retail - Dom.';
      XSalesRetailExportTok@1020084 : TextConst 'ENU=Sales, Retail - Export';
      XSalesRawMaterialsDomTok@1020083 : TextConst 'ENU=Sales, Raw Materials - Dom.';
      XSalesRawMaterialsExportTok@1020082 : TextConst 'ENU=Sales, Raw Materials - Export';
      XJobSalesAdjmtRawMatTok@1020081 : TextConst 'ENU=Job Sales Adjmt., Raw Mat.';
      XSalesResourcesDomTok@1020080 : TextConst 'ENU=Sales, Resources - Dom.';
      XSalesResourcesExportTok@1020079 : TextConst 'ENU=Sales, Resources - Export';
      XConsultingFeesDomTok@1020078 : TextConst 'ENU=Consulting Fees - Dom.';
      XFeesandChargesRecDomTok@1020077 : TextConst 'ENU=Fees and Charges Rec. - Dom.';
      XFeesandChargesRecEUTxtTok@1020076 : TextConst 'ENU=Fees and Charges Rec. - EU';
      XDiscountGrantedTok@1020075 : TextConst 'ENU=Discount Granted';
      XPurchRetailDomTok@1020074 : TextConst 'ENU=Purch., Retail - Dom.';
      XPurchRetailExportTok@1020073 : TextConst 'ENU=Purch., Retail - Export';
      XDiscReceivedRetailTok@1020072 : TextConst 'ENU=Disc. Received, Retail';
      XDeliveryExpensesRetailTok@1020071 : TextConst 'ENU=Delivery Expenses, Retail';
      XInventoryAdjmtRetailTok@1020070 : TextConst 'ENU=Inventory Adjmt., Retail';
      XCostofRetailSoldTok@1020069 : TextConst 'ENU=Cost of Retail Sold';
      XPurchRawMaterialsDomTok@1020068 : TextConst 'ENU=Purch., Raw Materials - Dom.';
      XPurchRawMaterialsExportTok@1020067 : TextConst 'ENU=Purch., Raw Materials - Export';
      XInventoryAdjmtRawMatTok@1020066 : TextConst 'ENU=Inventory Adjmt., Raw Mat.';
      XCostofRawMaterialsSoldTok@1020065 : TextConst 'ENU=Cost of Raw Materials Sold';
      XCostofResourcesUsedTok@1020064 : TextConst 'ENU=Cost of Resources Used';
      XJobCostsTok@1020063 : TextConst 'ENU=Job Costs';
      XCleaningTok@1020062 : TextConst 'ENU=Cleaning';
      XElectricityandHeatingTok@1020061 : TextConst 'ENU=Electricity and Heating';
      XRepairsandMaintenanceTok@1020060 : TextConst 'ENU=Repairs and Maintenance';
      XOfficeSuppliesTok@1020059 : TextConst 'ENU=Office Supplies';
      XPhoneandFaxTok@1020058 : TextConst 'ENU=Phone and Fax';
      XPostageTok@1020057 : TextConst 'ENU=Postage';
      XSoftwareTok@1020056 : TextConst 'ENU=Software';
      XConsultantServicesTok@1020055 : TextConst 'ENU=Consultant Services';
      XOtherComputerExpensesTok@1020054 : TextConst 'ENU=Other Computer Expenses';
      XAdvertisingTok@1020053 : TextConst 'ENU=Advertising';
      XEntertainmentandPRTok@1020052 : TextConst 'ENU=Entertainment and PR';
      XTravelTok@1020051 : TextConst 'ENU=Travel';
      XDeliveryExpensesTok@1020050 : TextConst 'ENU=Delivery Expenses';
      XGasolineandMotorOilTok@1020049 : TextConst 'ENU=Gasoline and Motor Oil';
      XRegistrationFeesTok@1020048 : TextConst 'ENU=Registration Fees';
      XCashDiscrepanciesTok@1020047 : TextConst 'ENU=Cash Discrepancies';
      XBadDebtExpensesTok@1020046 : TextConst 'ENU=Bad Debt Expenses';
      XLegalandAccountingServicesTok@1020045 : TextConst 'ENU=Legal and Accounting Services';
      XMiscellaneousTok@1020044 : TextConst 'ENU=Miscellaneous';
      XWagesTok@1020043 : TextConst 'ENU=Wages';
      XSalariesTok@1020042 : TextConst 'ENU=Salaries';
      XRetirementPlanContributionsTok@1020041 : TextConst 'ENU=Retirement Plan Contributions';
      XVacationCompensationTok@1020040 : TextConst 'ENU=Vacation Compensation';
      XPayrollTaxesTok@1020039 : TextConst 'ENU=Payroll Taxes';
      XDepreciationBuildingsTok@1020038 : TextConst 'ENU=Depreciation, Buildings';
      XDepreciationEquipmentTok@1020037 : TextConst 'ENU=Depreciation, Equipment';
      XDepreciationVehiclesTok@1020036 : TextConst 'ENU=Depreciation, Vehicles';
      XGainsandLossesTok@1020035 : TextConst 'ENU=Gains and Losses';
      XOtherCostsofOperationsTok@1020034 : TextConst 'ENU=Other Costs of Operations';
      XInterestonBankBalancesTok@1020033 : TextConst 'ENU=Interest on Bank Balances';
      XFinanceChargesfromCustomersTok@1020032 : TextConst 'ENU=Finance Charges from Customers';
      XPaymentDiscountsReceivedTok@1020031 : TextConst 'ENU=Payment Discounts Received';
      XPmtDiscReceivedDecreasesTok@1020030 : TextConst 'ENU=PmtDisc. Received - Decreases';
      XPaymentToleranceReceivedTok@1020029 : TextConst 'ENU=Payment Tolerance Received';
      XPmtTolReceivedDecreasesTok@1020028 : TextConst 'ENU=Pmt. Tol. Received Decreases';
      XInvoiceRoundingTok@1020027 : TextConst 'ENU=Invoice Rounding';
      XApplicationRoundingTok@1020026 : TextConst 'ENU=Application Rounding';
      XInterestonRevolvingCreditTok@1020025 : TextConst 'ENU=Interest on Revolving Credit';
      XInterestonBankLoansTok@1020024 : TextConst 'ENU=Interest on Bank Loans';
      XMortgageInterestTok@1020023 : TextConst 'ENU=Mortgage Interest';
      XFinanceChargestoVendorsTok@1020022 : TextConst 'ENU=Finance Charges to Vendors';
      XPaymentDiscountsGrantedTok@1020021 : TextConst 'ENU=Payment Discounts Granted';
      XPmtDiscGrantedDecreasesTok@1020020 : TextConst 'ENU=PmtDisc. Granted - Decreases';
      XPaymentToleranceGrantedTok@1020019 : TextConst 'ENU=Payment Tolerance Granted';
      XPmtTolGrantedDecreasesTok@1020018 : TextConst 'ENU=Pmt. Tol. Granted Decreases';
      XUnrealizedFXGainsTok@1020017 : TextConst 'ENU=Unrealized FX Gains';
      XUnrealizedFXLossesTok@1020016 : TextConst 'ENU=Unrealized FX Losses';
      XRealizedFXGainsTok@1020015 : TextConst 'ENU=Realized FX Gains';
      XRealizedFXLossesTok@1020014 : TextConst 'ENU=Realized FX Losses';
      XExtraordinaryIncomeTok@1020013 : TextConst 'ENU=Extraordinary Income';
      XExtraordinaryExpensesTok@1020012 : TextConst 'ENU=Extraordinary Expenses';
      XCorporateTaxTok@1020011 : TextConst 'ENU=Corporate Tax';
      XVendorPrepaymentsVATTok@1020010 : TextConst '@@@="%1=No Vat, Services, or Retail.  Do not translate.";ENU=Vendor Prepayments %1';
      XCustomerPrepaymentsVATTok@1020009 : TextConst '@@@="%1=No Vat, Services, or Retail.  Do not translate.";ENU=Customer Prepayments %1';
      XGSTHSTTok@1020008 : TextConst 'ENU=GST/HST - Sales Tax';
      XPSTTok@1020007 : TextConst 'ENU=Provincial Sales Tax';
      XACCRUEDPAYABLESTok@1020006 : TextConst 'ENU=Accrued Payables';
      XLandTok@1020005 : TextConst 'ENU=Land';
      XBuildingsTok@1020004 : TextConst 'ENU=Buildings';
      XRentExpensesTok@1020003 : TextConst 'ENU=Rent expenses';
      XNOVATTok@1020002 : TextConst '@@@=Do not translate.;ENU=NO TAX';
      XRETAILTok@1020001 : TextConst '@@@=Do not translate.;ENU=RETAIL';
      XSERVICESTok@1020000 : TextConst '@@@=Do not translate.;ENU=SERVICES';

    PROCEDURE PopulateAccountsForCA@1020000();
    BEGIN
      InsertData('18400',XLandTok,1,FALSE);
      InsertData('18100',XBuildingsTok,1,FALSE);
      InsertData('18110',XIncreasesduringtheYearTok,1,FALSE);
      InsertData('18120',XDecreasesduringtheYearTok,1,FALSE);
      InsertData('18200',XAccumDepreciationBuildingsTok,1,FALSE);
      InsertData('17100',XOperatingEquipmentTok,1,TRUE);
      InsertData('17110',XIncreasesduringtheYearTok,1,TRUE);
      InsertData('17120',XDecreasesduringtheYearTok,1,FALSE);
      InsertData('17200',XAccumDeprOperEquipTok,1,TRUE);
      InsertData('16200',XVehiclesTok,1,FALSE);
      InsertData('16210',XIncreasesduringtheYearTok,1,TRUE);
      InsertData('16220',XDecreasesduringtheYearTok,1,FALSE);
      InsertData('16300',XAccumDepreciationVehiclesTok,1,FALSE);
      InsertData('14302',XCostofRawMatSoldInterimTok,1,FALSE);
      InsertData('53400',XInventoryAdjmtRawMatTok,0,TRUE);
      InsertData('14100',XResaleItemsTok,1,TRUE);
      InsertData('14101',XResaleItemsInterimTok,1,FALSE);
      InsertData('14102',XCostofResaleSoldInterimTok,1,FALSE);
      InsertData('14200',XFinishedGoodsTok,1,FALSE);
      InsertData('14300',XRawMaterialsTok,1,FALSE);
      InsertData('13100',XCustomersDomesticTok,1,TRUE);
      InsertData('13200',XCustomersForeignTok,1,FALSE);
      InsertData('13300',XAccruedInterestTok,1,TRUE);
      InsertData('13350',XOtherReceivablesTok,1,TRUE);
      InsertData('13510',STRSUBSTNO(XVendorPrepaymentsVATTok,XNOVATTok),1,FALSE);
      InsertData('13520',STRSUBSTNO(XVendorPrepaymentsVATTok,XSERVICESTok),1,FALSE);
      InsertData('13530',STRSUBSTNO(XVendorPrepaymentsVATTok,XRETAILTok),1,FALSE);
      InsertData('12100',XBondsTok,1,TRUE);
      InsertData('11200',XCashTok,1,TRUE);
      InsertData('11400',XBankLCYTok,1,TRUE);
      InsertData('11500',XBankCurrenciesTok,1,FALSE);
      InsertData('11600',XGiroAccountTok,1,FALSE);
      InsertData('12200',XOtherMarketableSecuritiesTok,1,TRUE);
      InsertData('30100',XCapitalStockTok,1,TRUE);
      InsertData('30200',XRetainedEarningsTok,1,TRUE);
      InsertData('25300',XDeferredTaxesTok,1,FALSE);
      InsertData('25100',XLongtermBankLoansTok,1,TRUE);
      InsertData('25200',XMortgageTok,1,TRUE);
      InsertData('22100',XRevolvingCreditTok,1,FALSE);
      InsertData('22160',STRSUBSTNO(XCustomerPrepaymentsVATTok,XNOVATTok),1,FALSE);
      InsertData('22170',STRSUBSTNO(XCustomerPrepaymentsVATTok,XSERVICESTok),1,FALSE);
      InsertData('22180',STRSUBSTNO(XCustomerPrepaymentsVATTok,XRETAILTok),1,FALSE);
      InsertData('22300',XVendorsDomesticTok,1,TRUE);
      InsertData('22400',XVendorsForeignTok,1,FALSE);
      InsertData('22450',XACCRUEDPAYABLESTok,1,FALSE);
      InsertData('22700',XPSTTok,1,TRUE);
      InsertData('22750',XPurchaseTaxTokTok,1,FALSE);
      InsertData('22780',XGSTHSTTok,1,TRUE);
      InsertData('22530',XInvAdjmtInterimRawMatTok,1,FALSE);
      InsertData('22550',XInvAdjmtInterimRetailTok,1,FALSE);
      InsertData('23050',XAccruedSalariesWagesTok,1,TRUE);
      InsertData('23100',XWithholdingTaxesPayableTok,1,TRUE);
      InsertData('23200',XSupplementaryTaxesPayableTok,1,TRUE);
      InsertData('23300',XPayrollTaxesPayableTok,1,TRUE);
      InsertData('24300',XCorporateTaxesPayableTok,1,TRUE);

      InsertData('44100',XSalesRetailDomTok,0,FALSE);
      InsertData('44300',XSalesRetailExportTok,0,FALSE);
      InsertData('42100',XSalesResourcesDomTok,0,FALSE);
      InsertData('42300',XSalesResourcesExportTok,0,FALSE);
      InsertData('43100',XSalesRawMaterialsDomTok,0,TRUE);
      InsertData('43300',XSalesRawMaterialsExportTok,0,TRUE);
      InsertData('43400',XJobSalesAdjmtRawMatTok,0,TRUE);
      InsertData('45000',XConsultingFeesDomTok,0,TRUE);
      InsertData('45100',XFeesandChargesRecDomTok,0,TRUE);
      InsertData('996820',XFeesandChargesRecEUTxtTok,0,TRUE);
      InsertData('45200',XDiscountGrantedTok,0,FALSE);
      InsertData('47100',XInterestonBankBalancesTok,0,TRUE);
      InsertData('47200',XFinanceChargesfromCustomersTok,0,TRUE);
      InsertData('47300',XPaymentDiscountsReceivedTok,0,FALSE);
      InsertData('47260',XPmtDiscReceivedDecreasesTok,0,FALSE);
      InsertData('47400',XInvoiceRoundingTok,0,FALSE);
      InsertData('47500',XApplicationRoundingTok,0,FALSE);
      InsertData('47510',XPaymentToleranceReceivedTok,0,FALSE);
      InsertData('47520',XPmtTolReceivedDecreasesTok,0,FALSE);
      InsertData('48100',XUnrealizedFXGainsTok,0,FALSE);
      InsertData('48200',XUnrealizedFXLossesTok,0,FALSE);
      InsertData('48300',XRealizedFXGainsTok,0,FALSE);
      InsertData('48400',XRealizedFXLossesTok,0,FALSE);
      InsertData('51000',XJobCostsTok,0,TRUE);
      InsertData('52200',XCostofResourcesUsedTok,0,TRUE);

      InsertData('53100',XPurchRawMaterialsDomTok,0,TRUE);
      InsertData('53200',XPurchRawMaterialsExportTok,0,TRUE);
      InsertData('53600',XCostofRawMaterialsSoldTok,0,TRUE);

      InsertData('54400',XDiscReceivedRetailTok,0,TRUE);
      InsertData('54100',XPurchRetailDomTok,0,FALSE);
      InsertData('54300',XPurchRetailExportTok,0,FALSE);
      InsertData('997150',XDeliveryExpensesRetailTok,0,TRUE);
      InsertData('54500',XInventoryAdjmtRetailTok,0,FALSE);
      InsertData('54700',XCostofRetailSoldTok,0,FALSE);
      InsertData('65100',XCleaningTok,0,TRUE);
      InsertData('65200',XElectricityandHeatingTok,0,TRUE);
      InsertData('65300',XRepairsandMaintenanceTok,0,TRUE);
      InsertData('65600',XOfficeSuppliesTok,0,TRUE);
      InsertData('65700',XPhoneandFaxTok,0,TRUE);
      InsertData('65800',XPostageTok,0,TRUE);
      InsertData('64100',XSoftwareTok,0,TRUE);
      InsertData('64200',XConsultantServicesTok,0,TRUE);
      InsertData('64300',XOtherComputerExpensesTok,0,TRUE);
      InsertData('64450',XRentExpensesTok,0,TRUE);
      InsertData('61100',XAdvertisingTok,0,TRUE);
      InsertData('61200',XEntertainmentandPRTok,0,TRUE);
      InsertData('61300',XTravelTok,0,TRUE);
      InsertData('61350',XDeliveryExpensesTok,0,TRUE);
      InsertData('63100',XGasolineandMotorOilTok,0,TRUE);
      InsertData('63200',XRegistrationFeesTok,0,TRUE);
      InsertData('63300',XRepairsandMaintenanceTok,0,TRUE);
      InsertData('63450',XTaxesTok,0,TRUE);
      InsertData('67100',XCashDiscrepanciesTok,0,TRUE);
      InsertData('67200',XBadDebtExpensesTok,0,TRUE);
      InsertData('67300',XLegalandAccountingServicesTok,0,TRUE);
      InsertData('67400',XMiscellaneousTok,0,TRUE);
      InsertData('62100',XWagesTok,0,TRUE);
      InsertData('62200',XSalariesTok,0,TRUE);
      InsertData('62300',XRetirementPlanContributionsTok,0,TRUE);
      InsertData('62400',XVacationCompensationTok,0,TRUE);
      InsertData('62500',XPayrollTaxesTok,0,TRUE);
      InsertData('62600',XHealthInsuranceTok,0,TRUE);

      InsertData('62700',XGroupLifeInsuranceTok,0,TRUE);
      InsertData('62800',XWorkersCompensationTok,0,TRUE);

      InsertData('66100',XDepreciationBuildingsTok,0,TRUE);
      InsertData('66200',XDepreciationEquipmentTok,0,TRUE);
      InsertData('66300',XDepreciationVehiclesTok,0,TRUE);
      InsertData('48500',XGainsandLossesTok,0,FALSE);
      InsertData('67500',XOtherCostsofOperationsTok,0,TRUE);

      InsertData('68100',XInterestonRevolvingCreditTok,0,TRUE);
      InsertData('68200',XInterestonBankLoansTok,0,TRUE);
      InsertData('68300',XMortgageInterestTok,0,TRUE);
      InsertData('68400',XFinanceChargestoVendorsTok,0,TRUE);
      InsertData('54800',XPaymentDiscountsGrantedTok,0,FALSE);
      InsertData('68455',XPmtDiscGrantedDecreasesTok,0,FALSE);
      InsertData('68460',XPaymentToleranceGrantedTok,0,FALSE);
      InsertData('68470',XPmtTolGrantedDecreasesTok,0,FALSE);
      InsertData('85100',XExtraordinaryIncomeTok,0,TRUE);
      InsertData('85200',XExtraordinaryExpensesTok,0,TRUE);
      InsertData('84100',XCorporateTaxTok,0,TRUE);
      InsertData('84200',XStateIncomeTaxTok,0,TRUE);
    END;

    PROCEDURE PopulateaccountsForUS@1020001();
    BEGIN
      InsertData('10100','Checking account',1,TRUE);
      InsertData('10200','Savings account',1,TRUE);
      InsertData('10300','Petty Cash',1,TRUE);
      InsertData('10400','Accounts Receivable',1,TRUE);
      InsertData('10500','Prepaid Rent',1,TRUE);
      InsertData('10600','Prepaid Insurance',1,TRUE);
      InsertData('10700','Inventory',1,TRUE);
      InsertData('10800','Equipment',1,TRUE);
      InsertData('10900','Accumulated Depreciation',1,TRUE);
      InsertData('20100','Accounts Payable',0,TRUE);
      InsertData('20200','Purchase Discounts',0,FALSE);
      InsertData('20300','Purchase Returns & Allowances',0,FALSE);
      InsertData('20400','Deferred Revenue',0,FALSE);
      InsertData('20500','Credit Cards',0,FALSE);
      InsertData('20600','Sales Tax Payable',0,FALSE);
      InsertData('20700','Accrued Salaries & Wages',0,TRUE);
      InsertData('20800','Federal Withholding Payable',0,TRUE);
      InsertData('20900','State Withholding Payable',0,TRUE);
      InsertData('21000','FICA Payable',0,TRUE);
      InsertData('21100','Medicare Payable',0,TRUE);
      InsertData('21200','FUTA Payable',0,TRUE);
      InsertData('21300','SUTA Payable',0,TRUE);
      InsertData('21400','Employee Benefits Payable',0,TRUE);
      InsertData('21500','Vacation Compensation Payable',0,TRUE);
      InsertData('21600','Garnishment Payable',0,TRUE);
      InsertData('21700','Federal Income Taxes Payable',0,TRUE);
      InsertData('21800','State Income Tax Payable',0,TRUE);
      InsertData('21900','Notes Payable',0,TRUE);
      InsertData('30100','Capital Stock',0,TRUE);
      InsertData('30200','Retained Earnings',0,TRUE);
      InsertData('30300','Distributions to Shareholders',0,TRUE);
      InsertData('40000','INCOME STATEMENT',0,TRUE);
      InsertData('40001','INCOME',0,TRUE);
      InsertData('40100','Income, Services',0,TRUE);
      InsertData('40200','Income, Product Sales',0,FALSE);
      InsertData('40300','Sales Discounts',0,FALSE);
      InsertData('40400','Sales Returns & Allowances',0,FALSE);
      InsertData('40500','Interest Income',0,TRUE);
      InsertData('40990','TOTAL INCOME',0,TRUE);
      InsertData('50100','Cost of Materials',1,FALSE);
      InsertData('50200','Cost of Labor',1,FALSE);
      InsertData('60001','EXPENSES',1,TRUE);
      InsertData('60100','Rent Expense',1,TRUE);
      InsertData('60200','Advertising Expense',1,TRUE);
      InsertData('60300','Interest Expense',1,TRUE);
      InsertData('60400','Bank Charges and Fees',1,TRUE);
      InsertData('60500','Processing Fees',1,TRUE);
      InsertData('60600','Bad Debt Expense',1,TRUE);
      InsertData('60700','Salaries Expense',1,TRUE);
      InsertData('60800','Payroll Tax Expense',1,TRUE);
      InsertData('60900','Workers Compensation ',1,TRUE);
      InsertData('61000','Health & Dental Insurance Expense',1,TRUE);
      InsertData('61100','Life Insurance Expense',1,TRUE);
      InsertData('61200','Repairs and Maintenance Expense',1,TRUE);
      InsertData('61300','Utilities Expense',1,TRUE);
      InsertData('61400','Office Supplies Expense',1,TRUE);
      InsertData('61500','Miscellaneous Expense',1,TRUE);
      InsertData('61600','Depreciation, Equipment',1,FALSE);
      InsertData('61700','Federal Income Tax Expense',1,TRUE);
      InsertData('61800','State Income Tax Expense',1,TRUE);
      InsertData('61900','Rounding',1,TRUE);
      InsertData('61990','TOTAL EXPENSES',1,TRUE);
    END;

    PROCEDURE PopulateAccounts@1();
    BEGIN
      InsertData('10100','Checking account',1,TRUE);
    END;

    LOCAL PROCEDURE InsertData@2(AccountNo@1000 : Code[20];AccountName@1001 : Text[50];IncomeBalance@1003 : Option;DirectPosting@1009 : Boolean);
    VAR
      ConsolidationAccount@1010 : Record 1829;
    BEGIN
      ConsolidationAccount.INIT;
      ConsolidationAccount.VALIDATE("No.",AccountNo);
      ConsolidationAccount.VALIDATE(Name,AccountName);
      ConsolidationAccount.VALIDATE("Direct Posting",DirectPosting);
      ConsolidationAccount.VALIDATE("Income/Balance",IncomeBalance);
      ConsolidationAccount.INSERT;
    END;

    PROCEDURE PopulateConsolidationAccountsForExistingCompany@4(ConsolidatedCompany@1000 : Text[50]);
    VAR
      GLAccount@1001 : Record 15;
    BEGIN
      GLAccount.CHANGECOMPANY(ConsolidatedCompany);
      GLAccount.RESET;
      GLAccount.SETFILTER("Account Type",FORMAT(GLAccount."Account Type"::Posting));
      IF GLAccount.FIND('-') THEN
        REPEAT
          InsertData(GLAccount."No.",GLAccount.Name,GLAccount."Income/Balance",GLAccount."Direct Posting");
        UNTIL GLAccount.NEXT = 0;
    END;

    PROCEDURE ValidateCountry@3(CountryCode@1000 : Code[2]) : Boolean;
    VAR
      ApplicationSystemConstants@1001 : Codeunit 9015;
    BEGIN
      IF STRPOS(ApplicationSystemConstants.ApplicationVersion,CountryCode) = 1 THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

