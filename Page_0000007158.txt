OBJECT Page 7158 Sales Analysis by Dimensions
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Analysis by Dimensions;
               ESM=An lisis de ventas por dimensiones;
               FRC=Analyse des ventes par dimensions;
               ENC=Sales Analysis by Dimensions];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table367;
    DataCaptionExpr=CurrentItemAnalysisViewCode;
    PageType=Card;
    OnInit=BEGIN
             Dim3FilterEnable := TRUE;
             Dim2FilterEnable := TRUE;
             Dim1FilterEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 CurrentAnalysisArea := CurrentAnalysisArea::Sales;

                 GLSetup.GET;

                 ItemAnalysisMgt.AnalysisViewSelection(
                   CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                   Dim1Filter,Dim2Filter,Dim3Filter);

                 IF (NewItemAnalysisCode <> '') AND (NewItemAnalysisCode <> CurrentItemAnalysisViewCode) THEN BEGIN
                   CurrentItemAnalysisViewCode := NewItemAnalysisCode;
                   ItemAnalysisMgt.CheckAnalysisView(CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView);
                   ItemAnalysisMgt.SetItemAnalysisView(
                     CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                     Dim1Filter,Dim2Filter,Dim3Filter);
                 END;

                 ItemAnalysisMgt.SetLineAndColDim(
                   ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
                 UpdateFilterFields;

                 FindPeriod('');

                 NoOfColumns := SalesAnalysisByDimMatrix.GetMatrixDimension;
                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
               END;

    OnFindRecord=BEGIN
                   EXIT(
                     ItemAnalysisMgt.FindRec(
                       ItemAnalysisView,LineDimOption,Rec,Which,
                       ItemFilter,LocationFilter,PeriodType,DateFilter,PeriodInitialized,InternalDateFilter,
                       Dim1Filter,Dim2Filter,Dim3Filter));
                 END;

    OnNextRecord=BEGIN
                   EXIT(
                     ItemAnalysisMgt.NextRec(
                       ItemAnalysisView,LineDimOption,Rec,Steps,
                       ItemFilter,LocationFilter,PeriodType,DateFilter,
                       Dim1Filter,Dim2Filter,Dim3Filter));
                 END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 12      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Actions;
                                 ESM=&Acciones;
                                 FRC=&Actions;
                                 ENC=&Actions];
                      Image=Action }
      { 15      ;2   ;Action    ;
                      CaptionML=[ENU=Reverse Lines and Columns;
                                 ESM=Invertir l¡neas y columnas;
                                 FRC=Inverser lignes et colonnes;
                                 ENC=Reverse Lines and Columns];
                      ToolTipML=[ENU=Change the display of the matrix by inverting the values in the Show as Lines and Show as Columns fields.;
                                 ESM=Cambia la visualizaci¢n de la matriz invirtiendo los valores de los campos Muestra como l¡neas y Muestra como columnas.;
                                 FRC=Modifiez l'affichage de la matrice en contrepassant les valeurs dans les champs Afficher lignes et Afficher colonnes.;
                                 ENC=Change the display of the matrix by inverting the values in the Show as Lines and Show as Columns fields.];
                      ApplicationArea=#Dimensions;
                      Image=Undo;
                      OnAction=VAR
                                 TempDimCode@1001 : Text[30];
                               BEGIN
                                 TempDimCode := ColumnDimCode;
                                 ColumnDimCode := LineDimCode;
                                 LineDimCode := TempDimCode;
                                 ItemAnalysisMgt.ValidateLineDimCode(
                                   ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 ItemAnalysisMgt.ValidateColumnDimCode(
                                   ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                                   InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 16      ;1   ;Action    ;
                      Name=ShowMatrix_Process;
                      CaptionML=[ENU=&Show Matrix;
                                 ESM=&Mostrar matriz;
                                 FRC=&Afficher matrice;
                                 ENC=&Show Matrix];
                      ToolTipML=[ENU=View the actual analysis report according to the selected filters and options.;
                                 ESM=Permite ver el informe de an lisis real en funci¢n de los filtros y las opciones seleccionados.;
                                 FRC=Affichez le rapport d'analyse r‚el en fonction des filtres et options s‚lectionn‚s.;
                                 ENC=View the actual analysis report according to the selected filters and options.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(SalesAnalysisByDimMatrix);
                                 ShowMatrix;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Name=PreviousSet;
                      CaptionML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      ToolTipML=[ENU=Go to the previous set of data.;
                                 ESM=Va al conjunto de datos anterior.;
                                 FRC=Allez … l'ensemble de donn‚es pr‚c‚dent.;
                                 ENC=Go to the previous set of data.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Previous);
                               END;
                                }
      { 2       ;1   ;Action    ;
                      Name=NextSet;
                      CaptionML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      ToolTipML=[ENU=Go to the next set of data.;
                                 ESM=Va al siguiente conjunto de datos.;
                                 FRC=Allez … l'ensemble de donn‚es suivant.;
                                 ENC=Go to the next set of data.];
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Analysis View Code;
                           ESM=C¢digo de vista de an lisis;
                           FRC=Code de vue d'analyse;
                           ENC=Analysis View Code];
                ToolTipML=[ENU=Specifies the code for the analysis view that the filter belongs to.;
                           ESM=Especifica el c¢digo de la vista de an lisis a la que pertenece el filtro.;
                           FRC=Sp‚cifie le code de la vue d'analyse … laquelle le filtre appartient.;
                           ENC=Specifies the code for the analysis view that the filter belongs to.];
                ApplicationArea=#Dimensions;
                SourceExpr=CurrentItemAnalysisViewCode;
                OnValidate=BEGIN
                             ItemAnalysisMgt.CheckAnalysisView(CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView);
                             CurrentItemAnalysisViewCodeOnA;
                           END;

                OnLookup=BEGIN
                           ItemAnalysisMgt.LookupItemAnalysisView(
                             CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
                             Dim1Filter,Dim2Filter,Dim3Filter);
                           ItemAnalysisMgt.SetLineAndColDim(
                             ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
                           UpdateFilterFields;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Show as Lines;
                           ESM=Muestra como l¡neas;
                           FRC=Afficher lignes;
                           ENC=Show as Lines];
                ToolTipML=[ENU=Specifies which values you want to show as lines in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.;
                           ESM=Especifica los valores que desea mostrar como l¡neas en la ventana. Esto le permite ver la misma ventana de la matriz desde distintas perspectivas, especialmente cuando usa el campo Muestra como l¡neas y el campo Muestra como columnas.;
                           FRC=Sp‚cifie les valeurs … afficher en tant que lignes dans la fenˆtre. Cela vous permet d'afficher la mˆme fenˆtre de matrice de diff‚rentes fa‡ons, en particulier si vous utilisez … la fois le champ Afficher lignes et le champ Afficher colonnes.;
                           ENC=Specifies which values you want to show as lines in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.];
                ApplicationArea=#Dimensions;
                SourceExpr=LineDimCode;
                OnValidate=BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               ColumnDimCode := '';
                               ItemAnalysisMgt.ValidateColumnDimCode(
                                 ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemAnalysisMgt.ValidateLineDimCode(
                               ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             IF LineDimOption = LineDimOption::Period THEN
                               SETCURRENTKEY("Period Start")
                             ELSE
                               SETCURRENTKEY(Code);
                             LineDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1002 : Text[30];
                         BEGIN
                           NewCode := ItemAnalysisMgt.GetDimSelection(LineDimCode,ItemAnalysisView);
                           IF NewCode <> LineDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=Show as Columns;
                           ESM=Muestra como columnas;
                           FRC=Afficher colonnes;
                           ENC=Show as Columns];
                ToolTipML=[ENU=Specifies which values you want to show as columns in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.;
                           ESM=Especifica los valores que desea mostrar como columnas en la ventana. Esto le permite ver la misma ventana de la matriz desde distintas perspectivas, especialmente cuando use el campo Muestra como l¡neas y el campo Muestra como columnas.;
                           FRC=Sp‚cifie les valeurs … afficher en tant que colonnes dans la fenˆtre. Cela vous permet d'afficher la mˆme fenˆtre de matrice de diff‚rentes fa‡ons, en particulier si vous utilisez … la fois le champ Afficher lignes et le champ Afficher colonnes.;
                           ENC=Specifies which values you want to show as columns in the window. This allows you to see the same matrix window from various perspectives, especially when you use both the Show as Lines field and the Show as Columns field.];
                ApplicationArea=#Dimensions;
                SourceExpr=ColumnDimCode;
                OnValidate=BEGIN
                             IF (UPPERCASE(LineDimCode) = UPPERCASE(ColumnDimCode)) AND (LineDimCode <> '') THEN BEGIN
                               LineDimCode := '';
                               ItemAnalysisMgt.ValidateLineDimCode(
                                 ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimOption,
                                 InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             END;
                             ItemAnalysisMgt.ValidateColumnDimCode(
                               ItemAnalysisView,ColumnDimCode,ColumnDimOption,LineDimOption,
                               InternalDateFilter,DateFilter,ItemStatisticsBuffer,PeriodInitialized);
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             ColumnDimCodeOnAfterValidate;
                           END;

                OnLookup=VAR
                           NewCode@1002 : Text[30];
                         BEGIN
                           NewCode := ItemAnalysisMgt.GetDimSelection(ColumnDimCode,ItemAnalysisView);
                           IF NewCode <> ColumnDimCode THEN BEGIN
                             Text := NewCode;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 47  ;2   ;Field     ;
                CaptionML=[ENU=Show Value As;
                           ESM=Mostrar valor como;
                           FRC=Afficher la valeur en tant que;
                           ENC=Show Value As];
                ToolTipML=[ENU=Specifies how data is shown in the analysis view.;
                           ESM=Especifica c¢mo se mostrar n los datos en la vista de an lisis.;
                           FRC=Sp‚cifie la fa‡on dont les donn‚es sont affich‚es dans la vue d'analyse.;
                           ENC=Specifies how data is shown in the analysis view.];
                OptionCaptionML=[ENU=Sales Amount,COGS Amount,Quantity;
                                 ESM=Importe venta,Costo ventas,Cantidad;
                                 FRC=Montant de vente,Montant CPV,Quantit‚;
                                 ENC=Sales Amount,COGS Amount,Quantity];
                ApplicationArea=#Dimensions;
                SourceExpr=ValueType }

    { 1907524401;1;Group  ;
                CaptionML=[ENU=Filters;
                           ESM=Filtros;
                           FRC=Filtres;
                           ENC=Filters] }

    { 25  ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ESM=Filtro fecha;
                           FRC=Filtre date;
                           ENC=Date Filter];
                ToolTipML=[ENU=Specifies the dates that will be used to filter the amounts in the window.;
                           ESM=Especifica las fechas que se usar n para filtrar los importes en la ventana.;
                           FRC=Indique les dates qui sont utilis‚es pour filtrer les montants dans la fenˆtre.;
                           ENC=Specifies the dates that will be used to filter the amounts in the window.];
                ApplicationArea=#Dimensions;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             TextManagement@1000 : Codeunit 41;
                           BEGIN
                             TextManagement.MakeDateFilter(DateFilter);
                             ItemStatisticsBuffer.SETFILTER("Date Filter",DateFilter);
                             DateFilter := ItemStatisticsBuffer.GETFILTER("Date Filter");
                             InternalDateFilter := DateFilter;
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             DateFilterOnAfterValidate;
                           END;
                            }

    { 38  ;2   ;Field     ;
                CaptionML=[ENU=Item Filter;
                           ESM=Filtro producto;
                           FRC=Filtre article;
                           ENC=Item Filter];
                ToolTipML=[ENU=Specifies a filter to specify the items for which values will be shown in the matrix window.;
                           ESM=Especifica un filtro para determinar los productos para los que se mostrar n valores en la ventana de la matriz.;
                           FRC=Sp‚cifie un filtre pour sp‚cifier les articles pour lesquels des valeurs seront affich‚es dans la fenˆtre de matrice.;
                           ENC=Specifies a filter to specify the items for which values will be shown in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             ItemFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                         BEGIN
                           ItemList.LOOKUPMODE(TRUE);
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Text := ItemList.GetSelectionFilter;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           ESM=Filtro almac‚n;
                           FRC=Filtre emplacement;
                           ENC=Location Filter];
                ToolTipML=[ENU=Specifies the filter through which you want to analyze sales entries.;
                           ESM=Especifica el filtro a trav‚s del cual desea analizar los movimientos de venta.;
                           FRC=Sp‚cifie le filtre via lequel vous souhaitez analyser les ‚critures vente.;
                           ENC=Specifies the filter through which you want to analyse sales entries.];
                ApplicationArea=#Location;
                SourceExpr=LocationFilter;
                OnValidate=BEGIN
                             LocationFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           LocationList@1002 : Page 15;
                         BEGIN
                           LocationList.LOOKUPMODE(TRUE);
                           IF LocationList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Text := LocationList.GetSelectionFilter;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 17  ;2   ;Field     ;
                CaptionML=[ENU=Budget Filter;
                           ESM=Filtro presupuesto;
                           FRC=Filtre budget;
                           ENC=Budget Filter];
                ToolTipML=[ENU=Specifies the budget that information in the matrix is shown for.;
                           ESM=Especifica el presupuesto para el que se muestra la informaci¢n en la matriz.;
                           FRC=Sp‚cifie le budget pour lequel des informations sont affich‚es dans la matrice.;
                           ENC=Specifies the budget that information in the matrix is shown for.];
                ApplicationArea=#Dimensions;
                SourceExpr=BudgetFilter;
                OnValidate=BEGIN
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             BudgetFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemBudgetName@1000 : Record 7132;
                         BEGIN
                           ItemBudgetName.FILTERGROUP := 2;
                           ItemBudgetName.SETRANGE("Analysis Area",CurrentAnalysisArea);
                           ItemBudgetName.FILTERGROUP := 0;
                           IF PAGE.RUNMODAL(0,ItemBudgetName) = ACTION::LookupOK THEN BEGIN
                             Text := ItemBudgetName.Name;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 34  ;2   ;Field     ;
                Name=Dim1FilterControl;
                CaptionML=[ENU=Dimension 1 Filter;
                           ESM=Filtro dimensi¢n 1;
                           FRC=Filtre de dimension 1;
                           ENC=Dimension 1 Filter];
                ToolTipML=[ENU=Specifies a filter for the Dimension 1 for which entries will be shown in the matrix window.;
                           ESM=Especifica un filtro para la Dimensi¢n 1 para la que se mostrar n movimientos en la ventana de la matriz.;
                           FRC=Sp‚cifie un filtre pour la dimensionÿ1 pour laquelle des entr‚es seront affich‚es dans la fenˆtre de matrice.;
                           ENC=Specifies a filter for the Dimension 1 for which entries will be shown in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=Dim1Filter;
                CaptionClass=ItemAnalysisMgt.GetCaptionClass(1,ItemAnalysisView);
                Enabled=Dim1FilterEnable;
                OnValidate=BEGIN
                             ItemStatisticsBuffer.SETFILTER("Dimension 1 Filter",Dim1Filter);
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             Dim1FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 1 Code",Text));
                         END;
                          }

    { 30  ;2   ;Field     ;
                Name=Dim2FilterControl;
                CaptionML=[ENU=Dimension 2 Filter;
                           ESM=Filtro dimensi¢n 2;
                           FRC=Filtre de dimension 2;
                           ENC=Dimension 2 Filter];
                ToolTipML=[ENU=Specifies a filter for the Dimension 2 for which entries will be shown in the matrix window.;
                           ESM=Especifica un filtro para la Dimensi¢n 2 para la que se mostrar n movimientos en la ventana de la matriz.;
                           FRC=Sp‚cifie un filtre pour la dimensionÿ2 pour laquelle des entr‚es seront affich‚es dans la fenˆtre de matrice.;
                           ENC=Specifies a filter for the Dimension 2 for which entries will be shown in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=Dim2Filter;
                CaptionClass=ItemAnalysisMgt.GetCaptionClass(2,ItemAnalysisView);
                Enabled=Dim2FilterEnable;
                OnValidate=BEGIN
                             ItemStatisticsBuffer.SETFILTER("Dimension 2 Filter",Dim2Filter);
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             Dim2FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 2 Code",Text));
                         END;
                          }

    { 46  ;2   ;Field     ;
                Name=Dim3FilterControl;
                CaptionML=[ENU=Dimension 3 Filter;
                           ESM=Filtro dimensi¢n 3;
                           FRC=Filtre de dimension 3;
                           ENC=Dimension 3 Filter];
                ToolTipML=[ENU=Specifies a filter for the Dimension 3 for which entries will be shown in the matrix window.;
                           ESM=Especifica un filtro para la Dimensi¢n 3 para la que se mostrar n movimientos en la ventana de la matriz.;
                           FRC=Sp‚cifie un filtre pour la dimensionÿ3 pour laquelle des entr‚es seront affich‚es dans la fenˆtre de matrice.;
                           ENC=Specifies a filter for the Dimension 3 for which entries will be shown in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=Dim3Filter;
                CaptionClass=ItemAnalysisMgt.GetCaptionClass(3,ItemAnalysisView);
                Enabled=Dim3FilterEnable;
                OnValidate=BEGIN
                             ItemStatisticsBuffer.SETFILTER("Dimension 3 Filter",Dim3Filter);
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                             Dim3FilterOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           EXIT(ItemAnalysisMgt.LookUpDimFilter(ItemAnalysisView."Dimension 3 Code",Text));
                         END;
                          }

    { 1903121901;1;Group  ;
                CaptionML=[ENU=Options;
                           ESM=Opciones;
                           FRC=Options;
                           ENC=Options] }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Show;
                           ESM=Mostrar;
                           FRC=Afficher;
                           ENC=Show];
                ToolTipML=[ENU=Specifies if the selected value is shown in the window.;
                           ESM=Especifica si el valor seleccionado se muestra en la ventana.;
                           FRC=Sp‚cifie si la valeur s‚lectionn‚e est affich‚e dans la fenˆtre.;
                           ENC=Specifies if the selected value is shown in the window.];
                OptionCaptionML=[ENU=Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%;
                                 ESM=Importes reales,Importes pptados.,Desviaci¢n,% Desviaci¢n,% Öndice;
                                 FRC=R‚alis‚,Budg‚t‚,Variance,% ‚cart,% indice;
                                 ENC=Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%];
                ApplicationArea=#Dimensions;
                SourceExpr=ShowActualBudget }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Rounding Factor;
                           ESM=Factor redondeo;
                           FRC=Facteur d'arrondissement;
                           ENC=Rounding Factor];
                ToolTipML=[ENU=Specifies the factor that is used to round the amounts.;
                           ESM=Especifica el factor que se usa para redondear los importes.;
                           FRC=Sp‚cifie le facteur qui est utilis‚ pour arrondir les montants.;
                           ENC=Specifies the factor that is used to round the amounts.];
                OptionCaptionML=[ENU=None,1,1000,1000000;
                                 ESM=No,1,1000,1000000;
                                 FRC=Aucun,1,1000,1000000;
                                 ENC=None,1,1000,1000000];
                ApplicationArea=#Dimensions;
                SourceExpr=RoundingFactor }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Show Column Name;
                           ESM=Muestra nombre columna;
                           FRC=Afficher nom de colonne;
                           ENC=Show Column Name];
                ToolTipML=[ENU=Specifies that the names of columns are shown in the matrix window.;
                           ESM=Especifica que los nombres de las columnas se muestran en la ventana de la matriz.;
                           FRC=Sp‚cifie que les noms de colonnes sont affich‚s dans la fenˆtre de la matrice.;
                           ENC=Specifies that the names of columns are shown in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;
                            }

    { 50  ;2   ;Field     ;
                CaptionML=[ENU=Show Opposite Sign;
                           ESM=Muestra signo opuesto;
                           FRC=Afficher le signe oppos‚;
                           ENC=Show Opposite Sign];
                ToolTipML=[ENU=Specifies whether to show debits as negative amounts (with minus signs) and credits as positive amounts in the matrix window.;
                           ESM=Especifica si se muestran los d‚bitos como importes negativos (es decir, con signo negativo) y los cr‚ditos como importes positivos en la ventana de la matriz.;
                           FRC=Indique si les d‚bits doivent ˆtre affich‚s comme des montants n‚gatifs (avec un signe moins) et les cr‚dits comme des montants positifs dans la fenˆtre de la matrice.;
                           ENC=Specifies whether to show debits as negative amounts (with minus signs) and credits as positive amounts in the matrix window.];
                ApplicationArea=#Dimensions;
                SourceExpr=ShowOppositeSign;
                MultiLine=Yes }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ESM=Opciones matriz;
                           FRC=Options de matrice;
                           ENC=Matrix Options] }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESM=Ver por;
                           FRC=Afficher par;
                           ENC=View by];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           ESM=Especifica para qu‚ periodos se muestran los importes.;
                           FRC=Indique selon quelle p‚riodicit‚ les montants sont affich‚s.;
                           ENC=Specifies by which period amounts are displayed.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESM=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable;
                                 FRC=Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode comptable;
                                 ENC=Day,Week,Month,Quarter,Year,Accounting Period];
                ApplicationArea=#Dimensions;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
                           END;
                            }

    { 20  ;2   ;Field     ;
                Name=ColumnSet;
                CaptionML=[ENU=Column Set;
                           ESM=Conjunto de columnas;
                           FRC=Jeu de colonnes;
                           ENC=Column Set];
                ToolTipML=[ENU=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.;
                           ESM=Especifica el rango de valores que se muestran en la ventana de la matriz, por ejemplo, el periodo total. Para modificar el contenido de este campo, elija la opci¢n Conjunto siguiente o Conjunto anterior.;
                           FRC=Sp‚cifie la plage de valeurs affich‚e dans la fenˆtre de matrice (par exemple, total de la p‚riode). Pour modifier le contenu de ce champ, choisissez Jeu pr‚c‚dent ou Jeu suivant.;
                           ENC=Specifies the range of values that are displayed in the matrix window, for example, the total period. To change the contents of the field, choose Next Set or Previous Set.];
                ApplicationArea=#Dimensions;
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      GLSetup@1025 : Record 98;
      ItemAnalysisView@1011 : Record 7152;
      ItemStatisticsBuffer@1002 : Record 5821;
      MATRIX_PeriodRecords@1003 : ARRAY [32] OF Record 2000000007;
      ItemAnalysisMgt@1038 : Codeunit 7153;
      MatrixMgt@1031 : Codeunit 9200;
      SalesAnalysisByDimMatrix@1000 : Page 9227;
      CurrentItemAnalysisViewCode@1016 : Code[10];
      CurrentAnalysisArea@1001 : 'Sales,Purchase,Inventory';
      ValueType@1004 : 'Sales Amount,COGS Amount,Sales Quantity';
      ShowActualBudget@1027 : 'Actual Amounts,Budgeted Amounts,Variance,Variance%,Index%';
      RoundingFactor@1005 : 'None,1,1000,1000000';
      LineDimOption@1007 : 'Item,Period,Location,Dimension 1,Dimension 2,Dimension 3';
      ColumnDimOption@1006 : 'Item,Period,Location,Dimension 1,Dimension 2,Dimension 3';
      PeriodType@1008 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      BudgetFilter@1026 : Code[250];
      LineDimCode@1020 : Text[30];
      ColumnDimCode@1019 : Text[30];
      InternalDateFilter@1014 : Text[30];
      MatrixColumnCaptions@1022 : ARRAY [32] OF Text[80];
      PeriodInitialized@1015 : Boolean;
      ShowColumnName@1029 : Boolean;
      ShowOppositeSign@1030 : Boolean;
      DateFilter@1021 : Text[30];
      Dim1Filter@1043 : Code[250];
      Dim2Filter@1042 : Code[250];
      Dim3Filter@1041 : Code[250];
      ItemFilter@1040 : Code[250];
      LocationFilter@1039 : Code[250];
      FirstColumnDate@1035 : Date;
      LastColumnDate@1032 : Date;
      NoOfColumns@1047 : Integer;
      MATRIX_PKFirstRecInCurrSet@1046 : Text;
      MATRIX_CurrSetLength@1048 : Integer;
      MATRIX_CaptionRange@1049 : Text;
      MATRIX_CodeRange@1023 : Text[250];
      MATRIX_SetWanted@1051 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn';
      NewItemAnalysisCode@1036 : Code[10];
      Dim1FilterEnable@19054192 : Boolean INDATASET;
      Dim2FilterEnable@19062512 : Boolean INDATASET;
      Dim3FilterEnable@19011605 : Boolean INDATASET;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[3]);
    VAR
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      PeriodFormMgt.FindPeriodOnMatrixPage(
        DateFilter,InternalDateFilter,SearchText,PeriodType,
        (LineDimOption <> LineDimOption::Period) AND (ColumnDimOption <> ColumnDimOption::Period));
    END;

    LOCAL PROCEDURE RefreshInternalDateFilter@1();
    VAR
      Item@1000 : Record 27;
    BEGIN
      Item.SETRANGE("Date Filter",FirstColumnDate,LastColumnDate);
      IF Item.GETRANGEMIN("Date Filter") = Item.GETRANGEMAX("Date Filter") THEN
        Item.SETRANGE("Date Filter",Item.GETRANGEMIN("Date Filter"));
      InternalDateFilter := COPYSTR(Item.GETFILTER("Date Filter"),1,MAXSTRLEN(InternalDateFilter));
    END;

    LOCAL PROCEDURE UpdateFilterFields@4();
    VAR
      ItemAnalysisViewFilter@1000 : Record 7153;
    BEGIN
      ItemFilter := ItemAnalysisView."Item Filter";
      Dim1Filter := '';
      Dim2Filter := '';
      Dim3Filter := '';

      Dim1FilterEnable := ItemAnalysisView."Dimension 1 Code" <> '';
      Dim2FilterEnable := ItemAnalysisView."Dimension 2 Code" <> '';
      Dim3FilterEnable := ItemAnalysisView."Dimension 3 Code" <> '';

      IF Dim1FilterEnable THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 1 Code")
        THEN
          Dim1Filter := ItemAnalysisViewFilter."Dimension Value Filter";

      IF Dim2FilterEnable THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 2 Code")
        THEN
          Dim2Filter := ItemAnalysisViewFilter."Dimension Value Filter";

      IF Dim3FilterEnable THEN
        IF ItemAnalysisViewFilter.GET(
             ItemAnalysisView."Analysis Area",ItemAnalysisView.Code,ItemAnalysisView."Dimension 3 Code")
        THEN
          Dim3Filter := ItemAnalysisViewFilter."Dimension Value Filter";
    END;

    LOCAL PROCEDURE MATRIX_GenerateColumnCaptions@5(SetWanted@1001 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    BEGIN
      CASE ColumnDimOption OF
        ColumnDimOption::Item:
          SetPointsItem(SetWanted);
        ColumnDimOption::Location:
          SetPointsLocation(SetWanted);
        ColumnDimOption::Period:
          BEGIN
            MatrixMgt.GeneratePeriodMatrixData(SetWanted,NoOfColumns,ShowColumnName,PeriodType,DateFilter,MATRIX_PKFirstRecInCurrSet,
              MatrixColumnCaptions,MATRIX_CaptionRange,MATRIX_CurrSetLength,MATRIX_PeriodRecords);
            IF MATRIX_CurrSetLength > 0 THEN BEGIN
              FirstColumnDate := MATRIX_PeriodRecords[1]."Period Start";
              LastColumnDate := MATRIX_PeriodRecords[MATRIX_CurrSetLength]."Period Start";
            END;
            RefreshInternalDateFilter;
          END;
        ColumnDimOption::"Dimension 1":
          SetPointsDim(ItemAnalysisView."Dimension 1 Code",Dim1Filter,SetWanted);
        ColumnDimOption::"Dimension 2":
          SetPointsDim(ItemAnalysisView."Dimension 2 Code",Dim2Filter,SetWanted);
        ColumnDimOption::"Dimension 3":
          SetPointsDim(ItemAnalysisView."Dimension 3 Code",Dim3Filter,SetWanted);
      END;
    END;

    LOCAL PROCEDURE SetPointsItem@22(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      Item@1013 : Record 27;
      RecRef@1000 : RecordRef;
      CaptionFieldNo@1003 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      Item.SETFILTER("No.",ItemFilter);
      RecRef.GETTABLE(Item);
      RecRef.SETTABLE(Item);

      IF ShowColumnName THEN
        CaptionFieldNo := Item.FIELDNO(Description)
      ELSE
        CaptionFieldNo := Item.FIELDNO("No.");

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);
      MATRIX_CodeRange :=
        MatrixMgt.GetPKRange(RecRef,Item.FIELDNO("No."),MATRIX_PKFirstRecInCurrSet,MATRIX_CurrSetLength);
    END;

    LOCAL PROCEDURE SetPointsLocation@6(SetWanted@1001 : 'Initial,Previous,Same,Next');
    VAR
      Location@1013 : Record 14;
      RecRef@1000 : RecordRef;
      CaptionFieldNo@1002 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      Location.SETFILTER(Code,LocationFilter);
      RecRef.GETTABLE(Location);
      RecRef.SETTABLE(Location);

      IF ShowColumnName THEN
        CaptionFieldNo := Location.FIELDNO(Name)
      ELSE
        CaptionFieldNo := Location.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);
      MATRIX_CodeRange :=
        MatrixMgt.GetPKRange(RecRef,Location.FIELDNO(Code),MATRIX_PKFirstRecInCurrSet,MATRIX_CurrSetLength)
    END;

    LOCAL PROCEDURE SetPointsDim@17(DimensionCode@1003 : Code[20];DimFilter@1002 : Code[250];SetWanted@1004 : 'Initial,Previous,Same,Next,PreviousColumn,NextColumn');
    VAR
      DimVal@1001 : Record 349;
      MatrixMgt@1000 : Codeunit 9200;
      RecRef@1005 : RecordRef;
      CaptionFieldNo@1006 : Integer;
    BEGIN
      CLEAR(MatrixColumnCaptions);
      DimVal.SETRANGE("Dimension Code",DimensionCode);
      IF DimFilter <> '' THEN
        DimVal.SETFILTER(Code,DimFilter);
      RecRef.GETTABLE(DimVal);
      RecRef.SETTABLE(DimVal);

      IF ShowColumnName THEN
        CaptionFieldNo := DimVal.FIELDNO(Name)
      ELSE
        CaptionFieldNo := DimVal.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(RecRef,SetWanted,NoOfColumns,CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,MatrixColumnCaptions,
        MATRIX_CaptionRange,MATRIX_CurrSetLength);
      IF DimensionCode <> '' THEN
        MATRIX_CodeRange :=
          MatrixMgt.GetPKRange(RecRef,DimVal.FIELDNO(Code),MATRIX_PKFirstRecInCurrSet,MATRIX_CurrSetLength);
    END;

    LOCAL PROCEDURE ShowMatrix@10();
    VAR
      CurItemFilter@1000 : Text[250];
      CurLocationFilter@1001 : Text[250];
      CurDim1Filter@1002 : Text[250];
      CurDim2Filter@1003 : Text[250];
      CurDim3Filter@1004 : Text[250];
    BEGIN
      PeriodInitialized := ColumnDimOption = ColumnDimOption::Period;
      IF CurItemFilter = '' THEN
        CurItemFilter := ItemFilter;
      IF CurLocationFilter = '' THEN
        CurLocationFilter := LocationFilter;
      IF CurDim1Filter = '' THEN
        CurDim1Filter := Dim1Filter;
      IF CurDim2Filter = '' THEN
        CurDim2Filter := Dim2Filter;
      IF CurDim3Filter = '' THEN
        CurDim3Filter := Dim3Filter;

      SalesAnalysisByDimMatrix.LoadVariables(ItemAnalysisView,
        CurrentItemAnalysisViewCode,CurrentAnalysisArea,
        LineDimOption,ColumnDimOption,PeriodType,ValueType,
        RoundingFactor,ShowActualBudget,MatrixColumnCaptions,
        ShowOppositeSign,PeriodInitialized,ShowColumnName,MATRIX_CurrSetLength);
      SalesAnalysisByDimMatrix.LoadFilters(CurItemFilter,CurLocationFilter,CurDim1Filter,CurDim2Filter,CurDim3Filter,
        DateFilter,BudgetFilter,InternalDateFilter);
      SalesAnalysisByDimMatrix.LoadCodeRange(MATRIX_CodeRange);

      SalesAnalysisByDimMatrix.RUNMODAL;
    END;

    [External]
    PROCEDURE SetCurrentAnalysisViewCode@7(NewAnalysisViewCode@1000 : Code[10]);
    BEGIN
      NewItemAnalysisCode := NewAnalysisViewCode;
    END;

    LOCAL PROCEDURE CurrentItemAnalysisViewCodeOnA@19045075();
    BEGIN
      ItemAnalysisMgt.SetItemAnalysisView(
        CurrentAnalysisArea,CurrentItemAnalysisViewCode,ItemAnalysisView,ItemStatisticsBuffer,
        Dim1Filter,Dim2Filter,Dim3Filter);
      ItemAnalysisMgt.SetLineAndColDim(
        ItemAnalysisView,LineDimCode,LineDimOption,ColumnDimCode,ColumnDimOption);
      UpdateFilterFields;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE LineDimCodeOnAfterValidate@19031201();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ColumnDimCodeOnAfterValidate@19023109();
    BEGIN
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE Dim2FilterOnAfterValidate@19005475();
    BEGIN
      CurrPage.UPDATE;
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE Dim1FilterOnAfterValidate@19005240();
    BEGIN
      CurrPage.UPDATE;
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE Dim3FilterOnAfterValidate@19064950();
    BEGIN
      CurrPage.UPDATE;
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE ItemFilterOnAfterValidate@19051257();
    BEGIN
      ItemStatisticsBuffer.SETFILTER("Item Filter",ItemFilter);
      CurrPage.UPDATE(FALSE);
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE LocationFilterOnAfterValidate@19070361();
    BEGIN
      ItemStatisticsBuffer.SETFILTER("Location Filter",LocationFilter);
      CurrPage.UPDATE(FALSE);
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Initial);
    END;

    LOCAL PROCEDURE BudgetFilterOnAfterValidate@19069837();
    BEGIN
      ItemStatisticsBuffer.SETFILTER("Budget Filter",BudgetFilter);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DateFilterOnAfterValidate@19006009();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    BEGIN
      MATRIX_GenerateColumnCaptions(MATRIX_SetWanted::Same);
    END;

    BEGIN
    END.
  }
}

