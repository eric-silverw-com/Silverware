OBJECT Table 320 Tax Jurisdiction
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:14:13 PM;
    Version List=;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               SetDefaults;
               InsertDetailLines;
             END;

    OnDelete=BEGIN
               DeleteDetailLines;
             END;

    CaptionML=ENU=Tax Jurisdiction;
    LookupPageID=Page466;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=ENU=Code;
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=ENU=Description }
    { 3   ;   ;Tax Account (Sales) ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Tax Account (Sales) }
    { 4   ;   ;Tax Account (Purchases);Code20     ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Tax Account (Purchases) }
    { 5   ;   ;Report-to Jurisdiction;Code10      ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=ENU=Report-to Jurisdiction }
    { 6   ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=ENU=Date Filter }
    { 7   ;   ;Tax Group Filter    ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Tax Group";
                                                   CaptionML=ENU=Tax Group Filter }
    { 8   ;   ;Unreal. Tax Acc. (Sales);Code20    ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Unreal. Tax Acc. (Sales) }
    { 9   ;   ;Unreal. Tax Acc. (Purchases);Code20;TableRelation="G/L Account";
                                                   CaptionML=ENU=Unreal. Tax Acc. (Purchases) }
    { 10  ;   ;Reverse Charge (Purchases);Code20  ;TableRelation="G/L Account";
                                                   CaptionML=ENU=Reverse Charge (Purchases) }
    { 11  ;   ;Unreal. Rev. Charge (Purch.);Code20;TableRelation="G/L Account";
                                                   CaptionML=ENU=Unreal. Rev. Charge (Purch.) }
    { 12  ;   ;Unrealized VAT Type ;Option        ;OnValidate=BEGIN
                                                                IF "Unrealized VAT Type" > 0 THEN BEGIN
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Unrealized VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Unrealized Tax Type;
                                                   OptionCaptionML=ENU=" ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)";
                                                   OptionString=[ ,Percentage,First,Last,First (Fully Paid),Last (Fully Paid)] }
    { 13  ;   ;Calculate Tax on Tax;Boolean       ;OnValidate=BEGIN
                                                                TaxDetail.SETRANGE("Tax Jurisdiction Code",Code);
                                                                TaxDetail.MODIFYALL("Calculate Tax on Tax","Calculate Tax on Tax");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=ENU=Calculate Tax on Tax }
    { 14  ;   ;Adjust for Payment Discount;Boolean;OnValidate=BEGIN
                                                                IF "Adjust for Payment Discount" THEN BEGIN
                                                                  GLSetup.GET;
                                                                  GLSetup.TESTFIELD("Adjust for Payment Disc.",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Adjust for Payment Discount }
    { 15  ;   ;Name                ;Text30        ;CaptionML=ENU=Name }
    { 10010;  ;Country/Region      ;Option        ;CaptionML=ENU=Country/Region;
                                                   OptionCaptionML=ENU=US,CA;
                                                   OptionString=US,CA }
    { 10020;  ;Print Order         ;Integer       ;CaptionML=ENU=Print Order }
    { 10030;  ;Print Description   ;Text30        ;CaptionML=ENU=Print Description }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Report-to Jurisdiction                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      TaxDetail@1001 : Record 322;

    [External]
    PROCEDURE GetSalesAccount@4(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Tax Acc. (Sales)");
        EXIT("Unreal. Tax Acc. (Sales)");
      END;
      TESTFIELD("Tax Account (Sales)");
      EXIT("Tax Account (Sales)");
    END;

    [External]
    PROCEDURE GetPurchAccount@5(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Tax Acc. (Purchases)");
        EXIT("Unreal. Tax Acc. (Purchases)");
      END;
      TESTFIELD("Tax Account (Purchases)");
      EXIT("Tax Account (Purchases)");
    END;

    [External]
    PROCEDURE GetRevChargeAccount@6(Unrealized@1000 : Boolean) : Code[20];
    BEGIN
      IF Unrealized THEN BEGIN
        TESTFIELD("Unreal. Rev. Charge (Purch.)");
        EXIT("Unreal. Rev. Charge (Purch.)");
      END;
      TESTFIELD("Reverse Charge (Purchases)");
      EXIT("Reverse Charge (Purchases)");
    END;

    [External]
    PROCEDURE CreateTaxJurisdiction@7(NewJurisdictionCode@1000 : Code[10]);
    BEGIN
      INIT;
      Code := NewJurisdictionCode;
      Description := NewJurisdictionCode;
      SetDefaults;
      IF INSERT(TRUE) THEN;
    END;

    LOCAL PROCEDURE SetDefaults@3();
    VAR
      TaxSetup@1000 : Record 326;
    BEGIN
      TaxSetup.GET;
      "Tax Account (Sales)" := TaxSetup."Tax Account (Sales)";
      "Tax Account (Purchases)" := TaxSetup."Tax Account (Purchases)";
      "Unreal. Tax Acc. (Sales)" := TaxSetup."Unreal. Tax Acc. (Sales)";
      "Unreal. Tax Acc. (Purchases)" := TaxSetup."Unreal. Tax Acc. (Purchases)";
      "Reverse Charge (Purchases)" := TaxSetup."Reverse Charge (Purchases)";
      "Unreal. Rev. Charge (Purch.)" := TaxSetup."Unreal. Rev. Charge (Purch.)";
    END;

    LOCAL PROCEDURE InsertDetailLines@1();
    VAR
      TaxDetail@1000 : Record 322;
      TaxSetup@1001 : Record 326;
    BEGIN
      TaxSetup.GET;
      IF NOT TaxSetup."Auto. Create Tax Details" THEN
        EXIT;

      TaxDetail.SETRANGE("Tax Jurisdiction Code",Code);
      IF NOT TaxDetail.ISEMPTY THEN
        EXIT;

      TaxDetail.INIT;
      TaxDetail."Tax Jurisdiction Code" := Code;
      TaxDetail."Tax Group Code" := '';
      TaxDetail."Tax Type" := TaxDetail."Tax Type"::"Sales and Use Tax";
      TaxDetail."Effective Date" := WORKDATE;
      TaxDetail.INSERT;

      IF TaxSetup."Non-Taxable Tax Group Code" <> '' THEN BEGIN
        TaxDetail.INIT;
        TaxDetail."Tax Jurisdiction Code" := Code;
        TaxDetail."Tax Group Code" := TaxSetup."Non-Taxable Tax Group Code";
        TaxDetail."Tax Type" := TaxDetail."Tax Type"::"Sales and Use Tax";
        TaxDetail."Effective Date" := WORKDATE;
        TaxDetail.INSERT;
      END;
    END;

    LOCAL PROCEDURE DeleteDetailLines@2();
    VAR
      TaxAreaLine@1000 : Record 319;
      TaxDetail@1001 : Record 322;
    BEGIN
      TaxAreaLine.SETRANGE("Tax Jurisdiction Code",Code);
      TaxAreaLine.DELETEALL;

      TaxDetail.SETRANGE("Tax Jurisdiction Code",Code);
      TaxDetail.DELETEALL;
    END;

    PROCEDURE GetDescriptionInCurrentLanguage@9() : Text[50];
    VAR
      TaxJurisdictionTranslation@1001 : Record 327;
      Language@1002 : Record 8;
    BEGIN
      IF TaxJurisdictionTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(TaxJurisdictionTranslation.Description);
      EXIT(Description);
    END;

    PROCEDURE GetName@8() : Text[30];
    BEGIN
      IF Name = '' THEN
        Name := Code;

      EXIT(Name);
    END;

    BEGIN
    END.
  }
}

