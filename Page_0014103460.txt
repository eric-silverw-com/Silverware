OBJECT Page 14103460 EasyPDF Setup
{
  OBJECT-PROPERTIES
  {
    Date=06/28/18;
    Time=[ 8:33:54 AM];
    Modified=Yes;
    Version List=EZP2.34.01;
  }
  PROPERTIES
  {
    CaptionML=ENU=Easy PDF Setup;
    InsertAllowed=No;
    SourceTable=Table14103460;
    PageType=Card;
    PromotedActionCategoriesML=ENU=New,Process,Reports,Documents,Setup;
    OnInit=BEGIN

             EasyPDFVersion := EasyPDF.Version;
           END;

    OnOpenPage=BEGIN

                 EasyPDFCustomization.InitializeSetup('DEFAULT',FALSE);
               END;

    OnAfterGetRecord=BEGIN

                       EasyPDFUserID := "User ID";

                       SaveAsTypeEnabled := SaveAttachments;
                       SavePathEnabled := SaveAttachments AND (SaveAttachmentsAsType = SaveAttachmentsAsType::File);
                       PrinterSettingsVisible := STRPOS(LOWERCASE(EasyPDFPrinter.Identity()), 'default') <> 1;
                     END;

    ActionList=ACTIONS
    {
      { 1000000013;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1       ;1   ;Action    ;
                      CaptionML=ENU=Documents;
                      RunObject=Page 14103462;
                      RunPageLink=User ID=FIELD(User ID),
                                  Document Type=CONST(Document);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Documents;
                      PromotedCategory=Category4 }
      { 1000000015;1 ;Action    ;
                      CaptionML=ENU=Reports;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 14103463;
                      RunPageLink=User ID=FIELD(User ID),
                                  Document Type=CONST(Report);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report2;
                      PromotedCategory=Category4 }
      { 1000000027;1 ;ActionGroup;
                      Name=<Action1000000027>;
                      CaptionML=ENU=Add;
                      ActionContainerType=NewDocumentItems;
                      Image=Setup }
      { 1000000025;2 ;Action    ;
                      Name=<Action1000000025>;
                      CaptionML=ENU=NAV User Setup;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=UserSetup;
                      PromotedCategory=New;
                      OnAction=VAR
                                 UsersPage@1000000000 : Page 9800;
                                 UserRec@1000000001 : Record 2000000120;
                               BEGIN

                                 UsersPage.LOOKUPMODE(TRUE);
                                 IF UsersPage.RUNMODAL <> ACTION::LookupOK THEN
                                   EXIT;

                                 CLEAR(UserRec);
                                 UsersPage.GETRECORD(UserRec);

                                 IF EasyPDFSetup.GET(UserRec."User Name") THEN
                                 BEGIN
                                   Rec.GET(UserRec."User Name");
                                   CurrPage.UPDATE(FALSE);
                                   EXIT;
                                 END;

                                 EasyPDFCustomization.InitializeSetup(UserRec."User Name", FALSE);
                                 SETRANGE("User ID", UserRec."User Name");
                                 CurrPage.UPDATE;
                                 EXIT;
                               END;
                                }
      { 1000000026;2 ;Action    ;
                      Name=<Action1000000026>;
                      CaptionML=ENU=Easy PDF User Setup;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=User;
                      PromotedCategory=New;
                      OnAction=VAR
                                 EasyPDFNewUser@1000000000 : Page 37062301;
                               BEGIN

                                 IF EasyPDFNewUser.RUNMODAL <> ACTION::OK THEN
                                   EXIT;

                                 EasyPDFNewUser.GETRECORD(EasyPDFSetup);
                                 EasyPDFUserID := EasyPDFSetup."User ID";

                                 IF EasyPDFSetup.GET(EasyPDFUserID) THEN
                                 BEGIN
                                   Rec.GET(EasyPDFUserID);
                                   CurrPage.UPDATE(FALSE);
                                   EXIT;
                                 END;

                                 EasyPDFCustomization.InitializeSetup(EasyPDFUserID, FALSE);
                                 SETRANGE("User ID",EasyPDFUserID);
                                 CurrPage.UPDATE;
                                 EXIT;
                               END;
                                }
      { 1000000002;1 ;Action    ;
                      CaptionML=ENU=List;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=List;
                      PromotedCategory=New;
                      OnAction=VAR
                                 EasyPDFUsersPage@1000000000 : Page 37062300;
                               BEGIN
                                 EasyPDFSetup.RESET;
                                 EasyPDFUsersPage.LOOKUPMODE(TRUE);
                                 IF EasyPDFUsersPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                   EasyPDFUsersPage.GETRECORD(EasyPDFSetup);
                                   EasyPDFUserID := EasyPDFSetup."User ID";
                                   SETRANGE("User ID",EasyPDFUserID);
                                   CurrPage.UPDATE;
                                   EasyPDFCustomization.InitializeSetup(EasyPDFUserID, TRUE);
                                 END;
                               END;
                                }
      { 1000000047;1 ;Action    ;
                      CaptionML=ENU=SMTP Mail Setup (Card Specific);
                      RunObject=Page 37062303;
                      RunPageLink=NAVUSERID=FIELD(User ID);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Category5 }
      { 1000000004;1 ;Action    ;
                      CaptionML=ENU=Data Import / Export;
                      RunObject=XMLport 14103460;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExport;
                      PromotedCategory=Category5 }
      { 1000000005;1 ;Action    ;
                      CaptionML=ENU=Create Permission Set;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SetupList;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 CreatePermissionSet();
                               END;
                                }
      { 1000000014;1 ;ActionGroup;
                      CaptionML=ENU=Integration }
      { 1000000011;2 ;Action    ;
                      Name=Show Event Subscriptions;
                      Image=TestDatabase;
                      OnAction=VAR
                                 EventSubscriptionsPage@1000000000 : Page 9510;
                                 EventSubscriptionRec@1000000001 : Record 2000000140;
                               BEGIN

                                 EventSubscriptionRec.RESET;
                                 EventSubscriptionRec.SETRANGE("Subscriber Codeunit ID", CODEUNIT::"EasyPDF Events");
                                 EventSubscriptionsPage.SETTABLEVIEW(EventSubscriptionRec);
                                 EventSubscriptionsPage.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 10  ;1   ;Field     ;
                CaptionML=ENU=Version;
                ToolTipML=ENU=Version Information;
                SourceExpr=EasyPDFVersion;
                Editable=FALSE }

    { 1000000001;1;Group  ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 1000000037;2;Group  ;
                GroupType=Group }

    { 20  ;3   ;Field     ;
                Width=200;
                Lookup=Yes;
                CaptionML=ENU=User ID;
                SourceExpr="User ID";
                Importance=Promoted;
                Editable=FALSE;
                ColumnSpan=4;
                OnLookup=VAR
                           EasyPDFUsersPage@1000000000 : Page 37062300;
                         BEGIN

                           EasyPDFSetup.RESET;
                           EasyPDFUsersPage.LOOKUPMODE(TRUE);
                           IF EasyPDFUsersPage.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             EasyPDFUsersPage.GETRECORD(EasyPDFSetup);
                             EasyPDFUserID := EasyPDFSetup."User ID";
                             SETRANGE("User ID",EasyPDFUserID);
                             CurrPage.UPDATE;
                             EasyPDFCustomization.InitializeSetup(EasyPDFUserID, TRUE);
                             EXIT(TRUE);
                           END;

                           EXIT(FALSE);
                         END;
                          }

    { 30  ;3   ;Field     ;
                CaptionML=ENU=PDF Printer name;
                SourceExpr="Printer name";
                Visible=PrinterSettingsVisible }

    { 40  ;3   ;Field     ;
                CaptionML=ENU=Server Temporary File Path;
                SourceExpr=ServerTempPath;
                OnValidate=BEGIN

                             IF NOT EasyPDF.TestFileGeneration(EasyPDF.ReplaceTokens(ServerTempPath), FALSE) THEN
                               FIELDERROR(ServerTempPath, TEXT002);
                             CurrPage.UPDATE;
                           END;
                            }

    { 50  ;3   ;Field     ;
                CaptionML=ENU=Preferred Language;
                SourceExpr=PreferredLanguageCode }

    { 60  ;3   ;Field     ;
                CaptionML=ENU=Printer Settings File;
                SourceExpr=PrinterSettingsFilePath }

    { 1000000039;1;Group  ;
                CaptionML=ENU=E-Mail;
                GroupType=Group;
                Layout=Rows }

    { 1000000040;2;Group  ;
                GroupType=Group }

    { 1000000007;3;Field  ;
                CaptionML=ENU=Use SMTP for all outgoing e-mail;
                SourceExpr=SmtpUseAlways }

    { 1000000009;3;Field  ;
                CaptionML=ENU=SMTP E-Mail Sender Name;
                SourceExpr=SmtpSenderName;
                Importance=Promoted }

    { 1000000010;3;Field  ;
                CaptionML=ENU=SMTP E-Mail Sender Address;
                SourceExpr=SmtpSenderAddress;
                Importance=Promoted }

    { 1000000008;3;Field  ;
                CaptionML=ENU=Cc to Sender when e-mail sent;
                SourceExpr=SmtpAutoCcSelf }

    { 1000000022;3;Field  ;
                CaptionML=ENU=Show SMTP E-Mail confirmation;
                SourceExpr=ConfirmEmailSent }

    { 1000000018;3;Field  ;
                CaptionML=ENU=Show SMTP Preview (non batch);
                SourceExpr=SmtpPreview }

    { 1000000003;3;Field  ;
                CaptionML=ENU=SMTP Silently ignore empty addresses;
                SourceExpr=SilentlyIgnoreEmptyAddresses }

    { 1000000006;3;Field  ;
                CaptionML=ENU=Allow Client SMTP Setup;
                SourceExpr=SmtpAllowClientSetup }

    { 1000000041;1;Group  ;
                CaptionML=ENU=FAX;
                GroupType=Group;
                Layout=Rows }

    { 1000000042;2;Group  ;
                GroupType=Group }

    { 1000000012;3;Field  ;
                CaptionML=ENU=FAX Server Address Extension;
                SourceExpr=FaxServerAddressExtension;
                Importance=Promoted }

    { 1000000019;3;Field  ;
                CaptionML=ENU=Always send FAX via SMTP;
                SourceExpr=FaxSendSmtp }

    { 1000000023;3;Field  ;
                CaptionML=ENU=Show FAX confirmation;
                SourceExpr=ConfirmFaxSent }

    { 1000000043;1;Group  ;
                CaptionML=ENU=Batch;
                GroupType=Group;
                Layout=Rows }

    { 1000000044;2;Group  ;
                GroupType=Group }

    { 1000000021;3;Field  ;
                CaptionML=ENU=Clear Batch when Sent;
                SourceExpr=ClearBatchOnSend }

    { 1000000024;3;Field  ;
                CaptionML=ENU=Batch Template Name;
                ToolTipML=ENU=%C - Document Code, %D - Date, %U - User ID;
                SourceExpr=BatchIdTemplate;
                Importance=Promoted }

    { 1000000031;3;Field  ;
                CaptionML=ENU=Commit Entry when Sent;
                SourceExpr=CommitEntryBatch;
                Visible=false }

    { 1000000033;3;Field  ;
                CaptionML=ENU=Batch Consolidate E-Mail;
                SourceExpr=BatchConsolidateEmail }

    { 1000000038;3;Field  ;
                CaptionML=ENU=Batch Merge PDF Attachments;
                SourceExpr=BatchMergePdfAttachments }

    { 1000000045;1;Group  ;
                CaptionML=ENU=History;
                GroupType=Group;
                Layout=Rows }

    { 1000000046;2;Group  ;
                GroupType=Group }

    { 1000000034;3;Field  ;
                CaptionML=ENU=Auto Remove History older than;
                SourceExpr=ClearHistoryAfter;
                Importance=Promoted }

    { 1000000030;3;Field  ;
                CaptionML=ENU=Save Attachments;
                SourceExpr=SaveAttachments;
                OnValidate=BEGIN

                             SaveAsTypeEnabled := SaveAttachments;
                             SavePathEnabled := SaveAttachments AND (SaveAttachmentsAsType = SaveAttachmentsAsType::File);
                           END;
                            }

    { 1000000035;3;Field  ;
                CaptionML=ENU=Save Attachments As;
                SourceExpr=SaveAttachmentsAsType;
                Enabled=SaveAsTypeEnabled;
                OnValidate=BEGIN

                             SavePathEnabled := (SaveAttachmentsAsType = SaveAttachmentsAsType::File);
                           END;
                            }

    { 1000000036;3;Field  ;
                AssistEdit=No;
                CaptionML=ENU=Attachments Folder (on server);
                SourceExpr=SaveAttachmentsPath;
                Enabled=SavePathEnabled;
                OnValidate=BEGIN

                             IF NOT EasyPDF.TestFileGeneration(SaveAttachmentsPath, FALSE) THEN
                               FIELDERROR(SaveAttachmentsPath, TEXT002);
                             CurrPage.UPDATE;
                           END;

                OnAssistEdit=VAR
                               FolderBrowserDialog@1000000003 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.FolderBrowserDialog" RUNONCLIENT;
                               DialogResult@1000000002 : DotNet "'System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Windows.Forms.DialogResult" RUNONCLIENT;
                             BEGIN

                               {
                               FolderBrowserDialog := FolderBrowserDialog.FolderBrowserDialog;
                               DialogResult := FolderBrowserDialog.ShowDialog();
                               IF DialogResult.CompareTo(DialogResult.OK) = 0 THEN
                               BEGIN
                                 IF (STRPOS(COPYSTR(FolderBrowserDialog.SelectedPath,1,1), '\') = 0) THEN
                                   ERROR(TEXT002);
                                 SaveAttachmentsPath := FolderBrowserDialog.SelectedPath;
                                 IF (STRPOS(COPYSTR(SaveAttachmentsPath,STRLEN(SaveAttachmentsPath),1), '\') = 0) THEN
                                   SaveAttachmentsPath += '\';
                               END;
                               }
                             END;
                              }

  }
  CODE
  {
    VAR
      EasyPDF@1000000000 : Codeunit 37062300;
      EasyPDFCustomization@1000000003 : Codeunit 14103460;
      EasyPDFPrinter@1100774001 : Codeunit 14103462;
      EasyPDFVersion@1000000001 : Text[80];
      EasyPDFUserID@1000000002 : Text[50];
      EasyPDFSetup@1000000004 : Record 14103460;
      TEXT001@1000000005 : TextConst 'ENU=Delete Easy PDF Setup for %1 ?';
      SaveAsTypeEnabled@1000000006 : Boolean INDATASET;
      SavePathEnabled@1000000007 : Boolean INDATASET;
      PrinterSettingsVisible@1100774000 : Boolean INDATASET;
      TEXT002@1000000009 : TextConst 'ENU=Access denied';
      TEXT003@1000000008 : TextConst 'ENU=Define Easy PDF Permission Set ?';

    LOCAL PROCEDURE CreatePermissionSet@1000000000();
    VAR
      PS_ROLEID@1000000002 : TextConst 'ENU=EASYPDF-ALL';
      PS_NAME@1000000003 : TextConst 'ENU=Easy PDF All Permissions';
      ObjectRec@1000000004 : Record 2000000001;
      PermissionSetRec@1000000001 : Record 2000000004;
      PermissionRec@1000000000 : Record 2000000005;
      PS_EXISTS@1000000005 : TextConst 'ENU=The EASYPDF-ALL Permission Set already exists';
      PS_CREATED@1000000006 : TextConst 'ENU=The EASYPDF-ALL Permission Set has been created';
    BEGIN

      // Does the EASYPDF-ALL Permission Set exist?
      // If yes, do nothing

      PermissionSetRec.RESET;
      PermissionSetRec.SETRANGE("Role ID", PS_ROLEID);
      IF PermissionSetRec.FINDFIRST THEN BEGIN
        MESSAGE(PS_EXISTS);
        EXIT;
      END;

      // Insert the EASYPDF-ALL Permission Set

      PermissionSetRec.INIT;
      PermissionSetRec."Role ID" := PS_ROLEID;
      PermissionSetRec.Name := PS_NAME;
      PermissionSetRec.INSERT;

      // Prepare to find all Easy PDF objects

      ObjectRec.RESET;

      // Initialize a Permission record

      PermissionRec.INIT;
      PermissionRec."Role ID" := PS_ROLEID;
      PermissionRec."Role Name" := PS_NAME;
      PermissionRec."Read Permission" := PermissionRec."Read Permission"::" ";
      PermissionRec."Insert Permission" := PermissionRec."Insert Permission"::" ";
      PermissionRec."Modify Permission" := PermissionRec."Modify Permission"::" ";
      PermissionRec."Delete Permission" := PermissionRec."Delete Permission"::" ";
      PermissionRec."Execute Permission" := PermissionRec."Execute Permission"::Yes;

      // Menu Suite

      PermissionRec."Object Type" := PermissionRec."Object Type"::MenuSuite;

      ObjectRec.SETRANGE(Name, 'Dept - Easy PDF');
      ObjectRec.SETRANGE(Type, ObjectRec.Type::MenuSuite);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Filter by ID

      ObjectRec.SETRANGE(Name, '');
      ObjectRec.SETFILTER(ID, '14103460..14103469|14103790..14103799|37062300..37062309');

      // Tables (add execute permission)

      PermissionRec."Object Type" := PermissionRec."Object Type"::Table;
      ObjectRec.SETRANGE(Type, ObjectRec.Type::Table);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Reports (add execute permission)

      PermissionRec."Object Type" := PermissionRec."Object Type"::Report;
      ObjectRec.SETRANGE(Type, ObjectRec.Type::Report);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Codeunits (add execute permission)

      PermissionRec."Object Type" := PermissionRec."Object Type"::Codeunit;
      ObjectRec.SETRANGE(Type, ObjectRec.Type::Codeunit);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // XMLports (add execute permission)

      PermissionRec."Object Type" := PermissionRec."Object Type"::XMLport;
      ObjectRec.SETRANGE(Type, ObjectRec.Type::XMLport);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Pages (add execute permission)

      PermissionRec."Object Type" := PermissionRec."Object Type"::Page;
      ObjectRec.SETRANGE(Type, ObjectRec.Type::Page);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Table Data (add read, insert, modify, delete permissions)

      PermissionRec."Object Type" := PermissionRec."Object Type"::"Table Data";
      PermissionRec."Read Permission" := PermissionRec."Read Permission"::Yes;
      PermissionRec."Insert Permission" := PermissionRec."Insert Permission"::Yes;
      PermissionRec."Modify Permission" := PermissionRec."Modify Permission"::Yes;
      PermissionRec."Delete Permission" := PermissionRec."Delete Permission"::Yes;
      PermissionRec."Execute Permission" := PermissionRec."Execute Permission"::" ";

      ObjectRec.SETRANGE(Type, ObjectRec.Type::TableData);
      IF ObjectRec.FINDSET THEN
        REPEAT
          PermissionRec."Object ID" := ObjectRec.ID;
          PermissionRec."Object Name" := ObjectRec.Name;
          PermissionRec.INSERT;
        UNTIL ObjectRec.NEXT = 0;

      // Done

      MESSAGE(PS_CREATED);
    END;

    BEGIN
    END.
  }
}

