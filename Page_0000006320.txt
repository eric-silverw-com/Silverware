OBJECT Page 6320 Upload Power BI Report
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:28 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Upload Power BI Report;
    SourceTable=Table6310;
    PageType=NavigatePage;
    OnInit=BEGIN
             MaxReportLimit := 20;
           END;

    OnOpenPage=BEGIN
                 IF NOT PermissionManager.IsSuper(USERSECURITYID) THEN
                   ERROR(PermissionErr);

                 IF NOT PowerBIServiceMgt.IsUserReadyForPowerBI THEN
                   ERROR(NotReadyErr);

                 ReportID := CREATEGUID;
               END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=NewDocumentItems }
      { 8       ;1   ;Action    ;
                      Name=Upload Report;
                      CaptionML=ENU=Upload Report;
                      ApplicationArea=#Basic, #Suite;
                      Visible=TRUE;
                      InFooterBar=Yes;
                      OnAction=BEGIN
                                 UploadedReportCount := COUNT;

                                 IF FileName = '' THEN
                                   ERROR(FileNameErr);

                                 IF ReportName = '' THEN
                                   ERROR(ReportNameErr);

                                 RESET;
                                 SETFILTER(Id,ReportID);
                                 IF NOT ISEMPTY THEN
                                   ERROR(BlobIdErr);

                                 RESET;
                                 SETFILTER(Name,ReportName);
                                 IF NOT ISEMPTY THEN
                                   ERROR(BlobNameErr);

                                 RESET;

                                 IF UploadedReportCount < MaxReportLimit THEN BEGIN
                                   INIT;
                                   Id := ReportID;
                                   Name := ReportName;
                                   "Blob File" := TempBlob.Blob;
                                   Version := 1;
                                   INSERT
                                 END ELSE
                                   MESSAGE(TableLimitMsg);
                                 COMMIT;

                                 FileName := '';
                                 ReportName := '';

                                 ReportID := CREATEGUID;
                                 IsFileLoaded := FALSE;
                                 CurrPage.UPDATE(FALSE);
                                 MESSAGE(UploadMsg);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                Name=FileName;
                AssistEdit=Yes;
                CaptionML=ENU=File;
                ToolTipML=ENU=Specifies File Name;
                ApplicationArea=#All;
                SourceExpr=FileName;
                Editable=FALSE;
                OnValidate=BEGIN
                             IF NOT FileManagement.ClientFileExists(FileName) THEN
                               ERROR(FileExistErr,FileName);
                           END;

                OnAssistEdit=VAR
                               TempFileName@1000 : Text;
                             BEGIN
                               // Event handler for the ellipsis button that opens the file selection dialog.
                               TempFileName := FileManagement.BLOBImportWithFilter(TempBlob,FileDialogTxt,'',FileFilterTxt,ExtFilterTxt);

                               IF TempFileName = '' THEN
                                 // User clicked Cancel in the file selection dialog.
                                 EXIT;

                               FileName := TempFileName;

                               IF ReportName = '' THEN BEGIN
                                 ReportName := COPYSTR(FileManagement.GetFileNameWithoutExtension(FileName),1,200);
                                 IsFileLoaded := TRUE;
                               END;
                             END;

                ShowMandatory=TRUE }

    { 3   ;1   ;Field     ;
                Name=ReportName;
                CaptionML=ENU=Report Name;
                ToolTipML=ENU=Specifies Report Name;
                ApplicationArea=#All;
                SourceExpr=ReportName;
                Editable=IsFileLoaded;
                ShowMandatory=TRUE }

  }
  CODE
  {
    VAR
      ReportNameErr@1005 : TextConst 'ENU=You must enter a report name.';
      FileNameErr@1007 : TextConst 'ENU=You must enter a file name.';
      NotReadyErr@1012 : TextConst 'ENU=The Power BI Service is currently unavailable.';
      FileExistErr@1013 : TextConst '@@@=asdf;ENU=The file %1 does not exist.';
      BlobIdErr@1010 : TextConst 'ENU=A blob with this ID already exists.';
      TempBlob@1000 : Record 99008535;
      PowerBIServiceMgt@1014 : Codeunit 6301;
      PermissionManager@1009 : Codeunit 9002;
      FileManagement@1015 : Codeunit 419;
      FileDialogTxt@1016 : TextConst 'ENU=Select a PBIX report file.';
      FileFilterTxt@1017 : TextConst 'ENU=Power BI Files(*.pbix)|*.pbix';
      ExtFilterTxt@1018 : TextConst 'ENU=pbix';
      ReportID@1008 : GUID;
      FileName@1004 : Text;
      ReportName@1003 : Text[200];
      PermissionErr@1019 : TextConst 'ENU=User does not have permissions to operate this page.';
      IsFileLoaded@1020 : Boolean;
      MaxReportLimit@1002 : Integer;
      UploadedReportCount@1011 : Integer;
      TableLimitMsg@1021 : TextConst 'ENU=The Customer Report table is full. Remove a report and try again.';
      BlobNameErr@1001 : TextConst 'ENU=A blob with this name already exists.';
      UploadMsg@1022 : TextConst 'ENU=The report has been added for deployment. Once deployed, it will appear in the select reports list.';

    BEGIN
    {
      // Test page for manually importing PBIX blobs into database.
      // TODO: Remove before check-in.
    }
    END.
  }
}

