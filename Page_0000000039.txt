OBJECT Page 39 General Journal
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:03 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=General Journals;
    ApplicationArea=#Basic,#Suite;
    SaveValues=Yes;
    SourceTable=Table81;
    DataCaptionExpr=DataCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    UsageCategory=Tasks;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=ENU=New,Process,Report,Bank,Application,Payroll,Approve,Page;
    OnInit=BEGIN
             TotalBalanceVisible := TRUE;
             BalanceVisible := TRUE;
             AmountVisible := TRUE;
             // Get simple / classic mode for this page except when called from a webservices (SOAP or ODATA)
             IF (CURRENTCLIENTTYPE = CLIENTTYPE::SOAP) OR
                (CURRENTCLIENTTYPE = CLIENTTYPE::OData) OR (CURRENTCLIENTTYPE = CLIENTTYPE::ODataV4)
             THEN
               IsSimplePage := FALSE
             ELSE
               IsSimplePage := GenJnlManagement.GetJournalSimplePageModePreference(PAGE::"General Journal");
           END;

    OnOpenPage=VAR
                 ServerConfigSettingHandler@1001 : Codeunit 6723;
                 PermissionManager@1002 : Codeunit 9002;
                 JnlSelected@1000 : Boolean;
                 LastGenJnlBatch@1003 : Code[10];
               BEGIN
                 IsSaasExcelAddinEnabled := ServerConfigSettingHandler.GetIsSaasExcelAddinEnabled;
                 IF ClientTypeManagement.GetCurrentClientType = CLIENTTYPE::ODataV4 THEN
                   EXIT;

                 BalAccName := '';
                 SetConrolVisibility;
                 IF IsOpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   SetControlAppearanceFromBatch;
                   SetDataForSimpleModeOnOpen;
                   EXIT;
                 END;
                 GenJnlManagement.TemplateSelection(PAGE::"General Journal",0,FALSE,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');

                 LastGenJnlBatch := GenJnlManagement.GetLastViewedJournalBatchName(PAGE::"General Journal");
                 IF LastGenJnlBatch <> '' THEN
                   CurrentJnlBatchName := LastGenJnlBatch;
                 GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                 SetControlAppearanceFromBatch;

                 IsSaaS := PermissionManager.SoftwareAsAService;
                 SetDataForSimpleModeOnOpen;
               END;

    OnAfterGetRecord=BEGIN
                       GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                       ShowShortcutDimCode(ShortcutDimCode);
                       HasIncomingDocument := "Incoming Document Entry No." <> 0;
                       SetUserInteractions;
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  EnableApplyEntriesAction;
                  SetUpNewLine(xRec,Balance,BelowxRec);
                  // set values from header for currency code, doc no. and posting date
                  // for show less columns or simple page mode
                  IF IsSimplePage THEN BEGIN
                    PostedFromSimplePage := FALSE;
                    SetDataForSimpleModeOnNewRecord;
                  END;
                  CLEAR(ShortcutDimCode);
                  CLEAR(AccName);
                  SetUserInteractions;
                END;

    OnModifyRecord=BEGIN
                     SetUserInteractions;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           IF ClientTypeManagement.GetCurrentClientType <> CLIENTTYPE::ODataV4 THEN
                             UpdateBalance;
                           EnableApplyEntriesAction;
                           SetControlAppearance;
                           // PostedFromSimplePage is set to TRUE when 'POST' / 'POST+PRINT' action is executed in simple page mode.
                           // It gets set to FALSE when OnNewRecord is called in the simple mode.
                           // After posting we try to find the first record and filter on its document number
                           // Executing LoaddataFromRecord for incomingDocAttachFactbox is also forcing this (PAG39) page to update
                           // and for some reason after posting this page doesn't refresh with the filter set by POST / POST-PRINT action in simple mode.
                           // To resolve this only call LoaddataFromRecord if PostedFromSimplePage is FALSE.
                           IF NOT PostedFromSimplePage THEN
                             CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 75      ;1   ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 76      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=ENU=Dimensions;
                      ToolTipML=ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                      ApplicationArea=#Dimensions;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;1   ;ActionGroup;
                      CaptionML=ENU=A&ccount;
                      Image=ChartOfAccounts }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=ENU=Card;
                      ToolTipML=ENU=View or change detailed information about the record on the document or journal line.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 15;
                      Image=EditLines }
      { 45      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=ENU=Ledger E&ntries;
                      ToolTipML=ENU=View the history of transactions that have been posted for the selected record.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 14;
                      Promoted=No;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 66      ;1   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=ENU=Approvals;
                      ToolTipML=ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.ShowJournalApprovalEntries(GenJournalLine);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 46      ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 13      ;2   ;Action    ;
                      CaptionML=ENU=Renumber Document Numbers;
                      ToolTipML=ENU=Resort the numbers in the Document No. column to avoid posting errors because the document numbers are not in sequence. Entry applications and line groupings are preserved.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT IsSimplePage;
                      Image=EditLines;
                      OnAction=BEGIN
                                 RenumberDocumentNo
                               END;
                                }
      { 92      ;2   ;Action    ;
                      CaptionML=ENU=Insert Conv. $ Rndg. Lines;
                      ToolTipML=ENU=Insert a rounding correction line in the journal. This rounding correction line will balance in $ when amounts in the foreign currency also balance. You can then post the journal.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 407;
                      Image=InsertCurrency }
      { 107     ;2   ;Separator ;
                      CaptionML=ENU=- }
      { 109     ;2   ;Action    ;
                      Name=GetStandardJournals;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Get Standard Journals;
                      ToolTipML=ENU=Select a standard general journal to be inserted.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=GetStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdGenJnl@1000 : Record 750;
                               BEGIN
                                 StdGenJnl.FILTERGROUP := 2;
                                 StdGenJnl.SETRANGE("Journal Template Name","Journal Template Name");
                                 StdGenJnl.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Standard General Journals",StdGenJnl) = ACTION::LookupOK THEN BEGIN
                                   StdGenJnl.CreateGenJnlFromStdJnl(StdGenJnl,CurrentJnlBatchName);
                                   MESSAGE(Text000,StdGenJnl.Code);
                                 END;

                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 108     ;2   ;Action    ;
                      Name=SaveAsStandardJournal;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Save as Standard Journal;
                      ToolTipML=ENU=Define the journal lines that you want to use later as a standard journal before you post the journal.;
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=SaveasStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlBatch@1001 : Record 232;
                                 GeneralJnlLines@1004 : Record 81;
                                 StdGenJnl@1002 : Record 750;
                                 SaveAsStdGenJnl@1003 : Report 750;
                               BEGIN
                                 GeneralJnlLines.SETFILTER("Journal Template Name","Journal Template Name");
                                 GeneralJnlLines.SETFILTER("Journal Batch Name",CurrentJnlBatchName);
                                 CurrPage.SETSELECTIONFILTER(GeneralJnlLines);
                                 GeneralJnlLines.COPYFILTERS(Rec);

                                 GenJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 SaveAsStdGenJnl.Initialise(GeneralJnlLines,GenJnlBatch);
                                 SaveAsStdGenJnl.RUNMODAL;
                                 IF NOT SaveAsStdGenJnl.GetStdGeneralJournal(StdGenJnl) THEN
                                   EXIT;

                                 MESSAGE(Text001,StdGenJnl.Code);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=Test Report;
                      ToolTipML=ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=ENU=P&ost;
                      ToolTipML=ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 IF IsSimplePage THEN
                                   SetDataForSimpleModeOnPost;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 48      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=ENU=Preview Posting;
                      ToolTipML=ENU=Review the different types of entries that will be created when you post the document or journal.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 GenJnlPost@1000 : Codeunit 231;
                               BEGIN
                                 GenJnlPost.Preview(Rec);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=ENU=Post and &Print;
                      ToolTipML=ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 IF IsSimplePage THEN
                                   SetDataForSimpleModeOnPost;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=ENU=Deferral Schedule;
                      ToolTipML=ENU=View or edit the deferral schedule that governs how expenses or revenue are deferred to different accounting periods when the journal line is posted.;
                      ApplicationArea=#Suite;
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 ShowDeferralSchedule;
                               END;
                                }
      { 56      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=ENU=Incoming Document;
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 54      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=ENU=View Incoming Document;
                      ToolTipML=ENU=View any incoming document records and file attachments that exist for the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 52      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=ENU=Select Incoming Document;
                      ToolTipML=ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 47      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=ENU=Create Incoming Document from File;
                      ToolTipML=ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromGenJnlLine(Rec);
                               END;
                                }
      { 42      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=ENU=Remove Incoming Document;
                      ToolTipML=ENU=Remove any incoming document records and file attachments.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=ENU=B&ank }
      { 11      ;2   ;Action    ;
                      Name=ImportBankStatement;
                      CaptionML=ENU=Import Bank Statement;
                      ToolTipML=ENU=Import electronic bank statements from your bank to populate with data about actual bank transactions.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                                 ImportBankStatement;
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=ShowStatementLineDetails;
                      CaptionML=ENU=Bank Statement Details;
                      ToolTipML=ENU=View the content of the imported bank statement file, such as account number, posting date, and amounts.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1221;
                      RunPageLink=Data Exch. No.=FIELD(Data Exch. Entry No.),
                                  Line No.=FIELD(Data Exch. Line No.);
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=ExternalDocument;
                      PromotedCategory=Category4 }
      { 23      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=ENU=Reconcile;
                      ToolTipML=ENU=View the balances on bank accounts that are marked for reconciliation, usually liquid accounts.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Reconcile;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=ENU=Application }
      { 91      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=ENU=Apply Entries;
                      ToolTipML=ENU=Apply the payment amount on a journal line to a sales or purchase document that was already posted for a customer or vendor. This updates the amount on the posted document, and the document can either be partially paid, or closed as paid or refunded.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 225;
                      Promoted=Yes;
                      Enabled=ApplyEntriesActionEnabled;
                      Image=ApplyEntries;
                      PromotedCategory=Category5 }
      { 27      ;2   ;Action    ;
                      Name=Match;
                      CaptionML=ENU=Apply Automatically;
                      ToolTipML=ENU=Apply payments to their related open entries based on data matches between bank transaction text and entry information.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 1250;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 34      ;2   ;Action    ;
                      Name=AddMappingRule;
                      CaptionML=ENU=Map Text to Account;
                      ToolTipML=ENU=Associate text on payments with debit, credit, and balancing accounts, so payments are posted to the accounts when you post payments. The payments are not applied to invoices or credit memos, and are suited for recurring cash receipts or expenses.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 TextToAccMapping@1000 : Record 1251;
                               BEGIN
                                 TextToAccMapping.InsertRec(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=Payro&ll }
      { 29      ;2   ;Action    ;
                      Name=ImportPayrollFile;
                      CaptionML=ENU=Import Payroll File;
                      ToolTipML=ENU=Import a payroll file that you select.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 GeneralLedgerSetup@1000 : Record 98;
                                 ImportPayrollTransaction@1001 : Codeunit 1202;
                               BEGIN
                                 GeneralLedgerSetup.GET;
                                 GeneralLedgerSetup.TESTFIELD("Payroll Trans. Import Format");
                                 IF FINDLAST THEN;
                                 ImportPayrollTransaction.SelectAndImportPayrollDataToGL(Rec,GeneralLedgerSetup."Payroll Trans. Import Format");
                               END;
                                }
      { 96      ;2   ;Action    ;
                      Name=ImportPayrollTransactions;
                      CaptionML=ENU=Import Payroll Transactions;
                      ToolTipML=ENU=Add journal lines based on transactions from your payroll service provider.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ImportPayrollTransactionsAvailable;
                      PromotedIsBig=Yes;
                      Image=ImportChartOfAccounts;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                                 PayrollManagement.ImportPayroll(Rec);
                               END;
                                }
      { 64      ;1   ;ActionGroup;
                      CaptionML=ENU=Request Approval }
      { 82      ;2   ;ActionGroup;
                      Name=SendApprovalRequest;
                      CaptionML=ENU=Send Approval Request;
                      Image=SendApprovalRequest }
      { 62      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalBatch;
                      CaptionML=ENU=Journal Batch;
                      ToolTipML=ENU=Send all journal lines for approval, also those that you may not see because of filters.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrAnyJnlLineExist AND CanRequestFlowApprovalForBatchAndAllLines;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.TrySendJournalBatchApprovalRequest(Rec);
                                 SetControlAppearanceFromBatch;
                                 SetControlAppearance;
                               END;
                                }
      { 84      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalLine;
                      CaptionML=ENU=Selected Journal Lines;
                      ToolTipML=ENU=Send selected journal lines for approval.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrCurrJnlLineExist AND CanRequestFlowApprovalForBatchAndCurrentLine;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TrySendJournalLineApprovalRequests(GenJournalLine);
                                 SetControlAppearanceFromBatch;
                               END;
                                }
      { 86      ;2   ;ActionGroup;
                      Name=CancelApprovalRequest;
                      CaptionML=ENU=Cancel Approval Request;
                      Image=Cancel }
      { 60      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalBatch;
                      CaptionML=ENU=Journal Batch;
                      ToolTipML=ENU=Cancel sending all journal lines for approval, also those that you may not see because of filters.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CanCancelApprovalForJnlBatch OR CanCancelFlowApprovalForBatch;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.TryCancelJournalBatchApprovalRequest(Rec);
                                 SetControlAppearance;
                                 SetControlAppearanceFromBatch;
                               END;
                                }
      { 88      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalLine;
                      CaptionML=ENU=Selected Journal Lines;
                      ToolTipML=ENU=Cancel sending selected journal lines for approval.;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=CanCancelApprovalForJnlLine OR CanCancelFlowApprovalForLine;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TryCancelJournalLineApprovalRequests(GenJournalLine);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Name=CreateFlow;
                      CaptionML=ENU=Create a Flow;
                      ToolTipML=ENU=Create a new Flow from a list of relevant Flow templates.;
                      ApplicationArea=#Basic,#Suite;
                      Visible=IsSaaS;
                      Image=Flow;
                      OnAction=VAR
                                 FlowServiceManagement@1001 : Codeunit 6400;
                                 FlowTemplateSelector@1000 : Page 6400;
                               BEGIN
                                 // Opens page 6400 where the user can use filtered templates to create new flows.
                                 FlowTemplateSelector.SetSearchText(FlowServiceManagement.GetJournalTemplateFilter);
                                 FlowTemplateSelector.RUN;
                               END;
                                }
      { 116     ;2   ;Action    ;
                      Name=SeeFlows;
                      CaptionML=ENU=See my Flows;
                      ToolTipML=ENU=View and configure Flows that you created.;
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 6401;
                      Image=Flow }
      { 78      ;1   ;ActionGroup;
                      CaptionML=ENU=Approval }
      { 74      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=ENU=Approve;
                      ToolTipML=ENU=Approve the requested changes.;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveGenJournalLineRequest(Rec);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=ENU=Reject;
                      ToolTipML=ENU=Reject the approval request.;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectGenJournalLineRequest(Rec);
                               END;
                                }
      { 70      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=ENU=Delegate;
                      ToolTipML=ENU=Delegate the approval to a substitute approver.;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateGenJournalLineRequest(Rec);
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=ENU=Comments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF OpenApprovalEntriesOnJnlLineExist THEN
                                   ApprovalsMgmt.GetApprovalComment(Rec)
                                 ELSE
                                   IF OpenApprovalEntriesOnJnlBatchExist THEN
                                     IF GenJournalBatch.GET("Journal Template Name","Journal Batch Name") THEN
                                       ApprovalsMgmt.GetApprovalComment(GenJournalBatch);
                               END;
                                }
      { 98      ;1   ;ActionGroup;
                      CaptionML=ENU=Opening Balance }
      { 100     ;2   ;ActionGroup;
                      Name=Prepare journal;
                      CaptionML=ENU=Prepare journal;
                      Image=Journals }
      { 102     ;3   ;Action    ;
                      Name=[G/L Accounts Opening balance ];
                      CaptionML=ENU=G/L Accounts Opening balance;
                      ToolTipML=ENU=Creates general journal line per G/L account to enable manual entry of G/L account open balances during the setup of a new company;
                      ApplicationArea=#Basic,#Suite;
                      Image=TransferToGeneralJournal;
                      OnAction=VAR
                                 GLAccount@1002 : Record 15;
                                 CreateGLAccJournalLines@1000 : Report 8610;
                                 DocumentTypes@1001 : Option;
                               BEGIN
                                 GLAccount.SETRANGE("Account Type",GLAccount."Account Type"::Posting);
                                 GLAccount.SETRANGE("Income/Balance",GLAccount."Income/Balance"::"Balance Sheet");
                                 GLAccount.SETRANGE("Direct Posting",TRUE);
                                 GLAccount.SETRANGE(Blocked,FALSE);
                                 CreateGLAccJournalLines.SETTABLEVIEW(GLAccount);
                                 CreateGLAccJournalLines.InitializeRequest(DocumentTypes,TODAY,"Journal Template Name","Journal Batch Name",'');
                                 CreateGLAccJournalLines.USEREQUESTPAGE(FALSE);
                                 COMMIT;  // Commit is required for Create Lines.
                                 CreateGLAccJournalLines.RUN;
                               END;
                                }
      { 104     ;3   ;Action    ;
                      Name=Customers Opening balance;
                      CaptionML=ENU=Customers Opening balance;
                      ToolTipML=ENU=Creates general journal line per Customer to enable manual entry of Customer open balances during the setup of a new company;
                      ApplicationArea=#Basic,#Suite;
                      Image=TransferToGeneralJournal;
                      OnAction=VAR
                                 Customer@1000 : Record 18;
                                 CreateCustomerJournalLines@1002 : Report 8611;
                                 DocumentTypes@1001 : Option;
                               BEGIN
                                 Customer.SETRANGE(Blocked,Customer.Blocked::" ");
                                 CreateCustomerJournalLines.SETTABLEVIEW(Customer);
                                 CreateCustomerJournalLines.InitializeRequest(DocumentTypes,TODAY,TODAY);
                                 CreateCustomerJournalLines.InitializeRequestTemplate("Journal Template Name","Journal Batch Name",'');
                                 CreateCustomerJournalLines.USEREQUESTPAGE(FALSE);
                                 COMMIT;  // Commit is required for Create Lines.
                                 CreateCustomerJournalLines.RUN;
                               END;
                                }
      { 106     ;3   ;Action    ;
                      Name=Vendors Opening balance;
                      CaptionML=ENU=Vendors Opening balance;
                      ToolTipML=ENU=Creates a general journal line for each vendor. This lets you manually enter open balances for vendors when you set up a new company.;
                      ApplicationArea=#Basic,#Suite;
                      Image=TransferToGeneralJournal;
                      OnAction=VAR
                                 Vendor@1002 : Record 23;
                                 CreateVendorJournalLines@1001 : Report 8612;
                                 DocumentTypes@1000 : Option;
                               BEGIN
                                 Vendor.SETRANGE(Blocked,Vendor.Blocked::" ");
                                 CreateVendorJournalLines.SETTABLEVIEW(Vendor);
                                 CreateVendorJournalLines.InitializeRequest(DocumentTypes,TODAY,TODAY);
                                 CreateVendorJournalLines.InitializeRequestTemplate("Journal Template Name","Journal Batch Name",'');
                                 CreateVendorJournalLines.USEREQUESTPAGE(FALSE);
                                 COMMIT;  // Commit is required for Create Lines.
                                 CreateVendorJournalLines.RUN;
                               END;
                                }
      { 110     ;1   ;ActionGroup;
                      CaptionML=ENU=Page }
      { 111     ;2   ;Action    ;
                      Name=EditInExcel;
                      CaptionML=ENU=Edit in Excel;
                      ToolTipML=ENU=Send the data in the journal to an Excel file for analysis or editing.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSaasExcelAddinEnabled;
                      PromotedIsBig=Yes;
                      Image=Excel;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ODataUtility@1000 : Codeunit 6710;
                               BEGIN
                                 ODataUtility.EditJournalWorksheetInExcel(CurrPage.CAPTION,CurrPage.OBJECTID(FALSE),"Journal Batch Name","Journal Template Name");
                               END;
                                }
      { 126     ;2   ;Action    ;
                      Name=PreviousDocNumberTrx;
                      CaptionML=ENU=Previous Doc No.;
                      ToolTipML=ENU=Navigate to previous document number for current batch.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSimplePage;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IterateDocNumbers('+',-1);
                               END;
                                }
      { 124     ;2   ;Action    ;
                      Name=NextDocNumberTrx;
                      CaptionML=ENU=Next Doc No.;
                      ToolTipML=ENU=Navigate to next document number for current batch.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSimplePage;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IterateDocNumbers('-',1);
                               END;
                                }
      { 125     ;2   ;Action    ;
                      Name=ClassicView;
                      CaptionML=ENU=Show more columns;
                      ToolTipML=ENU=Adds additional fields to the journal for a full view of the journal data.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSimplePage;
                      PromotedIsBig=Yes;
                      Image=SetupColumns;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // set journal preference for this page to be NOT simple mode (classic mode)
                                 CurrPage.CLOSE;
                                 GenJnlManagement.SetJournalSimplePageModePreference(FALSE,PAGE::"General Journal");
                                 GenJnlManagement.SetLastViewedJournalBatchName(PAGE::"General Journal",CurrentJnlBatchName);
                                 PAGE.RUN(PAGE::"General Journal");
                               END;
                                }
      { 123     ;2   ;Action    ;
                      Name=SimpleView;
                      CaptionML=ENU=Show fewer columns;
                      ToolTipML=ENU=Hides many of the less used fields from the journal for better productivity. The fields are still there but not shown.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT IsSimplePage;
                      PromotedIsBig=Yes;
                      Image=SetupList;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // set journal preference for this page to be simple mode
                                 CurrPage.CLOSE;
                                 GenJnlManagement.SetJournalSimplePageModePreference(TRUE,PAGE::"General Journal");
                                 GenJnlManagement.SetLastViewedJournalBatchName(PAGE::"General Journal",CurrentJnlBatchName);
                                 PAGE.RUN(PAGE::"General Journal");
                               END;
                                }
      { 122     ;2   ;Action    ;
                      Name=New Doc No.;
                      CaptionML=ENU=New Document Number;
                      ToolTipML=ENU=Creates a new document number.;
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=IsSimplePage;
                      PromotedIsBig=Yes;
                      Image=New;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 GenJournalLine@1000 : Record 81;
                                 GenJnlBatch@1002 : Record 232;
                                 LastDocNo@1001 : Code[20];
                               BEGIN
                                 IF COUNT = 0 THEN
                                   EXIT;
                                 GenJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 GenJournalLine.RESET;
                                 GenJournalLine.SETCURRENTKEY("Document No.");
                                 GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 IF GenJournalLine.FINDLAST THEN BEGIN
                                   LastDocNo := GenJournalLine."Document No.";
                                   IncrementDocumentNo(GenJnlBatch,LastDocNo);
                                 END ELSE
                                   LastDocNo := NoSeriesMgt.TryGetNextNo(GenJnlBatch."No. Series","Posting Date");

                                 CurrentDocNo := LastDocNo;
                                 SetDocumentNumberFilter(CurrentDocNo);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 120 ;1   ;Group     ;
                GroupType=Group }

    { 39  ;2   ;Field     ;
                Lookup=Yes;
                CaptionML=ENU=Batch Name;
                ToolTipML=ENU=Specifies the name of the journal batch.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                             SetDataForSimpleModeOnBatchChange;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           // Set simple view when batch is changed
                           SetDataForSimpleModeOnBatchChange;
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 119 ;2   ;Field     ;
                Name=<Document No. Simple Page>;
                CaptionML=ENU=Document No.;
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentDocNo;
                Visible=IsSimplePage;
                OnValidate=BEGIN
                             IF NOT IsSimplePage THEN
                               EXIT;
                             IF CurrentDocNo = '' THEN
                               CurrentDocNo := "Document No.";
                             IF CurrentDocNo = "Document No." THEN
                               EXIT;

                             IF COUNT = 0 THEN
                               "Document No." := CurrentDocNo;

                             IsChangingDocNo := TRUE;
                             SetDocumentNumberFilter(CurrentDocNo);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 117 ;2   ;Field     ;
                Name=<CurrentPostingDate>;
                CaptionML=ENU=Posting Date;
                ToolTipML=ENU=Specifies the entry's posting date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentPostingDate;
                Visible=IsSimplePage;
                OnValidate=BEGIN
                             UpdateCurrencyFactor(FIELDNO("Posting Date"));
                           END;
                            }

    { 118 ;2   ;Field     ;
                Name=<CurrentCurrencyCode>;
                CaptionML=ENU=Currency Code;
                ToolTipML=ENU=Specifies the code of the currency for the amounts on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentCurrencyCode;
                TableRelation=Currency.Code;
                Visible=IsSimplePage;
                OnValidate=BEGIN
                             UpdateCurrencyFactor(FIELDNO("Currency Code"));
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the entry's posting date.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Visible=NOT IsSimplePage;
                StyleExpr=StyleTxt }

    { 83  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date on the document that provides the basis for the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of document that the entry on the journal line is.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Visible=NOT IsSimplePage;
                StyleExpr=StyleTxt }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a document number for the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Visible=NOT IsSimplePage }

    { 19  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the incoming document that this general journal line is created for.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               IF "Incoming Document Entry No." > 0 THEN
                                 HYPERLINK(GetIncomingDocumentURL);
                             END;
                              }

    { 81  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the external document number that will be exported in the payment file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Ext. Doc. No.";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of account that the entry on the journal line will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                Visible=NOT IsSimplePage;
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             SetUserInteractions;
                             EnableApplyEntriesAction;
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the account number that the entry on the journal line will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                             SetUserInteractions;
                             // On TAB81 Account No. - OnValidate() will reset currency code to empty if
                             // there is no balancing account for this G/L line. This happens under GetGLAccount
                             // function. So, we need to validate current curency code again.
                             IF IsSimplePage THEN
                               VALIDATE("Currency Code",CurrentCurrencyCode);
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 127 ;2   ;Field     ;
                Name=AccountName;
                CaptionML=ENU=Account Name;
                ToolTipML=ENU=Specifies the account name that the entry on the journal line will be posted to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a description of the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                StyleExpr=StyleTxt }

    { 17  ;2   ;Field     ;
                ToolTipML=ENU=Specifies payer information that is imported with the bank statement file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payer Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 15  ;2   ;Field     ;
                ToolTipML=ENU=Specifies transaction information that is imported with the bank statement file.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 71  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the business unit that the entry derives from in a consolidated company.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Business Unit Code";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the salesperson or purchaser who is linked to the journal line.;
                ApplicationArea=#Suite;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 93  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the campaign the journal line is linked to.;
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Campaign No.";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                AssistEdit=Yes;
                ToolTipML=ENU=Specifies the code of the currency for the amounts on the journal line.;
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=NOT IsSimplePage;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general posting type that will be used when you post the entry on this journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Posting Type";
                Visible=NOT IsSimplePage }

    { 77  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the vendor's or customer's trade type to link transactions made for this business partner with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=NOT IsSimplePage }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the item's product type to link transactions made for this item with the appropriate general ledger account according to the general posting setup.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=NOT IsSimplePage }

    { 41  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Tax business posting group code that will be used when you post the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the Tax product posting group. Links business transactions made for the item, resource, or G/L account with the general ledger, to account for Tax amounts resulting from trade with that record.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 1000;2   ;Field     ;
                ToolTipML=ENU=Specifies the total amount (including tax) that the journal line consists of, if it is a debit amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount";
                Visible=DebitCreditVisible }

    { 1001;2   ;Field     ;
                ToolTipML=ENU=Specifies the total amount (including tax) that the journal line consists of, if it is a credit amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount";
                Visible=DebitCreditVisible }

    { 1480008;2;Field     ;
                ToolTipML=ENU=Specifies if the customer or vendor is liable for sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Liable" }

    { 1480010;2;Field     ;
                ToolTipML=ENU=Specifies the tax area that is used to calculate and post sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Area Code" }

    { 1480004;2;Field     ;
                ToolTipML=ENU=Specifies the tax group that is used to calculate and post sales tax.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Group Code" }

    { 1480006;2;Field     ;
                ToolTipML=ENU=Specifies that the purchase is subject to use tax. Use tax is a sales tax that is paid on items that are purchased by a company and are used by that company instead of being sold to a customer.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use Tax";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of items to be included on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                Visible=False }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the total amount (including tax) that the journal line consists of.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                Visible=AmountVisible;
                StyleExpr=StyleTxt }

    { 113 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the total amount in local currency (including Tax) that the journal line consists of.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount (LCY)";
                Visible=AmountVisible }

    { 101 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of Tax included in the total amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 99  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the difference between the calculate tax amount and the tax amount that you have entered manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the amount of Bal. Tax included in the total amount.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE }

    { 105 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the difference between the calculate tax amount and the tax amount that you have entered manually.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE }

    { 53  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for the balancing account type that should be used in this journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account Type";
                Visible=NOT IsSimplePage;
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             EnableApplyEntriesAction;
                           END;
                            }

    { 55  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the general ledger, customer, vendor, or bank account to which a balancing entry for the journal line will posted (for example, a cash account for cash purchases).;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                Visible=NOT IsSimplePage;
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 57  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general posting type associated with the balancing account that will be used when you post the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=NOT IsSimplePage }

    { 79  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general business posting group code associated with the balancing account that will be used when you post the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=NOT IsSimplePage }

    { 59  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the general product posting group code associated with the balancing account that will be used when you post the entry.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=NOT IsSimplePage }

    { 80  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the deferral template that governs how expenses or revenue are deferred to the different accounting periods when the expenses or revenue were incurred.;
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code";
                Visible=NOT IsSimplePage;
                OnAssistEdit=BEGIN
                               ShowDeferralSchedule;
                             END;
                              }

    { 87  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the Tax business posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the Tax product posting group that will be used when you post the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE }

    { 95  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the bill-to customer or pay-to vendor that the entry is linked to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to/Pay-to No.";
                Visible=FALSE }

    { 97  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the address code of the ship-to customer or order-from vendor that the entry is linked to.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to/Order Address Code";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 1, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for Shortcut Dimension 2, which is one of two global dimension codes that you set up in the General Ledger Setup window.;
                ApplicationArea=#Dimensions;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                ApplicationArea=#Suite;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 69  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code that represents the payments terms that apply to the entry on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies that the general journal line has been automatically applied with a matching payment using the Apply Automatically function.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applied Automatically";
                Visible=FALSE;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Name=Applied;
                CaptionML=ENU=Applied;
                ToolTipML=ENU=Specifies if the record on the line has been applied.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=IsApplied;
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=ENU=Specifies if the journal line has been invoiced, and you execute the payment suggestions batch job, or you create a finance charge memo or reminder.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="On Hold";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for the payment type to be used for the entry on the payment journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Payment Type";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the reason code that has been entered on the journal lines.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 114 ;2   ;Field     ;
                ToolTipML=ENU=Specifies the entry as a corrective entry. You can use the field if you need to post a corrective entry to an account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Correction;
                Visible=NOT IsSimplePage }

    { 7   ;2   ;Field     ;
                ToolTipML=ENU=Specifies a comment related to registering a payment.;
                ApplicationArea=#Comments;
                SourceExpr=Comment;
                Visible=NOT IsSimplePage }

    { 38  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the identification of the direct-debit mandate that is being used on the journal lines to process a direct debit collection.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Direct Debit Mandate ID";
                Visible=FALSE }

    { 30  ;1   ;Group      }

    { 1901776101;2;Group  ;
                GroupType=FixedLayout }

    { 1900545301;3;Group  ;
                CaptionML=ENU=Account Name }

    { 35  ;4   ;Field     ;
                ToolTipML=ENU=Specifies the name of the account.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE;
                ShowCaption=No }

    { 1900295701;3;Group  ;
                CaptionML=ENU=Bal. Account Name;
                Visible=NOT IsSimplePage;
                GroupType=Group }

    { 37  ;4   ;Field     ;
                CaptionML=ENU=Bal. Account Name;
                ToolTipML=ENU=Specifies the name of the balancing account that has been entered on the journal line.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 129 ;3   ;Group     ;
                CaptionML=ENU=Total Debit;
                Visible=IsSimplePage;
                GroupType=Group }

    { 130 ;4   ;Field     ;
                CaptionML=ENU=Total Debit;
                ToolTipML=ENU=Specifies the total debit amount in the general journal.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DisplayTotalDebit;
                Editable=FALSE }

    { 131 ;3   ;Group     ;
                CaptionML=ENU=Total Credit;
                Visible=IsSimplePage;
                GroupType=Group }

    { 132 ;4   ;Field     ;
                CaptionML=ENU=Total Credit;
                ToolTipML=ENU=Specifies the total credit amount in the general journal.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DisplayTotalCredit;
                Editable=FALSE }

    { 1902759701;3;Group  ;
                CaptionML=ENU=Balance }

    { 31  ;4   ;Field     ;
                Name=Balance;
                CaptionML=ENU=Balance;
                ToolTipML=ENU=Specifies the balance that has accumulated in the general journal on the line where the cursor is.;
                ApplicationArea=#All;
                SourceExpr=Balance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 1901652501;3;Group  ;
                CaptionML=ENU=Total Balance }

    { 33  ;4   ;Field     ;
                Name=TotalBalance;
                CaptionML=ENU=Total Balance;
                ToolTipML=ENU=Specifies the total balance in the general journal.;
                ApplicationArea=#All;
                SourceExpr=TotalBalance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900919607;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                PartType=Page }

    { 154 ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 94  ;1   ;Part      ;
                Name=WorkflowStatusBatch;
                CaptionML=ENU=Batch Workflows;
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatusOnBatch;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 90  ;1   ;Part      ;
                Name=WorkflowStatusLine;
                CaptionML=ENU=Line Workflows;
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatusOnLine;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GenJnlManagement@1002 : Codeunit 230;
      ReportPrint@1003 : Codeunit 228;
      PayrollManagement@1027 : Codeunit 1660;
      ClientTypeManagement@1077 : Codeunit 4;
      NoSeriesMgt@1841 : Codeunit 396;
      ChangeExchangeRate@1001 : Page 511;
      GLReconcile@1000 : Page 345;
      CurrentJnlBatchName@1004 : Code[10];
      AccName@1005 : Text[100];
      BalAccName@1006 : Text[50];
      Balance@1007 : Decimal;
      TotalBalance@1008 : Decimal;
      ShowBalance@1009 : Boolean;
      ShowTotalBalance@1010 : Boolean;
      ShortcutDimCode@1011 : ARRAY [8] OF Code[20];
      Text000@1012 : TextConst 'ENU=General Journal lines have been successfully inserted from Standard General Journal %1.';
      Text001@1013 : TextConst 'ENU=Standard General Journal %1 has been successfully created.';
      HasIncomingDocument@1018 : Boolean;
      ApplyEntriesActionEnabled@1026 : Boolean;
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;
      StyleTxt@1015 : Text;
      OpenApprovalEntriesExistForCurrUser@1014 : Boolean;
      OpenApprovalEntriesOnJnlBatchExist@1019 : Boolean;
      OpenApprovalEntriesOnJnlLineExist@1020 : Boolean;
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist@1021 : Boolean;
      OpenApprovalEntriesOnBatchOrAnyJnlLineExist@1022 : Boolean;
      ShowWorkflowStatusOnBatch@1016 : Boolean;
      ShowWorkflowStatusOnLine@1023 : Boolean;
      CanCancelApprovalForJnlBatch@1024 : Boolean;
      CanCancelApprovalForJnlLine@1025 : Boolean;
      ImportPayrollTransactionsAvailable@1028 : Boolean;
      IsSaasExcelAddinEnabled@1029 : Boolean;
      CanRequestFlowApprovalForBatch@1030 : Boolean;
      CanRequestFlowApprovalForBatchAndAllLines@1031 : Boolean;
      CanRequestFlowApprovalForBatchAndCurrentLine@1032 : Boolean;
      CanCancelFlowApprovalForBatch@1033 : Boolean;
      CanCancelFlowApprovalForLine@1034 : Boolean;
      AmountVisible@1035 : Boolean;
      DebitCreditVisible@1036 : Boolean;
      IsSaaS@1037 : Boolean;
      IsSimplePage@1717 : Boolean;
      CurrentDocNo@1738 : Code[20];
      CurrentPostingDate@1739 : Date;
      CurrentCurrencyCode@1740 : Code[10];
      IsChangingDocNo@1741 : Boolean;
      MissingExchangeRatesQst@1017 : TextConst '@@@=%1 - currency code, %2 - posting date;ENU=There are no exchange rates for currency %1 and date %2. Do you want to add them now? Otherwise, the last change you made will be reverted.';
      PostedFromSimplePage@1838 : Boolean;

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    LOCAL PROCEDURE EnableApplyEntriesAction@4();
    BEGIN
      ApplyEntriesActionEnabled :=
        ("Account Type" IN ["Account Type"::Customer,"Account Type"::Vendor,"Account Type"::Employee]) OR
        ("Bal. Account Type" IN ["Bal. Account Type"::Customer,"Bal. Account Type"::Vendor,"Bal. Account Type"::Employee]);
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      SetControlAppearanceFromBatch;
      CurrPage.UPDATE(FALSE);
    END;

    [External]
    PROCEDURE SetUserInteractions@2();
    BEGIN
      StyleTxt := GetStyle;
    END;

    LOCAL PROCEDURE GetCurrentlySelectedLines@3(VAR GenJournalLine@1000 : Record 81) : Boolean;
    BEGIN
      CurrPage.SETSELECTIONFILTER(GenJournalLine);
      EXIT(GenJournalLine.FINDSET);
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
      WorkflowWebhookManagement@1000 : Codeunit 1543;
      CanRequestFlowApprovalForLine@1001 : Boolean;
    BEGIN
      OpenApprovalEntriesExistForCurrUser :=
        OpenApprovalEntriesExistForCurrUser OR
        ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);

      OpenApprovalEntriesOnJnlLineExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist := OpenApprovalEntriesOnJnlBatchExist OR OpenApprovalEntriesOnJnlLineExist;

      ShowWorkflowStatusOnLine := CurrPage.WorkflowStatusLine.PAGE.SetFilterOnWorkflowRecord(RECORDID);

      CanCancelApprovalForJnlLine := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      SetPayrollAppearance;

      WorkflowWebhookManagement.GetCanRequestAndCanCancel(RECORDID,CanRequestFlowApprovalForLine,CanCancelFlowApprovalForLine);
      CanRequestFlowApprovalForBatchAndCurrentLine := CanRequestFlowApprovalForBatch AND CanRequestFlowApprovalForLine;
    END;

    LOCAL PROCEDURE IterateDocNumbers@1109(FindTxt@1001 : Text;NextNum@1002 : Integer);
    VAR
      GenJournalLine@1004 : Record 81;
      CurrentDocNoWasFound@1003 : Boolean;
      NoLines@1000 : Boolean;
    BEGIN
      IF COUNT = 0 THEN
        NoLines := TRUE;
      GenJournalLine.RESET;
      GenJournalLine.SETCURRENTKEY("Document No.","Line No.");
      GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
      GenJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      // IF GenJournalLine.FIND('+') THEN
      IF GenJournalLine.FIND(FindTxt) THEN
        REPEAT
          IF NoLines THEN BEGIN
            SetDataForSimpleMode(GenJournalLine);
            EXIT;
          END;
          // Find the rec for current doc no.
          IF NOT CurrentDocNoWasFound AND (GenJournalLine."Document No." = CurrentDocNo) THEN
            CurrentDocNoWasFound := TRUE;
          IF CurrentDocNoWasFound AND (GenJournalLine."Document No." <> CurrentDocNo) THEN BEGIN
            SetDataForSimpleMode(GenJournalLine);
            EXIT;
          END;
        UNTIL GenJournalLine.NEXT(NextNum) = 0;
    END;

    LOCAL PROCEDURE SetPayrollAppearance@7();
    VAR
      TempPayrollServiceConnection@1000 : TEMPORARY Record 1400;
    BEGIN
      PayrollManagement.OnRegisterPayrollService(TempPayrollServiceConnection);
      ImportPayrollTransactionsAvailable := NOT TempPayrollServiceConnection.ISEMPTY;
    END;

    LOCAL PROCEDURE SetControlAppearanceFromBatch@6();
    VAR
      GenJournalBatch@1000 : Record 232;
      ApprovalsMgmt@1001 : Codeunit 1535;
      WorkflowWebhookManagement@1002 : Codeunit 1543;
      CanRequestFlowApprovalForAllLines@1003 : Boolean;
    BEGIN
      IF ("Journal Template Name" <> '') AND ("Journal Batch Name" <> '') THEN
        GenJournalBatch.GET("Journal Template Name","Journal Batch Name")
      ELSE
        IF NOT GenJournalBatch.GET(GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName) THEN
          EXIT;

      ShowWorkflowStatusOnBatch := CurrPage.WorkflowStatusBatch.PAGE.SetFilterOnWorkflowRecord(GenJournalBatch.RECORDID);
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(GenJournalBatch.RECORDID);
      OpenApprovalEntriesOnJnlBatchExist := ApprovalsMgmt.HasOpenApprovalEntries(GenJournalBatch.RECORDID);

      OpenApprovalEntriesOnBatchOrAnyJnlLineExist :=
        OpenApprovalEntriesOnJnlBatchExist OR
        ApprovalsMgmt.HasAnyOpenJournalLineApprovalEntries("Journal Template Name","Journal Batch Name");

      CanCancelApprovalForJnlBatch := ApprovalsMgmt.CanCancelApprovalForRecord(GenJournalBatch.RECORDID);

      WorkflowWebhookManagement.GetCanRequestAndCanCancelJournalBatch(
        GenJournalBatch,CanRequestFlowApprovalForBatch,CanCancelFlowApprovalForBatch,CanRequestFlowApprovalForAllLines);
      CanRequestFlowApprovalForBatchAndAllLines := CanRequestFlowApprovalForBatch AND CanRequestFlowApprovalForAllLines;
    END;

    LOCAL PROCEDURE SetConrolVisibility@8();
    VAR
      GLSetup@1000 : Record 98;
    BEGIN
      GLSetup.GET;
      IF IsSimplePage THEN BEGIN
        AmountVisible := FALSE;
        DebitCreditVisible := TRUE;
      END ELSE BEGIN
        AmountVisible := NOT (GLSetup."Show Amounts" = GLSetup."Show Amounts"::"Debit/Credit Only");
        DebitCreditVisible := NOT (GLSetup."Show Amounts" = GLSetup."Show Amounts"::"Amount Only");
      END;
    END;

    LOCAL PROCEDURE SetDocumentNumberFilter@1101(DocNoToSet@1000 : Code[20]);
    VAR
      OriginalFilterGroup@1001 : Integer;
    BEGIN
      OriginalFilterGroup := FILTERGROUP;
      FILTERGROUP := 25;
      SETFILTER("Document No.",DocNoToSet);
      FILTERGROUP := OriginalFilterGroup;
    END;

    LOCAL PROCEDURE DisplayTotalDebit@1102() : Decimal;
    VAR
      GenJournalLine@1002 : Record 81;
      TotalDebitAmt@1000 : Decimal;
    BEGIN
      IF IsSimplePage THEN BEGIN
        CLEAR(TotalDebitAmt);
        GenJournalLine.RESET;
        GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        GenJournalLine.SETRANGE("Document No.",CurrentDocNo);
        IF GenJournalLine.FIND('-') THEN
          REPEAT
            TotalDebitAmt := TotalDebitAmt + GenJournalLine."Debit Amount";
          UNTIL GenJournalLine.NEXT = 0;
        EXIT(TotalDebitAmt);
      END
    END;

    LOCAL PROCEDURE DisplayTotalCredit@1103() : Decimal;
    VAR
      GenJournalLine@1002 : Record 81;
      TotalCreditAmt@1000 : Decimal;
    BEGIN
      IF IsSimplePage THEN BEGIN
        CLEAR(TotalCreditAmt);
        GenJournalLine.RESET;
        GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        GenJournalLine.SETRANGE("Document No.",CurrentDocNo);
        IF GenJournalLine.FIND('-') THEN
          REPEAT
            TotalCreditAmt := TotalCreditAmt + GenJournalLine."Credit Amount";
          UNTIL GenJournalLine.NEXT = 0;
        EXIT(TotalCreditAmt);
      END
    END;

    LOCAL PROCEDURE SetDataForSimpleMode@1104(GenJournalLine1@1000 : Record 81);
    BEGIN
      CurrentDocNo := GenJournalLine1."Document No.";
      CurrentPostingDate := GenJournalLine1."Posting Date";
      CurrentCurrencyCode := GenJournalLine1."Currency Code";
      SetDocumentNumberFilter(CurrentDocNo);
    END;

    LOCAL PROCEDURE SetDataForSimpleModeOnOpen@1105();
    BEGIN
      IF IsSimplePage THEN BEGIN
        // Filter on the first record
        SETCURRENTKEY("Document No.","Line No.");
        IF FINDFIRST THEN
          SetDataForSimpleMode(Rec)
        ELSE BEGIN
          // if no rec is found reset the currentposting date to workdate and currency code to empty
          CurrentPostingDate := WORKDATE;
          CLEAR(CurrentCurrencyCode);
        END;
      END;
    END;

    LOCAL PROCEDURE SetDataForSimpleModeOnBatchChange@1106();
    VAR
      GenJournalLine@1000 : Record 81;
    BEGIN
      GenJnlManagement.SetLastViewedJournalBatchName(PAGE::"General Journal",CurrentJnlBatchName);
      // Need to set up simple page mode properties on batch change
      IF IsSimplePage THEN BEGIN
        GenJournalLine.RESET;
        GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
        IF GenJournalLine.FINDFIRST THEN
          SetDataForSimpleMode(GenJournalLine);
      END;
    END;

    LOCAL PROCEDURE SetDataForSimpleModeOnNewRecord@1107();
    BEGIN
      // No lines shown
      IF COUNT = 0 THEN
        // If xrec."Document No." is empty that means this is the first entry for a batch
        // In this case we want to assign current doc no. to the document no. of the record
        // But if user changes the doc no. then we want to use whatever value they enter for
        // current doc no.
        IF (xRec."Document No." = '') AND (NOT IsChangingDocNo) THEN
          CurrentDocNo := "Document No."
        ELSE BEGIN
          "Document No." := CurrentDocNo;
          // Clear out credit / debit for empty page since these
          // might have been set if suggest balance amount is checked on the batch
          VALIDATE("Credit Amount",0);
          VALIDATE("Debit Amount",0);
        END
      ELSE
        "Document No." := CurrentDocNo;

      "Currency Code" := CurrentCurrencyCode;
      IF CurrentPostingDate <> 0D THEN
        VALIDATE("Posting Date",CurrentPostingDate);
    END;

    LOCAL PROCEDURE SetDataForSimpleModeOnPropValidation@1108(FiledNumber@1000 : Integer);
    VAR
      GenJournalLine@1001 : Record 81;
    BEGIN
      IF IsSimplePage AND (COUNT > 0) THEN BEGIN
        GenJournalLine.RESET;
        GenJournalLine.SETRANGE("Journal Template Name","Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name","Journal Batch Name");
        GenJournalLine.SETRANGE("Document No.",CurrentDocNo);
        IF GenJournalLine.FIND('-') THEN
          REPEAT
            CASE FiledNumber OF
              GenJournalLine.FIELDNO("Currency Code"):
                GenJournalLine.VALIDATE("Currency Code",CurrentCurrencyCode);
              GenJournalLine.FIELDNO("Posting Date"):
                GenJournalLine.VALIDATE("Posting Date",CurrentPostingDate);
            END;
            GenJournalLine.MODIFY;
          UNTIL GenJournalLine.NEXT = 0;
      END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDataForSimpleModeOnPost@189();
    BEGIN
      PostedFromSimplePage := TRUE;
      SETCURRENTKEY("Document No.","Line No.");
      IF FINDFIRST THEN
        SetDataForSimpleMode(Rec)
    END;

    LOCAL PROCEDURE UpdateCurrencyFactor@212(FieldNo@1001 : Integer);
    VAR
      UpdateCurrencyExchangeRates@1002 : Codeunit 1281;
    BEGIN
      IF CurrentCurrencyCode <> '' THEN
        IF UpdateCurrencyExchangeRates.ExchangeRatesForCurrencyExist(CurrentPostingDate,CurrentCurrencyCode) THEN
          SetDataForSimpleModeOnPropValidation(FieldNo)
        ELSE
          IF CONFIRM(STRSUBSTNO(MissingExchangeRatesQst,CurrentCurrencyCode,CurrentPostingDate)) THEN BEGIN
            UpdateCurrencyExchangeRates.OpenExchangeRatesPage(CurrentCurrencyCode);
            UpdateCurrencyFactor(FieldNo);
          END ELSE BEGIN
            CurrentCurrencyCode := "Currency Code";
            CurrentPostingDate := "Posting Date";
          END;
    END;

    BEGIN
    {
      // This page has two view modes based on global variable 'IsSimplePage' as :-
      // Classic mode (Show more columns action) - When IsSimplePage is set to false. This view supports showing all the traditional columns. All the lines for all
      // document numbers are shown in this view.
      // Simple mode (Show less columns actions) - When IsSimplePage is set to True. This view supports limitted columns and pulls document number, posting date,
      // currency code as global variables. This mode is intented to do fast data entry so only ONE document number is shown at a time. User can
      // use next / previous buttons to navigate between different document numbers.
      // By default this page opens up in Simple mode; if users chooses to switch to classic mode (show more columns) then we remember their selection in Journal User Preferences table
    }
    END.
  }
}

