OBJECT Table 6086330 Bank Transaction
{
  OBJECT-PROPERTIES
  {
    Date=11/01/17;
    Time=[ 1:00:00 AM];
    Version List=EMW16.00.10.2.60.02;
  }
  PROPERTIES
  {
    Permissions=TableData 6086311=r;
    OnDelete=VAR
               ExpenseMatchMgt@1160040000 : Codeunit 6086311;
               BankTransactionPost@1160040001 : Codeunit 6086352;
             BEGIN
               TESTFIELD("Matched to Expense",FALSE);
               ExpenseMatchMgt.DeleteBankTransMatch(Rec);

               BankTransactionPost.RevertPosting(Rec);
             END;

    OnRename=BEGIN
               ERROR(Text001,TABLECAPTION);
             END;

    CaptionML=ENU=Bank Transaction;
    LookupPageID=Page6086332;
    DrillDownPageID=Page6086332;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=ENU=Entry No.;
                                                   NotBlank=Yes }
    { 2   ;   ;Card No.            ;Code20        ;OnValidate=VAR
                                                                ContUserCreditCard@1160040000 : Record 6086311;
                                                              BEGIN
                                                                ContUserCreditCard.SETRANGE("Card No.","Card No.");
                                                                ContUserCreditCard.FINDFIRST;
                                                                "Continia User ID" := ContUserCreditCard."Continia User ID";
                                                                "Bank Account Type" := ContUserCreditCard."Account Type";
                                                                "Bank Account No." := ContUserCreditCard."Account No.";
                                                              END;

                                                   CaptionML=ENU=Card No. }
    { 3   ;   ;Card Name           ;Text50        ;CaptionML=ENU=Card Name }
    { 5   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Posted,FALSE);
                                                              END;

                                                   CaptionML=ENU=Posting Date;
                                                   Editable=No }
    { 6   ;   ;Document Date       ;Date          ;CaptionML=ENU=Document Date }
    { 7   ;   ;Currency Code       ;Code10        ;OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                TESTFIELD(Posted,FALSE);
                                                              END;

                                                   CaptionML=ENU=Currency Code }
    { 8   ;   ;Currency Exch. Rate ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                TESTFIELD(Posted,FALSE);
                                                              END;

                                                   CaptionML=ENU=Currency Exch. Rate;
                                                   DecimalPlaces=0:15 }
    { 9   ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                TESTFIELD(Posted,FALSE);
                                                              END;

                                                   CaptionML=ENU=Amount;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 10  ;   ;Bank-Currency Amount;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                TESTFIELD(Posted,FALSE);
                                                              END;

                                                   CaptionML=ENU=Bank-Currency Amount;
                                                   AutoFormatType=1 }
    { 11  ;   ;Entry Type          ;Integer       ;CaptionML=ENU=Entry Type }
    { 12  ;   ;Business Category ID;Code50        ;CaptionML=ENU=Business Category ID }
    { 13  ;   ;Business No.        ;Code20        ;CaptionML=ENU=Business No. }
    { 14  ;   ;Business Name       ;Text250       ;CaptionML=ENU=Business Name }
    { 15  ;   ;Business Address    ;Text80        ;CaptionML=ENU=Business Address }
    { 16  ;   ;Business Address 2  ;Text80        ;CaptionML=ENU=Business Address 2 }
    { 17  ;   ;Business Address 3  ;Text80        ;CaptionML=ENU=Business Address 3 }
    { 18  ;   ;Business Country/Region;Code20     ;CaptionML=ENU=Business Country/Region }
    { 19  ;   ;Business Post Code  ;Code10        ;CaptionML=ENU=Business Post Code }
    { 20  ;   ;Document Time       ;Time          ;CaptionML=ENU=Document Time;
                                                   Editable=No }
    { 21  ;   ;Bank Currency Code  ;Code10        ;TableRelation=Currency;
                                                   CaptionML=ENU=Bank Currency Code;
                                                   Editable=No }
    { 22  ;   ;Transaction ID      ;Text50        ;CaptionML=ENU=Transaction ID;
                                                   Editable=No }
    { 40  ;   ;Bank Code           ;Code10        ;TableRelation="CEM Bank";
                                                   CaptionML=ENU=Bank Code }
    { 41  ;   ;Bank Country/Region Code;Code10    ;TableRelation="Bank Agreement"."Country/Region Code" WHERE (Bank Code=FIELD(Bank Code));
                                                   CaptionML=ENU=Bank Country/Region Code }
    { 50  ;   ;Continia User ID    ;Code50        ;TableRelation="Continia User Setup";
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                VALIDATE("Card No.");
                                                              END;

                                                   CaptionML=ENU=Continia User ID }
    { 51  ;   ;Exclude Entry       ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                              END;

                                                   CaptionML=ENU=Exclude Entry }
    { 70  ;   ;Posted              ;Boolean       ;OnValidate=BEGIN
                                                                IF Posted THEN BEGIN
                                                                  "Posted Date/Time" := CURRENTDATETIME;
                                                                  "Posted by User ID" := USERID;
                                                                END ELSE BEGIN
                                                                  CLEAR("Posted Date/Time");
                                                                  CLEAR("Posted by User ID");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Posted }
    { 71  ;   ;Posted Date/Time    ;DateTime      ;CaptionML=ENU=Posted Date Time;
                                                   Editable=No }
    { 72  ;   ;Posted by User ID   ;Code50        ;CaptionML=ENU=Posted by User ID;
                                                   Editable=No }
    { 73  ;   ;Posted Doc. ID      ;Code20        ;CaptionML=ENU=Posted Doc. ID;
                                                   Editable=No }
    { 74  ;   ;Bank Statement Transaction;Boolean ;CaptionML=ENU=Bank Statement Transaction }
    { 77  ;   ;Statement Status    ;Option        ;CaptionML=ENU=Statement Status;
                                                   OptionCaptionML=ENU=Open,Bank Transaction Applied,Closed;
                                                   OptionString=Open,Bank Transaction Applied,Closed }
    { 78  ;   ;Statement No.       ;Code20        ;TableRelation="EM Bank Acc. Recon. Line"."Statement No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Statement No. }
    { 79  ;   ;Statement Line No.  ;Integer       ;TableRelation="EM Bank Acc. Recon. Line"."Statement Line No.";
                                                   TestTableRelation=No;
                                                   CaptionML=ENU=Statement Line No. }
    { 80  ;   ;Bank Account Type   ;Option        ;CaptionML=ENU=Bank Account Type;
                                                   OptionCaptionML=ENU=G/L Account,,Vendor,Bank Account;
                                                   OptionString=G/L Account,,Vendor,Bank Account }
    { 81  ;   ;Bank Account No.    ;Code20        ;TableRelation=IF (Bank Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bank Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bank Account Type=CONST(Vendor)) Vendor;
                                                   CaptionML=ENU=Bank Account No.;
                                                   NotBlank=Yes }
    { 83  ;   ;Reconciled          ;Boolean       ;OnValidate=BEGIN
                                                                IF Reconciled THEN BEGIN
                                                                  "Reconciled Date/Time" := CURRENTDATETIME;
                                                                  "Reconciled by User ID" := USERID;
                                                                END ELSE BEGIN
                                                                  CLEAR("Reconciled Date/Time");
                                                                  CLEAR("Reconciled by User ID");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Reconciled }
    { 84  ;   ;Reconciled Date/Time;DateTime      ;CaptionML=ENU=Reconciled Date/Time;
                                                   Editable=No }
    { 85  ;   ;Reconciled by User ID;Code50       ;CaptionML=ENU=Reconciled by User ID;
                                                   Editable=No }
    { 100 ;   ;Bank Agreement ID   ;Text30        ;TableRelation="Bank Agreement"."Agreement ID" WHERE (Bank Code=FIELD(Bank Code),
                                                                                                        Country/Region Code=FIELD(Bank Country/Region Code));
                                                   CaptionML=ENU=Bank Agreement ID }
    { 180 ;   ;Expense Type        ;Code20        ;TableRelation="Expense Type";
                                                   OnValidate=VAR
                                                                ExpenseType@1160040000 : Record 6086307;
                                                              BEGIN
                                                                TESTFIELD("Matched to Expense",FALSE);
                                                                ExpenseType.GET("Expense Type");
                                                                VALIDATE("Exclude Entry",ExpenseType."Exclude Transactions");
                                                              END;

                                                   CaptionML=ENU=Expense Type }
    { 200 ;   ;Matched to Expense  ;Boolean       ;CaptionML=ENU=Matched to Expense;
                                                   Editable=No }
    { 250 ;   ;Duplicate           ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Duplicate,FALSE);
                                                              END;

                                                   CaptionML=ENU=Duplicate }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Continia User ID,Matched to Expense,Currency Code,Exclude Entry;
                                                   SumIndexFields=Amount,Bank-Currency Amount }
    {    ;Matched to Expense                       }
    {    ;Card No.,Posting Date                    }
    {    ;Posted,Continia User ID,Matched to Expense }
    {    ;Posted Doc. ID                           }
    {    ;Transaction ID                           }
    {    ;Posted,Posted Date/Time,Entry No.        }
    {    ;Reconciled,Bank Statement Transaction    }
    {    ;Bank Statement Transaction               }
    {    ;Bank Account Type,Bank Account No.,Bank Statement Transaction,Reconciled,Posted;
                                                   SumIndexFields=Bank-Currency Amount }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1160040000 : TextConst 'ENU=You cannot rename a %1.';
      TransNotMatchedErr@1160040002 : TextConst 'ENU=This bank transaction is not matched to any expenses.';

    PROCEDURE CheckUnProcessedBankInbox@1160040003();
    VAR
      Expense@1160040000 : Record 6086320;
    BEGIN
      Expense.CheckUnProcessedInbox;
    END;

    PROCEDURE ApplyMappingRule@1160040002();
    VAR
      BankMappingRule@1160040000 : Record 6086350;
    BEGIN
      IF "Expense Type" <> '' THEN
        EXIT;
      BankMappingRule.UseBankMappingRules(Rec);
      IF "Expense Type" <> '' THEN
        Rec.MODIFY;
    END;

    PROCEDURE MatchAndCreateExpense@1160040011();
    VAR
      CountryRegion@1160040003 : Record 9;
      EMSetup@1160040005 : Record 6086300;
      ExpenseType@1160040000 : Record 6086307;
      Expense@1160040002 : Record 6086320;
      Matching@1160040007 : Codeunit 6086311;
      ExpValidate@1160040004 : Codeunit 6086321;
      SendExpense@1160040006 : Codeunit 6086324;
      NextEntryNo@1160040001 : Integer;
    BEGIN
      TESTFIELD("Bank Statement Transaction",FALSE);

      EMSetup.GET;
      IF ExpenseType.GET("Expense Type") THEN
        IF ExpenseType."Exclude Transactions" THEN
          EXIT;

      IF Matching.MatchInsertExpense(Rec,Expense) THEN
        EXIT;

      Expense.RESET;

      IF Expense.FINDLAST THEN
        NextEntryNo := Expense."Entry No." + 1
      ELSE
        NextEntryNo := 1;

      Expense.INIT;
      Expense."Entry No." := NextEntryNo;
      Expense.VALIDATE("Continia User ID","Continia User ID");
      IF EMSetup."Exp. Description From Bank" THEN
        Expense.Description := COPYSTR("Business Name",1,MAXSTRLEN(Expense.Description));
      Expense."Business Description" := "Business Name";
      Expense."Document Date" := "Document Date";
      IF CountryRegion.GET("Business Country/Region") THEN
        Expense."Country/Region Code" := CountryRegion.Code;
      Expense."Currency Code" := "Currency Code";
      Expense.VALIDATE(Amount,Amount);
      Expense."Bank-Currency Amount" := "Bank-Currency Amount";
      Expense."Document Time" := "Document Time";

      Expense.VALIDATE("Expense Type","Expense Type");
      Expense."Created By User ID" := USERID;
      Expense.INSERT(TRUE);

      Matching.InsertMatch(Rec,Expense);
      Expense.GET(Expense."Entry No.");

      SendExpense.SetBatchMode(TRUE);
      SendExpense.RUN(Expense);

      Rec.GET("Entry No.");
    END;

    PROCEDURE ShowMatchedExpense@1160040000();
    VAR
      Expense@1160040001 : Record 6086320;
      ExpenseMatch@1160040000 : Record 6086349;
      ExpHeader@1160040002 : Record 6086339;
    BEGIN
      IF NOT "Matched to Expense" THEN
        ERROR(TransNotMatchedErr);

      ExpenseMatch.SETCURRENTKEY("Transaction Entry No.");
      ExpenseMatch.SETRANGE("Transaction Entry No.","Entry No.");
      ExpenseMatch.FINDFIRST;

      Expense.SETRANGE("Entry No.",ExpenseMatch."Expense Entry No.");
      Expense.FINDFIRST;
      IF Expense."Settlement No." = '' THEN
        IF NOT Expense.Posted THEN
          PAGE.RUN(PAGE::"Expense Card",Expense)
        ELSE
          PAGE.RUN(PAGE::"Posted Expense Card",Expense)
      ELSE BEGIN
        ExpHeader.GET(ExpHeader."Document Type"::Settlement,Expense."Settlement No.");
        IF NOT ExpHeader.Posted THEN
          PAGE.RUN(PAGE::"Expense Settlement Card",ExpHeader)
        ELSE
          PAGE.RUN(PAGE::"Posted Settlement Card",ExpHeader);
      END;
    END;

    PROCEDURE GetBankAccountCurrencyCode@1160040004() : Code[10];
    VAR
      UserCreditCard@1160040001 : Record 6086311;
    BEGIN
      IF UserCreditCard.GET("Continia User ID","Card No.") THEN
        EXIT(UserCreditCard.GetAccountCurrencyCode(UserCreditCard."Account Type",UserCreditCard."Account No."));
    END;

    PROCEDURE Navigate@2();
    VAR
      Navigate@1000 : Codeunit 6086317;
    BEGIN
      IF "Entry No." <> 0 THEN
        Navigate.NavigateBankTransaction(Rec);
    END;

    PROCEDURE LookupDimensions@1160040001();
    VAR
      EmDim@1160040000 : Record 6086360;
      ExpDim@1160040001 : Page 6086356;
    BEGIN
      EmDim.SETRANGE("Table ID",DATABASE::"Bank Transaction");
      EmDim.SETRANGE("Document Type",0);
      EmDim.SETRANGE("Document No.",'');
      EmDim.SETRANGE("Doc. Ref. No.","Entry No.");

      ExpDim.SETTABLEVIEW(EmDim);
      ExpDim.SetReadOnly;
      ExpDim.RUNMODAL;
    END;

    PROCEDURE GetMatchedExpenseEntryNo@1160040006() : Integer;
    VAR
      ExpenseMatch@1160040000 : Record 6086349;
    BEGIN
      ExpenseMatch.SETRANGE("Transaction Entry No.","Entry No.");
      IF ExpenseMatch.FINDFIRST THEN
        EXIT(ExpenseMatch."Expense Entry No.");
    END;

    PROCEDURE IsApplied@1() : Boolean;
    VAR
      BankTransaction@1000 : Record 6086330;
    BEGIN
      IF ("Statement Status" = "Statement Status"::"Bank Transaction Applied") AND
         ("Statement No." <> '') AND
         ("Statement Line No." <> 0)
      THEN
        EXIT(TRUE);
    END;

    PROCEDURE SetStyle@6() : Text[1024];
    BEGIN
      IF IsApplied THEN
        EXIT('Favorable');

      EXIT('');
    END;

    PROCEDURE GetExpenseStatus@1160040005() : Integer;
    VAR
      Expense@1160040001 : Record 6086320;
      ExpenseStatus@1160040000 : 'Not Matched,Open,Pending Expense User,Pending Approval,Released,Posted';
    BEGIN
      IF NOT Expense.GET(GetMatchedExpenseEntryNo) THEN
        EXIT(ExpenseStatus::"Not Matched");

      CASE Expense.Status OF
        Expense.Status::Open:
          EXIT(ExpenseStatus::Open);
        Expense.Status::"Pending Expense User":
          EXIT(ExpenseStatus::"Pending Expense User");
        Expense.Status::"Pending Approval":
          EXIT(ExpenseStatus::"Pending Approval");
        Expense.Status::Released:
          IF Expense.Posted THEN
            EXIT(ExpenseStatus::Posted)
          ELSE
            EXIT(ExpenseStatus::Released);
      END;
    END;

    BEGIN
    END.
  }
}

