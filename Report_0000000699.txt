OBJECT Report 699 Calculate Plan - Req. Wksh.
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calculate Plan - Req. Wksh.;
               ESM=Calcular plan - Hoja demanda;
               FRC=Calculer planning - F. demande;
               ENC=Calculate Plan - Req. Wksh.];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ProductionForecastEntry@1000 : Record 99000852;
                BEGIN
                  Counter := 0;
                  IF FromDate = 0D THEN
                    ERROR(Text002);
                  IF ToDate = 0D THEN
                    ERROR(Text003);
                  PeriodLength := ToDate - FromDate + 1;
                  IF PeriodLength <= 0 THEN
                    ERROR(Text004);

                  IF (Item.GETFILTER("Variant Filter") <> '') AND
                     (MfgSetup."Current Production Forecast" <> '')
                  THEN BEGIN
                    ProductionForecastEntry.SETRANGE("Production Forecast Name",MfgSetup."Current Production Forecast");
                    Item.COPYFILTER("No.",ProductionForecastEntry."Item No.");
                    IF MfgSetup."Use Forecast on Locations" THEN
                      Item.COPYFILTER("Location Filter",ProductionForecastEntry."Location Code");
                    IF NOT ProductionForecastEntry.ISEMPTY THEN
                      ERROR(Text005);
                  END;

                  ReqLine.SETRANGE("Worksheet Template Name",CurrTemplateName);
                  ReqLine.SETRANGE("Journal Batch Name",CurrWorksheetName);

                  Window.OPEN(
                    Text006 +
                    Text007);
                END;

  }
  DATASET
  {
    { 8129;    ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(Low-Level Code)
                                 WHERE(Type=CONST(Inventory));
               OnPreDataItem=BEGIN
                               SKU.SETCURRENTKEY("Item No.");
                               COPYFILTER("Variant Filter",SKU."Variant Code");
                               COPYFILTER("Location Filter",SKU."Location Code");

                               COPYFILTER("Variant Filter",PlanningAssignment."Variant Code");
                               COPYFILTER("Location Filter",PlanningAssignment."Location Code");
                               PlanningAssignment.SETRANGE(Inactive,FALSE);
                               PlanningAssignment.SETRANGE("Net Change Planning",TRUE);

                               ReqLineExtern.SETCURRENTKEY(Type,"No.","Variant Code","Location Code");
                               COPYFILTER("Variant Filter",ReqLineExtern."Variant Code");
                               COPYFILTER("Location Filter",ReqLineExtern."Location Code");

                               PurchReqLine.SETCURRENTKEY(
                                 Type,"No.","Variant Code","Location Code","Sales Order No.","Planning Line Origin","Due Date");
                               PurchReqLine.SETRANGE(Type,PurchReqLine.Type::Item);
                               COPYFILTER("Variant Filter",PurchReqLine."Variant Code");
                               COPYFILTER("Location Filter",PurchReqLine."Location Code");
                               PurchReqLine.SETFILTER("Worksheet Template Name",ReqWkshTemplateFilter);
                               PurchReqLine.SETFILTER("Journal Batch Name",ReqWkshFilter);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Counter MOD 5 = 0 THEN
                                    Window.UPDATE(1,"No.");
                                  Counter := Counter + 1;

                                  IF SkipPlanningForItemOnReqWksh(Item) THEN
                                    CurrReport.SKIP;

                                  PlanningAssignment.SETRANGE("Item No.","No.");

                                  ReqLine.LOCKTABLE;
                                  ActionMessageEntry.LOCKTABLE;

                                  PurchReqLine.SETRANGE("No.","No.");
                                  PurchReqLine.MODIFYALL("Accept Action Message",FALSE);
                                  PurchReqLine.DELETEALL(TRUE);

                                  ReqLineExtern.SETRANGE(Type,ReqLine.Type::Item);
                                  ReqLineExtern.SETRANGE("No.","No.");
                                  IF ReqLineExtern.FIND('-') THEN
                                    REPEAT
                                      ReqLineExtern.DELETE(TRUE);
                                    UNTIL ReqLineExtern.NEXT = 0;

                                  InvtProfileOffsetting.SetParm(UseForecast,ExcludeForecastBefore,CurrWorksheetType);
                                  InvtProfileOffsetting.CalculatePlanFromWorksheet(
                                    Item,
                                    MfgSetup,
                                    CurrTemplateName,
                                    CurrWorksheetName,
                                    FromDate,
                                    ToDate,
                                    TRUE,
                                    RespectPlanningParm);

                                  IF PlanningAssignment.FIND('-') THEN
                                    REPEAT
                                      IF PlanningAssignment."Latest Date" <= ToDate THEN BEGIN
                                        PlanningAssignment.Inactive := TRUE;
                                        PlanningAssignment.MODIFY;
                                      END;
                                    UNTIL PlanningAssignment.NEXT = 0;

                                  COMMIT;
                                END;

               ReqFilterFields=No.,Search Description,Location Filter }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   MfgSetup.GET;
                   UseForecast := MfgSetup."Current Production Forecast";

                   OnAfterOnOpenPage;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=[ENU=Starting Date;
                             ESM=Fecha inicial;
                             FRC=Date d‚but;
                             ENC=Starting Date];
                  ToolTipML=[ENU=Specifies the date to use for new orders. This date is used to evaluate the inventory.;
                             ESM=Especifica la fecha para los pedidos nuevos. Esta fecha se utiliza para evaluar el inventario.;
                             FRC=Sp‚cifie la date … utiliser pour les nouvelles commandes. Cette date est utilis‚e pour ‚valuer l'inventaire.;
                             ENC=Specifies the date to use for new orders. This date is used to evaluate the inventory.];
                  ApplicationArea=#Planning;
                  SourceExpr=FromDate }

      { 3   ;2   ;Field     ;
                  Name=EndingDate;
                  CaptionML=[ENU=Ending Date;
                             ESM=Fecha final;
                             FRC=Date fin;
                             ENC=Ending Date];
                  ToolTipML=[ENU=Specifies the date where the planning period ends. Demand is not included beyond this date.;
                             ESM=Especifica la fecha en la que finaliza el periodo de planificaci¢n. No se incluye m s demanda a partir de esta fecha.;
                             FRC=Sp‚cifie la date de fin de la p‚riode de planification. La demande n'est pas incluse au-del… de cette date.;
                             ENC=Specifies the date where the planning period ends. Demand is not included beyond this date.];
                  ApplicationArea=#Planning;
                  SourceExpr=ToDate }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Use Forecast;
                             ESM=Previsi¢n de uso;
                             FRC=Utiliser la pr‚vision;
                             ENC=Use Forecast];
                  ToolTipML=[ENU=Specifies a forecast that should be included as demand when running the planning batch job.;
                             ESM=Especifica una previsi¢n que se debe incluir como demanda cuando se ejecute el trabajo por lotes de planificaci¢n.;
                             FRC=Sp‚cifie une pr‚vision … inclure en tant que demande lors de l'ex‚cution du traitement en lot de planification.;
                             ENC=Specifies a forecast that should be included as demand when running the planning batch job.];
                  ApplicationArea=#Planning;
                  SourceExpr=UseForecast;
                  TableRelation="Production Forecast Name".Name }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Exclude Forecast Before;
                             ESM=No incluir en la previsi¢n fechas anteriores al;
                             FRC=Exclure la pr‚vision ant‚rieure …;
                             ENC=Exclude Forecast Before];
                  ToolTipML=[ENU=Specifies how much of the selected forecast to include, by entering a date before which forecast demand is not included.;
                             ESM=Especifica qu‚ parte de la previsi¢n seleccionada desea incluir introduciendo una fecha anterior a la cual no se incluir  demanda de previsi¢n alguna.;
                             FRC=Sp‚cifie la date qui d‚terminera le d‚but de la p‚riode des pr‚visions s‚lectionn‚es prise en compte.;
                             ENC=Specifies how much of the selected forecast to include, by entering a date before which forecast demand is not included.];
                  ApplicationArea=#Planning;
                  SourceExpr=ExcludeForecastBefore }

      { 4   ;2   ;Field     ;
                  Name=RespectPlanningParm;
                  CaptionML=[ENU=Respect Planning Parameters for Supply Triggered by Safety Stock;
                             ESM=Par metros de planificaci¢n de relaci¢n para suministro desencadenados por las existencias de seguridad;
                             FRC=Respecter les paramŠtres de planification pour l'approvisionnement d‚clench‚ par le stock de s‚curit‚;
                             ENC=Respect Planning Parameters for Supply Triggered by Safety Stock];
                  ToolTipML=[ENU=Specifies that planning lines triggered by safety stock will respect the following planning parameters: Reorder Point, Reorder Quantity, Reorder Point, and Maximum Inventory in addition to all order modifiers. If you do not select this check box, planning lines triggered by safety stock will only cover the exact demand quantity.;
                             ESM=Especifica que las l¡neas de planificaci¢n desencadenadas por las existencias de seguridad respetar n los siguientes par metros de planificaci¢n: Punto reorden, Cantidad reorden, Punto reorden y Inventario m ximo, adem s de todos los modificadores de pedido. Si no selecciona esta casilla, las l¡neas de planificaci¢n desencadenadas por las existencias de seguridad de las l¡neas de planificaci¢n solo cubrir n la cantidad de demanda exacta.;
                             FRC=Sp‚cifie que les lignes de planification d‚clench‚es par le stock de s‚curit‚ vont respecter les paramŠtres de planification suivantsÿ: Point de r‚approvisionnement, Quantit‚ de r‚approvisionnement, Point de r‚approvisionnement et Quantit‚ maximum inventaire, en plus de tous les modificateurs d'ordre. Si vous ne cochez pas cette case, les lignes de planification d‚clench‚es par le stock de s‚curit‚ vont uniquement couvrir la quantit‚ exacte demand‚e.;
                             ENC=Specifies that planning lines triggered by safety stock will respect the following planning parameters: Reorder Point, Reorder Quantity, Reorder Point, and Maximum Inventory in addition to all order modifiers. If you do not select this check box, planning lines triggered by safety stock will only cover the exact demand quantity.];
                  ApplicationArea=#Planning;
                  SourceExpr=RespectPlanningParm }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text002@1000 : TextConst 'ENU=Enter a starting date.;ESM=Especifique una fecha inicial.;FRC=Entrez une date de d‚but.;ENC=Enter a starting date.';
      Text003@1001 : TextConst 'ENU=Enter an ending date.;ESM=Especifique una fecha final.;FRC=Entrez une date de fin.;ENC=Enter an ending date.';
      Text004@1002 : TextConst 'ENU=The ending date must not be before the order date.;ESM=Fecha final no puede ser anterior a Fecha pedido.;FRC=La date de fin ne doit pas pr‚c‚der la date de commande.;ENC=The ending date must not be before the order date.';
      Text005@1003 : TextConst 'ENU=You must not use a variant filter when calculating MPS from a forecast.;ESM=No debe utilizar un filtro variante cuando calcule MPS desde una previsi¢n.;FRC=Vous ne devez pas utiliser un filtre variante ou casier lorsque vous calculez une commande PDP depuis une pr‚vision.;ENC=You must not use a variant filter when calculating MPS from a forecast.';
      Text006@1004 : TextConst 'ENU=Calculating the plan...\\;ESM=Calculando el plan...\\;FRC=Calculer le plan...\\;ENC=Calculating the plan...\\';
      Text007@1005 : TextConst 'ENU=Item No.  #1##################;ESM=Prod. n§  #1##################;FRC=N§ d''article  #1##################;ENC=Item No.  #1##################';
      ReqLine@1006 : Record 246;
      ActionMessageEntry@1007 : Record 99000849;
      ReqLineExtern@1008 : Record 246;
      PurchReqLine@1009 : Record 246;
      SKU@1010 : Record 5700;
      PlanningAssignment@1012 : Record 99000850;
      MfgSetup@1018 : Record 99000765;
      InvtProfileOffsetting@1020 : Codeunit 99000854;
      Window@1015 : Dialog;
      CurrWorksheetType@1022 : 'Requisition,Planning';
      PeriodLength@1024 : Integer;
      CurrTemplateName@1025 : Code[10];
      CurrWorksheetName@1026 : Code[10];
      FromDate@1027 : Date;
      ToDate@1028 : Date;
      ReqWkshTemplateFilter@1030 : Code[50];
      ReqWkshFilter@1031 : Code[50];
      Counter@1032 : Integer;
      UseForecast@1014 : Code[10];
      ExcludeForecastBefore@1013 : Date;
      RespectPlanningParm@1011 : Boolean;

    [External]
    PROCEDURE SetTemplAndWorksheet@2(TemplateName@1000 : Code[10];WorksheetName@1001 : Code[10]);
    BEGIN
      CurrTemplateName := TemplateName;
      CurrWorksheetName := WorksheetName;
    END;

    PROCEDURE InitializeRequest@1(StartDate@1000 : Date;EndDate@1001 : Date);
    BEGIN
      FromDate := StartDate;
      ToDate := EndDate;
    END;

    LOCAL PROCEDURE SkipPlanningForItemOnReqWksh@3(Item@1000 : Record 27) : Boolean;
    BEGIN
      WITH Item DO
        IF (CurrWorksheetType = CurrWorksheetType::Requisition) AND
           ("Replenishment System" = "Replenishment System"::Purchase) AND
           ("Reordering Policy" <> "Reordering Policy"::" ")
        THEN
          EXIT(FALSE);

      WITH SKU DO BEGIN
        SETRANGE("Item No.",Item."No.");
        IF FIND('-') THEN
          REPEAT
            IF (CurrWorksheetType = CurrWorksheetType::Requisition) AND
               ("Replenishment System" IN ["Replenishment System"::Purchase,
                                           "Replenishment System"::Transfer]) AND
               ("Reordering Policy" <> "Reordering Policy"::" ")
            THEN
              EXIT(FALSE);
          UNTIL NEXT = 0;
      END;

      EXIT(TRUE);
    END;

    [Integration(DEFAULT,TRUE)]
    LOCAL PROCEDURE OnAfterOnOpenPage@4();
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

