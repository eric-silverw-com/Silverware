OBJECT Codeunit 14103541 DimMgt Processing
{
  OBJECT-PROPERTIES
  {
    Date=11/07/18;
    Time=[ 3:40:01 PM];
    Modified=Yes;
    Version List=VLDM4.10,VLDM4.11,DM4.12,DM4.14,VLDM4.15;
  }
  PROPERTIES
  {
    Permissions=TableData 15=rim,
                TableData 17=rim,
                TableData 18=rim,
                TableData 21=rim,
                TableData 23=rim,
                TableData 25=rim,
                TableData 27=rim,
                TableData 32=rim,
                TableData 36=rim,
                TableData 37=rim,
                TableData 38=rim,
                TableData 39=rim,
                TableData 49=rim,
                TableData 81=rim,
                TableData 110=rim,
                TableData 111=rim,
                TableData 112=rim,
                TableData 113=rim,
                TableData 114=rim,
                TableData 115=rim,
                TableData 120=rim,
                TableData 121=rim,
                TableData 122=rim,
                TableData 123=rim,
                TableData 124=rim,
                TableData 125=rim,
                TableData 156=rim,
                TableData 167=rim,
                TableData 169=rim,
                TableData 203=rim,
                TableData 270=rim,
                TableData 271=rim,
                TableData 379=rim,
                TableData 380=rim,
                TableData 900=rim,
                TableData 901=rim,
                TableData 910=rim,
                TableData 911=rim,
                TableData 5600=rim,
                TableData 5601=rim,
                TableData 5625=rim,
                TableData 5629=rim,
                TableData 5744=rim,
                TableData 5745=rim,
                TableData 5746=rim,
                TableData 5747=rim,
                TableData 5802=rim,
                TableData 5900=rim,
                TableData 5901=rim,
                TableData 5902=rim,
                TableData 5907=rim,
                TableData 5908=rim,
                TableData 5989=rim,
                TableData 5990=rim,
                TableData 5991=rim,
                TableData 5992=rim,
                TableData 5993=rim,
                TableData 5994=rim,
                TableData 5995=rim,
                TableData 6650=rim,
                TableData 6651=rim,
                TableData 6660=rim,
                TableData 6661=rim,
                TableData 14103540=rim,
                TableData 14103541=rim,
                TableData 14103542=rim;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      AccountingPeriod@1000000017 : Record 50;
      DimMgtSetup@1000000010 : Record 14103540;
      DimMgtHistoryLine@1000000001 : Record 14103542;
      OldDimCode@1000000003 : Code[20];
      OldDimValue@1000000004 : Code[20];
      NewDimCode@1000000005 : Code[20];
      NewDimValue@1000000006 : Code[20];
      SourceNo@1000000009 : Code[20];
      SourceType@1000000012 : Integer;
      SourceTableNo@1000000011 : Integer;
      TableNo@1000000007 : Integer;
      SourceLineNo@1000000002 : Integer;
      DimHistoryEntryNo@1000000000 : Integer;
      Text001@1000000008 : TextConst 'ENU=User DM Change';
      UndoHistoryLineNo@1000000013 : Integer;
      Undo@1000000014 : Boolean;
      Text002@1000000015 : TextConst 'ENU=Would like to update dimension on the document line(s)?';
      RetrievedDMSetup@1000000016 : Boolean;
      RetrievedAcctingPeriod@1000000018 : Boolean;
      AcctPeriodStartDate@1000000019 : Date;
      Text003@1000000020 : TextConst 'ENU=%1/%2/%3';
      DimSetEntry@1000000021 : Record 480;
      TempDimSetEntry@1000000022 : TEMPORARY Record 480;
      DimMgt@1000000023 : Codeunit 408;
      FldRef@1000000024 : FieldRef;
      DimSetID@1000000025 : Integer;
      NewDimSetID@1000000026 : Integer;
      DocLineNo2@1000000027 : Integer;
      HeaderTableUpdate@1000000028 : Boolean;
      DocumentEntry@1000000029 : Record 265;
      NewDimSetIDGbl@1000000030 : Integer;
      GenProdPostingGroup@1000000031 : Code[20];
      GLDocNo@1000000032 : Code[20];
      RecGLEntry@1000000033 : Record 17;

    PROCEDURE GlobalDimNo@10(Dimension@1000000001 : Code[20]) : Integer;
    VAR
      GLSetup@1000000000 : Record 98;
    BEGIN
      GLSetup.GET;
      IF Dimension = GLSetup."Global Dimension 1 Code" THEN
        EXIT(1);
      IF Dimension = GLSetup."Global Dimension 2 Code" THEN
        EXIT(2);
      EXIT(0);
    END;

    PROCEDURE ChangeLedgerEntryDim@20(RecRef@1000000005 : RecordRef;TableID@1000000001 : Integer;KeyText1@1000000002 : Text[240];Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20]);
    VAR
      T379@1000000008 : Record 379;
      T380@1000000009 : Record 380;
      Key1@1000000006 : Integer;
      DimNo@1000000007 : Integer;
      T96@1000000000 : Record 96;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      // Send this the Table ID, Entry No., new Dimension and Value
      EVALUATE(Key1,KeyText1);
      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSet(DimSetID, TempDimSetEntry);

      // Store Dimension History
      ClearDimHistoryVar;
      IF DimSetEntry.GET(DimSetID, Dimension) THEN BEGIN
        OldDimCode := DimSetEntry."Dimension Code";
        OldDimValue:= DimSetEntry."Dimension Value Code";
      END;

      IF DimensionValue = '' THEN BEGIN
        IF TempDimSetEntry.GET(0, Dimension) THEN
          IF TempDimSetEntry.DELETE(FALSE) THEN;
      END ELSE BEGIN
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT(TRUE) THEN
          TempDimSetEntry.MODIFY(TRUE);
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      //Updates "Document Line No." field in Ledger entries for lines
      //DM4.09>>
      IF NOT HeaderTableUpdate THEN
        UpdateRelLedgerEntryNo(RecRef);
      //DM4.09<<

      DimNo := GlobalDimNo(Dimension);
      TableNo := DATABASE::"Dimension Set Entry";
      SourceTableNo := TableID;
      SourceNo := KeyText1;

      IF DimNo = 0 THEN BEGIN
        ChangeLedgerEntryDimShortcut(RecRef,TableID,Key1,Dimension,DimensionValue,DimSetID,NewDimSetID);//DM4.06
        WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      END
      ELSE BEGIN
        ChangeLedgerEntryDimGlobal(RecRef, TableID, Key1, Dimension, DimensionValue);

        // Change Detailed Entry Table
        CASE TableID OF

          21:
            BEGIN
              T379.RESET;
              T379.SETCURRENTKEY("Cust. Ledger Entry No.", "Posting Date");
              T379.SETRANGE("Cust. Ledger Entry No.", Key1);
              IF T379.FINDSET THEN
                REPEAT
                  RecRef2.GETTABLE(T379);
                  ChangeDetailLedEntryDimGlobal(
                    RecRef2, 379, T379."Entry No.", Dimension, DimensionValue);
                UNTIL T379.NEXT = 0;
            END;
          25:
            BEGIN
              T380.RESET;
              T380.SETCURRENTKEY("Vendor Ledger Entry No.", "Posting Date");
              T380.SETRANGE("Vendor Ledger Entry No.", Key1);
              IF T380.FINDSET THEN
                REPEAT
                  RecRef2.GETTABLE(T380);
                  ChangeDetailLedEntryDimGlobal(
                    RecRef2, 380, T380."Entry No.", Dimension, DimensionValue);
                UNTIL T380.NEXT = 0;
            END;
        END;
      END;
    END;

    PROCEDURE ChangeLedgerEntryDimGlobal@30(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;EntryNo@1000000003 : Integer;Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20]);
    VAR
      DefDim@1000000004 : Record 352;
      SourceRec@1000000007 : RecordRef;
      SourceField@1000000006 : FieldRef;
      FieldName@1000000012 : Text[100];
      DimNo@1000000005 : Integer;
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      FoundGlobal@1000000009 : Boolean;
    BEGIN
      FieldName := 'Global Dimension ' + FORMAT(GlobalDimNo(Dimension)) + ' Code';
      SourceRec.OPEN(TableID);
      IF EntryNo <> 0 THEN BEGIN
        SourceRec.GET(RecRef.RECORDID);
      END;

      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      DimNo:= GlobalDimNo(Dimension);
      FieldCount := 1;
      FoundGlobal := FALSE;
      //TO improve the performance
      //DM4.10>>
      {
      REPEAT
        IF SourceRec.FIELDEXIST(i) THEN BEGIN
          SourceField := SourceRec.FIELD(i);
          IF SourceField.NAME = FieldName THEN
            FoundGlobal := TRUE;
          FieldCount := FieldCount + 1;
        END;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<
      }

      //DM4.10>>
      REPEAT
        SourceField := SourceRec.FIELDINDEX(i);
        IF SourceField.NAME = FieldName THEN
          FoundGlobal := TRUE;
        FieldCount := FieldCount + 1;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<

      SourceTableNo := 0;
      SourceNo := FORMAT(EntryNo);
      TableNo := TableID;

      IF FoundGlobal THEN BEGIN
        // Store Dimension History
        OldDimValue := SourceField.VALUE;
        IF OldDimValue <> '' THEN BEGIN
          OldDimCode := Dimension;
        END;

        WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

        SourceField.VALIDATE(DimensionValue);
        SourceRec.MODIFY(TRUE);
      END ELSE BEGIN  //CAN_SS
        IF  DimNo = 0 THEN
          ChangeLedgerEntryDimShortcut(RecRef,TableID,EntryNo,Dimension,DimensionValue,DimSetID,NewDimSetID);//CAN_SS

        //  WriteDimMgtHistoryLine(DimSetID, NewDimSetID);
      END;
    END;

    PROCEDURE ChangeDetailLedEntryDimGlobal@1000000000(RecRef@1000000004 : RecordRef;TableID@1000000003 : Integer;EntryNo@1000000002 : Integer;Dimension@1000000001 : Code[20];DimensionValue@1000000000 : Code[20]);
    VAR
      DefDim@1000000013 : Record 352;
      SourceRec@1000000012 : RecordRef;
      SourceField@1000000011 : FieldRef;
      FieldName@1000000010 : Text[100];
      DimNo@1000000009 : Integer;
      TotalFields@1000000008 : Integer;
      i@1000000007 : Integer;
      FieldCount@1000000006 : Integer;
      FoundGlobal@1000000005 : Boolean;
    BEGIN
      FieldName := 'Initial Entry Global Dim. ' + FORMAT(GlobalDimNo(Dimension));
      SourceRec.OPEN(TableID);
      IF EntryNo <> 0 THEN BEGIN
        SourceRec.GET(RecRef.RECORDID);
      END;

      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      FieldCount := 1;
      FoundGlobal := FALSE;

      REPEAT
        SourceField := SourceRec.FIELDINDEX(i);
        IF SourceField.NAME = FieldName THEN
          FoundGlobal := TRUE;
        FieldCount := FieldCount + 1;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<

      SourceTableNo := 0;
      SourceNo := FORMAT(EntryNo);
      TableNo := TableID;

      IF FoundGlobal THEN BEGIN
        // Store Dimension History
        OldDimValue := SourceField.VALUE;
        IF OldDimValue <> '' THEN BEGIN
          OldDimCode := Dimension;
        END;

        WriteDimMgtHistoryLine(0, 0);

        SourceField.VALIDATE(DimensionValue);
        SourceRec.MODIFY(TRUE);
      END;
    END;

    PROCEDURE ChangePostedDocDim@40(RecRef@1000000006 : RecordRef;TableID@1000000001 : Integer;DocNo@1000000002 : Code[20];LineNo@1000000005 : Integer;Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20];Batch@1000000009 : Boolean);
    VAR
      LineRecRef@1000000008 : RecordRef;
      DimNo@1000000007 : Integer;
      LineTempDimSetEntry@1000000010 : TEMPORARY Record 480;
      LineTableID@1000000000 : Integer;
    BEGIN
      // Send this the Table ID, Doc. No. / Line No., new Dimension and Value
      DimNo := GlobalDimNo(Dimension);

      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSet(DimSetID, TempDimSetEntry);

      // If DimensionValue is blank then remove the Dimension
      IF DimensionValue = '' THEN BEGIN
        IF LineNo = 0 THEN
          IF TempDimSetEntry.GET(0, Dimension) THEN
            IF TempDimSetEntry.DELETE(TRUE) THEN;
      END ELSE BEGIN
      // Update for the posted doc header or could be for the line
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT(TRUE) THEN
          TempDimSetEntry.MODIFY(TRUE);
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      // Store Dimension History
      ClearDimHistoryVar;
      IF DimSetEntry.GET(DimSetID, Dimension) THEN BEGIN
        OldDimCode := DimSetEntry."Dimension Code";
        OldDimValue := DimSetEntry."Dimension Value Code";
      END;

      NewDimCode := Dimension;
      NewDimValue := DimensionValue;
      TableNo := DATABASE::"Dimension Set Entry";
      SourceTableNo := TableID;
      SourceNo := DocNo;
      SourceLineNo := LineNo;
      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      SourceLineNo := 0;
      SourceTableNo := 0;
      IF DimNo <> 0 THEN BEGIN
        ChangePostedDocDimShortcut(RecRef, TableID, DocNo, Dimension, DimensionValue, DimSetID, NewDimSetID);
      END;

      // Update posted doc lines
      IF (LineNo = 0) THEN BEGIN
        LoopPostedDocLine(TableID, DocNo, Dimension, DimensionValue, DimNo, '');
      END;

      // Updates both posted documents and related ledger entries "Document Line No." when change dimension from Navigate window
      //DM4.09>>
      //UpdatePstdDocandLedEntryNo(RecRef,TableID,DocNo,Dimension,DimensionValue);  //VLDM4.12  CAN_SS
      //DM4.09<<
    END;

    PROCEDURE ChangePostedDocDimLines@1000000002(RecRef@1000000006 : RecordRef;TableID@1000000001 : Integer;DocNo@1000000002 : Code[20];LineNo@1000000005 : Integer;Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20];Batch@1000000009 : Boolean;SD1@1000000011 : Code[20];CombineLines@1000000012 : Boolean);
    VAR
      LineRecRef@1000000008 : RecordRef;
      DimNo@1000000007 : Integer;
      LineTempDimSetEntry@1000000010 : TEMPORARY Record 480;
      LineTableID@1000000000 : Integer;
      DocLineNo@1014 : Integer;
      SalesInvLineRec@1013 : Record 113;
      SalesInvLineRec2@1012 : Record 113;
      SalesShpLineRec@1011 : Record 111;
      SalesShpLineRec2@1010 : Record 111;
      SalesCrMemoLineRec@1009 : Record 115;
      SalesCrMemoLineRec2@1008 : Record 115;
      PurchRcptLineRec@1007 : Record 121;
      PurchRcptLineRec2@1006 : Record 121;
      PurchInvLineRec@1005 : Record 123;
      PurchInvLineRec2@1004 : Record 123;
      PurchCrMemoLineRec@1003 : Record 125;
      PurchCrMemoLineRec2@1002 : Record 125;
      TrnShpLineRec@1001 : Record 5745;
      TrnShpLineRec2@1000 : Record 5745;
      PrevDocLineNo@1000000013 : Integer;
      NewDimSetID@1000000014 : Integer;
    BEGIN
      // Send this the Table ID, Doc. No. / Line No., new Dimension and Value
      DimNo := GlobalDimNo(Dimension);

      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;

      //findout the product posting group CAN_SS VLDM4.12++
      IF NOT ( RecRef.NUMBER IN [5745,5747]) THEN BEGIN
      FldRef := RecRef.FIELD(75);
      GenProdPostingGroup := FldRef.VALUE;
      END;
      //findout the product posting group CAN_SS VLDM4.12--

      FilterDimSet(DimSetID, TempDimSetEntry);

      // If DimensionValue is blank then remove the Dimension
      IF DimensionValue = '' THEN BEGIN
        IF LineNo <> 0 THEN
          IF TempDimSetEntry.GET(0, Dimension) THEN
            IF TempDimSetEntry.DELETE(TRUE) THEN;
      END ELSE BEGIN
      // Update for the posted doc header or could be for the line
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT(TRUE) THEN
          TempDimSetEntry.MODIFY(TRUE);
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef := RecRef.FIELD(480);//CAN_SS VLDM4.12++
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      // Store Dimension History
      ClearDimHistoryVar;
      IF DimSetEntry.GET(DimSetID, Dimension) THEN BEGIN
        OldDimCode := DimSetEntry."Dimension Code";
        OldDimValue := DimSetEntry."Dimension Value Code";
      END;

      NewDimCode := Dimension;
      NewDimValue := DimensionValue;
      TableNo := DATABASE::"Dimension Set Entry";
      SourceTableNo := TableID;
      SourceNo := DocNo;
      SourceLineNo := LineNo;


      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      //SourceLineNo := 0;
      SourceTableNo := 0;
      IF DimNo <> 0 THEN BEGIN
        ChangePostedDocDimShortcut(RecRef, TableID, DocNo, Dimension, DimensionValue, DimSetID, NewDimSetID);
      END;

      // Update posted doc lines
      IF (LineNo = 0) THEN BEGIN
        LoopPostedDocLineDim(TableID, DocNo, Dimension, DimensionValue, DimNo, '',SD1);
      END;

      //******* Updates Document Line Number ********
      //DM4.09>>
      //UpdatePstdDocLinesNo(RecRef,TableID,DocNo,LineNo,Dimension,DimensionValue,NewDimSetID); //CAN_SS VLDM4.12
      //DM4.09<<
    END;

    PROCEDURE ChangePostedDocDimShortcut@50(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;DocNo@1000000003 : Code[20];Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20];LDimSetID@1100774000 : Integer;LNewDimSetID@1100774001 : Integer);
    VAR
      DefDim@1000000004 : Record 352;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      DimNo@1000000005 : Integer;
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      FoundGlobal@1000000009 : Boolean;
    BEGIN
      FieldName := 'Shortcut Dimension ' + FORMAT(GlobalDimNo(Dimension)) + ' Code';

      //CAN_DS_150318 >>
       IF LDimSetID = LNewDimSetID THEN
        EXIT;
       IF (TableID = 32) OR (TableID = 5802) THEN
         EXIT;
      //CAN_DS_150318 <<


      SourceRec.OPEN(TableID);
      IF DocNo <> '' THEN BEGIN
        SourceRec.GET(RecRef.RECORDID);
      END;

      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      FieldCount := 1;
      FoundGlobal := FALSE;


      //DM4.10>>
      REPEAT
        SourceField := SourceRec.FIELDINDEX(i);
        IF SourceField.NAME = FieldName THEN
          FoundGlobal := TRUE;
        FieldCount := FieldCount + 1;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<

      SourceNo := DocNo;
      TableNo := TableID;

      IF FoundGlobal THEN BEGIN
        // Store Dimension History
        OldDimValue := SourceField.VALUE;
        IF OldDimValue <> '' THEN BEGIN
          OldDimCode := Dimension;
        END;
        WriteDimMgtHistoryLine(LDimSetID, LNewDimSetID);

        SourceField.VALIDATE(DimensionValue);
        SourceRec.MODIFY(TRUE);
      END ELSE
        IF Undo THEN
          WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      SourceRec.CLOSE;
    END;

    PROCEDURE ChangeDocDim@60(RecRef@1000000006 : RecordRef;TableID@1000000001 : Integer;DocType@1000000008 : Text[30];DocNo@1000000002 : Code[20];LineNo@1000000005 : Integer;Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20]);
    VAR
      DimNo@1000000007 : Integer;
      DocTypeOption@1000000009 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order, ';
      LineRecRef@1000000010 : RecordRef;
      LineFldRef@1000000013 : FieldRef;
      T37@1000000011 : Record 37;
      T39@1000000012 : Record 39;
      LineTempDimSetEntry@1000000014 : TEMPORARY Record 480;
      LineDimSetID@1000000015 : Integer;
    BEGIN
      // Send this the Table ID, Doc. No. / Line No., new Dimension and Value
      // Doc Types from Doc Dimension table
      // Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,
      DocType := DELCHR(DocType);

      CASE DocType OF
        'QUOTE' : DocTypeOption := DocTypeOption::Quote;
        'ORDER' : DocTypeOption := DocTypeOption::Order;
        'CREDIT MEMO' : DocTypeOption := DocTypeOption::"Credit Memo";
        'BLANKET ORDER' : DocTypeOption := DocTypeOption::"Blanket Order";
        'RETURN ORDER' : DocTypeOption := DocTypeOption::"Return Order";
          END;

      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSet(DimSetID, TempDimSetEntry);

      // Store Dimension History
      ClearDimHistoryVar;
      IF TempDimSetEntry.GET(0, Dimension) THEN BEGIN
        OldDimCode := TempDimSetEntry."Dimension Code";
        OldDimValue := TempDimSetEntry."Dimension Value Code";
      END;

      IF DimensionValue = '' THEN BEGIN
        IF TempDimSetEntry.GET(0, Dimension) THEN
          TempDimSetEntry.DELETE(FALSE);
      END ELSE BEGIN
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT THEN
          TempDimSetEntry.MODIFY;
      END;
      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      //CAN_DS 160318
      IF DimSetID = NewDimSetID THEN
        EXIT;
      //CAN_DS 160318

      DimNo := GlobalDimNo(Dimension);
      TableNo := DATABASE::"Dimension Set Entry";
      SourceTableNo := TableID;
      SourceType := DocTypeOption;
      SourceNo := DocNo;
      SourceLineNo := LineNo;
      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(DimSetID, NewDimSetID)
      ELSE
        ChangeSourceDimGlobal(RecRef, TableID, DocNo, Dimension, DimensionValue);

      CASE RecRef.NUMBER OF
        36:
          BEGIN

            IF LineNo = 0 THEN BEGIN
              T37.RESET;
              T37.SETRANGE("Document Type", DocTypeOption);
              T37.SETRANGE("Document No.", DocNo);
              IF T37.FINDSET THEN BEGIN
                REPEAT
                  // get dim set ID
                  LineTempDimSetEntry.DELETEALL;
                  LineRecRef.GETTABLE(T37);
                  LineFldRef := LineRecRef.FIELD(480);
                  LineDimSetID := LineFldRef.VALUE;
                  FilterDimSet(LineDimSetID, LineTempDimSetEntry);
                  IF DimensionValue = '' THEN BEGIN
                    IF LineTempDimSetEntry.GET(0, Dimension) THEN
                      LineTempDimSetEntry.DELETE(FALSE);
                  END ELSE BEGIN
                    LineTempDimSetEntry.INIT;
                    LineTempDimSetEntry.VALIDATE("Dimension Code", Dimension);
                    LineTempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
                    IF NOT LineTempDimSetEntry.INSERT THEN
                      LineTempDimSetEntry.MODIFY;
                  END;
                  // Get new Dim Set ID
                  NewDimSetID := DimMgt.GetDimensionSetID(LineTempDimSetEntry);
                  LineFldRef.VALUE(NewDimSetID);
                  LineRecRef.MODIFY;

                  TableNo := DATABASE::"Dimension Set Entry";
                  SourceTableNo := DATABASE::"Sales Line";
                  SourceType := DocTypeOption;
                  SourceNo := DocNo;
                  SourceLineNo := T37."Line No.";
                  IF DimNo = 0 THEN
                    WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
                  ELSE
                    ChangeSourceDimGlobal(LineRecRef, DATABASE::"Sales Line", DocNo, Dimension, DimensionValue);

                UNTIL T37.NEXT = 0;
              END;
            END ELSE BEGIN
              IF DimensionValue = '' THEN BEGIN
                IF LineTempDimSetEntry.GET(0, Dimension) THEN
                  IF LineTempDimSetEntry.DELETE(FALSE) THEN;
              END ELSE BEGIN
                LineTempDimSetEntry.INIT;
                LineTempDimSetEntry.VALIDATE("Dimension Code", Dimension);
                LineTempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
                IF NOT LineTempDimSetEntry.INSERT THEN
                  LineTempDimSetEntry.MODIFY;
              END;
              // Get new Dim Set ID
              NewDimSetID := DimMgt.GetDimensionSetID(LineTempDimSetEntry);
              LineFldRef.VALUE(NewDimSetID);
              LineRecRef.MODIFY;

              TableNo := DATABASE::"Dimension Set Entry";
              SourceTableNo := DATABASE::"Sales Line";
              SourceType := DocTypeOption;
              SourceNo := DocNo;
              SourceLineNo := T37."Line No.";
              IF DimNo = 0 THEN
                WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
              ELSE
                ChangeSourceDimGlobal(LineRecRef, DATABASE::"Sales Line", DocNo, Dimension, DimensionValue);

            END;
          END;
        38:
          BEGIN
            IF LineNo = 0 THEN BEGIN
              T39.RESET;
              T39.SETRANGE("Document Type", DocTypeOption);
              T39.SETRANGE("Document No.", DocNo);
              IF T39.FINDSET THEN BEGIN
                REPEAT
                  // get dim set ID
                  LineTempDimSetEntry.DELETEALL;
                  LineRecRef.GETTABLE(T39);
                  LineFldRef := LineRecRef.FIELD(480);
                  LineDimSetID := LineFldRef.VALUE;
                  FilterDimSet(LineDimSetID, LineTempDimSetEntry);
                  IF DimensionValue = '' THEN BEGIN
                    IF LineTempDimSetEntry.GET(0, Dimension) THEN
                      LineTempDimSetEntry.DELETE(FALSE);
                  END ELSE BEGIN
                    LineTempDimSetEntry.INIT;
                    LineTempDimSetEntry.VALIDATE("Dimension Code", Dimension);
                    LineTempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
                    IF NOT LineTempDimSetEntry.INSERT THEN
                      LineTempDimSetEntry.MODIFY;
                  END;
                  // Get new Dim Set ID
                  NewDimSetID := DimMgt.GetDimensionSetID(LineTempDimSetEntry);
                  LineFldRef.VALUE(NewDimSetID);
                  LineRecRef.MODIFY;

                  TableNo := DATABASE::"Dimension Set Entry";
                  SourceTableNo := DATABASE::"Purchase Line";
                  SourceType := DocTypeOption;
                  SourceNo := DocNo;
                  SourceLineNo := T39."Line No.";
                  IF DimNo = 0 THEN
                    WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
                  ELSE
                    ChangeSourceDimGlobal(LineRecRef, DATABASE::"Purchase Line", DocNo, Dimension, DimensionValue);

                UNTIL T39.NEXT = 0;
              END;
            END ELSE BEGIN
              IF DimensionValue = '' THEN BEGIN
                IF LineTempDimSetEntry.GET(0, Dimension) THEN
                  IF LineTempDimSetEntry.DELETE(FALSE) THEN;
              END ELSE BEGIN
                LineTempDimSetEntry.INIT;
                LineTempDimSetEntry.VALIDATE("Dimension Code", Dimension);
                LineTempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
                IF NOT LineTempDimSetEntry.INSERT THEN
                  LineTempDimSetEntry.MODIFY;
              END;
              // Get new Dim Set ID
              NewDimSetID := DimMgt.GetDimensionSetID(LineTempDimSetEntry);
              LineFldRef.VALUE(NewDimSetID);
              LineRecRef.MODIFY;

              TableNo := DATABASE::"Dimension Set Entry";
              SourceTableNo := DATABASE::"Purchase Line";
              SourceType := DocTypeOption;
              SourceNo := DocNo;
              SourceLineNo := T39."Line No.";
              IF DimNo = 0 THEN
                WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
              ELSE
                ChangeSourceDimGlobal(LineRecRef, DATABASE::"Purchase Line", DocNo, Dimension, DimensionValue);
            END;
          END;
      END;
    END;

    PROCEDURE ChangeSourceDim@70(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;"No."@1000000003 : Code[20];StartDate@1000000015 : Date;EndDate@1000000016 : Date;Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20]);
    VAR
      T17@1000000028 : Record 17;
      GLEntry@1000000021 : Record 17;
      T21@1000000029 : Record 21;
      T25@1000000027 : Record 25;
      T37@1000000042 : Record 37;
      T39@1000000043 : Record 39;
      T32@1000000026 : Record 32;
      T120@1000000033 : Record 120;
      T122@1000000034 : Record 122;
      T169@1000000020 : Record 169;
      T271@1000000019 : Record 271;
      T5601@1000000018 : Record 5601;
      T5625@1000000030 : Record 5625;
      T5629@1000000031 : Record 5629;
      T5802@1000000025 : Record 5802;
      T272@1000000052 : Record 272;
      T5907@1000000051 : Record 5907;
      GLItemLedgerRel@1000000022 : Record 5823;
      DefDim@1000000004 : Record 352;
      RecRef2@1000000024 : RecordRef;
      RecRef3@1000000023 : RecordRef;
      RecRef32@1000000014 : RecordRef;
      RecRef5802@1000000017 : RecordRef;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      DimNo@1000000005 : Integer;
      FoundGlobal@1000000009 : Boolean;
      "---CAN---"@1000 : Integer;
      TableArray@1003 : ARRAY [8] OF Integer;
      T110@1001 : Record 110;
      T112@1002 : Record 112;
      T114@1005 : Record 114;
      j@1004 : Integer;
      T124@1006 : Record 124;
      T203@1000000032 : Record 203;
      TableArray2@1000000035 : ARRAY [12] OF Integer;
      T111@1000000036 : Record 111;
      T113@1000000037 : Record 113;
      T115@1000000038 : Record 115;
      T121@1000000039 : Record 121;
      T123@1000000040 : Record 123;
      T125@1000000041 : Record 125;
      T900@1000000044 : Record 900;
      T901@1000000045 : Record 901;
      T910@1000000046 : Record 910;
      T911@1000000047 : Record 911;
      "-------"@1000000048 : Integer;
      T36@1000000049 : Record 36;
      T38@1000000050 : Record 38;
    BEGIN
      // Store Dimension History
      ClearDimHistoryVar;
      IF DefDim.GET(TableID, "No.", Dimension) THEN BEGIN
        OldDimCode := DefDim."Dimension Code";
        OldDimValue := DefDim."Dimension Value Code";
      END;

      DimNo := GlobalDimNo(Dimension);

      //DM4.10>>
      IF StartDate = 0D THEN BEGIN
        IF DimNo <> 0 THEN
          ChangeSourceDimGlobal(RecRef, TableID, "No.", Dimension, DimensionValue);

        // If DimensionValue is blank then remove the Dimension
        IF DimensionValue = '' THEN BEGIN
          IF DefDim.GET(TableID, "No.", Dimension) THEN
            IF DefDim.DELETE(FALSE) THEN;
        END ELSE BEGIN
          DefDim.INIT;
          DefDim.VALIDATE("Table ID", TableID);
          DefDim.VALIDATE("No.", "No.");
          DefDim.VALIDATE("Dimension Code", Dimension);
          DefDim.VALIDATE("Dimension Value Code" , DimensionValue);
          IF NOT DefDim.INSERT(TRUE) THEN
            DefDim.MODIFY(FALSE);
          //COMMIT; //DM4.08
        END;
      END;
      //DM4.10<<

      TableNo := DATABASE::"Default Dimension";
      SourceTableNo := TableID;
      SourceNo := "No.";
      WriteDimMgtHistoryLine(0, 0);
      GetDMSetup;

      CASE TableID OF
        15 :                                               // GL Account
          BEGIN
            T17.SETRANGE("G/L Account No.", "No.");        // GL Entry Table
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            GLItemLedgerRel.SETCURRENTKEY("G/L Entry No.");
            T5802.SETCURRENTKEY("Entry No.");
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                GLItemLedgerRel.SETRANGE("G/L Entry No.", T17."Entry No.");
                IF GLItemLedgerRel.FINDSET THEN
                  REPEAT
                    T5802.SETRANGE("Entry No.", GLItemLedgerRel."Value Entry No.");
                    IF T5802.FINDSET THEN
                      REPEAT
                        RecRef5802.GETTABLE(T5802);
                        ChangeLedgerEntryDim(
                          RecRef5802, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension,
                          DimensionValue);
                        RecRef5802.CLOSE;
                        T32.SETRANGE("Entry No.", T5802."Item Ledger Entry No.");
                        IF T32.FINDFIRST THEN
                          REPEAT
                            RecRef3.GETTABLE(T32);
                            ChangeLedgerEntryDim(
                              RecRef3, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."),
                              Dimension, DimensionValue);
                          UNTIL T32.NEXT = 0;
                      UNTIL T5802.NEXT = 0;
                  UNTIL GLItemLedgerRel.NEXT = 0;
              UNTIL T17.NEXT = 0;

          END;
        18 :                                               // Customer
          BEGIN
            T21.SETRANGE("Customer No.", "No.");           // Cust. Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T21.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T21.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T21.SETRANGE("Posting Date");
            END;

            IF T21.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T21);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Cust. Ledger Entry", FORMAT(T21."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T21.NEXT = 0;

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::Customer);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;



      //>>VLDM4.11

            T5802.RESET;                                     // Value entries
            T5802.SETRANGE("Source Type", T5802."Source Type"::Customer);
            T5802.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension, DimensionValue);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11
      //VLDM4.13++
      // Bank Entries
            T271.RESET;                                     // Bank Entries
            T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Customer);
            T271.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension, DimensionValue);
              UNTIL T271.NEXT = 0;
      //Check Entries
            T272.RESET;                                     // Check Entries
            T272.SETRANGE("Bal. Account Type", T272."Bal. Account Type"::Customer);
            T272.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T272.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T272.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T272.SETRANGE("Posting Date");
            END;
            IF T272.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T272);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Check Ledger Entry", FORMAT(T272."Entry No."), Dimension, DimensionValue);
              UNTIL T272.NEXT = 0;

      //Service Entries
            T5907.RESET;                                     // Service Entries
            T5907.SETRANGE("Customer No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5907.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5907.SETRANGE("Posting Date");
            END;
            IF T5907.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5907);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), Dimension, DimensionValue);
              UNTIL T5907.NEXT = 0;
      //VLDM4.13--

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 110;
              TableArray[2] := 112;
              TableArray[3] := 114;
              TableArray[4] := 36;

              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  110:
                  BEGIN
                      T110.SETRANGE("Sell-to Customer No.", "No.");
                      IF T110.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T110);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T110."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T110.NEXT = 0;
                 END;
                  112:
                  BEGIN
                      T112.SETRANGE("Sell-to Customer No.", "No.");
                      IF T112.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T112);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T112."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10p
                      UNTIL T112.NEXT = 0;
                  END;
                  114:
                  BEGIN
                      T114.SETRANGE("Sell-to Customer No.", "No.");
                      IF T114.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T114);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T114."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T114.NEXT = 0;
                  END;
                  36:
                  BEGIN
                      T36.SETRANGE("Sell-to Customer No.", "No.");
                      IF T36.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T36);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T36."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T36.NEXT = 0;
                  END;

                END;
               END;

              //DM4.07 <<
          END;
        23 :                                               // Vendors
          BEGIN
            T25.SETRANGE("Vendor No.", "No.");             // Vendor Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T25.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T25.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T25.SETRANGE("Posting Date");
            END;

            IF T25.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T25);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Vendor Ledger Entry", FORMAT(T25."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T25.NEXT = 0;

      //>>VLDM4.11
            T5802.RESET;                                     // Value entries
            T5802.SETRANGE("Source Type", T5802."Source Type"::Vendor);
            T5802.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension, DimensionValue);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::Vendor);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;
      //VLDM4.13++
      //      T271.RESET;                                     // Bank Entries
      //      T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Vendor);
      //      T271.SETRANGE("Bal. Account No.", "No.");
      //      IF StartDate <> 0D THEN BEGIN
      //        T271.SETRANGE("Posting Date", StartDate, EndDate);
      //      END ELSE BEGIN
      //        IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
      //          GetAcctingPeriodStartDate;
      //          T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
      //        END ELSE
      //          T271.SETRANGE("Posting Date");
      //      END;
      //      IF T271.FINDSET THEN
      //        REPEAT
      //          RecRef.GETTABLE(T271);
      //          ChangeLedgerEntryDim(
      //            RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension, DimensionValue);
      //        UNTIL T271.NEXT = 0;
      // //Check Entries
      //      T272.RESET;                                     // Check Entries
      //      T272.SETRANGE("Bal. Account Type", T272."Bal. Account Type"::Vendor);
      //      T272.SETRANGE("Bal. Account No.", "No.");
      //      IF StartDate <> 0D THEN BEGIN
      //        T272.SETRANGE("Posting Date", StartDate, EndDate);
      //      END ELSE BEGIN
      //        IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
      //          GetAcctingPeriodStartDate;
      //          T272.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
      //        END ELSE
      //          T272.SETRANGE("Posting Date");
      //      END;
      //      IF T272.FINDSET THEN
      //        REPEAT
      //          RecRef.GETTABLE(T272);
      //          ChangeLedgerEntryDim(
      //            RecRef, DATABASE::"Check Ledger Entry", FORMAT(T272."Entry No."), Dimension, DimensionValue);
      //        UNTIL T272.NEXT = 0;
      //VLDM4.13--

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 120;
              TableArray[2] := 122;
              TableArray[3] := 124;
              TableArray[4] := 38;
              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  120:
                  BEGIN
                      T120.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T120.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T120);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T120."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T120.NEXT = 0;
                  END;
                  122:
                  BEGIN
                      T122.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T122.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T122);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T122."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T122.NEXT = 0;
                  END;
                  124:
                  BEGIN
                      T124.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T124.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T124);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T124."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T124.NEXT = 0;
                  END;
                  38:
                  BEGIN
                      T38.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T38.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T38);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T38."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T38.NEXT = 0;
                  END;
                END;
               END;
              //DM4.07 <<
          END;
        27 :                                               // Items
          BEGIN
            T32.SETCURRENTKEY("Item No.", "Posting Date"); // Item Ledger Entry
            T32.SETRANGE("Item No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T32.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T32.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T32.SETRANGE("Posting Date");
            END;
            IF T32.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T32);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T32.NEXT = 0;
            GLItemLedgerRel.SETCURRENTKEY("Value Entry No.");
            GLEntry.SETCURRENTKEY("Entry No.");

            T5802.SETCURRENTKEY(
              "Item No.", "Valuation Date", "Location Code", "Variant Code", "Drop Shipment");
            T5802.SETRANGE("Item No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Valuation Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Valuation Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Valuation Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef5802.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef5802, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension,
                  DimensionValue);
                GLItemLedgerRel.SETRANGE("Value Entry No.", T5802."Entry No.");
                IF GLItemLedgerRel.FINDSET THEN
                  REPEAT
                    GLEntry.SETRANGE("Entry No.", GLItemLedgerRel."G/L Entry No.");
                    IF GLEntry.FINDSET THEN
                      REPEAT
                        RecRef3.GETTABLE(GLEntry);
                        ChangeLedgerEntryDim(
                          RecRef3, DATABASE::"G/L Entry", FORMAT(GLEntry."Entry No."), Dimension,
                          DimensionValue);
                      UNTIL GLEntry.NEXT = 0;
                  UNTIL GLItemLedgerRel.NEXT = 0;
              UNTIL T5802.NEXT = 0;

      //Service Entries
      //      T5907.RESET;                                     // Service E
      //      T5907.SETRANGE("No.", "No.");
      //      IF StartDate <> 0D THEN BEGIN
      //        T5907.SETRANGE("Posting Date", StartDate, EndDate);
      //      END ELSE BEGIN
      //        IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
      //          GetAcctingPeriodStartDate;
      //          T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
      //        END ELSE
      //          T5907.SETRANGE("Posting Date");
      //      END;
      //      IF T5907.FINDSET THEN
      //        REPEAT
      //          RecRef.GETTABLE(T5907);
      //          ChangeLedgerEntryDim(
      //            RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), Dimension, DimensionValue);
      //        UNTIL T5907.NEXT = 0;
      //VLDM4.13--
      //CAN_MY

      //***********CAN_DS*********
      //DM HF1.00
              TableArray2[1]  := 111;
              TableArray2[2]  := 113;
              TableArray2[3]  := 115;
              TableArray2[4]  := 121;
              TableArray2[5]  := 123;
              TableArray2[6]  := 125;
              TableArray2[7]  := 37;
              TableArray2[8]  := 39;
              //Added Assembly Orders
      //        TableArray2[9]  := 900;
      //        TableArray2[10] := 901;
      //        TableArray2[11] := 910;
      //        TableArray2[12] := 911;

      //Sales
              FOR j := 1 TO ARRAYLEN(TableArray2) DO BEGIN
                CASE TableArray2[j] OF
                  37:
                  BEGIN
                      T37.SETRANGE("No.", "No.");
                      IF T37.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T37);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T37."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T37.NEXT = 0;
                 END;
                  111:
                  BEGIN
                      T111.SETRANGE("No.", "No.");
                      IF T111.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T111);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T111."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T111.NEXT = 0;
                 END;
                  113:
                  BEGIN
                      T113.SETRANGE("No.", "No.");
                      IF T113.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T113);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T113."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T113.NEXT = 0;
                  END;
                  115:
                  BEGIN
                      T115.SETRANGE("No.", "No.");
                      IF T115.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T115);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T115."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T115.NEXT = 0;
                  END;
      //Purchase
                  121:
                  BEGIN
                      T121.SETRANGE("No.", "No.");
                      IF T121.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T121);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T121."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T121.NEXT = 0;
                  END;
                  123:
                  BEGIN
                      T123.SETRANGE("No.", "No.");
                      IF T123.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T123);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T123."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T123.NEXT = 0;
                  END;
                  125:
                  BEGIN
                      T125.SETRANGE("No.", "No.");
                      IF T125.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T125);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T125."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T125.NEXT = 0;
                  END;

                  39:
                  BEGIN
                      T39.SETRANGE("No.", "No.");
                      IF T39.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T39);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T39."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T39.NEXT = 0;
                 END;

      //Purchase End
      //Assembly
      //            900:
      //            BEGIN
      //                T900.SETRANGE("Item No.", "No.");
      //                IF T900.FINDSET THEN REPEAT
      //                  RecRef.GETTABLE(T900);
      //                  ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T900."Item No.", 0, Dimension, DimensionValue, FALSE);
      //                UNTIL T900.NEXT = 0;
      //            END;
      //            901:
      //            BEGIN
      //                T901.SETRANGE("No.", "No.");
      //                IF T901.FINDSET THEN REPEAT
      //                  RecRef.GETTABLE(T901);
      //                  ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T901."No.", 0, Dimension, DimensionValue, FALSE);
      //                UNTIL T901.NEXT = 0;
      //            END;
      //            910:
      //            BEGIN
      //                T910.SETRANGE("Item No.", "No.");
      //                IF T910.FINDSET THEN REPEAT
      //                  RecRef.GETTABLE(T910);
      //                  ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T910."Item No.", 0, Dimension, DimensionValue, FALSE);
      //                UNTIL T910.NEXT = 0;
      //           END;
      //            911:
      //            BEGIN
      //                T911.SETRANGE("No.", "No.");
      //                IF T911.FINDSET THEN REPEAT
      //                  RecRef.GETTABLE(T911);
      //                  ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T911."No.", 0, Dimension, DimensionValue, FALSE);
      //                UNTIL T911.NEXT = 0;
      //           END;


                END;
               END;
              //DM4.07 <<
      //***********
          END;
        156 :                         //Resource
          BEGIN
            //DM4.10>>
            T203.SETRANGE("Resource No.","No.");
            IF StartDate <> 0D THEN BEGIN
              T203.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T203.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T203.SETRANGE("Posting Date");
            END;
            IF T203.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T203);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Res. Ledger Entry", FORMAT(T203."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T203.NEXT = 0;
            //DM4.10<<
          END;
        167 :                                              // Jobs
          BEGIN
            T169.SETRANGE("Job No.", "No.");               // Job Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T169.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T169.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T169.SETRANGE("Posting Date");
            END;
            IF T169.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T169);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Job Ledger Entry", FORMAT(T169."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T169.NEXT = 0;

          END;
        270 :                                              // Bank Accounts
          BEGIN
            T271.SETRANGE("Bank Account No.", "No.");      // Bank Account Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T271.NEXT = 0;

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::"Bank Account");
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;

          END;
        5600 :                                             // Fixed Assets
          BEGIN
            T5601.SETRANGE("FA No.", "No.");               // Fixed Asset Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T5601.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5601.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5601.SETRANGE("Posting Date");
            END;
            IF T5601.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5601);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"FA Ledger Entry", FORMAT(T5601."Entry No."), Dimension,
                  DimensionValue);

                CASE T5601."Document Type" OF
                  T5601."Document Type"::Invoice:
                    BEGIN
                      // Purchase invoice line
                      SourceNo := T5601."Document No.";
                      LoopPostedDocLine(
                        122, T5601."Document No.", Dimension, DimensionValue, DimNo, "No.");
                      IF T122.GET(T5601."Document No.") THEN BEGIN
                        T120.SETRANGE("Order No.", T122."Order No.");
                        IF T120.FINDSET THEN
                          REPEAT
                            // Purchase Shipment Line
                            SourceNo := T120."No.";
                            LoopPostedDocLine(
                              120, T120."No.", Dimension, DimensionValue, DimNo, "No.");
                          UNTIL T120.NEXT = 0;
                      END;
                    END;
                  T5601."Document Type"::"Credit Memo":
                    BEGIN
                      // Purchase Shipment Line
                      LoopPostedDocLine(
                        124, T5601."Document No.", Dimension, DimensionValue, DimNo, "No.");
                      // Purchase invoice line
                    END;
                END;
                // Acquisition Cost,Depreciation,Write-Down,
                // Appreciation,Custom 1,Custom 2,Proceeds on Disposal,
                // Salvage Value,Gain/Loss,Book Value on Disposal
                IF T5601."FA Posting Type" = T5601."FA Posting Type"::"Acquisition Cost" THEN BEGIN
                  T17.SETRANGE("Entry No.", T5601."G/L Entry No.");
                END ELSE BEGIN
                  T17.SETRANGE("Document No.", T5601."Document No.");
                  T17.SETRANGE("Posting Date", T5601."Posting Date");
                END;
                IF T17.FINDSET THEN
                  REPEAT
                    RecRef.GETTABLE(T17);
                    ChangeLedgerEntryDim(
                    RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                  UNTIL T17.NEXT = 0;
              UNTIL T5601.NEXT = 0;

            T5625.RESET;                                     // Maintenance Ledger Entries
            T5625.SETRANGE("FA No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5625.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5625.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5625.SETRANGE("Posting Date");
            END;
            IF T5625.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5625);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Maintenance Ledger Entry", FORMAT(T5625."Entry No."), Dimension,
                  DimensionValue);
                IF T17.GET(T5625."G/L Entry No.") THEN BEGIN
                  RecRef.GETTABLE(T17);
                  ChangeLedgerEntryDim(
                    RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                END;
              UNTIL T5625.NEXT = 0;

            T5629.SETRANGE("FA No.", "No.");               // Ins. Coverage Entry Table
            IF StartDate <> 0D THEN BEGIN
              T5629.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5629.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5629.SETRANGE("Posting Date");
            END;
            IF T5629.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5629);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Ins. Coverage Ledger Entry", FORMAT(T5629."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T5629.NEXT = 0;

          END;
      END;
    END;

    PROCEDURE ChangeSourceDimGlobal@80(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;"No."@1000000003 : Code[20];Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20]);
    VAR
      DefDim@1000000004 : Record 352;
      DimNo@1000000005 : Integer;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      FoundGlobal@1000000009 : Boolean;
    BEGIN
      FieldName := 'Global Dimension ' + FORMAT(GlobalDimNo(Dimension)) + ' Code';
      SourceRec.OPEN(TableID);
      IF "No." <> '' THEN BEGIN
        SourceRec.GET(RecRef.RECORDID);
      END;

      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      FieldCount := 1;
      FoundGlobal := FALSE;

      //TO improve the performance
      //DM4.10>>
      {
      REPEAT
        IF SourceRec.FIELDEXIST(i) THEN BEGIN
          SourceField := SourceRec.FIELD(i);
          IF SourceField.NAME = FieldName THEN
            FoundGlobal := TRUE;
          FieldCount := FieldCount + 1;
        END;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<
      }

      //DM4.10>>
      REPEAT
        SourceField := SourceRec.FIELDINDEX(i);
        IF SourceField.NAME = FieldName THEN
          FoundGlobal := TRUE;
        FieldCount := FieldCount + 1;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
      //DM4.10<<

      IF FoundGlobal THEN BEGIN
        OldDimValue := SourceField.VALUE;
        IF OldDimValue <> '' THEN BEGIN
          OldDimCode := Dimension;
        END;

        SourceTableNo := 0;
        SourceNo := "No.";
        TableNo := TableID;
        WriteDimMgtHistoryLine(0, 0);

        SourceField.VALUE(DimensionValue);
        SourceRec.MODIFY(FALSE);
      END;
    END;

    PROCEDURE LoopPostedDocLine@90(TableID@14103540 : Integer;DocNo@14103542 : Code[50];Dimension@14103543 : Code[20];DimensionValue@14103544 : Code[20];DimNo@1000000001 : Integer;NoFilter@1000000002 : Code[20]);
    VAR
      T111@1000000003 : Record 111;
      T113@1000000004 : Record 113;
      T115@1000000005 : Record 115;
      T121@1000000006 : Record 121;
      T123@1000000007 : Record 123;
      T125@1000000008 : Record 125;
      T5745@1000000009 : Record 5745;
      T5747@1000000010 : Record 5747;
      T6651@1000000011 : Record 6651;
      T6661@1000000012 : Record 6661;
      T5989@1000000013 : Record 5989;
      T5991@1000000114 : Record 5991;
      T5993@1000001015 : Record 5993;
      T5995@1000000116 : Record 5995;
      LineRecRef@1000000000 : RecordRef;
    BEGIN
      OldDimCode := '';
      OldDimValue := '';

      CASE TableID OF
        110:
          BEGIN
            T111.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T111.SETRANGE("No.", NoFilter);
            IF T111.FINDSET THEN
              REPEAT
                SourceLineNo := T111."Line No.";
                LineRecRef.GETTABLE(T111);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T111.NEXT = 0;
          END;
        112:
          BEGIN
            T113.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T113.SETRANGE("No.", NoFilter);
            IF T113.FINDSET THEN
              REPEAT
                SourceLineNo := T113."Line No.";
                LineRecRef.GETTABLE(T113);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T113.NEXT = 0;
          END;
        114:
          BEGIN
            T115.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T115.SETRANGE("No.", NoFilter);
            IF T115.FINDSET THEN
              REPEAT
                SourceLineNo := T115."Line No.";
                LineRecRef.GETTABLE(T115);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T115.NEXT = 0;
          END;
        120:
          BEGIN
            T121.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T121.SETRANGE("No.", NoFilter);
            IF T121.FINDSET THEN
              REPEAT
                SourceLineNo := T121."Line No.";
                LineRecRef.GETTABLE(T121);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T121.NEXT = 0;
          END;
        122:
          BEGIN
            T123.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T123.SETRANGE("No.", NoFilter);
            IF T123.FINDSET THEN
              REPEAT
                SourceLineNo := T123."Line No.";
                LineRecRef.GETTABLE(T123);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T123.NEXT = 0;
          END;
        124:
          BEGIN
            T125.SETRANGE("Document No.", DocNo);
            IF T125.FINDSET THEN
              REPEAT
                SourceLineNo := T125."Line No.";
                LineRecRef.GETTABLE(T125);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T125.NEXT = 0;
          END;
        5744:
          BEGIN
            T5745.SETRANGE("Document No.", DocNo);
            IF T5745.FINDSET THEN
              REPEAT
                SourceLineNo := T5745."Line No.";
                LineRecRef.GETTABLE(T5745);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5745.NEXT = 0;
          END;
        5746:
          BEGIN
            T5747.SETRANGE("Document No.", DocNo);
            IF T5747.FINDSET THEN
              REPEAT
                SourceLineNo := T5747."Line No.";
                LineRecRef.GETTABLE(T5747);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5747.NEXT = 0;
          END;
      //VLDM4.12 Service Module
        5990:
          BEGIN
            T5989.SETRANGE("No.", DocNo);
            IF T5989.FINDSET THEN
              REPEAT
                SourceLineNo := T5989."Line No.";
                LineRecRef.GETTABLE(T5989);
                //ChangePostedDocLineDim(LineRecRef, TableID - 1, DimNo);
                ChangePostedDocLineDim(LineRecRef, 5989, DimNo);
              UNTIL T5989.NEXT = 0;

            T5991.SETRANGE("Document No.", DocNo);
            IF T5991.FINDSET THEN
              REPEAT
                SourceLineNo := T5991."Line No.";
                LineRecRef.GETTABLE(T5991);
                //ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
                ChangePostedDocLineDim(LineRecRef, 5991, DimNo);
              UNTIL T5991.NEXT = 0;
          END;

        5992:
          BEGIN
            T5993.SETRANGE("Document No.", DocNo);
            IF T5993.FINDSET THEN
              REPEAT
                SourceLineNo := T5993."Line No.";
                LineRecRef.GETTABLE(T5993);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5993.NEXT = 0;
          END;

        5994:
          BEGIN
            T5995.SETRANGE("Document No.", DocNo);
            IF T5995.FINDSET THEN
              REPEAT
                SourceLineNo := T5995."Line No.";
                LineRecRef.GETTABLE(T5995);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5995.NEXT = 0;
          END;

      //VLDM4.12 Service Module

        6650:
          BEGIN
            T6651.SETRANGE("Document No.", DocNo);
            IF T6651.FINDSET THEN
              REPEAT
                SourceLineNo := T6651."Line No.";
                LineRecRef.GETTABLE(T6651);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T6651.NEXT = 0;
          END;
        6660:
          BEGIN
            T6661.SETRANGE("Document No.", DocNo);
            IF T6661.FINDSET THEN
              REPEAT
                SourceLineNo := T6661."Line No.";
                LineRecRef.GETTABLE(T6661);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T6661.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE LoopPostedDocLineDim@1000000003(TableID@1000000006 : Integer;DocNo@1000000005 : Code[20];Dimension@1000000004 : Code[20];DimensionValue@1000000003 : Code[20];DimNo@1000000002 : Integer;NoFilter@1000000001 : Code[20];SD1@1000000000 : Code[20]);
    VAR
      T111@1000000017 : Record 111;
      T113@1000000016 : Record 113;
      T115@1000000015 : Record 115;
      T121@1000000014 : Record 121;
      T123@1000000013 : Record 123;
      T125@1000000012 : Record 125;
      T5745@1000000011 : Record 5745;
      T5747@1000000010 : Record 5747;
      T6651@1000000009 : Record 6651;
      T6661@1000000008 : Record 6661;
      LineRecRef@1000000007 : RecordRef;
      T5990@1000000114 : Record 5990;
      T5992@1000000115 : Record 5992;
      T5994@1000000116 : Record 5994;
      T5991@1000000117 : Record 5991;
      T5993@1000000118 : Record 5993;
      T5995@1000000119 : Record 5995;
      T5989@1000000120 : Record 5989;
    BEGIN

      OldDimCode := '';
      OldDimValue := '';

      CASE TableID OF
        110:
          BEGIN
            T111.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T111.SETRANGE("No.", NoFilter);
            IF T111.FINDSET THEN
              REPEAT
                SourceLineNo := T111."Line No.";
                LineRecRef.GETTABLE(T111);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T111.NEXT = 0;
          END;
        112:
          BEGIN
            T113.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T113.SETRANGE("No.", NoFilter);
            T113.SETRANGE("Shortcut Dimension 1 Code", SD1);
            IF T113.FINDSET THEN
              REPEAT
                SourceLineNo := T113."Line No.";
                LineRecRef.GETTABLE(T113);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T113.NEXT = 0;
          END;
        114:
          BEGIN
            T115.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T115.SETRANGE("No.", NoFilter);
            IF T115.FINDSET THEN
              REPEAT
                SourceLineNo := T115."Line No.";
                LineRecRef.GETTABLE(T115);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T115.NEXT = 0;
          END;
        120:
          BEGIN
            T121.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T121.SETRANGE("No.", NoFilter);
            IF T121.FINDSET THEN
              REPEAT
                SourceLineNo := T121."Line No.";
                LineRecRef.GETTABLE(T121);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T121.NEXT = 0;
          END;
        122:
          BEGIN
            T123.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T123.SETRANGE("No.", NoFilter);
            IF T123.FINDSET THEN
              REPEAT
                SourceLineNo := T123."Line No.";
                LineRecRef.GETTABLE(T123);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T123.NEXT = 0;
          END;
        124:
          BEGIN
            T125.SETRANGE("Document No.", DocNo);
            IF T125.FINDSET THEN
              REPEAT
                SourceLineNo := T125."Line No.";
                LineRecRef.GETTABLE(T125);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T125.NEXT = 0;
          END;
        5744:
          BEGIN
            T5745.SETRANGE("Document No.", DocNo);
            IF T5745.FINDSET THEN
              REPEAT
                SourceLineNo := T5745."Line No.";
                LineRecRef.GETTABLE(T5745);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5745.NEXT = 0;
          END;
        5746:
          BEGIN
            T5747.SETRANGE("Document No.", DocNo);
            IF T5747.FINDSET THEN
              REPEAT
                SourceLineNo := T5747."Line No.";
                LineRecRef.GETTABLE(T5747);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5747.NEXT = 0;
          END;
      //VLDM4.12 Service Order
        5990:
          BEGIN
            T5991.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T5991.SETRANGE("No.", NoFilter);
            IF T5991.FINDSET THEN
              REPEAT
                SourceLineNo := T5991."Line No.";
                LineRecRef.GETTABLE(T5991);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5991.NEXT = 0;
      //Service Shipment Item Line
            T5989.SETRANGE("No.", DocNo);
            IF NoFilter <> '' THEN
              T5989.SETRANGE("Item No.", NoFilter);
            IF T5989.FINDSET THEN
              REPEAT
                SourceLineNo := T5989."Line No.";
                LineRecRef.GETTABLE(T5989);
                ChangePostedDocLineDim(LineRecRef, 5989, DimNo);
              UNTIL T5989.NEXT = 0;

          END;
        5992:
          BEGIN
            T5993.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T5993.SETRANGE("No.", NoFilter);
            IF T5993.FINDSET THEN
              REPEAT
                SourceLineNo := T5993."Line No.";
                LineRecRef.GETTABLE(T5993);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5993.NEXT = 0;
          END;

        5994:
          BEGIN
            T5995.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T5995.SETRANGE("No.", NoFilter);
            IF T5995.FINDSET THEN
              REPEAT
                SourceLineNo := T5995."Line No.";
                LineRecRef.GETTABLE(T5995);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T5995.NEXT = 0;
          END;

      //VLDM4.12 Service Order

        6650:
          BEGIN
            T6651.SETRANGE("Document No.", DocNo);
            IF T6651.FINDSET THEN
              REPEAT
                SourceLineNo := T6651."Line No.";
                LineRecRef.GETTABLE(T6651);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T6651.NEXT = 0;
          END;
        6660:
          BEGIN
            T6661.SETRANGE("Document No.", DocNo);
            IF T6661.FINDSET THEN
              REPEAT
                SourceLineNo := T6661."Line No.";
                LineRecRef.GETTABLE(T6661);
                ChangePostedDocLineDim(LineRecRef, TableID + 1, DimNo);
              UNTIL T6661.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE ChangePostedDocLineDim@100(RecRef@1000000001 : RecordRef;TableID@1000000003 : Integer;DimNo@1000000002 : Integer);
    VAR
      LineDimSetID@1000000004 : Integer;
      lineTempDimSetEntry@1000000000 : TEMPORARY Record 480;
      FieldRef@1000 : FieldRef;
    BEGIN
      // get dim set ID
      lineTempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      LineDimSetID := FldRef.VALUE;
      FilterDimSet(LineDimSetID, lineTempDimSetEntry);

      IF lineTempDimSetEntry.GET(0, NewDimCode) THEN
        OldDimValue := lineTempDimSetEntry."Dimension Value Code";
      IF OldDimCode = '' THEN
        OldDimCode := NewDimCode;

      IF NewDimValue <> '' THEN BEGIN
        lineTempDimSetEntry.INIT;
        lineTempDimSetEntry.VALIDATE("Dimension Code", NewDimCode);
        lineTempDimSetEntry.VALIDATE("Dimension Value Code", NewDimValue);
        IF NOT lineTempDimSetEntry.INSERT(TRUE) THEN
          lineTempDimSetEntry.MODIFY(TRUE);
      END ELSE BEGIN
        IF lineTempDimSetEntry.GET(0, NewDimCode) THEN
          lineTempDimSetEntry.DELETEALL;
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(lineTempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      SourceTableNo := TableID;
      TableNo := DATABASE::"Dimension Set Entry";

      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
      ELSE BEGIN
        SourceTableNo := 0;
        TableNo := TableID;
        //DM4.07 >>
        IF SourceNo <> '' THEN
          ChangePostedDocDimShortcut(RecRef, TableNo, SourceNo, NewDimCode, NewDimValue, LineDimSetID, NewDimSetID)
        ELSE
        BEGIN
          FieldRef := RecRef.FIELD(3);
          ChangePostedDocDimShortcut(RecRef, TableNo, FORMAT(FieldRef.VALUE), NewDimCode, NewDimValue, LineDimSetID, NewDimSetID);
        END;
        //DM4.07 <<
      END;
    END;

    PROCEDURE SetDimMgtHistory@110(MainDimMgtHistory@1000000000 : Record 14103541);
    BEGIN
      DimHistoryEntryNo := MainDimMgtHistory.Entry;
      NewDimCode := MainDimMgtHistory."New Code";
      NewDimValue := MainDimMgtHistory."New Value";
    END;

    PROCEDURE ClearDimHistoryVar@111();
    BEGIN
      OldDimCode := '';
      OldDimValue := '';
      TableNo := 0;
      SourceType := 0;
      SourceTableNo := 0;
      SourceNo := '';
      SourceLineNo := 0;
    END;

    PROCEDURE WriteDimMgtHistoryLine@112(OldDimSetID@1000000000 : Integer;LNewDimSetID@1000000001 : Integer);
    BEGIN
      IF NOT RetrievedDMSetup THEN
        GetDMSetup;
      IF (NOT DimMgtSetup."Enable Dimension Mgt History") THEN
        EXIT;

      DimMgtHistoryLine.WriteDimHistoryLine(
        DimHistoryEntryNo, UndoHistoryLineNo, TableNo, SourceTableNo, SourceNo, SourceLineNo, SourceType,
        OldDimCode, OldDimValue, NewDimCode, NewDimValue, '', OldDimSetID, LNewDimSetID);
    END;

    PROCEDURE SetUndoVar@120(DimHistoryLineNo@1000000000 : Integer;UndoSourceLineNo@1000000003 : Integer;NewCode@1000000001 : Code[20];NewValue@1000000002 : Code[20];OldValue@1100774002 : Code[20];SetOLDDimSetID@1100774001 : Integer;SetNEWDimSetID@1100774000 : Integer);
    BEGIN
      //CAN_SS  increased the length of the variable OldValue from 10 to 20
      Undo := TRUE;
      UndoHistoryLineNo := DimHistoryLineNo;
      SourceLineNo := UndoSourceLineNo;
      NewDimCode := NewCode;
      NewDimValue := NewValue;
      OldDimValue := OldValue;
      NewDimSetID := SetNEWDimSetID;
      DimSetID := SetOLDDimSetID;
    END;

    PROCEDURE GetDMSetup@130();
    BEGIN
      IF NOT RetrievedDMSetup THEN BEGIN
        IF NOT DimMgtSetup.GET THEN
          DimMgtSetup.INIT;
        RetrievedDMSetup := TRUE;
      END;
    END;

    PROCEDURE GetAcctingPeriodStartDate@135();
    BEGIN
      IF NOT RetrievedAcctingPeriod THEN BEGIN
        AccountingPeriod.RESET;
        AccountingPeriod.SETCURRENTKEY("Starting Date");
        AccountingPeriod.SETRANGE(Closed, FALSE);
        IF AccountingPeriod.FINDFIRST THEN
          AcctPeriodStartDate := AccountingPeriod."Starting Date"
        ELSE BEGIN
          AccountingPeriod.SETRANGE(Closed, TRUE);
          IF AccountingPeriod.FINDLAST THEN
            AcctPeriodStartDate := CALCDATE('<+1M>', AccountingPeriod."Starting Date")
          ELSE
            AcctPeriodStartDate := 0D;
        END;
        RetrievedAcctingPeriod := TRUE;
      END;
    END;

    PROCEDURE IsDatePeriodClosed@136(CheckDate@1000000000 : Date) : Boolean;
    BEGIN
      AccountingPeriod.SETFILTER("Starting Date", '<=%1', CheckDate);
      IF NOT AccountingPeriod.FINDLAST THEN
        EXIT(FALSE);

      EXIT(AccountingPeriod.Closed);
    END;

    PROCEDURE FilterDimSet@1000000001(FilterDimSetID@1000000000 : Integer;VAR BuildTempDimSetEntry@1000000001 : Record 480);
    BEGIN
      DimSetEntry.RESET;
      DimSetEntry.SETRANGE("Dimension Set ID", FilterDimSetID);
      IF DimSetEntry.FINDSET THEN
        REPEAT
          BuildTempDimSetEntry.INIT;
          BuildTempDimSetEntry."Dimension Code" := DimSetEntry."Dimension Code";
          BuildTempDimSetEntry."Dimension Value Code" := DimSetEntry."Dimension Value Code";
          IF NOT BuildTempDimSetEntry.INSERT(TRUE) THEN
            BuildTempDimSetEntry.MODIFY(TRUE);
        UNTIL DimSetEntry.NEXT = 0;
    END;

    PROCEDURE SetGLDimMgtHistory@1000000004(EntryNo@1000000000 : Integer;NDimCode@1000000001 : Code[20];NDimValue@1000000002 : Code[20]);
    BEGIN
      //DM4.05_4.04>>
      DimHistoryEntryNo := EntryNo;
      NewDimCode := NDimCode;
      NewDimValue := NDimValue;
      //DM4.05_4.04<<
    END;

    PROCEDURE ChangeLedgerEntryDimShortcut@1000000005(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;EntryNo@1000000003 : Integer;Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20];LDimSetID@1100774000 : Integer;LNewDimSetID@1100774001 : Integer) : Boolean;
    VAR
      DefDim@1000000004 : Record 352;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      DimNo@1000000005 : Integer;
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      FoundExtendedDimension@1000000009 : Boolean;
    BEGIN
      //CAN_SS>>
      FieldName := 'Shortcut Dimension ' + FORMAT(ExtendedDimNo(Dimension)) + ' Code';

      //CAN_DS_290118 >>
       IF LDimSetID = LNewDimSetID THEN
        EXIT(TRUE);
       IF (TableID = 32) OR (TableID = 5802) THEN
         EXIT(TRUE);
      //CAN_DS_290118 <<

      SourceRec.OPEN(TableID);
      IF EntryNo <> 0 THEN BEGIN
        SourceRec.GET(RecRef.RECORDID);
      END;
      TotalFields := SourceRec.FIELDCOUNT;
      i := 1;
      FieldCount := 1;
      FoundExtendedDimension := FALSE;

      //TO improve the performance
      //DM4.08>>
      {
      REPEAT
        IF SourceRec.FIELDEXIST(i) THEN BEGIN
        SourceField := SourceRec.FIELD(i);
        IF SourceField.NAME = FieldName THEN
          FoundExtendedDimension := TRUE;
        FieldCount := FieldCount + 1;
        END;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundExtendedDimension);
      }
      //DM4.08<<

      //DM4.08>>
      REPEAT
        SourceField := SourceRec.FIELDINDEX(i);
        IF SourceField.NAME = FieldName THEN
          FoundExtendedDimension := TRUE;
        FieldCount := FieldCount + 1;
        i := i + 1;
      UNTIL (FieldCount > TotalFields) OR (FoundExtendedDimension);
      //DM4.08<<

      SourceNo := FORMAT(EntryNo);
      TableNo := TableID;

      IF FoundExtendedDimension THEN BEGIN
        // Store Dimension History
        OldDimValue := SourceField.VALUE;
        IF OldDimValue <> '' THEN BEGIN
          OldDimCode := Dimension;
        END;
        WriteDimMgtHistoryLine(LDimSetID, LNewDimSetID);

        SourceField.VALIDATE(DimensionValue);
        SourceRec.MODIFY(TRUE);
      END ELSE
        IF Undo THEN
          WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      SourceRec.CLOSE;
      //CAN_SS<<
    END;

    PROCEDURE ExtendedDimNo@1000000006(Dimension@1000000001 : Code[20]) : Integer;
    VAR
      GLSetup@1000000000 : Record 98;
    BEGIN
      //CAN_SS>>
      GLSetup.GET;
      IF Dimension = GLSetup."Shortcut Dimension 3 Code" THEN
        EXIT(3);
      IF Dimension = GLSetup."Shortcut Dimension 4 Code" THEN
        EXIT(4);
      IF Dimension = GLSetup."Shortcut Dimension 5 Code" THEN
        EXIT(5);
      IF Dimension = GLSetup."Shortcut Dimension 6 Code" THEN
        EXIT(6);
      IF Dimension = GLSetup."Shortcut Dimension 7 Code" THEN
        EXIT(7);
      IF Dimension = GLSetup."Shortcut Dimension 8 Code" THEN
        EXIT(8);
      //CAN_SS<<
    END;

    PROCEDURE ChangeAllPostedDocDim@3(RecRef@1000000006 : RecordRef;TableID@1000000001 : Integer;DocNo@1000000002 : Code[20];LineNo@1000000005 : Integer;Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20];Batch@1000000009 : Boolean);
    VAR
      LineRecRef@1000000008 : RecordRef;
      DimNo@1000000007 : Integer;
      LineTempDimSetEntry@1000000010 : TEMPORARY Record 480;
      LineTableID@1000000000 : Integer;
    BEGIN
      // Send this the Table ID, Doc. No. / Line No., new Dimension and Value
      DimNo := GlobalDimNo(Dimension);

      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSet(DimSetID, TempDimSetEntry);

      // If DimensionValue is blank then remove the Dimension
      IF DimensionValue = '' THEN BEGIN
        IF LineNo = 0 THEN
          IF TempDimSetEntry.GET(0, Dimension) THEN
            IF TempDimSetEntry.DELETE(TRUE) THEN;
      END ELSE BEGIN
      // Update for the posted doc header or could be for the line
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT(TRUE) THEN
          TempDimSetEntry.MODIFY(TRUE);
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      //DM4.07
      RecRef.MODIFY;
      //DM4.07

      //CAN_DS++ 150318
      IF DimSetID = NewDimSetID THEN
        EXIT;
      //CAN_DS-- 150318

      // Store Dimension History
      ClearDimHistoryVar;
      IF DimSetEntry.GET(DimSetID, Dimension) THEN BEGIN
        OldDimCode := DimSetEntry."Dimension Code";
        OldDimValue := DimSetEntry."Dimension Value Code";
      END;

      NewDimCode := Dimension;
      NewDimValue := DimensionValue;
      TableNo := DATABASE::"Dimension Set Entry";
      SourceTableNo := TableID;
      SourceNo := DocNo;
      SourceLineNo := LineNo;
      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(DimSetID, NewDimSetID);

      SourceLineNo := 0;
      SourceTableNo := 0;
      //DM4.07
      //CAN_DS_250118 >><<
      IF DimNo <> 0 THEN BEGIN
        ChangeAllPostedDocDimShortcut(RecRef, TableID, SourceNo, Dimension, DimensionValue, DimSetID, NewDimSetID); //DM4.10
      //CAN_DS_250118 >><<
      END;
      //DM4.07 END;

      // Update posted doc lines
      IF (LineNo = 0) THEN BEGIN
        FldRef := RecRef.FIELD(3);
        LoopPostedDocLine(TableID, FORMAT(FldRef.VALUE), Dimension, DimensionValue, DimNo, '');

      END;
    END;

    PROCEDURE ChangeAllPostedDocDimShortcut@2(SourceRec@1000000006 : RecordRef;TableID@1000000000 : Integer;DocNo@1000000003 : Code[20];Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20];LDimSetID@1100774000 : Integer;LNewDimSetID@1100774001 : Integer);
    VAR
      DefDim@1000000004 : Record 352;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      DimNo@1000000005 : Integer;
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      FoundGlobal@1000000009 : Boolean;
      SalesLine@1000000014 : Record 37;
      ProgressText@1000000016 : TextConst 'ENU=Processing........';
      ProgressBar@1000000013 : Dialog;
      ProgressText1@1000000015 : TextConst 'ENU=TableID: #######1##\Document No.: ########2##';
    BEGIN
      FieldName := 'Shortcut Dimension ' + FORMAT(GlobalDimNo(Dimension)) + ' Code';

      //CAN_DS_290118 >>
       IF LDimSetID = LNewDimSetID THEN
        EXIT;
       IF (TableID = 32) OR (TableID = 5802) THEN //CAN_DS++ 150318
        EXIT;
      //CAN_DS_290118 <<

      //SourceRec.OPEN(TableID); //CAN_MK_280118 >><<

      IF SourceRec.FINDFIRST THEN
      REPEAT
        TotalFields := SourceRec.FIELDCOUNT;
        i := 1;
        FieldCount := 1;
        FoundGlobal := FALSE;

        //DM4.10>>
        REPEAT
          SourceField := SourceRec.FIELDINDEX(i);
          IF SourceField.NAME = FieldName THEN
            FoundGlobal := TRUE;
          FieldCount := FieldCount + 1;
          i := i + 1;
        UNTIL (FieldCount > TotalFields) OR (FoundGlobal);
        //DM4.10<<

        SourceNo := DocNo;
        TableNo := TableID;

        IF FoundGlobal THEN BEGIN
          // Store Dimension History
          OldDimValue := SourceField.VALUE;
          IF OldDimValue <> '' THEN BEGIN
            OldDimCode := Dimension;
          END;
          WriteDimMgtHistoryLine(LDimSetID, LNewDimSetID);
          SourceField.VALIDATE(DimensionValue);
          SourceRec.MODIFY(TRUE);
        END ELSE
          IF Undo THEN
            WriteDimMgtHistoryLine(DimSetID, NewDimSetID);
      UNTIL SourceRec.NEXT = 0;
      SourceRec.CLOSE;
    END;

    LOCAL PROCEDURE UpdatePstdDocLinesNo@1000000013(RecRef@1000000017 : RecordRef;TableID@1000000018 : Integer;DocNo@1000000019 : Code[20];LineNo@1000000020 : Integer;Dimension@1000000021 : Code[20];DimensionValue@1000000022 : Code[20];NewDimSetID@1000000023 : Integer);
    VAR
      SalesInvLineRec@1000000015 : Record 113;
      SalesInvLineRec2@1000000014 : Record 113;
      SalesShpLineRec@1000000013 : Record 111;
      SalesShpLineRec2@1000000012 : Record 111;
      SalesCrMemoLineRec@1000000011 : Record 115;
      SalesCrMemoLineRec2@1000000010 : Record 115;
      PurchRcptLineRec@1000000009 : Record 121;
      PurchRcptLineRec2@1000000008 : Record 121;
      PurchInvLineRec@1000000007 : Record 123;
      PurchInvLineRec2@1000000006 : Record 123;
      PurchCrMemoLineRec@1000000005 : Record 125;
      PurchCrMemoLineRec2@1000000004 : Record 125;
      TranShpLineRec@1000000003 : Record 5745;
      TranShpLineRec2@1000000002 : Record 5745;
      TranRcptLineRec@1000000024 : Record 5747;
      TranRcptLineRec2@1000000000 : Record 5747;
      ServShipLine@1000000117 : Record 5991;
      ServShipItmLine@1000000118 : Record 5989;
      ServInvLine@1000000119 : Record 5993;
      ServCrMemoLine@1000000120 : Record 5995;
      ServShipLine2@1000000124 : Record 5991;
      ServShipItmLine2@1000000123 : Record 5989;
      ServInvLine2@1000000122 : Record 5993;
      ServCrMemoLine2@1000000121 : Record 5995;
      PrevDocLineNo@1000000001 : Integer;
      DocLineNo@1000000016 : Integer;
    BEGIN
      //DM4.09>>
      CASE RecRef.NUMBER OF
        110,111 : BEGIN
          SalesShpLineRec.RESET;
          SalesShpLineRec.SETRANGE("Document No.",DocNo);
          SalesShpLineRec.SETRANGE("Line No.",LineNo);
          IF SalesShpLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          SalesShpLineRec2.RESET;
          SalesShpLineRec2.SETRANGE("Document No.",DocNo);
          SalesShpLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          SalesShpLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          SalesShpLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF SalesShpLineRec2.FINDFIRST THEN BEGIN
            SalesShpLineRec."Document Line No." := SalesShpLineRec2."Document Line No.";
            DocLineNo2 := SalesShpLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            SalesShpLineRec2.RESET;
            SalesShpLineRec2.SETRANGE("Document No.",DocNo);
            SalesShpLineRec2.SETRANGE("Document Line No.",LineNo);
            SalesShpLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            SalesShpLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT SalesShpLineRec2.FINDFIRST THEN BEGIN
              SalesShpLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              SalesShpLineRec2.RESET;
              SalesShpLineRec2.SETRANGE("Document No.",DocNo);
              IF SalesShpLineRec2.FINDSET THEN REPEAT
                //IF (SalesShpLineRec2."Document Line No." > DocLineNo)
               IF (SalesShpLineRec2."Document Line No." > DocLineNo) AND(SalesShpLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := SalesShpLineRec2."Document Line No.";
                 DocLineNo2 := DocLineNo; //DM4.08
               END;
              UNTIL SalesShpLineRec2.NEXT = 0;
              SalesShpLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          SalesShpLineRec.MODIFY;
        END;
        112,113 : BEGIN
          SalesInvLineRec.RESET;
          SalesInvLineRec.SETRANGE("Document No.",DocNo);
          SalesInvLineRec.SETRANGE("Line No.",LineNo);
          IF SalesInvLineRec.FINDFIRST THEN;
          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          SalesInvLineRec2.RESET;
          SalesInvLineRec2.SETRANGE("Document No.",DocNo);
          SalesInvLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          SalesInvLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          SalesInvLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF SalesInvLineRec2.FINDFIRST THEN BEGIN
             SalesInvLineRec."Document Line No." := SalesInvLineRec2."Document Line No.";
             DocLineNo2 := SalesInvLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            SalesInvLineRec2.RESET;
            SalesInvLineRec2.SETRANGE("Document No.",DocNo);
            SalesInvLineRec2.SETRANGE("Document Line No.",LineNo);
            SalesInvLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            SalesInvLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT SalesInvLineRec2.FINDFIRST THEN BEGIN
              SalesInvLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              SalesInvLineRec2.RESET;
              SalesInvLineRec2.SETRANGE("Document No.",DocNo);
              IF SalesInvLineRec2.FINDSET THEN REPEAT
                //IF (SalesInvLineRec2."Document Line No." > DocLineNo) Then begin //CAN_SS VLDM4.12
               IF (SalesInvLineRec2."Document Line No." > DocLineNo) AND (SalesInvLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := SalesInvLineRec2."Document Line No.";
                 DocLineNo2 := SalesInvLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL SalesInvLineRec2.NEXT = 0;
              SalesInvLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          SalesInvLineRec.MODIFY;
        END;
        114,115: BEGIN
          SalesCrMemoLineRec.RESET;
          SalesCrMemoLineRec.SETRANGE("Document No.",DocNo);
          SalesCrMemoLineRec.SETRANGE("Line No.",LineNo);
          IF SalesCrMemoLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          SalesCrMemoLineRec2.RESET;
          SalesCrMemoLineRec2.SETRANGE("Document No.",DocNo);
          SalesCrMemoLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          SalesCrMemoLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          SalesCrMemoLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF SalesCrMemoLineRec2.FINDFIRST THEN BEGIN
            SalesCrMemoLineRec."Document Line No." := SalesCrMemoLineRec2."Document Line No.";
            DocLineNo2 := SalesCrMemoLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            SalesCrMemoLineRec2.RESET;
            SalesCrMemoLineRec2.SETRANGE("Document No.",DocNo);
            SalesCrMemoLineRec2.SETRANGE("Document Line No.",LineNo);
            SalesCrMemoLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            SalesCrMemoLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT SalesCrMemoLineRec2.FINDFIRST THEN BEGIN
              SalesCrMemoLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              SalesCrMemoLineRec2.RESET;
              SalesCrMemoLineRec2.SETRANGE("Document No.",DocNo);
              IF SalesCrMemoLineRec2.FINDSET THEN REPEAT
               //IF SalesCrMemoLineRec2."Document Line No." > DocLineNo THEN BEGIN //CAN_SS VLDM4.12++
                IF (SalesCrMemoLineRec2."Document Line No." > DocLineNo) AND (SalesCrMemoLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := SalesCrMemoLineRec2."Document Line No.";
                 DocLineNo2 := DocLineNo; //DM4.08
               END;
              UNTIL SalesCrMemoLineRec2.NEXT = 0;
              SalesCrMemoLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          SalesCrMemoLineRec.MODIFY;
        END;
        120,121 : BEGIN
          PurchRcptLineRec.RESET;
          PurchRcptLineRec.SETRANGE("Document No.",DocNo);
          PurchRcptLineRec.SETRANGE("Line No.",LineNo);
          IF PurchRcptLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          PurchRcptLineRec2.RESET;
          PurchRcptLineRec2.SETRANGE("Document No.",DocNo);
          PurchRcptLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          PurchRcptLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          PurchRcptLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF PurchRcptLineRec2.FINDFIRST THEN BEGIN
            PurchRcptLineRec."Document Line No." := PurchRcptLineRec2."Document Line No.";
            DocLineNo2 := PurchRcptLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            PurchRcptLineRec2.RESET;
            PurchRcptLineRec2.SETRANGE("Document No.",DocNo);
            PurchRcptLineRec2.SETRANGE("Document Line No.",LineNo);
            PurchRcptLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            PurchRcptLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT PurchRcptLineRec2.FINDFIRST THEN BEGIN
              PurchRcptLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              PurchRcptLineRec2.RESET;
              PurchRcptLineRec2.SETRANGE("Document No.",DocNo);
              IF PurchRcptLineRec2.FINDSET THEN REPEAT
               //IF PurchRcptLineRec2."Document Line No." > DocLineNo THEN BEGIN //CAN_SS VLDM4.12++
               IF (PurchRcptLineRec2."Document Line No." > DocLineNo) AND (PurchRcptLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := PurchRcptLineRec2."Document Line No.";
                 DocLineNo2 := PurchRcptLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL PurchRcptLineRec2.NEXT = 0;
              PurchRcptLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          PurchRcptLineRec.MODIFY;
        END;
        122,123 : BEGIN
          PurchInvLineRec.RESET;
          PurchInvLineRec.SETRANGE("Document No.",DocNo);
          PurchInvLineRec.SETRANGE("Line No.",LineNo);
          IF PurchInvLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          PurchInvLineRec2.RESET;
          PurchInvLineRec2.SETRANGE("Document No.",DocNo);
          PurchInvLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          PurchInvLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          PurchInvLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF PurchInvLineRec2.FINDFIRST THEN BEGIN
            PurchInvLineRec."Document Line No." := PurchInvLineRec2."Document Line No.";
            DocLineNo2 := PurchInvLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            PurchInvLineRec2.RESET;
            PurchInvLineRec2.SETRANGE("Document No.",DocNo);
            PurchInvLineRec2.SETRANGE("Document Line No.",LineNo);
            PurchInvLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            PurchInvLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT PurchInvLineRec2.FINDFIRST THEN BEGIN
              PurchInvLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              PurchInvLineRec2.RESET;
              PurchInvLineRec2.SETRANGE("Document No.",DocNo);
              IF PurchInvLineRec2.FINDSET THEN REPEAT
               //IF PurchInvLineRec2."Document Line No." > DocLineNo THEN
               IF (PurchInvLineRec2."Document Line No." > DocLineNo) AND (PurchInvLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := PurchInvLineRec2."Document Line No.";
                 DocLineNo2 := PurchInvLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL PurchInvLineRec2.NEXT = 0;
              PurchInvLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          PurchInvLineRec.MODIFY;
        END;
        124,125 : BEGIN
          PurchCrMemoLineRec.RESET;
          PurchCrMemoLineRec.SETRANGE("Document No.",DocNo);
          PurchCrMemoLineRec.SETRANGE("Line No.",LineNo);
          IF PurchCrMemoLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          PurchCrMemoLineRec2.RESET;
          PurchCrMemoLineRec2.SETRANGE("Document No.",DocNo);
          PurchCrMemoLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          PurchCrMemoLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          PurchCrMemoLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF PurchCrMemoLineRec2.FINDFIRST THEN BEGIN
            PurchCrMemoLineRec."Document Line No." := PurchCrMemoLineRec2."Document Line No.";
            DocLineNo2 := PurchCrMemoLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            PurchCrMemoLineRec2.RESET;
            PurchCrMemoLineRec2.SETRANGE("Document No.",DocNo);
            PurchCrMemoLineRec2.SETRANGE("Document Line No.",LineNo);
            PurchCrMemoLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            PurchCrMemoLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT PurchCrMemoLineRec2.FINDFIRST THEN BEGIN
              PurchCrMemoLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              PurchCrMemoLineRec2.RESET;
              PurchCrMemoLineRec2.SETRANGE("Document No.",DocNo);
              IF PurchCrMemoLineRec2.FINDSET THEN REPEAT
               //IF PurchCrMemoLineRec2."Document Line No." > DocLineNo THEN BEGIN
                IF (PurchCrMemoLineRec2."Document Line No." > DocLineNo) AND (PurchCrMemoLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := PurchCrMemoLineRec2."Document Line No.";
                 DocLineNo2 := PurchCrMemoLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL PurchCrMemoLineRec2.NEXT = 0;
              PurchCrMemoLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          PurchCrMemoLineRec.MODIFY;
        END;
        5744,5745 : BEGIN
          //DM4.10>>
          TranShpLineRec.RESET;
          TranShpLineRec.SETRANGE("Document No.",DocNo);
          TranShpLineRec.SETRANGE("Line No.",LineNo);
          IF TranShpLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          TranShpLineRec2.RESET;
          TranShpLineRec2.SETRANGE("Document No.",DocNo);
          TranShpLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          TranShpLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          TranShpLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF TranShpLineRec2.FINDFIRST THEN BEGIN
            TranShpLineRec."Document Line No." := TranShpLineRec2."Document Line No.";
            DocLineNo2 := TranShpLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            TranShpLineRec2.RESET;
            TranShpLineRec2.SETRANGE("Document No.",DocNo);
            TranShpLineRec2.SETRANGE("Document Line No.",LineNo);
            TranShpLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            TranShpLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT TranShpLineRec2.FINDFIRST THEN BEGIN
              TranShpLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              TranShpLineRec2.RESET;
              TranShpLineRec2.SETRANGE("Document No.",DocNo);
              IF TranShpLineRec2.FINDSET THEN REPEAT
               //IF TranShpLineRec2."Document Line No." > DocLineNo THEN BEGIN
                IF (TranShpLineRec2."Document Line No." > DocLineNo) AND (TranShpLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := TranShpLineRec2."Document Line No.";
                 DocLineNo2 := TranShpLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL TranShpLineRec2.NEXT = 0;
              TranShpLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          TranShpLineRec.MODIFY;
        END;
       //DM4.10<<
        5746,5747 : BEGIN
          //DM4.10>>
          TranRcptLineRec.RESET;
          TranRcptLineRec.SETRANGE("Document No.",DocNo);
          TranRcptLineRec.SETRANGE("Line No.",LineNo);
          IF TranRcptLineRec.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          TranRcptLineRec2.RESET;
          TranRcptLineRec2.SETRANGE("Document No.",DocNo);
          TranRcptLineRec2.SETRANGE("Dimension Set ID",NewDimSetID);
          TranRcptLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
          TranRcptLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF TranRcptLineRec2.FINDFIRST THEN BEGIN
            TranRcptLineRec."Document Line No." := TranRcptLineRec2."Document Line No.";
            DocLineNo2 := TranRcptLineRec2."Document Line No."; //DM4.08
          END ELSE BEGIN
            TranRcptLineRec2.RESET;
            TranRcptLineRec2.SETRANGE("Document No.",DocNo);
            TranRcptLineRec2.SETRANGE("Document Line No.",LineNo);
            TranRcptLineRec2.SETFILTER("Line No.",'<>%1',LineNo);
            TranRcptLineRec2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT TranRcptLineRec2.FINDFIRST THEN BEGIN
              TranRcptLineRec."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              TranRcptLineRec2.RESET;
              TranRcptLineRec2.SETRANGE("Document No.",DocNo);
              IF TranRcptLineRec2.FINDSET THEN REPEAT
               //IF TranRcptLineRec2."Document Line No." > DocLineNo THEN BEGIN
                IF (TranRcptLineRec2."Document Line No." > DocLineNo) AND (TranRcptLineRec2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := TranRcptLineRec2."Document Line No.";
                 DocLineNo2 := TranRcptLineRec2."Document Line No."; //DM4.08
               END;
              UNTIL TranRcptLineRec2.NEXT = 0;
              TranRcptLineRec."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          TranRcptLineRec.MODIFY;
        END;
       //DM4.10<<
      //VLDM4.12++ Service Module
        5990,5991 : BEGIN
          ServShipLine.RESET;
          ServShipLine.SETRANGE("Document No.",DocNo);
          ServShipLine.SETRANGE("Line No.",LineNo);
          IF ServShipLine.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          ServShipLine2.RESET;
          ServShipLine2.SETRANGE("Document No.",DocNo);
          ServShipLine2.SETRANGE("Dimension Set ID",NewDimSetID);
          ServShipLine2.SETFILTER("Line No.",'<>%1',LineNo);
          ServShipLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF ServShipLine2.FINDFIRST THEN BEGIN
            ServShipLine2."Document Line No." := ServShipLine2."Document Line No.";
            DocLineNo2 := ServShipLine2."Document Line No."; //DM4.08
          END ELSE BEGIN
            ServShipLine2.RESET;
            ServShipLine2.SETRANGE("Document No.",DocNo);
            ServShipLine2.SETRANGE("Document Line No.",LineNo);
            ServShipLine2.SETFILTER("Line No.",'<>%1',LineNo);
            ServShipLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT ServShipLine2.FINDFIRST THEN BEGIN
              ServShipLine."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              ServShipLine2.RESET;
              ServShipLine2.SETRANGE("Document No.",DocNo);
              IF ServShipLine2.FINDSET THEN REPEAT
                //IF (ServShipLine2."Document Line No." > DocLineNo)
               IF (ServShipLine2."Document Line No." > DocLineNo) AND(ServShipLine2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := ServShipLine2."Document Line No.";
                 DocLineNo2 := DocLineNo; //DM4.08
               END;
              UNTIL ServShipLine2.NEXT = 0;
              ServShipLine."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          ServShipLine.MODIFY;
        END;

        5992,5993 : BEGIN
          ServInvLine.RESET;
          ServInvLine.SETRANGE("Document No.",DocNo);
          ServInvLine.SETRANGE("Line No.",LineNo);
          IF ServInvLine.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          ServInvLine2.RESET;
          ServInvLine2.SETRANGE("Document No.",DocNo);
          ServInvLine2.SETRANGE("Dimension Set ID",NewDimSetID);
          ServInvLine2.SETFILTER("Line No.",'<>%1',LineNo);
          ServInvLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF ServInvLine2.FINDFIRST THEN BEGIN
            ServInvLine2."Document Line No." := ServInvLine2."Document Line No.";
            DocLineNo2 := ServInvLine2."Document Line No."; //DM4.08
          END ELSE BEGIN
            ServInvLine2.RESET;
            ServInvLine2.SETRANGE("Document No.",DocNo);
            ServInvLine2.SETRANGE("Document Line No.",LineNo);
            ServInvLine2.SETFILTER("Line No.",'<>%1',LineNo);
            ServInvLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT ServInvLine2.FINDFIRST THEN BEGIN
              ServInvLine."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              ServInvLine2.RESET;
              ServInvLine2.SETRANGE("Document No.",DocNo);
              IF ServInvLine2.FINDSET THEN REPEAT
                //IF (ServInvLine2."Document Line No." > DocLineNo)
               IF (ServInvLine2."Document Line No." > DocLineNo) AND(ServInvLine2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := ServInvLine2."Document Line No.";
                 DocLineNo2 := DocLineNo; //DM4.08
               END;
              UNTIL ServInvLine2.NEXT = 0;
              ServInvLine."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          ServInvLine.MODIFY;
        END;

        5994,5995 : BEGIN
          ServCrMemoLine.RESET;
          ServCrMemoLine.SETRANGE("Document No.",DocNo);
          ServCrMemoLine.SETRANGE("Line No.",LineNo);
          IF ServCrMemoLine.FINDFIRST THEN;

          DocLineNo := 0;
          DocLineNo2 := 0; //DM4.08
          ServCrMemoLine2.RESET;
          ServCrMemoLine2.SETRANGE("Document No.",DocNo);
          ServCrMemoLine2.SETRANGE("Dimension Set ID",NewDimSetID);
          ServCrMemoLine2.SETFILTER("Line No.",'<>%1',LineNo);
          ServCrMemoLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
          IF ServCrMemoLine2.FINDFIRST THEN BEGIN
            ServCrMemoLine2."Document Line No." := ServCrMemoLine2."Document Line No.";
            DocLineNo2 := ServCrMemoLine2."Document Line No."; //DM4.08
          END ELSE BEGIN
            ServCrMemoLine2.RESET;
            ServCrMemoLine2.SETRANGE("Document No.",DocNo);
            ServCrMemoLine2.SETRANGE("Document Line No.",LineNo);
            ServCrMemoLine2.SETFILTER("Line No.",'<>%1',LineNo);
            ServCrMemoLine2.SETFILTER("Gen. Prod. Posting Group",'<>%1',GenProdPostingGroup);//CAN_SS VLDM4.12++
            IF NOT ServCrMemoLine2.FINDFIRST THEN BEGIN
              ServCrMemoLine."Document Line No." := LineNo;
              DocLineNo2 := LineNo; //DM4.08
            END ELSE BEGIN
              ServCrMemoLine2.RESET;
              ServCrMemoLine2.SETRANGE("Document No.",DocNo);
              IF ServCrMemoLine2.FINDSET THEN REPEAT
                //IF (ServCrMemoLine2."Document Line No." > DocLineNo)
               IF  (ServCrMemoLine2."Document Line No." > DocLineNo)
               AND (ServCrMemoLine2."Gen. Prod. Posting Group" <> GenProdPostingGroup) THEN BEGIN
                 DocLineNo := ServCrMemoLine2."Document Line No.";
                 DocLineNo2 := DocLineNo; //DM4.08
               END;
              UNTIL ServCrMemoLine2.NEXT = 0;
              ServCrMemoLine."Document Line No." := DocLineNo + 10000;
              DocLineNo2 := DocLineNo + 10000; //DM4.08
            END;
          END;
          ServCrMemoLine.MODIFY;
        END;

      //VLDM4.12-- Service Module

      END;
    END;

    LOCAL PROCEDURE UpdateRelLedgerEntryNo@1000000007(RecRef@1000000000 : RecordRef);
    VAR
      i@1000000002 : Integer;
      GLFieldRef@1000000003 : FieldRef;
      NoOfFields@1000000001 : Integer;
    BEGIN
      //DM4.08>>
      //IF (RecRef.NUMBER = 32) OR (RecRef.NUMBER = 5802) THEN
       // EXIT;  //hari

      //CAN_DS VLDM4.12
      IF (RecRef.NUMBER = 32) OR (RecRef.NUMBER = 5802) OR (RecRef.NUMBER = 17 )THEN
       EXIT;


      NoOfFields := RecRef.FIELDCOUNT;

      FOR i := 1 TO NoOfFields DO BEGIN
        GLFieldRef := RecRef.FIELDINDEX(i);
        IF GLFieldRef.NAME = 'Document Line No.' THEN BEGIN
          GLFieldRef.VALUE(DocLineNo2);
          RecRef.MODIFY();
          EXIT;
        END;
      END;
      //DM4.08<<
    END;

    PROCEDURE UpdateHeaderTables@1000000024();
    BEGIN
      HeaderTableUpdate := TRUE; //DM4.09  //Checks called from either Document or Navigate window
    END;

    LOCAL PROCEDURE UpdatePstdDocandLedEntryNo@1000000025(RecRef@1000000000 : RecordRef;TableID@1000000001 : Integer;DocNo@1000000002 : Code[20];Dimension@1000000003 : Code[20];DimensionValue@1000000004 : Code[20]);
    VAR
      SalesShipLine@1000000010 : Record 111;
      SalesInvLine@1000000009 : Record 113;
      SalesCrMemoLine@1000000008 : Record 115;
      PurchRcptLine@1000000007 : Record 121;
      PurchInvLine@1000000006 : Record 123;
      PurchCrMemoLine@1000000005 : Record 125;
      TranShptLine@1000000013 : Record 5745;
      TranRcptLine@1000000015 : Record 5747;
      DocLineNoFilter@1000000011 : Integer;
      ServShipLine@1000000115 : Record 5991;
      ServShipItmLine@1000000114 : Record 5989;
      ServInvLine@1000000113 : Record 5993;
      ServCrMemoLine@1000000112 : Record 5995;
      RecRefLoc@1000000014 : RecordRef;
      NewDimSetID@1000000012 : Integer;
    BEGIN
      //DM4.09>>
      CASE RecRef.NUMBER OF
        110: BEGIN
          SalesShipLine.RESET;
          SalesShipLine.SETRANGE("Document No.",DocNo);
          IF SalesShipLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := SalesShipLine."Document Line No.";
              RecRefLoc.GETTABLE(SalesShipLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,SalesShipLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,111,SalesShipLine."Document No.",SalesShipLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(SalesShipLine."Document No.",SalesShipLine."Line No.",
                SalesShipLine."Posting Date",DocLineNoFilter);
            UNTIL SalesShipLine.NEXT = 0;
        END;
        112 : BEGIN
          SalesInvLine.RESET;
          SalesInvLine.SETRANGE("Document No.",DocNo);
          IF SalesInvLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := SalesInvLine."Document Line No.";
              RecRefLoc.GETTABLE(SalesInvLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,SalesInvLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,113,SalesInvLine."Document No.",SalesInvLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(SalesInvLine."Document No.",SalesInvLine."Line No.",
                SalesInvLine."Posting Date",DocLineNoFilter);
            UNTIL SalesInvLine.NEXT = 0;
        END;
        114 : BEGIN
          SalesCrMemoLine.RESET;
          SalesCrMemoLine.SETRANGE("Document No.",DocNo);
          IF SalesCrMemoLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := SalesCrMemoLine."Document Line No.";
              RecRefLoc.GETTABLE(SalesCrMemoLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,SalesCrMemoLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,115,SalesCrMemoLine."Document No.",SalesCrMemoLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(SalesCrMemoLine."Document No.",SalesCrMemoLine."Line No.",
                SalesCrMemoLine."Posting Date",DocLineNoFilter);
            UNTIL SalesCrMemoLine.NEXT = 0;
        END;
        120 : BEGIN
          PurchRcptLine.RESET;
          PurchRcptLine.SETRANGE("Document No.",DocNo);
          IF PurchRcptLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := PurchRcptLine."Document Line No.";
              RecRefLoc.GETTABLE(PurchRcptLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,PurchRcptLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,121,PurchRcptLine."Document No.",PurchRcptLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(PurchRcptLine."Document No.",PurchRcptLine."Line No.",
                PurchRcptLine."Posting Date",DocLineNoFilter);
            UNTIL PurchRcptLine.NEXT = 0;
        END;
        122 : BEGIN
          PurchInvLine.RESET;
          PurchInvLine.SETRANGE("Document No.",DocNo);
          IF PurchInvLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := PurchInvLine."Document Line No.";
              RecRefLoc.GETTABLE(PurchInvLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,PurchInvLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,123,PurchInvLine."Document No.",PurchInvLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(PurchInvLine."Document No.",PurchInvLine."Line No.",
                PurchInvLine."Posting Date",DocLineNoFilter);
            UNTIL PurchInvLine.NEXT = 0;
        END;
        124 : BEGIN
          PurchCrMemoLine.RESET;
          PurchCrMemoLine.SETRANGE("Document No.",DocNo);
          IF PurchCrMemoLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := PurchCrMemoLine."Document Line No.";
              RecRefLoc.GETTABLE(PurchCrMemoLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,PurchCrMemoLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,125,PurchCrMemoLine."Document No.",PurchCrMemoLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(PurchCrMemoLine."Document No.",PurchCrMemoLine."Line No.",
                PurchCrMemoLine."Posting Date",DocLineNoFilter);
            UNTIL PurchCrMemoLine.NEXT = 0;
        END;
        //DM4.10>>
        5744 : BEGIN
          TranShptLine.RESET;
          TranShptLine.SETRANGE("Document No.",DocNo);
          IF TranShptLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := TranShptLine."Document Line No.";
              RecRefLoc.GETTABLE(TranShptLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,TranShptLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,5744,TranShptLine."Document No.",TranShptLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(TranShptLine."Document No.",TranShptLine."Line No.",
                TranShptLine."Shipment Date",DocLineNoFilter);
            UNTIL TranShptLine.NEXT = 0;
        END;
        5746 : BEGIN
          TranRcptLine.RESET;
          TranRcptLine.SETRANGE("Document No.",DocNo);
          IF TranRcptLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := TranRcptLine."Document Line No.";
              RecRefLoc.GETTABLE(TranRcptLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,TranRcptLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,5746,TranRcptLine."Document No.",TranRcptLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(TranRcptLine."Document No.",TranRcptLine."Line No.",
                TranRcptLine."Receipt Date",DocLineNoFilter);
            UNTIL TranRcptLine.NEXT = 0;
        END;
        //DM4.10<<

      //VLDM4.12++ Service Module
        5990 : BEGIN
          ServShipLine.RESET;
          ServShipLine.SETRANGE("Document No.",DocNo);
          IF ServShipLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := ServShipLine."Document Line No.";
              RecRefLoc.GETTABLE(ServShipLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,ServShipLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,5990,ServShipLine."Document No.",ServShipLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(ServShipLine."Document No.",ServShipLine."Line No.",
                ServShipLine."Posting Date",DocLineNoFilter);
            UNTIL ServShipLine.NEXT = 0;
        END;

          5992 : BEGIN
          ServInvLine.RESET;
          ServInvLine.SETRANGE("Document No.",DocNo);
          IF ServInvLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := ServInvLine."Document Line No.";
              RecRefLoc.GETTABLE(ServInvLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,ServInvLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,5992,ServInvLine."Document No.",ServInvLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(ServInvLine."Document No.",ServInvLine."Line No.",
                ServInvLine."Posting Date",DocLineNoFilter);
            UNTIL ServInvLine.NEXT = 0;
        END;

          5994 : BEGIN
          ServCrMemoLine.RESET;
          ServCrMemoLine.SETRANGE("Document No.",DocNo);
          IF ServCrMemoLine.FINDSET THEN
            REPEAT
              DocLineNoFilter := ServCrMemoLine."Document Line No.";
              RecRefLoc.GETTABLE(ServCrMemoLine);
              NewDimSetID := GetNewDimSetID(RecRefLoc,DocNo,ServCrMemoLine."Line No.",Dimension,DimensionValue);
              UpdatePstdDocLinesNo(RecRef,5994,ServCrMemoLine."Document No.",ServCrMemoLine."Line No.",Dimension,DimensionValue,NewDimSetID);
              UpdateAllLedgerEntryLinesNo(ServCrMemoLine."Document No.",ServCrMemoLine."Line No.",
                ServCrMemoLine."Posting Date",DocLineNoFilter);
            UNTIL ServCrMemoLine.NEXT = 0;
        END;
      //VLDM4.12-- Service Module
      END;
      //DM4.09<<
    END;

    LOCAL PROCEDURE UpdateAllLedgerEntryLinesNo@1000000026(DocNoFilter@1000000000 : Code[20];LineNoFilter@1000000001 : Integer;PostingDateFilter@1000000002 : Date;DocLineNoFilter@1000000003 : Integer);
    VAR
      RecRef@1000000004 : RecordRef;
      NavigatePage@1000000005 : Page 344;
      DocumentEntry@1000000006 : Record 265;
    BEGIN
      //DM4.09>>
      WITH DocumentEntry DO BEGIN
        IF FINDSET THEN
          REPEAT
            CASE DocumentEntry."Table ID" OF
              17 :
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> 0D THEN
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'),Posting Date=CONST('
                        + FORMAT(PostingDateFilter) +
                        '),Document Line No.=CONST(' + FORMAT(DocLineNoFilter) + '))')
                  ELSE
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +
                     '),Document Line No.=CONST(' + FORMAT(DocLineNoFilter) + '))');
      //VLDM4.12++
      //            IF RecRef.FINDSET THEN
      //              REPEAT
      //                UpdateRelLedgerEntryNo(RecRef);
      //              UNTIL RecRef.NEXT = 0;
      //VLDM4.12--
                  RecRef.CLOSE;
                END;
            END;
            CASE DocumentEntry."Table ID" OF
              32,5802 :
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> 0D THEN
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'),Posting Date=CONST('
                        + FORMAT(PostingDateFilter) +
                        '),Document Line No.=CONST(' + FORMAT(LineNoFilter) + '))')
                  ELSE
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +
                     '),Document Line No.=CONST(' + FORMAT(LineNoFilter) + '))');
      //VLDM4.12++
      //            IF RecRef.FINDSET THEN
      //              REPEAT
      //                UpdateRelLedgerEntryNo(RecRef);
      //              UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END;
            END;

      //VLDM4.12 Service Module
            CASE DocumentEntry."Table ID" OF
              5907,5908 :
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> 0D THEN
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'),Posting Date=CONST('
                        + FORMAT(PostingDateFilter)+ '))')

                  ELSE
                    RecRef.SETVIEW('SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'))');
                  RecRef.CLOSE;
                END;
            END;
      //VLDM4.12 Service Module

            CASE DocumentEntry."Table ID" OF
              21,25,169,203,271,5601,5625:
                BEGIN
                  RecRef.OPEN(DocumentEntry."Table ID");
                  IF PostingDateFilter <> 0D THEN
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'),Posting Date=CONST('
                      + FORMAT(PostingDateFilter) +'))')
                  ELSE
                    RecRef.SETVIEW(
                     'SORTING(Document No.) WHERE(Document No.=CONST(' + DocNoFilter +'))');

                  IF RecRef.FINDSET THEN
                    REPEAT
                      UpdateRelLedgerEntryNo(RecRef);
                    UNTIL RecRef.NEXT = 0;
                  RecRef.CLOSE;
                END;
            END;
         UNTIL NEXT = 0;
      END;
      //DM4.09<<
    END;

    PROCEDURE SaveDocEntry@1000000027(DocEntry@1000000000 : Record 265);
    BEGIN
      DocumentEntry := DocEntry; //DM4.09
    END;

    PROCEDURE SetSalesDocLineNoOnInsert@1000000008(VAR RecSalesLine@1000000001 : Record 37);
    VAR
      SalesLine@1000000000 : Record 37;
    BEGIN
      //DM4.09>>
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type",RecSalesLine."Document Type");
      SalesLine.SETRANGE("Document No.",RecSalesLine."Document No.");
      SalesLine.SETRANGE("Dimension Set ID",RecSalesLine."Dimension Set ID");
      SalesLine.SETRANGE("Gen. Prod. Posting Group",RecSalesLine."Gen. Prod. Posting Group");//VLDM4.12
      IF SalesLine.FINDFIRST THEN
        RecSalesLine."Document Line No." := SalesLine."Document Line No."
      ELSE
        RecSalesLine."Document Line No." := RecSalesLine."Line No.";
      //DM4.09<<
    END;

    PROCEDURE UpdateSalesDocLineNoOnDimChange@1000000009(VAR RecSalesLine@1000000003 : Record 37);
    VAR
      SalesLine@1000000002 : Record 37;
      SalesLine2@1000000001 : Record 37;
      DocLineNo@1000000000 : Integer;
    BEGIN
      //DM4.09>>
      DocLineNo := 0;
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type",RecSalesLine."Document Type");
      SalesLine.SETRANGE("Document No.",RecSalesLine."Document No.");
      SalesLine.SETRANGE("Dimension Set ID",RecSalesLine."Dimension Set ID");
      IF SalesLine.FINDFIRST THEN
        RecSalesLine."Document Line No." := SalesLine."Document Line No."
      ELSE BEGIN
        SalesLine2.RESET;
        SalesLine2.SETRANGE("Document Type",RecSalesLine."Document Type");
        SalesLine2.SETRANGE("Document No.",RecSalesLine."Document No.");
        SalesLine2.SETRANGE("Document Line No.",RecSalesLine."Line No.");
        SalesLine2.SETFILTER("Line No.",'<>%1',RecSalesLine."Line No.");
        IF NOT SalesLine2.FINDFIRST THEN
          RecSalesLine."Document Line No." := RecSalesLine."Line No."
        ELSE BEGIN
          SalesLine2.RESET;
          SalesLine2.SETRANGE("Document Type",RecSalesLine."Document Type");
          SalesLine2.SETRANGE("Document No.",RecSalesLine."Document No.");
          IF SalesLine2.FINDSET THEN REPEAT
           IF SalesLine2."Document Line No." > DocLineNo THEN
             DocLineNo := SalesLine2."Document Line No.";
          UNTIL SalesLine2.NEXT = 0;
          RecSalesLine."Document Line No." := DocLineNo + 10000;
        END;
      END;
      //DM4.09<<
    END;

    PROCEDURE SetPurchaseDocLineNoOnInsert@1000000010(VAR RecPurchaseLine@1000000002 : Record 39);
    VAR
      PurchaseLine@1000000001 : Record 39;
    BEGIN
      //DM4.09>>
      PurchaseLine.RESET;
      PurchaseLine.SETRANGE("Document Type",RecPurchaseLine."Document Type");
      PurchaseLine.SETRANGE("Document No.",RecPurchaseLine."Document No.");
      PurchaseLine.SETRANGE("Dimension Set ID",RecPurchaseLine."Dimension Set ID");
      PurchaseLine.SETRANGE("Gen. Prod. Posting Group",RecPurchaseLine."Gen. Prod. Posting Group");//VLDM4.12
      IF PurchaseLine.FINDFIRST THEN
        RecPurchaseLine."Document Line No." := PurchaseLine."Document Line No."
      ELSE
        RecPurchaseLine."Document Line No." := RecPurchaseLine."Line No.";
      //DM4.09<<
    END;

    PROCEDURE UpdatePurchaseDocLineNoOnDimChange@1000000011(VAR RecPurchaseLine@1000000003 : Record 39);
    VAR
      DocLineNo@1000000002 : Integer;
      PurchaseLine@1000000001 : Record 39;
      PurchaseLine2@1000000000 : Record 39;
    BEGIN
      //DM4.09>>
      DocLineNo := 0;
      PurchaseLine.RESET;
      PurchaseLine.SETRANGE("Document Type",RecPurchaseLine."Document Type");
      PurchaseLine.SETRANGE("Document No.",RecPurchaseLine."Document No.");
      PurchaseLine.SETRANGE("Dimension Set ID",RecPurchaseLine."Dimension Set ID");
      IF PurchaseLine.FINDFIRST THEN
        RecPurchaseLine."Document Line No." := PurchaseLine."Document Line No."
      ELSE BEGIN
        PurchaseLine2.RESET;
        PurchaseLine2.SETRANGE("Document Type",RecPurchaseLine."Document Type");
        PurchaseLine2.SETRANGE("Document No.",RecPurchaseLine."Document No.");
        PurchaseLine2.SETRANGE("Document Line No.",RecPurchaseLine."Line No.");
        PurchaseLine2.SETFILTER("Line No.",'<>%1',RecPurchaseLine."Line No.");
        IF NOT PurchaseLine2.FINDFIRST THEN
          RecPurchaseLine."Document Line No." := RecPurchaseLine."Line No."
        ELSE BEGIN
          PurchaseLine2.RESET;
          PurchaseLine2.SETRANGE("Document Type",RecPurchaseLine."Document Type");
          PurchaseLine2.SETRANGE("Document No.",RecPurchaseLine."Document No.");
          IF PurchaseLine2.FINDSET THEN REPEAT
           IF PurchaseLine2."Document Line No." > DocLineNo THEN
             DocLineNo := PurchaseLine2."Document Line No.";
          UNTIL PurchaseLine2.NEXT = 0;
          RecPurchaseLine."Document Line No." := DocLineNo + 10000;
        END;
      END;
      //DM4.09<<
    END;

    PROCEDURE SetTransferDocLineNoOnInsert@1000000014(VAR RecTransferLine@1000000000 : Record 5741);
    VAR
      TransferLine@1000000001 : Record 5741;
    BEGIN
      //DM4.10>>
      TransferLine.RESET;
      TransferLine.SETRANGE("Document No.",RecTransferLine."Document No.");
      TransferLine.SETRANGE("Dimension Set ID",RecTransferLine."Dimension Set ID");
      TransferLine.SETRANGE("Gen. Prod. Posting Group",RecTransferLine."Gen. Prod. Posting Group");//VLDM4.12
      IF TransferLine.FINDFIRST THEN
        RecTransferLine."Document Line No." := TransferLine."Document Line No."
      ELSE
        RecTransferLine."Document Line No." := RecTransferLine."Line No.";
      //DM4.10<<
    END;

    PROCEDURE UpdateTransferDocLineNoOnDimChange@1000000015(VAR RecTransferLine@1000000003 : Record 5741);
    VAR
      DocLineNo@1000000002 : Integer;
      TransferLine@1000000001 : Record 5741;
      TransferLine2@1000000000 : Record 5741;
    BEGIN
      //DM4.10>>
      DocLineNo := 0;
      TransferLine.RESET;
      TransferLine.SETRANGE("Document No.",RecTransferLine."Document No.");
      TransferLine.SETRANGE("Dimension Set ID",RecTransferLine."Dimension Set ID");
      IF TransferLine.FINDFIRST THEN
        RecTransferLine."Document Line No." := TransferLine."Document Line No."
      ELSE BEGIN
        TransferLine2.RESET;
        TransferLine2.SETRANGE("Document No.",RecTransferLine."Document No.");
        TransferLine2.SETRANGE("Document Line No.",RecTransferLine."Line No.");
        TransferLine2.SETFILTER("Line No.",'<>%1',RecTransferLine."Line No.");
        IF NOT TransferLine2.FINDFIRST THEN
          RecTransferLine."Document Line No." := RecTransferLine."Line No."
        ELSE BEGIN
          TransferLine2.RESET;
          TransferLine2.SETRANGE("Document No.",RecTransferLine."Document No.");
          IF TransferLine2.FINDSET THEN REPEAT
           IF TransferLine2."Document Line No." > DocLineNo THEN
             DocLineNo := TransferLine2."Document Line No.";
          UNTIL TransferLine2.NEXT = 0;
          RecTransferLine."Document Line No." := DocLineNo + 10000;
        END;
      END;
      //DM4.10<<
    END;

    LOCAL PROCEDURE GetNewDimSetID@1000000012(RecRef@1000000010 : RecordRef;DocNo@1000000004 : Code[20];LineNo@1000000007 : Integer;Dimension@1000000006 : Code[20];DimensionValue@1000000005 : Code[20]) : Integer;
    VAR
      LineRecRef@1000000003 : RecordRef;
      DimNo@1000000002 : Integer;
      LineTempDimSetEntry@1000000001 : TEMPORARY Record 480;
      LineTableID@1000000000 : Integer;
    BEGIN
      //DM4.09>>
      // Send this the Table ID, Doc. No. / Line No., new Dimension and Value
      DimNo := GlobalDimNo(Dimension);

      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSet(DimSetID, TempDimSetEntry);

      // If DimensionValue is blank then remove the Dimension
      IF DimensionValue = '' THEN BEGIN
        IF LineNo = 0 THEN
          IF TempDimSetEntry.GET(0, Dimension) THEN
            IF TempDimSetEntry.DELETE(TRUE) THEN;
      END ELSE BEGIN
      // Update for the posted doc header or could be for the line
        TempDimSetEntry.INIT;
        TempDimSetEntry.VALIDATE("Dimension Code", Dimension);
        TempDimSetEntry.VALIDATE("Dimension Value Code", DimensionValue);
        IF NOT TempDimSetEntry.INSERT(TRUE) THEN
          TempDimSetEntry.MODIFY(TRUE);
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      EXIT(NewDimSetID);
      //DM4.09<<
    END;

    PROCEDURE UpdateCopyDocSalesLineDocNos@1000000016(VAR RecSalesLine@1000000000 : Record 37);
    VAR
      SalesLine@1000000001 : Record 37;
    BEGIN
      //DM4.10>>
      SalesLine.RESET;
      SalesLine.SETRANGE("Document Type",RecSalesLine."Document Type");
      SalesLine.SETRANGE("Document No.",RecSalesLine."Document No.");
      SalesLine.SETFILTER("Line No.",'<>%1',RecSalesLine."Line No.");
      SalesLine.SETRANGE("Dimension Set ID",RecSalesLine."Dimension Set ID");
      IF SalesLine.FINDFIRST THEN
        RecSalesLine."Document Line No." := SalesLine."Document Line No."
      ELSE
        RecSalesLine."Document Line No." := RecSalesLine."Line No.";
      RecSalesLine.MODIFY;
      //DM4.10<<
    END;

    PROCEDURE UpdateCopyDocPurchLineDocNos@1000000017(VAR RecPurchaseLine@1000000000 : Record 39);
    VAR
      PurchaseLine@1000000001 : Record 39;
    BEGIN
      //DM4.10>>
      PurchaseLine.RESET;
      PurchaseLine.SETRANGE("Document Type",RecPurchaseLine."Document Type");
      PurchaseLine.SETRANGE("Document No.",RecPurchaseLine."Document No.");
      PurchaseLine.SETFILTER("Line No.",'<>%1',RecPurchaseLine."Line No.");
      PurchaseLine.SETRANGE("Dimension Set ID",RecPurchaseLine."Dimension Set ID");
      IF PurchaseLine.FINDFIRST THEN
        RecPurchaseLine."Document Line No." := PurchaseLine."Document Line No."
      ELSE
        RecPurchaseLine."Document Line No." := RecPurchaseLine."Line No.";
      RecPurchaseLine.MODIFY;
      //DM4.10<<
    END;

    PROCEDURE SetServiceDocLineNoOnInsert@1000000019(VAR RecServiceLine@1000000001 : Record 5902);
    VAR
      ServiceLine@1000000000 : Record 5902;
    BEGIN
      //DM4.09>>
      ServiceLine.RESET;
      ServiceLine.SETRANGE("Document Type",RecServiceLine."Document Type");
      ServiceLine.SETRANGE("Document No.",RecServiceLine."Document No.");
      ServiceLine.SETRANGE("Dimension Set ID",RecServiceLine."Dimension Set ID");
      ServiceLine.SETRANGE("Gen. Prod. Posting Group",RecServiceLine."Gen. Prod. Posting Group");//VLDM4.12
      IF ServiceLine.FINDFIRST THEN
        RecServiceLine."Document Line No." := ServiceLine."Document Line No."
      ELSE
        RecServiceLine."Document Line No." := RecServiceLine."Line No.";
      //DM4.09<<
    END;

    PROCEDURE UpdateServiceDocLineNoOnDimChange@1000000018(VAR RecServiceLine@1000000003 : Record 5902);
    VAR
      ServiceLine@1000000002 : Record 5902;
      ServiceLine2@1000000001 : Record 5902;
      DocLineNo@1000000000 : Integer;
    BEGIN
      //DM4.09>>
      DocLineNo := 0;
      ServiceLine.RESET;
      ServiceLine.SETRANGE("Document Type",RecServiceLine."Document Type");
      ServiceLine.SETRANGE("Document No.",RecServiceLine."Document No.");
      ServiceLine.SETRANGE("Dimension Set ID",RecServiceLine."Dimension Set ID");
      IF ServiceLine.FINDFIRST THEN
        RecServiceLine."Document Line No." := ServiceLine."Document Line No."
      ELSE BEGIN
        ServiceLine2.RESET;
        ServiceLine2.SETRANGE("Document Type",RecServiceLine."Document Type");
        ServiceLine2.SETRANGE("Document No.",RecServiceLine."Document No.");
        ServiceLine2.SETRANGE("Document Line No.",RecServiceLine."Line No.");
        ServiceLine2.SETFILTER("Line No.",'<>%1',RecServiceLine."Line No.");
        IF NOT ServiceLine2.FINDFIRST THEN
          RecServiceLine."Document Line No." := RecServiceLine."Line No."
        ELSE BEGIN
          ServiceLine2.RESET;
          ServiceLine2.SETRANGE("Document Type",RecServiceLine."Document Type");
          ServiceLine2.SETRANGE("Document No.",RecServiceLine."Document No.");
          IF ServiceLine2.FINDSET THEN REPEAT
           IF ServiceLine2."Document Line No." > DocLineNo THEN
             DocLineNo := ServiceLine2."Document Line No.";
          UNTIL ServiceLine2.NEXT = 0;
          RecServiceLine."Document Line No." := DocLineNo + 10000;
        END;
      END;
      //DM4.09<<
    END;

    PROCEDURE SetServiceItmDocLineNoOnInsert@1000000022(VAR RecServiceLine@1000000001 : Record 5901);
    VAR
      ServiceLine@1000000000 : Record 5901;
    BEGIN
      //DM4.09>>
      ServiceLine.RESET;
      ServiceLine.SETRANGE("Document Type",RecServiceLine."Document Type");
      ServiceLine.SETRANGE("Document No.",RecServiceLine."Document No.");
      ServiceLine.SETRANGE("Dimension Set ID",RecServiceLine."Dimension Set ID");
      ServiceLine.SETRANGE("Item No.",RecServiceLine."Item No.");
      IF ServiceLine.FINDFIRST THEN
        RecServiceLine."Document Line No." := ServiceLine."Document Line No."
      ELSE
        RecServiceLine."Document Line No." := RecServiceLine."Line No.";
      //DM4.09<<
    END;

    PROCEDURE UpdateServiceItmDocLineNoOnDimChange@1000000021(VAR RecServiceLine@1000000003 : Record 5901);
    VAR
      ServiceLine@1000000002 : Record 5901;
      ServiceLine2@1000000001 : Record 5901;
      DocLineNo@1000000000 : Integer;
    BEGIN
      //DM4.09>>
      DocLineNo := 0;
      ServiceLine.RESET;
      ServiceLine.SETRANGE("Document Type",RecServiceLine."Document Type");
      ServiceLine.SETRANGE("Document No.",RecServiceLine."Document No.");
      ServiceLine.SETRANGE("Dimension Set ID",RecServiceLine."Dimension Set ID");
      IF ServiceLine.FINDFIRST THEN
        RecServiceLine."Document Line No." := ServiceLine."Document Line No."
      ELSE BEGIN
        ServiceLine2.RESET;
        ServiceLine2.SETRANGE("Document Type",RecServiceLine."Document Type");
        ServiceLine2.SETRANGE("Document No.",RecServiceLine."Document No.");
        ServiceLine2.SETRANGE("Document Line No.",RecServiceLine."Line No.");
        ServiceLine2.SETFILTER("Line No.",'<>%1',RecServiceLine."Line No.");
        IF NOT ServiceLine2.FINDFIRST THEN
          RecServiceLine."Document Line No." := RecServiceLine."Line No."
        ELSE BEGIN
          ServiceLine2.RESET;
          ServiceLine2.SETRANGE("Document Type",RecServiceLine."Document Type");
          ServiceLine2.SETRANGE("Document No.",RecServiceLine."Document No.");
          IF ServiceLine2.FINDSET THEN REPEAT
           IF ServiceLine2."Document Line No." > DocLineNo THEN
             DocLineNo := ServiceLine2."Document Line No.";
          UNTIL ServiceLine2.NEXT = 0;
          RecServiceLine."Document Line No." := DocLineNo + 10000;
        END;
      END;
      //DM4.09<<
    END;

    PROCEDURE ChangeSourceDimforMasters@1000000020(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;"No."@1000000003 : Code[20];StartDate@1000000015 : Date;EndDate@1000000016 : Date;Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20]);
    VAR
      T17@1000000028 : Record 17;
      GLEntry@1000000021 : Record 17;
      T21@1000000029 : Record 21;
      T25@1000000027 : Record 25;
      T37@1000000042 : Record 37;
      T39@1000000043 : Record 39;
      T32@1000000026 : Record 32;
      T120@1000000033 : Record 120;
      T122@1000000034 : Record 122;
      T169@1000000020 : Record 169;
      T271@1000000019 : Record 271;
      T5601@1000000018 : Record 5601;
      T5625@1000000030 : Record 5625;
      T5629@1000000031 : Record 5629;
      T5802@1000000025 : Record 5802;
      T272@1000000052 : Record 272;
      T5907@1000000051 : Record 5907;
      GLItemLedgerRel@1000000022 : Record 5823;
      DefDim@1000000004 : Record 352;
      RecRef2@1000000024 : RecordRef;
      RecRef3@1000000023 : RecordRef;
      RecRef32@1000000014 : RecordRef;
      RecRef5802@1000000017 : RecordRef;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      DimNo@1000000005 : Integer;
      FoundGlobal@1000000009 : Boolean;
      "---CAN---"@1000 : Integer;
      TableArray@1003 : ARRAY [8] OF Integer;
      T110@1001 : Record 110;
      T112@1002 : Record 112;
      T114@1005 : Record 114;
      j@1004 : Integer;
      T124@1006 : Record 124;
      T203@1000000032 : Record 203;
      TableArray2@1000000035 : ARRAY [14] OF Integer;
      T111@1000000036 : Record 111;
      T113@1000000037 : Record 113;
      T115@1000000038 : Record 115;
      T121@1000000039 : Record 121;
      T123@1000000040 : Record 123;
      T125@1000000041 : Record 125;
      T900@1000000044 : Record 900;
      T901@1000000045 : Record 901;
      T910@1000000046 : Record 910;
      T911@1000000047 : Record 911;
      "-------"@1000000048 : Integer;
      T36@1000000049 : Record 36;
      T38@1000000050 : Record 38;
      T5991@1000000053 : Record 5991;
      T5993@1000000054 : Record 5993;
    BEGIN
      // Store Dimension History
      ClearDimHistoryVar;
      IF DefDim.GET(TableID, "No.", Dimension) THEN BEGIN
        OldDimCode := DefDim."Dimension Code";
        OldDimValue := DefDim."Dimension Value Code";
      END;

      DimNo := GlobalDimNo(Dimension);


      TableNo := DATABASE::"Default Dimension";
      SourceTableNo := TableID;
      SourceNo := "No.";
      //WriteDimMgtHistoryLine(0, 0); //Subhash
      GetDMSetup;

      CASE TableID OF
        15 :                                               // GL Account
          BEGIN
            T17.SETRANGE("G/L Account No.", "No.");        // GL Entry Table
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            GLItemLedgerRel.SETCURRENTKEY("G/L Entry No.");
            T5802.SETCURRENTKEY("Entry No.");
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                GLItemLedgerRel.SETRANGE("G/L Entry No.", T17."Entry No.");
                IF GLItemLedgerRel.FINDSET THEN
                  REPEAT
                    T5802.SETRANGE("Entry No.", GLItemLedgerRel."Value Entry No.");
                    IF T5802.FINDSET THEN
                      REPEAT
                        RecRef5802.GETTABLE(T5802);
                        ChangeLedgerEntryDim(
                          RecRef5802, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension,
                          DimensionValue);
                        RecRef5802.CLOSE;
                        T32.SETRANGE("Entry No.", T5802."Item Ledger Entry No.");
                        IF T32.FINDFIRST THEN
                          REPEAT
                            RecRef3.GETTABLE(T32);
                            ChangeLedgerEntryDim(
                              RecRef3, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."),
                              Dimension, DimensionValue);
                          UNTIL T32.NEXT = 0;
                      UNTIL T5802.NEXT = 0;
                  UNTIL GLItemLedgerRel.NEXT = 0;
              UNTIL T17.NEXT = 0;
          END;
        18 :                                               // Customer
          BEGIN
            T21.SETCURRENTKEY("Customer No.");
            T21.SETRANGE("Customer No.", "No.");           // Cust. Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T21.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T21.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T21.SETRANGE("Posting Date");
            END;

            IF T21.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T21);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Cust. Ledger Entry", FORMAT(T21."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T21.NEXT = 0;

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::Customer);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;



      //>>VLDM4.11

            T5802.RESET;                                     // Value entries
            T5802.SETRANGE("Source Type", T5802."Source Type"::Customer);
            T5802.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension, DimensionValue);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11
      //VLDM4.13++
      // Bank Entries
            T271.RESET;                                     // Bank Entries
            T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Customer);
            T271.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension, DimensionValue);
              UNTIL T271.NEXT = 0;
      //Check Entries
            T272.RESET;                                     // Check Entries
            T272.SETRANGE("Bal. Account Type", T272."Bal. Account Type"::Customer);
            T272.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T272.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T272.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T272.SETRANGE("Posting Date");
            END;
            IF T272.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T272);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Check Ledger Entry", FORMAT(T272."Entry No."), Dimension, DimensionValue);
              UNTIL T272.NEXT = 0;

      //Service Entries
            T5907.RESET;                                     // Service Entries
            T5907.SETRANGE("Customer No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5907.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5907.SETRANGE("Posting Date");
            END;
            IF T5907.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5907);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), Dimension, DimensionValue);
              UNTIL T5907.NEXT = 0;
      //VLDM4.13--

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 110;
              TableArray[2] := 112;
              TableArray[3] := 114;
              TableArray[4] := 36;

              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  110:
                  BEGIN
                      T110.SETCURRENTKEY("Sell-to Customer No.");//CAN_MY
                      T110.SETRANGE("Sell-to Customer No.", "No.");
                      IF T110.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T110);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T110."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T110.NEXT = 0;
                 END;
                  112:
                  BEGIN
                      T112.SETCURRENTKEY("Sell-to Customer No.");//CAN_MY
                      T112.SETRANGE("Sell-to Customer No.", "No.");
                      IF T112.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T112);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T112."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10p
                      UNTIL T112.NEXT = 0;
                  END;
                  114:
                  BEGIN
                      T114.SETCURRENTKEY("Sell-to Customer No.");//CAN_MY
                      T114.SETRANGE("Sell-to Customer No.", "No.");
                      IF T114.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T114);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T114."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T114.NEXT = 0;
                  END;
                  36:
                  BEGIN
                      T36.SETCURRENTKEY("Sell-to Customer No.");//CAN_MY
                      T36.SETRANGE("Sell-to Customer No.", "No.");
                      IF T36.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T36);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T36."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T36.NEXT = 0;
                  END;

                END;
               END;

              //DM4.07 <<
          END;
        23 :                                               // Vendors
          BEGIN
            T25.SETCURRENTKEY("Vendor No.");
            T25.SETRANGE("Vendor No.", "No.");             // Vendor Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T25.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T25.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T25.SETRANGE("Posting Date");
            END;

            IF T25.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T25);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Vendor Ledger Entry", FORMAT(T25."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T25.NEXT = 0;

      //>>VLDM4.11
            T5802.RESET;                                     // Value entries
            T5802.SETRANGE("Source Type", T5802."Source Type"::Vendor);
            T5802.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension, DimensionValue);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::Vendor);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;
      //VLDM4.13++
            T271.RESET;                                     // Bank Entries
            T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Vendor);
            T271.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension, DimensionValue);
              UNTIL T271.NEXT = 0;
      //Check Entries
            T272.RESET;                                     // Check Entries
            T272.SETRANGE("Bal. Account Type", T272."Bal. Account Type"::Vendor);
            T272.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T272.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T272.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T272.SETRANGE("Posting Date");
            END;
            IF T272.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T272);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Check Ledger Entry", FORMAT(T272."Entry No."), Dimension, DimensionValue);
              UNTIL T272.NEXT = 0;
      //VLDM4.13--

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 120;
              TableArray[2] := 122;
              TableArray[3] := 124;
              TableArray[4] := 38;
              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  120:
                  BEGIN
                      T120.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T120.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T120.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T120);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T120."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T120.NEXT = 0;
                  END;
                  122:
                  BEGIN
                      T122.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T122.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T122.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T122);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T122."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T122.NEXT = 0;
                  END;
                  124:
                  BEGIN
                      T124.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T124.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T124.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T124);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T124."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T124.NEXT = 0;
                  END;
                  38:
                  BEGIN
                      T38.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T38.SETRANGE("Buy-from Vendor No.", "No.");
                      IF T38.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T38);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T38."No.", 0, Dimension, DimensionValue, FALSE); //DM4.10
                      UNTIL T38.NEXT = 0;
                  END;
                END;
               END;
              //DM4.07 <<
          END;
        27 :                                               // Items
          BEGIN
            T32.SETCURRENTKEY("Item No.", "Posting Date"); // Item Ledger Entry
            T32.SETRANGE("Item No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T32.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T32.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T32.SETRANGE("Posting Date");
            END;
            IF T32.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T32);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T32.NEXT = 0;
            GLItemLedgerRel.SETCURRENTKEY("Value Entry No.");
            GLEntry.SETCURRENTKEY("Entry No.");

            T5802.SETCURRENTKEY(
              "Item No.", "Valuation Date", "Location Code", "Variant Code", "Drop Shipment");
            T5802.SETRANGE("Item No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Valuation Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Valuation Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Valuation Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef5802.GETTABLE(T5802);
                ChangeLedgerEntryDim(
                  RecRef5802, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), Dimension,
                  DimensionValue);
                GLItemLedgerRel.SETRANGE("Value Entry No.", T5802."Entry No.");
                IF GLItemLedgerRel.FINDSET THEN
                  REPEAT
                    GLEntry.SETRANGE("Entry No.", GLItemLedgerRel."G/L Entry No.");
                    IF GLEntry.FINDSET THEN
                      REPEAT
                        RecRef3.GETTABLE(GLEntry);
                        ChangeLedgerEntryDim(
                          RecRef3, DATABASE::"G/L Entry", FORMAT(GLEntry."Entry No."), Dimension,
                          DimensionValue);
                      UNTIL GLEntry.NEXT = 0;
                  UNTIL GLItemLedgerRel.NEXT = 0;
              UNTIL T5802.NEXT = 0;

      //Service Entries
            T5907.RESET;
            T5907.SETRANGE("No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5907.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5907.SETRANGE("Posting Date");
            END;
            IF T5907.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5907);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), Dimension, DimensionValue);
              UNTIL T5907.NEXT = 0;
      //VLDM4.13--
      //CAN_MY

      //***********CAN_DS*********
      //DM HF1.00
              TableArray2[1]  := 111;
              TableArray2[2]  := 113;
              TableArray2[3]  := 115;
              TableArray2[4]  := 121;
              TableArray2[5]  := 123;
              TableArray2[6]  := 125;
              TableArray2[7]  := 37;
              TableArray2[8]  := 39;
              //Added Assembly Orders
              TableArray2[9]  := 900;
              TableArray2[10] := 901;
              TableArray2[11] := 910;
              TableArray2[12] := 911;
              //Posted Service Entries
              TableArray2[13] := 5991;
              TableArray2[14] := 5993;

      //Sales
              FOR j := 1 TO ARRAYLEN(TableArray2) DO BEGIN
                CASE TableArray2[j] OF
                  37:
                  BEGIN
                      T37.SETCURRENTKEY("No.");//Subhash
                      T37.SETRANGE("No.", "No.");
                      IF T37.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T37);
                        LoopPrePostedDocLineDim(37, T37."Document No.", Dimension, DimensionValue, DimNo, T37."No.",'');
                        //ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T37."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T37.NEXT = 0;
                 END;
                  111:
                  BEGIN
                      T111.SETCURRENTKEY("No.");//Subhash
                      T111.SETRANGE("No.", "No.");
                      IF T111.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T111);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T111."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T111.NEXT = 0;
                 END;
                  113:
                  BEGIN
                      T113.SETCURRENTKEY("No.");//Subhash
                      T113.SETRANGE("No.", "No.");
                      IF T113.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T113);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T113."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T113.NEXT = 0;
                  END;
                  115:
                  BEGIN
                      T115.SETCURRENTKEY("No.");//Subhash
                      T115.SETRANGE("No.", "No.");
                      IF T115.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T115);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T115."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T115.NEXT = 0;
                  END;
      //Purchase
                  121:
                  BEGIN
                      T121.SETCURRENTKEY("No.");//Subhash
                      T121.SETRANGE("No.", "No.");
                      IF T121.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T121);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T121."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T121.NEXT = 0;
                  END;
                  123:
                  BEGIN
                      T123.SETCURRENTKEY("No.");//Subhash
                      T123.SETRANGE("No.", "No.");
                      IF T123.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T123);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T123."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T123.NEXT = 0;
                  END;
                  125:
                  BEGIN
                      T125.SETCURRENTKEY("No.");//Subhash
                      T125.SETRANGE("No.", "No.");
                      IF T125.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T125);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T125."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T125.NEXT = 0;
                  END;

                  39:
                  BEGIN
                     T39.SETCURRENTKEY("No.");//Subhash
                      T39.SETRANGE("No.", "No.");
                      IF T39.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T39);
                        LoopPrePostedDocLineDim(39, T39."Document No.", Dimension, DimensionValue, DimNo, T39."No.",'');
                        //ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T39."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T39.NEXT = 0;
                 END;

      //Purchase End
      //Assembly
                  900:
                  BEGIN
                      T900.SETCURRENTKEY("Item No.");
                      T900.SETRANGE("Item No.", "No.");
                      IF T900.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T900);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T900."Item No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T900.NEXT = 0;
                  END;
                  901:
                  BEGIN
                      T901.SETCURRENTKEY("No.");//CAN_MY
                      T901.SETRANGE("No.", "No.");
                      IF T901.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T901);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T901."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T901.NEXT = 0;
                  END;
                  910:
                  BEGIN
                      T910.SETCURRENTKEY("Item No.");//CAN_MY
                      T910.SETRANGE("Item No.", "No.");
                      IF T910.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T910);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T910."Item No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T910.NEXT = 0;
                 END;
                  911:
                  BEGIN
                      T911.SETCURRENTKEY("No.");//CAN_MY
                      T911.SETRANGE("No.", "No.");
                      IF T911.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T911);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER,T911."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T911.NEXT = 0;
                 END;
      //Service
                  5991:
                  BEGIN
                     T5991.SETCURRENTKEY("No.");//Subhash
                      T5991.SETRANGE("No.", "No.");
                      IF T5991.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T5991);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T5991."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T5991.NEXT = 0;
                  END;
                  5993:
                  BEGIN
                      T5993.SETCURRENTKEY("No.");//CAN_MY
                      T5993.SETRANGE("No.", "No.");
                      IF T5993.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T5993);
                        ChangeAllPostedDocDim(RecRef, RecRef.NUMBER, T5993."No.", 0, Dimension, DimensionValue, FALSE);
                      UNTIL T5993.NEXT = 0;
                  END;


                END;
               END;
              //DM4.07 <<
      //***********
          END;
        156 :                         //Resource
          BEGIN
            //DM4.10>>
            T203.SETRANGE("Resource No.","No.");
            IF StartDate <> 0D THEN BEGIN
              T203.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T203.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T203.SETRANGE("Posting Date");
            END;
            IF T203.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T203);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Res. Ledger Entry", FORMAT(T203."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T203.NEXT = 0;
            //DM4.10<<
          END;
        167 :                                              // Jobs
          BEGIN
            T169.SETCURRENTKEY("Job No.");//CAN_MY
            T169.SETRANGE("Job No.", "No.");               // Job Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T169.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T169.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T169.SETRANGE("Posting Date");
            END;
            IF T169.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T169);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Job Ledger Entry", FORMAT(T169."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T169.NEXT = 0;

          END;
        270 :                                              // Bank Accounts
          BEGIN
            T271.SETCURRENTKEY("Bal. Account No.");
            T271.SETRANGE("Bank Account No.", "No.");      // Bank Account Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T271.NEXT = 0;

            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::"Bank Account");
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            IF T17.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T17);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
              UNTIL T17.NEXT = 0;

          END;
        5600 :                                             // Fixed Assets
          BEGIN
            T5601.SETCURRENTKEY("FA No.");
            T5601.SETRANGE("FA No.", "No.");               // Fixed Asset Ledger Entry Table
            IF StartDate <> 0D THEN BEGIN
              T5601.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5601.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5601.SETRANGE("Posting Date");
            END;
            IF T5601.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5601);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"FA Ledger Entry", FORMAT(T5601."Entry No."), Dimension,
                  DimensionValue);

                CASE T5601."Document Type" OF
                  T5601."Document Type"::Invoice:
                    BEGIN
                      // Purchase invoice line
                      SourceNo := T5601."Document No.";
                      LoopPostedDocLine(
                        122, T5601."Document No.", Dimension, DimensionValue, DimNo, "No.");
                      IF T122.GET(T5601."Document No.") THEN BEGIN
                        T120.SETRANGE("Order No.", T122."Order No.");
                        IF T120.FINDSET THEN
                          REPEAT
                            // Purchase Shipment Line
                            SourceNo := T120."No.";
                            LoopPostedDocLine(
                              120, T120."No.", Dimension, DimensionValue, DimNo, "No.");
                          UNTIL T120.NEXT = 0;
                      END;
                    END;
                  T5601."Document Type"::"Credit Memo":
                    BEGIN
                      // Purchase Shipment Line
                      LoopPostedDocLine(
                        124, T5601."Document No.", Dimension, DimensionValue, DimNo, "No.");
                      // Purchase invoice line
                    END;
                END;
                // Acquisition Cost,Depreciation,Write-Down,
                // Appreciation,Custom 1,Custom 2,Proceeds on Disposal,
                // Salvage Value,Gain/Loss,Book Value on Disposal
                IF T5601."FA Posting Type" = T5601."FA Posting Type"::"Acquisition Cost" THEN BEGIN
                  T17.SETRANGE("Entry No.", T5601."G/L Entry No.");
                END ELSE BEGIN
                  T17.SETRANGE("Document No.", T5601."Document No.");
                  T17.SETRANGE("Posting Date", T5601."Posting Date");
                END;
                IF T17.FINDSET THEN
                  REPEAT
                    RecRef.GETTABLE(T17);
                    ChangeLedgerEntryDim(
                    RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                  UNTIL T17.NEXT = 0;
              UNTIL T5601.NEXT = 0;

            T5625.RESET;                                     // Maintenance Ledger Entries
            T5625.SETRANGE("FA No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5625.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5625.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5625.SETRANGE("Posting Date");
            END;
            IF T5625.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5625);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Maintenance Ledger Entry", FORMAT(T5625."Entry No."), Dimension,
                  DimensionValue);
                IF T17.GET(T5625."G/L Entry No.") THEN BEGIN
                  RecRef.GETTABLE(T17);
                  ChangeLedgerEntryDim(
                    RecRef, DATABASE::"G/L Entry", FORMAT(T17."Entry No."), Dimension, DimensionValue);
                END;
              UNTIL T5625.NEXT = 0;

            T5629.SETRANGE("FA No.", "No.");               // Ins. Coverage Entry Table
            IF StartDate <> 0D THEN BEGIN
              T5629.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5629.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5629.SETRANGE("Posting Date");
            END;
            IF T5629.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5629);
                ChangeLedgerEntryDim(
                  RecRef, DATABASE::"Ins. Coverage Ledger Entry", FORMAT(T5629."Entry No."), Dimension,
                  DimensionValue);
              UNTIL T5629.NEXT = 0;

          END;
      END;
    END;

    PROCEDURE LoopPrePostedDocLineDim@1000000023(TableID@1000000006 : Integer;DocNo@1000000005 : Code[20];Dimension@1000000004 : Code[20];DimensionValue@1000000003 : Code[20];DimNo@1000000002 : Integer;NoFilter@1000000001 : Code[20];SD1@1000000000 : Code[20]);
    VAR
      T37@1000000008 : Record 37;
      T39@1000000009 : Record 39;
      LineRecRef@1000000007 : RecordRef;
    BEGIN
      OldDimCode := '';
      OldDimValue := '';

      CASE TableID OF
        37:
          BEGIN
            T37.SETCURRENTKEY("Document No.");//CAN_MY
            T37.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T37.SETRANGE("No.", NoFilter);
            IF T37.FINDSET THEN
              REPEAT
                SourceLineNo := T37."Line No.";
                LineRecRef.GETTABLE(T37);
                ChangePrePostedDocLineDim(LineRecRef, 37, DimNo);
              UNTIL T37.NEXT = 0;
          END;
        39:
          BEGIN
            T39.SETCURRENTKEY("Document No.");//CAN_MY
            T39.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T39.SETRANGE("No.", NoFilter);
            IF T39.FINDSET THEN
              REPEAT
                SourceLineNo := T39."Line No.";
                LineRecRef.GETTABLE(T39);
                ChangePrePostedDocLineDim(LineRecRef, 39, DimNo);
              UNTIL T39.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE ChangePrePostedDocLineDim@1000000030(RecRef@1000000001 : RecordRef;TableID@1000000003 : Integer;DimNo@1000000002 : Integer);
    VAR
      LineDimSetID@1000000004 : Integer;
      lineTempDimSetEntry@1000000000 : TEMPORARY Record 480;
      FieldRef@1000 : FieldRef;
    BEGIN
      // get dim set ID
      lineTempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      LineDimSetID := FldRef.VALUE;
      FilterDimSet(LineDimSetID, lineTempDimSetEntry);

      IF lineTempDimSetEntry.GET(0, NewDimCode) THEN
        OldDimValue := lineTempDimSetEntry."Dimension Value Code";
      IF OldDimCode = '' THEN
        OldDimCode := NewDimCode;

      IF NewDimValue <> '' THEN BEGIN
        lineTempDimSetEntry.INIT;
        lineTempDimSetEntry.VALIDATE("Dimension Code", NewDimCode);
        lineTempDimSetEntry.VALIDATE("Dimension Value Code", NewDimValue);
        IF NOT lineTempDimSetEntry.INSERT(TRUE) THEN
          lineTempDimSetEntry.MODIFY(TRUE);
      END ELSE BEGIN
        IF lineTempDimSetEntry.GET(0, NewDimCode) THEN
          lineTempDimSetEntry.DELETEALL;
      END;

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(lineTempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      SourceTableNo := TableID;
      TableNo := DATABASE::"Dimension Set Entry";

      IF DimNo = 0 THEN
        WriteDimMgtHistoryLine(LineDimSetID, NewDimSetID)
      ELSE BEGIN
        SourceTableNo := 0;
        TableNo := TableID;
      END;
    END;

    LOCAL PROCEDURE "--SW CAN Optimization--"@1000000028();
    BEGIN
    END;

    PROCEDURE FilterDimSetSW@1000000036(FilterDimSetID@1000000000 : Integer;VAR BuildTempDimSetEntry@1000000001 : Record 480;DimArrayWithFields@1000000002 : ARRAY [20,3] OF Code[20]);
    VAR
      i@1000000003 : Integer;
    BEGIN
      FOR i := 1 TO 20 DO BEGIN
        IF DimArrayWithFields[i,1] <> '' THEN BEGIN
          BuildTempDimSetEntry.INIT;
          BuildTempDimSetEntry."Dimension Code" := DimArrayWithFields[i,1];
          BuildTempDimSetEntry."Dimension Value Code" := DimArrayWithFields[i,2];
          BuildTempDimSetEntry.INSERT(TRUE);
        END;
      END;
      DimSetEntry.RESET;
      DimSetEntry.SETRANGE("Dimension Set ID", FilterDimSetID);
      IF DimSetEntry.FINDSET THEN
        REPEAT
          BuildTempDimSetEntry.INIT;
          BuildTempDimSetEntry."Dimension Code" := DimSetEntry."Dimension Code";
          BuildTempDimSetEntry."Dimension Value Code" := DimSetEntry."Dimension Value Code";
          IF NOT BuildTempDimSetEntry.FIND THEN
            BuildTempDimSetEntry.INSERT(TRUE);
        UNTIL DimSetEntry.NEXT = 0
    END;

    LOCAL PROCEDURE BuildDimArrayWithFields@1000000035(DimArray@1000000000 : ARRAY [20,3] OF Code[20];VAR DimArrayWithFields@1000000001 : ARRAY [20,3] OF Code[20];TableID@1000000002 : Integer;Detailed@1000000007 : Boolean);
    VAR
      i@1000000003 : Integer;
      x@1000000004 : Integer;
      SourceRec@1000000011 : RecordRef;
      SourceField@1000000010 : FieldRef;
      FieldName@1000000009 : Text[100];
      TotalFields@1000000008 : Integer;
      FieldCount@1000000006 : Integer;
      FoundDim@1000000005 : Boolean;
    BEGIN
      //VLDM4.15 CAN_MY ++
      SourceRec.OPEN(TableID);
      FOR x := 1 TO 20 DO BEGIN
        DimArrayWithFields[x,3] := '0';
        IF Detailed THEN BEGIN
          FieldName := 'Initial Entry Global Dim. ' + FORMAT(x);
        END ELSE BEGIN
          IF TableID IN [36,37,110,111,112,113,114,115,120,121,122,123,124,125,38,39,900,901,910,911,5991,5993] THEN BEGIN
            //CAN_MY Added following Table ids[120,121,122,123,124,125,38,39,900,901,910,911,5991,5993]
            FieldName := 'Shortcut Dimension ' + FORMAT(x) + ' Code';
          END ELSE BEGIN
            IF x < 3 THEN
              FieldName := 'Global Dimension ' + FORMAT(x) + ' Code'
            ELSE
              FieldName := 'Shortcut Dimension ' + FORMAT(x) + ' Code';
          END;
        END;

        TotalFields := SourceRec.FIELDCOUNT;
        FoundDim := FALSE;
        i := 0;
        DimArrayWithFields[x,1] := DimArray[x,1];
        DimArrayWithFields[x,2] := DimArray[x,2];
        IF (x < 9) AND (DimArray[x,1] <> '') THEN REPEAT
          SourceField := SourceRec.FIELDINDEX(i);
          IF SourceField.NAME = FieldName THEN BEGIN
            DimArrayWithFields[x,3] := FORMAT(i);
            FoundDim := TRUE;
          END;
          i += 1;
        UNTIL (i >= TotalFields) OR (FoundDim);
      END;
      SourceRec.CLOSE;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangeSourceDimforMastersSW@1000000029(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;"No."@1000000003 : Code[20];StartDate@1000000015 : Date;EndDate@1000000016 : Date;Dimension@1000000001 : Code[20];DimensionValue@1000000002 : Code[20];DimArray@1000000055 : ARRAY [20,3] OF Code[20]);
    VAR
      T17@1000000028 : Record 17;
      GLEntry@1000000021 : Record 17;
      T21@1000000029 : Record 21;
      T25@1000000027 : Record 25;
      T37@1000000042 : Record 37;
      T39@1000000043 : Record 39;
      T32@1000000026 : Record 32;
      T120@1000000033 : Record 120;
      T122@1000000034 : Record 122;
      T169@1000000020 : Record 169;
      T271@1000000019 : Record 271;
      T5601@1000000018 : Record 5601;
      T5625@1000000030 : Record 5625;
      T5629@1000000031 : Record 5629;
      T5802@1000000025 : Record 5802;
      T272@1000000052 : Record 272;
      T5907@1000000051 : Record 5907;
      GLItemLedgerRel@1000000022 : Record 5823;
      DefDim@1000000004 : Record 352;
      RecRef2@1000000024 : RecordRef;
      RecRef3@1000000023 : RecordRef;
      RecRef32@1000000014 : RecordRef;
      RecRef5802@1000000017 : RecordRef;
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      FieldName@1000000012 : Text[100];
      TotalFields@1000000011 : Integer;
      i@1000000010 : Integer;
      FieldCount@1000000008 : Integer;
      DimNo@1000000005 : Integer;
      FoundGlobal@1000000009 : Boolean;
      "---CAN---"@1000 : Integer;
      TableArray@1003 : ARRAY [8] OF Integer;
      T110@1001 : Record 110;
      T112@1002 : Record 112;
      T114@1005 : Record 114;
      j@1004 : Integer;
      T124@1006 : Record 124;
      T203@1000000032 : Record 203;
      TableArray2@1000000035 : ARRAY [14] OF Integer;
      T111@1000000036 : Record 111;
      T113@1000000037 : Record 113;
      T115@1000000038 : Record 115;
      T121@1000000039 : Record 121;
      T123@1000000040 : Record 123;
      T125@1000000041 : Record 125;
      T900@1000000044 : Record 900;
      T901@1000000045 : Record 901;
      T910@1000000046 : Record 910;
      T911@1000000047 : Record 911;
      "-------"@1000000048 : Integer;
      T36@1000000049 : Record 36;
      T38@1000000050 : Record 38;
      T5991@1000000053 : Record 5991;
      T5993@1000000054 : Record 5993;
      "--SW Locals--"@1000000056 : Integer;
      DimArrayWithFields@1000000057 : ARRAY [20,3] OF Code[20];
      LineDimArrayWithFields@1000000058 : ARRAY [20,3] OF Code[20];
    BEGIN
      //VLDM4.15 CAN_MY ++
      TableNo := DATABASE::"Default Dimension";
      SourceTableNo := TableID;
      SourceNo := "No.";
      WriteDimMgtHistoryLine(0, 0);
      GetDMSetup;

      //For Customer
      CASE TableID OF
        18 :                                               //Customer
          BEGIN
            RecRef.GETTABLE(T21);
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,21,FALSE);//CAN_MY>><<
            BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,379,TRUE);//CAN_MY>><<
            T21.SETCURRENTKEY("Customer No.","Posting Date");
            T21.SETRANGE("Customer No.", "No.");           //Cust. Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T21.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T21.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T21.SETRANGE("Posting Date");
            END;

            IF T21.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T21);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Cust. Ledger Entry", FORMAT(T21."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T21.NEXT = 0;

            BuildDimArrayWithFields(DimArray,DimArrayWithFields,17,FALSE);//CAN_MY>><<

            T17.RESET;                                     // G/L Entries
            T17.SETCURRENTKEY("Source Type","Source No.","Posting Date");
            T17.SETRANGE("Source Type", T17."Source Type"::Customer);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..',AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            //CAN_DS 11212018
            IF T17.FINDSET THEN
              REPEAT
                //GLDocNo := '';
                //GLDocNo := T17."Document No.";

                RecGLEntry.RESET;                                     // G/L Entries
                RecGLEntry.SETCURRENTKEY("Document No.");
                RecGLEntry.SETRANGE("Document No.",T17."Document No.");
                IF RecGLEntry.FINDSET THEN
                REPEAT
                  RecRef.GETTABLE(RecGLEntry);
                  ChangeLedgerEntryDimSW(RecRef, DATABASE::"G/L Entry", FORMAT(RecGLEntry."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
                UNTIL RecGLEntry.NEXT = 0;
              UNTIL T17.NEXT = 0;
              //CAN_DS 11212018
      //>>VLDM4.11

            BuildDimArrayWithFields(DimArray,DimArrayWithFields,5802,FALSE);//CAN_MY>><<
            T5802.RESET;                                     // Value entries
            T5802.SETCURRENTKEY("Source Type","Source No.");
            T5802.SETRANGE("Source Type", T5802."Source Type"::Customer);
            T5802.SETRANGE("Source No.", "No.");

            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."),DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11

      //===================05-11-2018====CAN_PS============================================================
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,32,FALSE);
            T32.RESET;                                     // item ledger entries
            T32.SETCURRENTKEY("Source Type","Source No.");
            T32.SETRANGE("Source Type", T32."Source Type"::Customer);
            T32.SETRANGE("Source No.", "No.");

            IF StartDate <> 0D THEN BEGIN
              T32.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T32.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T32.SETRANGE("Posting Date");
            END;
            IF T32.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T32);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."),DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T32.NEXT = 0;
      //===================05-11-2018====CAN_PS============================================================

      //VLDM4.13++
      // Bank Entries
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,271,FALSE);//CAN_MY>><<
            T271.RESET;                                     // Bank Entries
            T271.SETCURRENTKEY("Bal. Account Type","Bal. Account No.","Posting Date");
            T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Customer);
            T271.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."),DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T271.NEXT = 0;

            //Service Entries
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,5907,FALSE);//CAN_MY>><<
            T5907.RESET;                                     // Service Entries
            T5907.SETCURRENTKEY("Service Contract No.","Entry No.","Posting Date");
            T5907.SETRANGE("Customer No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5907.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5907.SETRANGE("Posting Date");
            END;
            IF T5907.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5907);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T5907.NEXT = 0;
              //VLDM4.13--

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 110;
              TableArray[2] := 112;
              TableArray[3] := 114;
              TableArray[4] := 36;

              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  110:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,110,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,111,FALSE);//CAN_MY>><<
                      T110.SETCURRENTKEY("Sell-to Customer No.");
                      T110.SETRANGE("Sell-to Customer No.", "No.");
                      T110.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T110.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T110);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T110."No.", 0, DimArrayWithFields,LineDimArrayWithFields);//DM4.10
                      UNTIL T110.NEXT = 0;
                 END;
                  112:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,112,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,113,FALSE);//CAN_MY>><<
                      T112.SETCURRENTKEY("Sell-to Customer No.");
                      T112.SETRANGE("Sell-to Customer No.", "No.");
                      T112.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T112.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T112);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T112."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10p
                      UNTIL T112.NEXT = 0;
                  END;
                  114:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,114,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,115,FALSE);//CAN_MY>><<
                      T114.SETCURRENTKEY("Sell-to Customer No.");
                      T114.SETRANGE("Sell-to Customer No.", "No.");
                      T114.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T114.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T114);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T114."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T114.NEXT = 0;
                  END;
                  36:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,36,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,37,FALSE);//CAN_MY>><<
                      T36.SETCURRENTKEY("Sell-to Customer No.");
                      T36.SETRANGE("Sell-to Customer No.", "No.");
                      T36.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T36.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T36);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T36."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T36.NEXT = 0;
                  END;
                END;
               END;
          END;

        27 :                                               // Items
          BEGIN
            RecRef.GETTABLE(T32);
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,32,FALSE);//CAN_MY>><<
            T32.RESET;
            T32.SETCURRENTKEY("Item No.", "Posting Date"); // Item Ledger Entry
            T32.SETRANGE("Item No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T32.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T32.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T32.SETRANGE("Posting Date");
            END;
            IF T32.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T32);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T32.NEXT = 0;

            BuildDimArrayWithFields(DimArray,DimArrayWithFields,5802,FALSE);//CAN_MY>><<
            T5802.RESET;                                     // Value entries
            T5802.SETCURRENTKEY("Item No.","Posting Date","Item Ledger Entry Type","Entry Type","Variance Type","Item Charge No.","Location Code","Variant Code");
            T5802.SETRANGE("Item No.","No.");

            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."),DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T5802.NEXT = 0;

            //Service Entries
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,5907,FALSE);//CAN_MY>><<
            T5907.RESET;
            T5907.SETRANGE("No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5907.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5907.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5907.SETRANGE("Posting Date");
            END;
            IF T5907.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5907);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Service Ledger Entry", FORMAT(T5907."Entry No."), DimArrayWithFields, LineDimArrayWithFields);
              UNTIL T5907.NEXT = 0;
          //VLDM4.13--

      //***********CAN_DS*********
      //DM HF1.00
              TableArray2[1]  := 111;
              TableArray2[2]  := 113;
              TableArray2[3]  := 115;
              TableArray2[4]  := 121;
              TableArray2[5]  := 123;
              TableArray2[6]  := 125;
              TableArray2[7]  := 37;
              TableArray2[8]  := 39;
              //Added Assembly Orders
              TableArray2[9]  := 900;
              TableArray2[10] := 901;
              TableArray2[11] := 910;
              TableArray2[12] := 911;
              //Posted Service Entries
              TableArray2[13] := 5991;
              TableArray2[14] := 5993;

      //Sales
              FOR j := 1 TO ARRAYLEN(TableArray2) DO BEGIN
                CASE TableArray2[j] OF
                  37:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,37,FALSE);//CAN_MY>><<
                      T37.SETCURRENTKEY("No.");//Subhash
                      T37.SETRANGE("No.", "No.");
                      T37.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T37.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T37);
                        //LoopPrePostedDocLineDimSW(37, FORMAT(FldRef.VALUE), '', DimArrayWithFields,LineDimArrayWithFields);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T37."No.", 0,DimArrayWithFields,LineDimArrayWithFields);//CAN_SH
                      UNTIL T37.NEXT = 0;
                 END;
                  111:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,111,FALSE);//CAN_MY>><<
                      T111.SETCURRENTKEY("No.");//Subhash
                      T111.SETRANGE("No.", "No.");
                      T111.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T111.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T111);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T111."No.", 0,DimArrayWithFields,LineDimArrayWithFields);
                      UNTIL T111.NEXT = 0;
                 END;
                  113:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,113,FALSE);//CAN_MY>><<
                      T113.SETCURRENTKEY("No.");//Subhash
                      T113.SETRANGE("No.", "No.");
                      T113.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T113.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T113);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T113."No.", 0, DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T113.NEXT = 0;
                  END;
                  115:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,115,FALSE);//CAN_MY>><<
                      T115.SETCURRENTKEY("No.");//Subhash
                      T115.SETRANGE("No.", "No.");
                      T115.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T115.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T115);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T115."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T115.NEXT = 0;
                  END;
      //Purchase
                  121:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,121,FALSE);//CAN_MY>><<
                      T121.SETCURRENTKEY("No.");//Subhash
                      T121.SETRANGE("No.", "No.");
                      T121.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T121.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T121);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T121."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T121.NEXT = 0;
                  END;
                  123:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,123,FALSE);//CAN_MY>><<
                      T123.SETCURRENTKEY("No.");//Subhash
                      T123.SETRANGE("No.", "No.");
                      T123.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T123.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T123);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T123."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T123.NEXT = 0;
                  END;
                  125:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,125,FALSE);//CAN_MY>><<
                      T125.SETCURRENTKEY("No.");//Subhash
                      T125.SETRANGE("No.", "No.");
                      T125.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T125.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T125);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T125."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T125.NEXT = 0;
                  END;

                  39:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,39,FALSE);//CAN_MY>><<
                      T39.SETCURRENTKEY("No.");//Subhash
                      T39.SETRANGE("No.", "No.");
                      IF T39.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T39);
                        //LoopPrePostedDocLineDimSW(39, FORMAT(FldRef.VALUE), '', DimArrayWithFields,LineDimArrayWithFields);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T39."No.", 0,DimArrayWithFields,LineDimArrayWithFields);//CAN_SH
                      UNTIL T39.NEXT = 0;
                 END;

      //Purchase End
      //Assembly
                  900:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,900,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,901,FALSE);//CAN_MY>><<
                      T900.SETCURRENTKEY("Item No.");
                      T900.SETRANGE("Item No.", "No.");
                      T900.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T900.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T900);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T900."Item No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T900.NEXT = 0;
                  END;
                  910:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,910,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,911,FALSE);//CAN_MY>><<
                      T910.SETCURRENTKEY("Item No.");//CAN_MY
                      T910.SETRANGE("Item No.", "No.");
                      T910.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T910.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T910);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER,T910."Item No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T910.NEXT = 0;
                 END;
      //Service
                  5991:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,5991,FALSE);//CAN_MY>><<
                      T5991.SETCURRENTKEY("No.");//Subhash
                      T5991.SETRANGE("No.", "No.");
                      T5991.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T5991.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T5991);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T5991."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T5991.NEXT = 0;
                  END;
                  5993:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,5993,FALSE);//CAN_MY>><<
                      T5993.SETCURRENTKEY("No.");//CAN_MY
                      T5993.SETRANGE("No.", "No.");
                      T5993.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T5993.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T5993);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T5993."No.", 0,DimArrayWithFields, LineDimArrayWithFields);
                      UNTIL T5993.NEXT = 0;
                  END;
                END;
               END;
          END;
          //***************************Vendors***************************
            23 :                                               // Vendors
          BEGIN
            RecRef.GETTABLE(T25);
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,25,FALSE);//CAN_MY>><<
            BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,380,TRUE);//CAN_MY>><<
            T25.SETCURRENTKEY("Vendor No.");
            T25.SETRANGE("Vendor No.", "No.");             // Vendor Ledger Entries
            IF StartDate <> 0D THEN BEGIN
              T25.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T25.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T25.SETRANGE("Posting Date");
            END;

            IF T25.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T25);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Vendor Ledger Entry", FORMAT(T25."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T25.NEXT = 0;

      //>>VLDM4.11
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,5802,FALSE);//CAN_MY>><<
            T5802.RESET;                                     // Value entries
            T5802.SETRANGE("Source Type", T5802."Source Type"::Vendor);
            T5802.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T5802.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T5802.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T5802.SETRANGE("Posting Date");
            END;
            IF T5802.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T5802);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Value Entry", FORMAT(T5802."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T5802.NEXT = 0;
      //<<VLDM4.11

      //===================05-11-2018====CAN_PS============================================================
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,32,FALSE);
            T32.RESET;                                     // item ledger entries
            T32.SETCURRENTKEY("Source Type","Source No.");
            T32.SETRANGE("Source Type", T32."Source Type"::Vendor);
            T32.SETRANGE("Source No.", "No.");

            IF StartDate <> 0D THEN BEGIN
              T32.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T32.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T32.SETRANGE("Posting Date");
            END;
            IF T32.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T32);
                ChangeLedgerEntryDimSW(
                  RecRef, DATABASE::"Item Ledger Entry", FORMAT(T32."Entry No."),DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T32.NEXT = 0;
      //===================05-11-2018====CAN_PS============================================================

            BuildDimArrayWithFields(DimArray,DimArrayWithFields,17,FALSE);//CAN_MY>><<
            T17.RESET;                                     // G/L Entries
            T17.SETRANGE("Source Type", T17."Source Type"::Vendor);
            T17.SETRANGE("Source No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T17.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T17.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T17.SETRANGE("Posting Date");
            END;
            //CAN_DS 11212018
             IF T17.FINDSET THEN
               REPEAT
                //GLDocNo := '';
                //GLDocNo := T17."Document No.";

                RecGLEntry.RESET;                                     // G/L Entries
                RecGLEntry.SETCURRENTKEY("Document No.");
                RecGLEntry.SETRANGE("Document No.",T17."Document No.");
                IF RecGLEntry.FINDSET THEN
                REPEAT
                  RecRef.GETTABLE(RecGLEntry);
                  ChangeLedgerEntryDimSW(RecRef, DATABASE::"G/L Entry", FORMAT(RecGLEntry."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
                UNTIL RecGLEntry.NEXT = 0;
               UNTIL T17.NEXT = 0;
              //CAN_DS 11212018

      //VLDM4.13++
            BuildDimArrayWithFields(DimArray,DimArrayWithFields,271,FALSE);//CAN_MY>><<
            T271.RESET;                                     // Bank Entries
            T271.SETRANGE("Bal. Account Type", T271."Bal. Account Type"::Vendor);
            T271.SETRANGE("Bal. Account No.", "No.");
            IF StartDate <> 0D THEN BEGIN
              T271.SETRANGE("Posting Date", StartDate, EndDate);
            END ELSE BEGIN
              IF DimMgtSetup."Exclude Closed Periods" THEN BEGIN
                GetAcctingPeriodStartDate;
                T271.SETFILTER("Posting Date", '%1..', AcctPeriodStartDate);
              END ELSE
                T271.SETRANGE("Posting Date");
            END;
            IF T271.FINDSET THEN
              REPEAT
                RecRef.GETTABLE(T271);
                ChangeLedgerEntryDimSW(RecRef, DATABASE::"Bank Account Ledger Entry", FORMAT(T271."Entry No."), DimArrayWithFields,LineDimArrayWithFields);
              UNTIL T271.NEXT = 0;

              //DM4.07 >>
              //Initialize the table array
              TableArray[1] := 120;
              TableArray[2] := 122;
              TableArray[3] := 124;
              TableArray[4] := 38;
              FOR j := 1 TO ARRAYLEN(TableArray) DO BEGIN
                CASE TableArray[j] OF
                  120:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,120,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,121,FALSE);//CAN_MY>><<
                      T120.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T120.SETRANGE("Buy-from Vendor No.", "No.");
                      T120.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T120.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T120);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T120."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T120.NEXT = 0;
                  END;
                  122:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,122,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,123,FALSE);//CAN_MY>><<
                      T122.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T122.SETRANGE("Buy-from Vendor No.", "No.");
                      T122.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T122.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T122);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T122."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T122.NEXT = 0;
                  END;
                  124:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,124,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,125,FALSE);//CAN_MY>><<
                      T124.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T124.SETRANGE("Buy-from Vendor No.", "No.");
                      T124.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T124.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T124);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T124."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T124.NEXT = 0;
                  END;
                  38:
                  BEGIN
                      BuildDimArrayWithFields(DimArray,DimArrayWithFields,38,FALSE);//CAN_MY>><<
                      BuildDimArrayWithFields(DimArray,LineDimArrayWithFields,39,FALSE);//CAN_MY>><<
                      T38.SETCURRENTKEY("Buy-from Vendor No.");//CAN_MY
                      T38.SETRANGE("Buy-from Vendor No.", "No.");
                      T38.SETRANGE("Posting Date",StartDate,EndDate);
                      IF T38.FINDSET THEN REPEAT
                        RecRef.GETTABLE(T38);
                        ChangeAllPostedDocDimSW(RecRef, RecRef.NUMBER, T38."No.", 0, DimArrayWithFields,LineDimArrayWithFields); //DM4.10
                      UNTIL T38.NEXT = 0;
                  END;
                END;
               END;
              //DM4.07 <<
          END;
      END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangeLedgerEntryDimSW@1000000031(RecRef@1000000005 : RecordRef;TableID@1000000001 : Integer;KeyText1@1000000002 : Text[240];DimArrayWithFields@1000000011 : ARRAY [20,3] OF Code[20];LineDimArrayWithFields@1000000003 : ARRAY [20,3] OF Code[20]);
    VAR
      T379@1000000008 : Record 379;
      T380@1000000009 : Record 380;
      Key1@1000000006 : Integer;
      DimNo@1000000007 : Integer;
      T96@1000000000 : Record 96;
      RecRef2@1000000010 : RecordRef;
      i@1000000012 : Integer;
    BEGIN
      //VLDM4.15 CAN_MY ++
      // Send this the Table ID, Entry No., new Dimension and Value
      EVALUATE(Key1,KeyText1);
      // get dim set ID
      TempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      DimSetID := FldRef.VALUE;
      FilterDimSetSW(DimSetID, TempDimSetEntry,DimArrayWithFields);
      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      //Updates "Document Line No." field in Ledger entries for lines
      //DM4.09>>
      IF NOT HeaderTableUpdate THEN
        UpdateRelLedgerEntryNo(RecRef); //CAN_DS 20112018
      //DM4.09<<

      ChangeLedgerEntryDimAllSW(RecRef, TableID, DimArrayWithFields);

        // Change Detailed Entry Table
        CASE TableID OF
          21:
            BEGIN
              T379.RESET;
              T379.SETCURRENTKEY("Cust. Ledger Entry No.", "Posting Date");
              T379.SETRANGE("Cust. Ledger Entry No.", Key1);
              IF T379.FINDSET THEN
                REPEAT
                  RecRef2.GETTABLE(T379);
                  ChangeLedgerEntryDimAllSW(RecRef2, 379, LineDimArrayWithFields);
                UNTIL T379.NEXT = 0;
            END;
          25:
            BEGIN
              T380.RESET;
              T380.SETCURRENTKEY("Vendor Ledger Entry No.", "Posting Date");
              T380.SETRANGE("Vendor Ledger Entry No.", Key1);
              IF T380.FINDSET THEN
                REPEAT
                  RecRef2.GETTABLE(T380);
                  ChangeLedgerEntryDimAllSW(RecRef2, 380, LineDimArrayWithFields);
                UNTIL T380.NEXT = 0;
            END;
        END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangeLedgerEntryDimAllSW@1000000034(RecRef@1000000004 : RecordRef;TableID@1000000000 : Integer;DimArrayWithFields@1000000001 : ARRAY [20,3] OF Code[20]);
    VAR
      FieldNo@1000000003 : Integer;
      i@1000000002 : Integer;
      SourceRec@1000000007 : RecordRef;
      SourceField@1000000006 : FieldRef;
    BEGIN
      //VLDM4.15 CAN_MY ++
      SourceRec.OPEN(TableID);
      SourceRec.GET(RecRef.RECORDID);
      FOR i := 1 TO 8 DO BEGIN
        EVALUATE(FieldNo,DimArrayWithFields[i,3]);
        IF FieldNo <> 0 THEN BEGIN
          SourceField := SourceRec.FIELDINDEX(FieldNo);
          SourceField.VALIDATE(DimArrayWithFields[i,2]);
          SourceRec.MODIFY;
        END;
      END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangeAllPostedDocDimSW@1000000033(RecRef@1000000006 : RecordRef;TableID@1000000001 : Integer;DocNo@1000000002 : Code[20];LineNo@1000000005 : Integer;DimArrayWithFields@1000000011 : ARRAY [20,3] OF Code[20];LineDimArrayWithFields@1000000003 : ARRAY [20,3] OF Code[20]);
    VAR
      LineRecRef@1000000008 : RecordRef;
      DimNo@1000000007 : Integer;
      LineTempDimSetEntry@1000000010 : TEMPORARY Record 480;
      LineTableID@1000000000 : Integer;
    BEGIN
      //VLDM4.15 CAN_MY ++
       // get dim set ID
       TempDimSetEntry.DELETEALL;
       FldRef := RecRef.FIELD(480);
       DimSetID := FldRef.VALUE;
       FilterDimSetSW(DimSetID, TempDimSetEntry,DimArrayWithFields);

       // Get new Dim Set ID
       NewDimSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
       FldRef.VALUE(NewDimSetID);
       RecRef.MODIFY;

       ChangePostedDocDimShortcutSW(RecRef, TableID,DimArrayWithFields);

       // Update posted doc lines
       IF (LineNo = 0) THEN BEGIN
        FldRef := RecRef.FIELD(3);
        LoopPostedDocLineSW(TableID, FORMAT(FldRef.VALUE), '', DimArrayWithFields,LineDimArrayWithFields);
       END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangePostedDocDimShortcutSW@1000000032(RecRef@1000000013 : RecordRef;TableID@1000000000 : Integer;DimArrayWithFields@1000000001 : ARRAY [20,3] OF Code[20]);
    VAR
      SourceRec@1000000006 : RecordRef;
      SourceField@1000000007 : FieldRef;
      i@1000000010 : Integer;
      FieldNo@1000000002 : Integer;
    BEGIN
      //VLDM4.15 CAN_MY ++
      SourceRec.OPEN(TableID);
      SourceRec.GET(RecRef.RECORDID);
      FOR i := 1 TO 2 DO BEGIN
        EVALUATE(FieldNo,DimArrayWithFields[i,3]);
        IF FieldNo <> 0 THEN BEGIN
          SourceField := SourceRec.FIELDINDEX(FieldNo);
          SourceField.VALIDATE(DimArrayWithFields[i,2]);
          SourceRec.MODIFY;
        END;
      END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE LoopPostedDocLineSW@1000000038(TableID@14103540 : Integer;DocNo@14103542 : Code[20];NoFilter@1000000001 : Code[20];DimArrayWithFields@1000000014 : ARRAY [20,3] OF Code[20];LineDimArrayWithFields@1000000002 : ARRAY [20,3] OF Code[20]);
    VAR
      T37@1000000015 : Record 37;
      T111@1000000003 : Record 111;
      T113@1000000004 : Record 113;
      T115@1000000005 : Record 115;
      T121@1000000006 : Record 121;
      T123@1000000007 : Record 123;
      T125@1000000008 : Record 125;
      T5745@1000000009 : Record 5745;
      T5747@1000000010 : Record 5747;
      T6651@1000000011 : Record 6651;
      T6661@1000000012 : Record 6661;
      T5989@1000000013 : Record 5989;
      T5991@1000000114 : Record 5991;
      T5993@1000001015 : Record 5993;
      T5995@1000000116 : Record 5995;
      LineRecRef@1000000000 : RecordRef;
      T39@1000000016 : Record 39;
      T38@1000000017 : Record 38;
    BEGIN
      //VLDM4.15 CAN_MY ++
      CASE TableID OF
          36:
          BEGIN
            T37.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T37.SETRANGE("No.", NoFilter);
            IF T37.FINDSET THEN
              REPEAT
                SourceLineNo := T37."Line No.";
                LineRecRef.GETTABLE(T37);
                ChangePostedDocLineDimSW(LineRecRef,37, LineDimArrayWithFields);
              UNTIL T37.NEXT = 0;
          END;
          38:
          BEGIN
            T39.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T39.SETRANGE("No.", NoFilter);
            IF T39.FINDSET THEN
              REPEAT
                SourceLineNo := T39."Line No.";
                LineRecRef.GETTABLE(T39);
                ChangePostedDocLineDimSW(LineRecRef,39, LineDimArrayWithFields);
              UNTIL T39.NEXT = 0;
          END;
        110:
          BEGIN
            T111.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T111.SETRANGE("No.", NoFilter);
            IF T111.FINDSET THEN
              REPEAT
                SourceLineNo := T111."Line No.";
                LineRecRef.GETTABLE(T111);
                ChangePostedDocLineDimSW(LineRecRef, 111, LineDimArrayWithFields);
              UNTIL T111.NEXT = 0;
          END;
        112:
          BEGIN
            T113.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T113.SETRANGE("No.", NoFilter);
            IF T113.FINDSET THEN
              REPEAT
                SourceLineNo := T113."Line No.";
                LineRecRef.GETTABLE(T113);
                ChangePostedDocLineDimSW(LineRecRef, 113, LineDimArrayWithFields);
              UNTIL T113.NEXT = 0;
          END;
        114:
          BEGIN
            T115.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T115.SETRANGE("No.", NoFilter);
            IF T115.FINDSET THEN
              REPEAT
                SourceLineNo := T115."Line No.";
                LineRecRef.GETTABLE(T115);
                ChangePostedDocLineDimSW(LineRecRef, 115, LineDimArrayWithFields);
              UNTIL T115.NEXT = 0;
          END;
          120:
          BEGIN
            T121.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T121.SETRANGE("No.", NoFilter);
            IF T121.FINDSET THEN
              REPEAT
                SourceLineNo := T121."Line No.";
                LineRecRef.GETTABLE(T121);
                ChangePostedDocLineDimSW(LineRecRef, 121, LineDimArrayWithFields);
              UNTIL T121.NEXT = 0;
          END;
        122:
          BEGIN
            T123.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T123.SETRANGE("No.", NoFilter);
            IF T123.FINDSET THEN
              REPEAT
                SourceLineNo := T123."Line No.";
                LineRecRef.GETTABLE(T123);
                ChangePostedDocLineDimSW(LineRecRef, 123, LineDimArrayWithFields);
              UNTIL T123.NEXT = 0;
          END;
        124:
          BEGIN
            T125.SETRANGE("Document No.", DocNo);
            IF T125.FINDSET THEN
              REPEAT
                SourceLineNo := T125."Line No.";
                LineRecRef.GETTABLE(T125);
                ChangePostedDocLineDimSW(LineRecRef, 125, LineDimArrayWithFields);
              UNTIL T125.NEXT = 0;
          END;
        5744:
          BEGIN
            T5745.SETRANGE("Document No.", DocNo);
            IF T5745.FINDSET THEN
              REPEAT
                SourceLineNo := T5745."Line No.";
                LineRecRef.GETTABLE(T5745);
                ChangePostedDocLineDimSW(LineRecRef, 5745, LineDimArrayWithFields);
              UNTIL T5745.NEXT = 0;
          END;
        5746:
          BEGIN
            T5747.SETRANGE("Document No.", DocNo);
            IF T5747.FINDSET THEN
              REPEAT
                SourceLineNo := T5747."Line No.";
                LineRecRef.GETTABLE(T5747);
                ChangePostedDocLineDimSW(LineRecRef, 5747, LineDimArrayWithFields);
              UNTIL T5747.NEXT = 0;
          END;
      //VLDM4.12 Service Module
        5990:
          BEGIN
            T5989.SETRANGE("No.", DocNo);
            IF T5989.FINDSET THEN
              REPEAT
                SourceLineNo := T5989."Line No.";
                LineRecRef.GETTABLE(T5989);
                ChangePostedDocLineDimSW(LineRecRef, 5989, LineDimArrayWithFields);
              UNTIL T5989.NEXT = 0;

            T5991.SETRANGE("Document No.", DocNo);
            IF T5991.FINDSET THEN
              REPEAT
                SourceLineNo := T5991."Line No.";
                LineRecRef.GETTABLE(T5991);
                ChangePostedDocLineDimSW(LineRecRef, 5991, LineDimArrayWithFields);
              UNTIL T5991.NEXT = 0;
          END;

        5992:
          BEGIN
            T5993.SETRANGE("Document No.", DocNo);
            IF T5993.FINDSET THEN
              REPEAT
                SourceLineNo := T5993."Line No.";
                LineRecRef.GETTABLE(T5993);
                ChangePostedDocLineDimSW(LineRecRef, 5993, LineDimArrayWithFields);
              UNTIL T5993.NEXT = 0;
          END;

        5994:
          BEGIN
            T5995.SETRANGE("Document No.", DocNo);
            IF T5995.FINDSET THEN
              REPEAT
                SourceLineNo := T5995."Line No.";
                LineRecRef.GETTABLE(T5995);
                ChangePostedDocLineDimSW(LineRecRef, 5995, LineDimArrayWithFields);
              UNTIL T5995.NEXT = 0;
          END;

      //VLDM4.12 Service Module

        6650:
          BEGIN
            T6651.SETRANGE("Document No.", DocNo);
            IF T6651.FINDSET THEN
              REPEAT
                SourceLineNo := T6651."Line No.";
                LineRecRef.GETTABLE(T6651);
                ChangePostedDocLineDimSW(LineRecRef, 6651, LineDimArrayWithFields);
              UNTIL T6651.NEXT = 0;
          END;
        6660:
          BEGIN
            T6661.SETRANGE("Document No.", DocNo);
            IF T6661.FINDSET THEN
              REPEAT
                SourceLineNo := T6661."Line No.";
                LineRecRef.GETTABLE(T6661);
                ChangePostedDocLineDimSW(LineRecRef, 6661, LineDimArrayWithFields);
              UNTIL T6661.NEXT = 0;
          END;
      END;
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE ChangePostedDocLineDimSW@1000000039(RecRef@1000000001 : RecordRef;TableID@1000000003 : Integer;DimArrayWithFields@1000000005 : ARRAY [20,3] OF Code[20]);
    VAR
      LineDimSetID@1000000004 : Integer;
      lineTempDimSetEntry@1000000000 : TEMPORARY Record 480;
      FieldRef@1000 : FieldRef;
    BEGIN
      //VLDM4.15 CAN_MY ++
      // get dim set ID
      lineTempDimSetEntry.DELETEALL;
      FldRef := RecRef.FIELD(480);
      LineDimSetID := FldRef.VALUE;
      FilterDimSetSW(LineDimSetID, lineTempDimSetEntry,DimArrayWithFields);

      // Get new Dim Set ID
      NewDimSetID := DimMgt.GetDimensionSetID(lineTempDimSetEntry);
      FldRef.VALUE(NewDimSetID);
      RecRef.MODIFY;

      ChangePostedDocDimShortcutSW(RecRef, TableNo, DimArrayWithFields);
      //VLDM4.15 CAN_MY --
    END;

    PROCEDURE LoopPrePostedDocLineDimSW@1000000040(TableID@14103540 : Integer;DocNo@14103542 : Code[20];NoFilter@1000000001 : Code[20];DimArrayWithFields@1000000014 : ARRAY [20,3] OF Code[20];LineDimArrayWithFields@1000000002 : ARRAY [20,3] OF Code[20]);
    VAR
      T37@1000000015 : Record 37;
      T111@1000000003 : Record 111;
      T113@1000000004 : Record 113;
      T115@1000000005 : Record 115;
      T121@1000000006 : Record 121;
      T123@1000000007 : Record 123;
      T125@1000000008 : Record 125;
      T5745@1000000009 : Record 5745;
      T5747@1000000010 : Record 5747;
      T6651@1000000011 : Record 6651;
      T6661@1000000012 : Record 6661;
      T5989@1000000013 : Record 5989;
      T5991@1000000114 : Record 5991;
      T5993@1000001015 : Record 5993;
      T5995@1000000116 : Record 5995;
      LineRecRef@1000000000 : RecordRef;
      T39@1000000016 : Record 39;
    BEGIN

      //VLDM4.15 CAN_MY ++
      CASE TableID OF
        37:
          BEGIN
            T37.SETCURRENTKEY("Document No.");//CAN_MY
            T37.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T37.SETRANGE("No.", NoFilter);
            IF T37.FINDSET THEN
              REPEAT
                SourceLineNo := T37."Line No.";
                LineRecRef.GETTABLE(T37);
                ChangePostedDocLineDimSW(LineRecRef, 37, LineDimArrayWithFields);
              UNTIL T37.NEXT = 0;
          END;
        39:
          BEGIN
            T39.SETCURRENTKEY("Document No.");//CAN_MY
            T39.SETRANGE("Document No.", DocNo);
            IF NoFilter <> '' THEN
              T39.SETRANGE("No.", NoFilter);
            IF T39.FINDSET THEN
              REPEAT
                SourceLineNo := T39."Line No.";
                LineRecRef.GETTABLE(T39);
                ChangePostedDocLineDimSW(LineRecRef, 39, LineDimArrayWithFields);
              UNTIL T39.NEXT = 0;
          END;
      END;
      //VLDM4.15 CAN_MY --
    END;

    BEGIN
    {
      Vertical Leap - Dimension Management

      DM4.06  27/11/2015  :  Fixed the bug related update line dimension
      DM4.07  : Code change for ledger entry and posted document dimension change from Customer/Vendor
      DM4.08  02/02/2016  :  Fixed the bug related update dimension in Card and List pages
      DM4.09  07-March-2016 : Included funtionality which updates Dimenions and "Document Line No." for related ledger entries
      DM4.10  31-March-2016 : Updated code to improve the performance of checking and updating ledger entries.
      VLDM4.11  18-August-2016 : Code is written to update value entries when we change the dimension of customer
      VLDM4.11  18-August-2016 : Code is written to update value entries when we change the dimension of vendor
      VLDM4.12 : Added Service Module functionaity
      CAN_DS++ 150318 Code added to improve performance.
      CAN_PS : Code added for updating the item ledger entries from change dimension for all entries from customer and vendor
      CAN_DS 11212018 Code added for updating the G/L Entry dimensions based on document no.
    }
    END.
  }
}

