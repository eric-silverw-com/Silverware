OBJECT Page 9852 Effective Permissions
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:06 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Effective Permissions;
    ApplicationArea=#All;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table2000000005;
    PageType=Worksheet;
    UsageCategory=Administration;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             CurrentUserID := USERSECURITYID;
             ChosenUserName := USERID;
             CurrentCompanyName := COMPANYNAME;
           END;

    OnOpenPage=BEGIN
                 FillByObject;
               END;

    OnAfterGetCurrRecord=VAR
                           EffectivePermissionsMgt@1000 : Codeunit 9852;
                         BEGIN
                           // Refresh
                           IF "Object ID" <> 0 THEN BEGIN // handle case when there are no records at all
                             EffectivePermissionsMgt.PopulatePermissionRecordWithEffectivePermissionsForObject(Rec,CurrentUserID,CurrentCompanyName,
                               "Object Type","Object ID");
                             MODIFY;
                           END;

                           CurrPage.ByPermissionSet.PAGE.SetRecordAndRefresh(CurrentUserID,CurrentCompanyName,"Object Type","Object ID");
                         END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;Action    ;
                      CaptionML=ENU=Permission Sets;
                      ToolTipML=ENU=View or edit which feature objects that users need to access and set up the related permissions in permission sets that you can assign to the users of the database.;
                      ApplicationArea=#All;
                      RunObject=Page 9802;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
      { 19      ;1   ;Action    ;
                      CaptionML=ENU=Permission Set by User;
                      ToolTipML=ENU=View or edit the available permission sets and apply permission sets to existing users.;
                      ApplicationArea=#All;
                      RunObject=Page 9816;
                      Promoted=Yes;
                      Image=Permission;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=ENU=General;
                GroupType=Group }

    { 3   ;2   ;Field     ;
                Name=ChooseUser;
                CaptionML=ENU=User;
                ToolTipML=ENU=Specifies the user that the effective permissions apply to.;
                ApplicationArea=#All;
                SourceExpr=ChosenUserName;
                OnValidate=VAR
                             User@1000 : Record 2000000120;
                           BEGIN
                             User.SETRANGE("User Name",ChosenUserName);
                             User.FINDFIRST;
                             CurrentUserID := User."User Security ID";
                             FillByObject;
                           END;

                OnLookup=VAR
                           ChosenUser@1003 : Record 2000000120;
                           User@1002 : Record 2000000120;
                           Users@1000 : Page 9800;
                         BEGIN
                           User.SETFILTER("License Type",'<>%1',User."License Type"::"External User");
                           Users.SETTABLEVIEW(User);
                           ChosenUser.SETRANGE("User Name",Text);
                           IF ChosenUser.FINDFIRST THEN
                             Users.SETRECORD(ChosenUser);
                           Users.LOOKUPMODE(TRUE);
                           IF Users.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Users.GETRECORD(User);

                             IF Text <> User."User Name" THEN BEGIN
                               Text := User."User Name";
                               ChosenUserName := Text;
                               CurrentUserID := User."User Security ID";
                               FillByObject;
                             END;
                           END;
                         END;
                          }

    { 16  ;2   ;Field     ;
                Name=ChooseCompany;
                CaptionML=ENU=Company;
                ToolTipML=ENU=Specifies the company for which effective permissions for the chosen user will be shown.;
                ApplicationArea=#All;
                SourceExpr=CurrentCompanyName;
                OnValidate=VAR
                             Company@1000 : Record 2000000006;
                           BEGIN
                             Company.GET(CurrentCompanyName);
                             FillByObject;
                           END;

                OnLookup=VAR
                           Company@1001 : Record 2000000006;
                           Companies@1000 : Page 357;
                         BEGIN
                           IF Company.GET(CurrentCompanyName) THEN
                             Companies.SETRECORD(Company);
                           Companies.LOOKUPMODE(TRUE);
                           IF Companies.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             Companies.GETRECORD(Company);

                             IF Text <> Company.Name THEN BEGIN
                               Text := Company.Name;
                               CurrentCompanyName := Text;
                               FillByObject;
                             END;
                           END;
                         END;
                          }

    { 17  ;2   ;Field     ;
                Name=ShowAllObjects;
                CaptionML=ENU=Show All Objects;
                ToolTipML=ENU=Specifies if the effective permissions are shown for all objects or only for objects in the user's assigned permission sets.;
                ApplicationArea=#All;
                SourceExpr=ShowAllObjects;
                OnValidate=BEGIN
                             CurrentObjectId := 0;
                             FillByObject;
                           END;
                            }

    { 18  ;1   ;Group     ;
                CaptionML=ENU=Permissions;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                Name=EffectivePermissions;
                GroupType=Repeater }

    { 13  ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Object Type" }

    { 15  ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Object ID";
                Visible=FALSE;
                Editable=FALSE }

    { 14  ;3   ;Field     ;
                CaptionML=ENU=Object Name;
                ApplicationArea=#All;
                SourceExpr="Object Name";
                Editable=FALSE }

    { 8   ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Read Permission" }

    { 9   ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Insert Permission" }

    { 10  ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Modify Permission" }

    { 11  ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Delete Permission" }

    { 12  ;3   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Execute Permission" }

    { 20  ;1   ;Part      ;
                Name=ByPermissionSet;
                ApplicationArea=#All;
                PagePartID=Page9853;
                PartType=Page;
                UpdatePropagation=Both }

  }
  CODE
  {
    VAR
      CurrentUserID@1000 : GUID;
      CurrentObjectType@1006 : Option;
      CurrentObjectId@1007 : Integer;
      CurrentCompanyName@1001 : Text[30];
      ChosenUserName@1003 : Code[50];
      LastUsedUserID@1002 : GUID;
      LastUsedCompanyName@1008 : Text[30];
      LastUsedObjectType@1009 : Option;
      LastUsedObjectId@1010 : Integer;
      LastUsedShowAllObjects@1012 : Boolean;
      ShowAllObjects@1011 : Boolean;

    LOCAL PROCEDURE FillByObject@1();
    VAR
      EffectivePermissionsMgt@1000 : Codeunit 9852;
    BEGIN
      IF (LastUsedUserID = CurrentUserID) AND
         (LastUsedCompanyName = CurrentCompanyName) AND
         (LastUsedObjectType = CurrentObjectType) AND
         (LastUsedObjectId = CurrentObjectId) AND
         (LastUsedShowAllObjects = ShowAllObjects)
      THEN
        EXIT;

      EffectivePermissionsMgt.PopulateEffectivePermissionsBuffer(Rec,
        CurrentUserID,CurrentCompanyName,CurrentObjectType,CurrentObjectId,ShowAllObjects);
      CurrPage.UPDATE(FALSE);

      LastUsedUserID := CurrentUserID;
      LastUsedCompanyName := CurrentCompanyName;
      LastUsedObjectType := CurrentObjectType;
      LastUsedObjectId := CurrentObjectId;
      LastUsedShowAllObjects := ShowAllObjects;
      OnEffectivePermissionsPopulated(CurrentUserID,CurrentCompanyName,CurrentObjectType,CurrentObjectId);
    END;

    [External]
    PROCEDURE SetUserSID@5(UserSID@1000 : GUID);
    VAR
      User@1001 : Record 2000000120;
    BEGIN
      User.GET(UserSID);
      CurrentUserID := UserSID;
      ChosenUserName := User."User Name";
    END;

    [Integration]
    LOCAL PROCEDURE OnEffectivePermissionsPopulated@3(CurrUserId@1000 : GUID;CurrCompanyName@1001 : Text[30];CurrObjectType@1002 : Integer;CurrObjectId@1003 : Integer);
    BEGIN
    END;

    BEGIN
    END.
  }
}

