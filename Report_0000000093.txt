OBJECT Report 93 Create Fiscal Year
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:48 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create Fiscal Year;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  AccountingPeriod."Starting Date" := FiscalYearStartDate;
                  AccountingPeriod.TESTFIELD("Starting Date");

                  AccountingPeriod.SETRANGE(Closed,FALSE);
                  IF AccountingPeriod.FIND('-') THEN BEGIN
                    FirstPeriodStartDate := AccountingPeriod."Starting Date";
                    FirstPeriodLocked := AccountingPeriod."Date Locked";
                    IF (NOT HideDialog) AND (FiscalYearStartDate < FirstPeriodStartDate) AND FirstPeriodLocked THEN
                      IF NOT CONFIRM(CreateAndCloseQst) THEN
                        EXIT;
                  END ELSE
                    IF NOT HideDialog THEN
                      IF NOT CONFIRM(CreateQst) THEN
                        EXIT;

                  AccountingPeriod.SETRANGE(Closed);
                  FiscalYearStartDate2 := FiscalYearStartDate;

                  FOR i := 1 TO NoOfPeriods + 1 DO BEGIN
                    IF (FiscalYearStartDate <= FirstPeriodStartDate) AND (i = NoOfPeriods + 1) THEN
                      EXIT;

                    AccountingPeriod.INIT;
                    AccountingPeriod."Starting Date" := FiscalYearStartDate;
                    AccountingPeriod.VALIDATE("Starting Date");
                    IF (i = 1) OR (i = NoOfPeriods + 1) THEN BEGIN
                      AccountingPeriod."New Fiscal Year" := TRUE;
                      InvtSetup.GET;
                      AccountingPeriod."Average Cost Calc. Type" := InvtSetup."Average Cost Calc. Type";
                      AccountingPeriod."Average Cost Period" := InvtSetup."Average Cost Period";
                    END;
                    IF (FirstPeriodStartDate = 0D) AND (i = 1) THEN
                      AccountingPeriod."Date Locked" := TRUE;
                    IF (AccountingPeriod."Starting Date" < FirstPeriodStartDate) AND FirstPeriodLocked THEN BEGIN
                      AccountingPeriod.Closed := TRUE;
                      AccountingPeriod."Date Locked" := TRUE;
                    END;
                    IF NOT AccountingPeriod.FIND('=') THEN
                      AccountingPeriod.INSERT;
                    FiscalYearStartDate := CALCDATE(PeriodLength,FiscalYearStartDate);
                  END;

                  AccountingPeriod.GET(FiscalYearStartDate2);
                  AccountingPeriod.UpdateAvgItems;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF NoOfPeriods = 0 THEN BEGIN
                     NoOfPeriods := 12;
                     EVALUATE(PeriodLength,'<1M>');
                   END;
                   IF AccountingPeriod.FIND('+') THEN
                     FiscalYearStartDate := AccountingPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  Name=StartingDate;
                  CaptionML=ENU=Starting Date;
                  ToolTipML=ENU=Specifies the date from which the report or batch job processes information.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FiscalYearStartDate }

      { 2   ;2   ;Field     ;
                  Name=NoOfPeriods;
                  CaptionML=ENU=No. of Periods;
                  ToolTipML=ENU=Specifies how many accounting periods to include.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=NoOfPeriods }

      { 3   ;2   ;Field     ;
                  Name=PeriodLength;
                  CaptionML=ENU=Period Length;
                  ToolTipML=ENU=Specifies the period for which data is shown in the report. For example, enter "1M" for one month, "30D" for thirty days, "3Q" for three quarters, or "5Y" for five years.;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PeriodLength }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CreateAndCloseQst@1000 : TextConst 'ENU=The new fiscal year begins before an existing fiscal year, so the new year will be closed automatically.\\Do you want to create and close the fiscal year?';
      CreateQst@1002 : TextConst 'ENU=After you create the new fiscal year, you cannot change its starting date.\\Do you want to create the fiscal year?';
      AccountingPeriod@1005 : Record 50;
      InvtSetup@1013 : Record 313;
      NoOfPeriods@1006 : Integer;
      PeriodLength@1007 : DateFormula;
      FiscalYearStartDate@1008 : Date;
      FiscalYearStartDate2@1015 : Date;
      FirstPeriodStartDate@1009 : Date;
      FirstPeriodLocked@1011 : Boolean;
      i@1012 : Integer;
      HideDialog@1014 : Boolean;

    [External]
    PROCEDURE InitializeRequest@1(NewNoOfPeriods@1000 : Integer;NewPeriodLength@1001 : DateFormula;StartingDate@1002 : Date);
    BEGIN
      NoOfPeriods := NewNoOfPeriods;
      PeriodLength := NewPeriodLength;
      IF AccountingPeriod.FINDLAST THEN
        FiscalYearStartDate := AccountingPeriod."Starting Date"
      ELSE
        FiscalYearStartDate := StartingDate;
    END;

    [External]
    PROCEDURE HideConfirmationDialog@2(NewHideDialog@1000 : Boolean);
    BEGIN
      HideDialog := NewHideDialog;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

