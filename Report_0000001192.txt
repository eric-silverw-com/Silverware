OBJECT Report 1192 Suggest Res. Price Chg.(Price)
{
  OBJECT-PROPERTIES
  {
    Date=10/25/16;
    Time=12:00:00 PM;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Suggest Res. Price Chg.(Price);
               ESM=Prop. mod. recursos (precio);
               FRC=Modification de prix de ressource propos‚e (prix);
               ENC=Suggest Res. Price Chg.(Price)];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);
                  IF ToCurrency.Code <> '' THEN
                    ToCurrency.FIND;
                END;

  }
  DATASET
  {
    { 9832;    ;DataItem;                    ;
               DataItemTable=Table201;
               DataItemTableView=SORTING(Type,Code,Work Type Code,Currency Code);
               OnPreDataItem=BEGIN
                               Window.OPEN(
                                 Text001 +
                                 Text002 +
                                 Text003);
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,Type);
                                  Window.UPDATE(2,Code);
                                  ResPriceChg.Type := Type;
                                  ResPriceChg.Code := Code;

                                  IF ToCurrency.Code = '' THEN BEGIN
                                    ResPriceChg."Currency Code" := "Currency Code";
                                    SETRANGE("Currency Code",'');
                                  END ELSE
                                    ResPriceChg."Currency Code" := ToCurrency.Code;

                                  IF ToWorkType.Code = '' THEN
                                    ResPriceChg."Work Type Code" := "Work Type Code"
                                  ELSE
                                    ResPriceChg."Work Type Code" := ToWorkType.Code;

                                  ResPriceChg."New Unit Price" := "Unit Price";

                                  IF ResPriceChg."Currency Code" <> "Currency Code" THEN BEGIN
                                    IF "Currency Code" <> '' THEN
                                      ResPriceChg."New Unit Price" :=
                                        CurrExchRate.ExchangeAmtFCYToLCY(
                                          WORKDATE,"Currency Code",ResPriceChg."New Unit Price",
                                          CurrExchRate.ExchangeRate(
                                            WORKDATE,"Currency Code"));
                                    IF ResPriceChg."Currency Code" <> '' THEN
                                      ResPriceChg."New Unit Price" :=
                                        CurrExchRate.ExchangeAmtLCYToFCY(
                                          WORKDATE,ResPriceChg."Currency Code",
                                          ResPriceChg."New Unit Price",
                                          CurrExchRate.ExchangeRate(
                                            WORKDATE,ResPriceChg."Currency Code"));
                                  END;

                                  IF ResPriceChg."Currency Code" = '' THEN
                                    Currency2.InitRoundingPrecision
                                  ELSE BEGIN
                                    Currency2.GET(ResPriceChg."Currency Code");
                                    Currency2.TESTFIELD("Unit-Amount Rounding Precision");
                                  END;

                                  ResPriceChg."New Unit Price" :=
                                    ROUND(ResPriceChg."New Unit Price",Currency2."Unit-Amount Rounding Precision");

                                  IF ResPriceChg."New Unit Price" > PriceLowerLimit THEN
                                    ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" * UnitPricefactor;

                                  IF RoundingMethod.Code <> '' THEN BEGIN
                                    RoundingMethod."Minimum Amount" := ResPriceChg."New Unit Price";
                                    IF RoundingMethod.FIND('=<') THEN BEGIN
                                      ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" + RoundingMethod."Amount Added Before";
                                      IF RoundingMethod.Precision > 0 THEN
                                        ResPriceChg."New Unit Price" :=
                                          ROUND(ResPriceChg."New Unit Price",
                                            RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                                      ResPriceChg."New Unit Price" := ResPriceChg."New Unit Price" + RoundingMethod."Amount Added After";
                                    END;
                                  END;

                                  ResPrice.SETRANGE("Work Type Code",ResPriceChg."Work Type Code");
                                  ResPrice.SETRANGE(Code,ResPriceChg.Code);
                                  ResPrice.SETRANGE(Type,ResPriceChg.Type);
                                  ResPrice.SETRANGE("Currency Code",ResPriceChg."Currency Code");
                                  IF ResPrice.FINDLAST THEN BEGIN
                                    ResPriceChg."Current Unit Price" := ResPrice."Unit Price";
                                    PriceAlreadyExists := TRUE;
                                  END ELSE BEGIN
                                    ResPriceChg."Current Unit Price" := 0;
                                    PriceAlreadyExists := FALSE;
                                  END;
                                  IF PriceAlreadyExists OR CreateNewPrices THEN BEGIN
                                    ResPriceChg2 := ResPriceChg;
                                    IF ResPriceChg2.FIND('=') THEN
                                      ResPriceChg.MODIFY
                                    ELSE
                                      ResPriceChg.INSERT;
                                  END;
                                END;

               ReqFilterFields=Type,Code,Work Type Code,Currency Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF UnitPricefactor = 0 THEN BEGIN
                     UnitPricefactor := 1;
                     CreateNewPrices := TRUE;
                   END;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 15  ;2   ;Group     ;
                  CaptionML=[ENU=Copy to Res. Price Change...;
                             ESM=Copia a modif. precio recurso...;
                             FRC=Copier au changement de prix ress....;
                             ENC=Copy to Res. Price Change...] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Currency Code;
                             ESM=C¢d. divisa;
                             FRC=Code devise;
                             ENC=Currency Code];
                  ToolTipML=[ENU=Specifies the code for the currency that amounts are shown in.;
                             ESM=Especifica el c¢digo de la divisa en la que se muestran los importes.;
                             FRC=Sp‚cifie le code pour la devise utilis‚e pour l'affichage des montants.;
                             ENC=Specifies the code for the currency that amounts are shown in.];
                  ApplicationArea=#Jobs;
                  SourceExpr=ToCurrency.Code;
                  TableRelation=Currency }

      { 6   ;3   ;Field     ;
                  CaptionML=[ENU=Work Type;
                             ESM=Tipo trabajo;
                             FRC=Type travail;
                             ENC=Work Type];
                  ToolTipML=[ENU=Specifies the work types to which the new prices apply. If you want the new price to be calculated for all work types, enter ALL.;
                             ESM=Especifica los tipos de trabajo a los que se aplican los precios nuevos. Si desea calcular el nuevo precio para todos los tipos de trabajo, indique TODOS.;
                             FRC=Sp‚cifie les types de travaux auxquels les nouveaux prix sont appliqu‚s. Si vous souhaitez calculer les nouveaux prix pour tous les types de travaux, saisissez TOUS.;
                             ENC=Specifies the work types to which the new prices apply. If you want the new price to be calculated for all work types, enter ALL.];
                  ApplicationArea=#Jobs;
                  SourceExpr=ToWorkType.Code;
                  TableRelation="Work Type" }

      { 16  ;2   ;Field     ;
                  CaptionML=[ENU=Only Prices Above;
                             ESM=S¢lo precios superiores a;
                             FRC=Les prix ci-dessus uniquement;
                             ENC=Only Prices Above];
                  ToolTipML=[ENU=Specifies an amount to determine the lowest unit price that is changed. Only prices that are higher than this are changed. If a price is lower than or equal to this amount, a line for it is created in the Resource Price Changes window, but with the same unit price as in the Resource Prices window.;
                             ESM=Especifica un importe para determinar el precio unitario m s bajo que se modifica. Solo se modifican los precios superiores a este importe. En el caso de los precios iguales o inferiores, se crea una l¡nea en la ventana Cambios de precio en recursos, aunque con el mismo precio unitario que aparece en la ventana Precio de venta del recurso.;
                             FRC=Sp‚cifie un montant pour d‚signer le plus bas prix unitaire modifi‚. Seuls les prix qui sont plus ‚lev‚s sont modifi‚s. Si un prix est inf‚rieur ou ‚gal … ce montant, une ligne est cr‚‚e pour lui dans la fenˆtre Nouv. prix ressource propos‚s, mais avec le mˆme prix unitaire que celui qui figure dans la fenˆtre Prix ressource.;
                             ENC=Specifies an amount to determine the lowest unit price that is changed. Only prices that are higher than this are changed. If a price is lower than or equal to this amount, a line for it is created in the Resource Price Changes window, but with the same unit price as in the Resource Prices window.];
                  ApplicationArea=#Jobs;
                  DecimalPlaces=2:5;
                  SourceExpr=PriceLowerLimit }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Adjustment Factor;
                             ESM=Factor ajuste;
                             FRC=Facteur d'ajustement;
                             ENC=Adjustment Factor];
                  ToolTipML=[ENU=Specifies an adjustment factor to multiply the amounts that you want suggested. By entering an adjustment factor, you can increase or decrease the amounts that are suggested.;
                             ESM=Especifica el factor de ajuste para multiplicar los importes que desea que se sugieran. Si indica un factor de ajuste, puede aumentar o disminuir los importes que se sugieren.;
                             FRC=Sp‚cifie un facteur appliqu‚ pour multiplier les montants que vous souhaitez proposer. En saisissant un facteur appliqu‚, vous pouvez augmenter ou r‚duire les montants propos‚s dans le nouveau budget.;
                             ENC=Specifies an adjustment factor to multiply the amounts that you want suggested. By entering an adjustment factor, you can increase or decrease the amounts that are suggested.];
                  ApplicationArea=#Jobs;
                  DecimalPlaces=0:5;
                  SourceExpr=UnitPricefactor;
                  MinValue=0 }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Rounding Method;
                             ESM=M‚todo redondeo;
                             FRC=M‚thode d'arrondissement;
                             ENC=Rounding Method];
                  ToolTipML=[ENU=Specifies a code for the rounding method that you want to apply to costs or prices that you adjust.;
                             ESM=Especifica el c¢digo del m‚todo de redondeo que desea aplicar a los costos o los precios que ajusta.;
                             FRC=Sp‚cifie un code pour le mode arrondissement que vous souhaitez appliquer aux co–ts ou aux prix ajust‚s.;
                             ENC=Specifies a code for the rounding method that you want to apply to costs or prices that you adjust.];
                  ApplicationArea=#Jobs;
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Create New Prices;
                             ESM=Crear tarifa nueva;
                             FRC=Cr‚er de nouveaux prix;
                             ENC=Create New Prices];
                  ToolTipML=[ENU=Specifies if you want the batch job to create new price suggestions, such as a new combination of currency, job number, or work type. If you only want to adjust existing alternative prices, do not select.;
                             ESM=Especifica si desea que el trabajo por lotes cree nuevas sugerencias de precio (por ejemplo, una nueva combinaci¢n de divisa, n£mero de trabajo o tipo de trabajo). Si solo desea ajustar los precios alternativos existentes, no seleccione esta opci¢n.;
                             FRC=Sp‚cifie si vous souhaitez que le traitement en lot cr‚e des propositions de nouveaux prix (par exemple, une nouvelle combinaison de devise, projet et type de travail). Si vous souhaitez uniquement ajuster d'autres prix existants, n'activez pas cette option.;
                             ENC=Specifies if you want the batch job to create new price suggestions, such as a new combination of currency, job number, or work type. If you only want to adjust existing alternative prices, do not select.];
                  ApplicationArea=#Jobs;
                  SourceExpr=CreateNewPrices }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Processing resources...\\;ESM=Procesando recursos...\\;FRC=Traitement des ressources...\\;ENC=Processing resources...\\';
      Text002@1002 : TextConst 'ENU=Type         #1##########\;ESM=Tipo         #1##########\;FRC=Type         #1##########\;ENC=Type         #1##########\';
      Text003@1003 : TextConst 'ENU=Code         #2##########\;ESM=C¢digo       #2##########\;FRC=Code         #2##########\;ENC=Code         #2##########\';
      RoundingMethod@1008 : Record 42;
      ToCurrency@1007 : Record 4;
      CurrExchRate@1006 : Record 330;
      ToWorkType@1016 : Record 200;
      ResPriceChg@1015 : Record 335;
      ResPriceChg2@1014 : Record 335;
      Currency2@1013 : Record 4;
      ResPrice@1009 : Record 201;
      Window@1005 : Dialog;
      CreateNewPrices@1010 : Boolean;
      UnitPricefactor@1011 : Decimal;
      PriceLowerLimit@1012 : Decimal;
      PriceAlreadyExists@1019 : Boolean;

    PROCEDURE InitializeCopyToResPrice@3(CurrencyCode@1000 : Code[10];WorkTypeCode@1002 : Code[10]);
    BEGIN
      ToCurrency.Code := CurrencyCode;
      ToWorkType.Code := WorkTypeCode;
    END;

    PROCEDURE InitializeRequest@2(PriceLowerLimitFrom@1003 : Decimal;UnitPriceFactorFrom@1004 : Decimal;RoundingMethodCode@1005 : Code[10];CreateNewPricesFrom@1006 : Boolean);
    BEGIN
      PriceLowerLimit := PriceLowerLimitFrom;
      UnitPricefactor := UnitPriceFactorFrom;
      RoundingMethod.Code := RoundingMethodCode;
      CreateNewPrices := CreateNewPricesFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

