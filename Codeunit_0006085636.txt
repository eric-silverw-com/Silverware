OBJECT Codeunit 6085636 Document (UIC) File Interface
{
  OBJECT-PROPERTIES
  {
    Date=02/28/17;
    Time=[ 1:00:00 AM];
    Version List=DCW13.70.00.4.50;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DocFileSystem@1001 : Codeunit 6085641;
      DocBlobStorageMgt@1002 : Codeunit 6085642;
      DCSetup@1000 : Record 6085573;
      GotDCSetup@1003 : Boolean;

    PROCEDURE GetTiffServerFileName@10(VAR Document@1000 : Record 6085601) : Text[1024];
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.GetTiffServerFileName(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.GetTiffServerFileName(Document));
      END;
    END;

    PROCEDURE GetPdfServerFileName@9(VAR Document@1000 : Record 6085601) : Text[1024];
    VAR
      FullFilename@1160040000 : Text[1024];
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.GetPdfServerFileName(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.GetPdfServerFileName(Document));
      END;
    END;

    PROCEDURE GetEMailServerFileName@8(VAR Document@1000 : Record 6085601) : Text[1024];
    VAR
      FullFilename@1160040001 : Text[1024];
      FilenameGuid@1160040000 : Text[50];
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.GetEMailServerFileName(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.GetEMailServerFileName(Document));
      END;
    END;

    PROCEDURE SetTiffFile@2(FilePath@1000 : Text[250];VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.SetTiffFile(FilePath,Document));
        DCSetup."Document Storage Type"::Database :
          EXIT(DocBlobStorageMgt.SetTiffFile(FilePath,Document));
      END;
    END;

    PROCEDURE SetPdfFile@11(FilePath@1000 : Text[250];VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.SetPdfFile(FilePath,Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.SetPdfFile(FilePath,Document));
      END;
    END;

    PROCEDURE SetEmailFile@7(FilePath@1000 : Text[250];VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.SetEmailFile(FilePath,Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.SetEmailFile(FilePath,Document));
      END;
    END;

    PROCEDURE HasTiffFile@5(VAR Document@1000 : Record 6085601) : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.HasTiffFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.HasTiffFile(Document));
      END;
    END;

    PROCEDURE HasPdfFile@6(VAR Document@1000 : Record 6085601) : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.HasPdfFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.HasPdfFile(Document));
      END;
    END;

    PROCEDURE HasEmailFile@18(VAR Document@1000 : Record 6085601) : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.HasEmailFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.HasEmailFile(Document));
      END;
    END;

    PROCEDURE ClearTiffFile@16(VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.ClearTiffFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.ClearTiffFile(Document));
      END;
    END;

    PROCEDURE ClearPdfFile@15(VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.ClearPdfFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.ClearPdfFile(Document));
      END;
    END;

    PROCEDURE ClearEmailFile@13(VAR Document@1001 : Record 6085601) Succes : Boolean;
    BEGIN
      GetDCSetup;
      CASE DCSetup."Document Storage Type" OF
        DCSetup."Document Storage Type"::"File System":
          EXIT(DocFileSystem.ClearEmailFile(Document));
        DCSetup."Document Storage Type"::Database:
          EXIT(DocBlobStorageMgt.ClearEmailFile(Document));
      END;
    END;

    LOCAL PROCEDURE GetDCSetup@4();
    BEGIN
      IF NOT GotDCSetup THEN
        DCSetup.GET;

      IF DCSetup."Document Storage Type" = DCSetup."Document Storage Type"::"File System" THEN
        DocFileSystem.SetDCSetup(DCSetup);
    END;

    PROCEDURE SetDCSetup@3(NewDCSetup@1000 : Record 6085573);
    BEGIN
      DCSetup := NewDCSetup;
      GotDCSetup := TRUE;
    END;

    PROCEDURE SetCurrentCompany@21(NewCompanyName@1000 : Text[50]);
    BEGIN
      DocBlobStorageMgt.SetCurrentCompany(NewCompanyName);
    END;

    BEGIN
    END.
  }
}

