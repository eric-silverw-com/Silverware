OBJECT Codeunit 1313 Correct Posted Purch. Invoice
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00,NAVNA13.00;
  }
  PROPERTIES
  {
    TableNo=122;
    Permissions=TableData 122=rm,
                TableData 124=rm;
    OnRun=VAR
            PurchaseHeader@1001 : Record 38;
            CopyDocMgt@1000 : Codeunit 6620;
            ItemJnlPostLine@1002 : Codeunit 22;
            RedoApplications@1003 : Boolean;
          BEGIN
            RedoApplications := UnapplyCostApplication(ItemJnlPostLine,"No.");

            CLEAR(PurchaseHeader);
            PurchaseHeader."No." := '';
            PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
            PurchaseHeader.INSERT(TRUE);
            CopyDocMgt.SetPropertiesForCreditMemoCorrection;
            CopyDocMgt.CopyPurchaseDocForInvoiceCancelling("No.",PurchaseHeader);
            PurchaseHeader."Vendor Cr. Memo No." := PurchaseHeader."No.";

            CODEUNIT.RUN(CODEUNIT::"Purch.-Post",PurchaseHeader);
            SetTrackInfoForCancellation(Rec);
            IF RedoApplications THEN
              ItemJnlPostLine.RedoApplications;
            COMMIT;
          END;

  }
  CODE
  {
    VAR
      PostedInvoiceIsPaidCorrectErr@1000 : TextConst 'ENU=You cannot correct this posted purchase invoice because it is fully or partially paid.\\To reverse a paid purchase invoice, you must manually create a purchase credit memo.;ESM=No puede corregir esta factura de compra registrada porque est  total o parcialmente pagada.\\Para revertir una factura de compra pagada, debe crear una nota de cr‚dito de compra manualmente.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car elle est totalement ou partiellement pay‚e.\Pour inverser une facture achat pay‚e, vous devez cr‚er une note de cr‚dit achat manuellement.;ENC=You cannot correct this posted purchase invoice because it is fully or partially paid.\\To reverse a paid purchase invoice, you must manually create a purchase credit memo.';
      PostedInvoiceIsPaidCCancelErr@1019 : TextConst 'ENU=You cannot cancel this posted purchase invoice because it is fully or partially paid.\\To reverse a paid purchase invoice, you must manually create a purchase credit memo.;ESM=No puede cancelar esta factura de compra registrada porque est  total o parcialmente pagada.\\Para revertir una factura de compra pagada, debe crear una nota de cr‚dito de compra manualmente.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car elle est totalement ou partiellement pay‚e.\Pour inverser une facture achat pay‚e, vous devez cr‚er une note de cr‚dit achat manuellement.;ENC=You cannot cancel this posted purchase invoice because it is fully or partially paid.\\To reverse a paid purchase invoice, you must manually create a purchase credit memo.';
      AlreadyCorrectedErr@1001 : TextConst 'ENU=You cannot correct this posted purchase invoice because it has been canceled.;ESM=No puede corregir esta factura de compra registrada porque se ha cancelado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car elle a ‚t‚ annul‚e.;ENC=You cannot correct this posted purchase invoice because it has been cancelled.';
      AlreadyCancelledErr@1005 : TextConst 'ENU=You cannot cancel this posted purchase invoice because it has already been canceled.;ESM=No puede cancelar esta factura de compra registrada porque ya se ha cancelado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car elle a d‚j… ‚t‚ annul‚e.;ENC=You cannot cancel this posted purchase invoice because it has already been cancelled.';
      CorrCorrectiveDocErr@1045 : TextConst 'ENU=You cannot correct this posted purchase invoice because it represents a correction of a credit memo.;ESM=No se puede corregir esta factura de compra registrada porque representa una correcci¢n de una nota de cr‚dito.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e, car elle repr‚sente une correction d''une note de cr‚dit.;ENC=You cannot correct this posted purchase invoice because it represents a correction of a credit memo.';
      CancelCorrectiveDocErr@1044 : TextConst 'ENU=You cannot cancel this posted purchase invoice because it represents a correction of a credit memo.;ESM=No se puede cancelar esta factura de compra registrada porque representa una correcci¢n de una nota de cr‚dito.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e, car elle repr‚sente une correction d''une note de cr‚dit.;ENC=You cannot cancel this posted purchase invoice because it represents a correction of a credit memo.';
      VendorIsBlockedCorrectErr@1002 : TextConst '@@@="%1 = Customer name";ENU=You cannot correct this posted purchase invoice because vendor %1 is blocked.;ESM=No puede corregir esta factura de compra registrada porque el proveedor %1 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car le fournisseur %1 est bloqu‚.;ENC=You cannot correct this posted purchase invoice because vendor %1 is blocked.';
      VendorIsBlockedCancelErr@1016 : TextConst '@@@="%1 = Customer name";ENU=You cannot cancel this posted purchase invoice because vendor %1 is blocked.;ESM=No puede cancelar esta factura de compra registrada porque el proveedor %1 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car le fournisseur %1 est bloqu‚.;ENC=You cannot cancel this posted purchase invoice because vendor %1 is blocked.';
      ItemIsBlockedCorrectErr@1003 : TextConst '@@@="%1 = Item No. %2 = Item Description";ENU=You cannot correct this posted purchase invoice because item %1 %2 is blocked.;ESM=No puede corregir esta factura de compra registrada porque el producto %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car l''article %1 %2 est bloqu‚.;ENC=You cannot correct this posted purchase invoice because item %1 %2 is blocked.';
      ItemIsBlockedCancelErr@1017 : TextConst '@@@="%1 = Item No. %2 = Item Description";ENU=You cannot cancel this posted purchase invoice because item %1 %2 is blocked.;ESM=No puede cancelar esta factura de compra registrada porque el producto %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car l''article %1 %2 est bloqu‚.;ENC=You cannot cancel this posted purchase invoice because item %1 %2 is blocked.';
      AccountIsBlockedCorrectErr@1018 : TextConst '@@@="%1 = Table Caption %2 = Account number.";ENU=You cannot correct this posted purchase invoice because %1 %2 is blocked.;ESM=No puede corregir esta factura de compra registrada porque %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car %1 %2 est bloqu‚.;ENC=You cannot correct this posted purchase invoice because %1 %2 is blocked.';
      AccountIsBlockedCancelErr@1025 : TextConst '@@@="%1 = Table Caption %2 = Account number.";ENU=You cannot cancel this posted purchase invoice because %1 %2 is blocked.;ESM=No puede cancelar esta factura de compra registrada porque %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car %1 %2 est bloqu‚.;ENC=You cannot cancel this posted purchase invoice because %1 %2 is blocked.';
      NoFreeInvoiceNoSeriesCorrectErr@1004 : TextConst 'ENU=You cannot correct this posted purchase invoice because no unused invoice numbers are available. \\You must extend the range of the number series for purchase invoices.;ESM=No puede corregir esta factura de compra registrada porque no hay ning£n n£mero de factura sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las facturas de compra.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car il n''existe plus de num‚ro de facture inutilis‚. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des factures achat.;ENC=You cannot correct this posted purchase invoice because no unused invoice numbers are available. \\You must extend the range of the number series for purchase invoices.';
      NoFreeInvoiceNoSeriesCancelErr@1026 : TextConst 'ENU=You cannot cancel this posted purchase invoice because no unused invoice numbers are available. \\You must extend the range of the number series for purchase invoices.;ESM=No puede cancelar esta factura de compra registrada porque no hay ning£n n£mero de factura sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las facturas de compra.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car il n''existe plus de num‚ro de facture inutilis‚. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des factures achat.;ENC=You cannot cancel this posted purchase invoice because no unused invoice numbers are available. \\You must extend the range of the number series for purchase invoices.';
      NoFreeCMSeriesCorrectErr@1013 : TextConst 'ENU=You cannot correct this posted purchase invoice because no unused credit memo numbers are available. \\You must extend the range of the number series for credit memos.;ESM=No puede corregir esta factura de compra registrada porque no hay ning£n n£mero de nota de cr‚dito sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las nota de cr‚ditos.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car il n''existe plus de num‚ro de note de cr‚dit inutilis‚e. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dit.;ENC=You cannot correct this posted purchase invoice because no unused credit memo numbers are available. \\You must extend the range of the number series for credit memos.';
      NoFreeCMSeriesCancelErr@1027 : TextConst 'ENU=You cannot cancel this posted purchase invoice because no unused credit memo numbers are available. \\You must extend the range of the number series for credit memos.;ESM=No puede cancelar esta factura de compra registrada porque no hay ning£n n£mero de nota de cr‚dito sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car il n''existe plus de num‚ro de note de cr‚dit inutilis‚. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dit.;ENC=You cannot cancel this posted purchase invoice because no unused credit memo numbers are available. \\You must extend the range of the number series for credit memos.';
      NoFreePostCMSeriesCorrectErr@1028 : TextConst 'ENU=You cannot correct this posted purchase invoice because no unused posted credit memo numbers are available. \\You must extend the range of the number series for posted credit memos.;ESM=No puede corregir esta factura de compra registrada porque no hay ning£n n£mero de nota de cr‚dito registrada sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito registradas.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car il n''existe plus de num‚ro de note de cr‚dit report‚e inutilis‚. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dit report‚es.;ENC=You cannot correct this posted purchase invoice because no unused posted credit memo numbers are available. \\You must extend the range of the number series for posted credit memos.';
      NoFreePostCMSeriesCancelErr@1029 : TextConst 'ENU=You cannot cancel this posted purchase invoice because no unused posted credit memo numbers are available. \\You must extend the range of the number series for posted credit memos.;ESM=No puede cancelar esta factura de compra registrada porque no hay ning£n n£mero de nota de cr‚dito registrada sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito registradas.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car il n''existe plus de num‚ro de note de cr‚dit report‚e inutilis‚. \\Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dit report‚es.;ENC=You cannot cancel this posted purchase invoice because no unused posted credit memo numbers are available. \\You must extend the range of the number series for posted credit memos.';
      PurchaseLineFromOrderCorrectErr@1006 : TextConst '@@@="%1 = Item no. %2 = Item description";ENU=You cannot correct this posted purchase invoice because item %1 %2 is used on a purchase order.;ESM=No puede corregir esta factura de compra registrada porque el producto %1 %2 se usa en un pedido de compra.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car l''article %1 %2 est utilis‚ dans un bon de commande.;ENC=You cannot correct this posted purchase invoice because item %1 %2 is used on a purchase order.';
      PurchaseLineFromOrderCancelErr@1030 : TextConst '@@@="%1 = Item no. %2 = Item description";ENU=You cannot cancel this posted purchase invoice because item %1 %2 is used on a purchase order.;ESM=No puede cancelar esta factura de compra registrada porque el producto %1 %2 se usa en un pedido de compra.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car l''article %1 %2 est utilis‚ dans un bon de commande.;ENC=You cannot cancel this posted purchase invoice because item %1 %2 is used on a purchase order.';
      ShippedQtyReturnedCorrectErr@1007 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted purchase invoice because item %1 %2 has already been fully or partially returned.;ESM=No puede corregir esta factura de compra registrada porque el producto %1 %2 se ha devuelto total o parcialmente.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car l''article %1 %2 a d‚j… ‚t‚ entiŠrement ou partiellement retourn‚.;ENC=You cannot correct this posted purchase invoice because item %1 %2 has already been fully or partially returned.';
      ShippedQtyReturnedCancelErr@1031 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted purchase invoice because item %1 %2 has already been fully or partially returned.;ESM=No puede cancelar esta factura de compra registrada porque el producto %1 %2 se ha devuelto total o parcialmente.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car l''article %1 %2 a d‚j… ‚t‚ entiŠrement ou partiellement retourn‚.;ENC=You cannot cancel this posted purchase invoice because item %1 %2 has already been fully or partially returned.';
      UsedInJobCorrectErr@1008 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted purchase invoice because item %1 %2 is used in a job.;ESM=No puede corregir esta factura de compra registrada porque el producto %1 %2 se usa en un proyecto.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car l''article %1 %2 est utilis‚ dans un projet.;ENC=You cannot correct this posted purchase invoice because item %1 %2 is used in a job.';
      UsedInJobCancelErr@1032 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted purchase invoice because item %1 %2 is used in a job.;ESM=No puede cancelar esta factura de compra registrada porque el producto %1 %2 se usa en un proyecto.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car l''article %1 %2 est utilis‚ dans un projet.;ENC=You cannot cancel this posted purchase invoice because item %1 %2 is used in a job.';
      PostingNotAllowedCorrectErr@1009 : TextConst 'ENU=You cannot correct this posted purchase invoice because it was posted in a posting period that is closed.;ESM=No puede corregir esta factura de compra registrada porque se registr¢ en un per¡odo de registro que est  cerrado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car elle a ‚t‚ report‚e au cours d''une p‚riode qui est ferm‚e.;ENC=You cannot correct this posted purchase invoice because it was posted in a posting period that is closed.';
      PostingNotAllowedCancelErr@1033 : TextConst 'ENU=You cannot cancel this posted purchase invoice because it was posted in a posting period that is closed.;ESM=No puede cancelar esta factura de compra registrada porque se registr¢ en un per¡odo de registro que est  cerrado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car elle a ‚t‚ report‚e au cours d''une p‚riode qui est ferm‚e.;ENC=You cannot cancel this posted purchase invoice because it was posted in a posting period that is closed.';
      InvoiceIsBasedOnOrderCorrectErr@1010 : TextConst 'ENU=You cannot correct this posted purchase invoice because the invoice is based on a purchase order.;ESM=No puede corregir esta factura de compra registrada porque la factura se basa en un pedido de compra.;FRC=Vous ne pouvez pas corriger cette facture achat report‚e car elle est bas‚e sur un bon de commande.;ENC=You cannot correct this posted purchase invoice because the invoice is based on a purchase order.';
      InvoiceIsBasedOnOrderCancelErr@1034 : TextConst 'ENU=You cannot cancel this posted purchase invoice because the invoice is based on a purchase order.;ESM=No puede cancelar esta factura de compra registrada porque la factura se basa en un pedido de compra.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e car elle est bas‚e sur un bon de commande.;ENC=You cannot cancel this posted purchase invoice because the invoice is based on a purchase order.';
      LineTypeNotAllowedCorrectErr@1012 : TextConst '@@@="%1 = Item no. %2 = Item description %3 = Item type.";ENU=You cannot correct this posted purchase invoice because the purchase invoice line for %1 %2 is of type %3, which is not allowed on a simplified purchase invoice.;ESM=No puede corregir esta factura de compra registrada porque la l¡nea de la factura de compra para %1 %2 es de tipo %3, que no se permite en una factura de compra simplificada.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car la ligne de facture d''achat de %1 %2 est de type %3, ce qui n''est pas autoris‚ sur une facture d''achat simplifi‚e.;ENC=You cannot correct this posted purchase invoice because the purchase invoice line for %1 %2 is of type %3, which is not allowed on a simplified purchase invoice.';
      LineTypeNotAllowedCancelErr@1036 : TextConst '@@@="%1 = Item no. %2 = Item description %3 = Item type.";ENU=You cannot cancel this posted purchase invoice because the purchase invoice line for %1 %2 is of type %3, which is not allowed on a simplified purchase invoice.;ESM=No puede cancelar esta factura de compra registrada porque la l¡nea de la factura de compra para %1 %2 es de tipo %3, que no se permite en una factura de compra simplificada.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car la ligne de facture d''achat de %1 %2 est de type %3, ce qui n''est pas autoris‚ sur une facture d''achat simplifi‚e.;ENC=You cannot cancel this posted purchase invoice because the purchase invoice line for %1 %2 is of type %3, which is not allowed on a simplified purchase invoice.';
      CancellingOnly@1014 : Boolean;
      InvalidDimCodeCorrectErr@1037 : TextConst '@@@="%1 = Table caption %2 = Account number %3 = Item no. %4 = Item description.";ENU=You cannot correct this posted purchase invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being canceled.;ESM=No puede corregir esta factura de compra registrada porque la configuraci¢n de reglas de dimensiones de la cuenta ''%1'' %2 impide que se cancele %3 %4.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car la configuration de la rŠgle de dimension pour le compte ®ÿ%1ÿ¯ %2 empˆche l''annulation de %3 %4.;ENC=You cannot correct this posted purchase invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being cancelled.';
      InvalidDimCodeCancelErr@1038 : TextConst '@@@="%1 = Table caption %2 = Account number %3 = Item no. %4 = Item description.";ENU=You cannot cancel this posted purchase invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being canceled.;ESM=No puede cancelar esta factura de compra registrada porque la configuraci¢n de reglas de dimensi¢n de la cuenta ''%1'' %2 impide que se cancele %3 %4.;FRC=Vous ne pouvez pas annuler cette facture achat report‚e, car la configuration de la rŠgle de dimension pour le compte ®ÿ%1ÿ¯ %2 empˆche l''annulation de %3 %4.;ENC=You cannot cancel this posted purchase invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being cancelled.';
      InvalidDimCombinationCorrectErr@1023 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted purchase invoice because the dimension combination for item %1 %2 is not allowed.;ESM=No puede corregir esta factura de compra registrada porque la combinaci¢n de dimensiones para el producto %1 %2 no est  permitida.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car la combinaison de dimensions pour l''article %1 %2 n''est pas autoris‚e.;ENC=You cannot correct this posted purchase invoice because the dimension combination for item %1 %2 is not allowed.';
      InvalidDimCombinationCancelErr@1039 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted purchase invoice because the dimension combination for item %1 %2 is not allowed.;ESM=No puede cancelar esta factura de compra registrada porque la combinaci¢n de dimensiones para el producto %1 %2 no est  permitida.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car la combinaison de dimensions pour l''article %1 %2 n''est pas autoris‚e.;ENC=You cannot cancel this posted purchase invoice because the dimension combination for item %1 %2 is not allowed.';
      InvalidDimCombHeaderCorrectErr@1011 : TextConst 'ENU=You cannot correct this posted purchase invoice because the combination of dimensions on the invoice is blocked.;ESM=No puede corregir esta factura de compra registrada porque la combinaci¢n de dimensiones de la factura est  bloqueada.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car la combinaison de dimensions sur la facture est bloqu‚e.;ENC=You cannot correct this posted purchase invoice because the combination of dimensions on the invoice is blocked.';
      InvalidDimCombHeaderCancelErr@1035 : TextConst 'ENU=You cannot cancel this posted purchase invoice because the combination of dimensions on the invoice is blocked.;ESM=No puede cancelar esta factura de compra registrada porque la combinaci¢n de dimensiones de la factura est  bloqueada.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car la combinaison de dimensions sur la facture est bloqu‚e.;ENC=You cannot cancel this posted purchase invoice because the combination of dimensions on the invoice is blocked.';
      ExternalDocCorrectErr@1015 : TextConst 'ENU=You cannot correct this posted purchase invoice because the external document number is required on the invoice.;ESM=No puede corregir esta factura de compra registrada porque el n£mero de documento externo se requiere en la factura.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car le num‚ro de document externe est obligatoire sur la facture.;ENC=You cannot correct this posted purchase invoice because the external document number is required on the invoice.';
      ExternalDocCancelErr@1040 : TextConst 'ENU=You cannot cancel this posted purchase invoice because the external document number is required on the invoice.;ESM=No puede cancelar esta factura de compra registrada porque el n£mero de documento externo se requiere en la factura.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car le num‚ro de document externe est obligatoire sur la facture.;ENC=You cannot cancel this posted purchase invoice because the external document number is required on the invoice.';
      InventoryPostClosedCorrectErr@1041 : TextConst 'ENU=You cannot correct this posted purchase invoice because the posting inventory period is already closed.;ESM=No puede corregir esta factura de compra registrada porque el per¡odo de inventario de registro ya est  cerrado.;FRC=Vous ne pouvez pas corriger cette facture d''achat report‚e car la p‚riode d''inventaire de report est d‚j… cl“tur‚e.;ENC=You cannot correct this posted purchase invoice because the posting inventory period is already closed.';
      InventoryPostClosedCancelErr@1042 : TextConst 'ENU=You cannot cancel this posted purchase invoice because the posting inventory period is already closed.;ESM=No puede cancelar esta factura de compra registrada porque el per¡odo de inventario de registro ya est  cerrado.;FRC=Vous ne pouvez pas annuler cette facture d''achat report‚e car la p‚riode d''inventaire de report est d‚j… cl“tur‚e.;ENC=You cannot cancel this posted purchase invoice because the posting inventory period is already closed.';
      PostingCreditMemoFailedOpenPostedCMQst@1020 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1\\A credit memo is posted. Do you want to open the posted credit memo?;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1\\Se ha registrado una nota de cr‚dito. ¨Desea abrir la nota cr‚dito regis.?;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivante: \\%1\\Une note de cr‚dit est report‚e. Voulez-vous ouvrir la note de cr‚dit report‚e?;ENC=Cancelling the invoice failed because of the following error: \\%1\\A credit memo is posted. Do you want to open the posted credit memo?';
      PostingCreditMemoFailedOpenCMQst@1021 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1\\A credit memo is created but not posted. Do you want to open the credit memo?;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1\\Se ha creado una nota de cr‚dito pero no se ha registrado. ¨Desea abrir la nota de cr‚dito?;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivanteÿ: \\%1\\Une note de cr‚dit est cr‚‚e mais pas report‚e. Voulez-vous ouvrir la note de cr‚dit?;ENC=Cancelling the invoice failed because of the following error: \\%1\\A credit memo is created but not posted. Do you want to open the credit memo?';
      CreatingCreditMemoFailedNothingCreatedErr@1022 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1.;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1.;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivanteÿ: \\%1.;ENC=Cancelling the invoice failed because of the following error: \\%1.';
      ErrorType@1024 : 'IsPaid,VendorBlocked,ItemBlocked,AccountBlocked,IsCorrected,IsCorrective,SerieNumInv,SerieNumCM,SerieNumPostCM,ItemIsReturned,FromOrder,PostingNotAllowed,LineFromOrder,WrongItemType,LineFromJob,DimErr,DimCombErr,DimCombHeaderErr,ExtDocErr,InventoryPostClosed';
      WrongDocumentTypeForCopyDocumentErr@1043 : TextConst 'ENU=You cannot correct or cancel this type of document.;ESM=No puede corregir ni cancelar este tipo de documento.;FRC=Vous ne pouvez pas corriger ou annuler ce type de document.;ENC=You cannot correct or cancel this type of document.';

    PROCEDURE CancelPostedInvoice@4(VAR PurchInvHeader@1000 : Record 122) : Boolean;
    BEGIN
      CancellingOnly := TRUE;
      EXIT(CreateCreditMemo(PurchInvHeader));
    END;

    LOCAL PROCEDURE CreateCreditMemo@13(VAR PurchInvHeader@1000 : Record 122) : Boolean;
    VAR
      PurchaseHeader@1004 : Record 38;
      PurchCrMemoHdr@1005 : Record 124;
    BEGIN
      TestCorrectInvoiceIsAllowed(PurchInvHeader,CancellingOnly);
      IF NOT CODEUNIT.RUN(CODEUNIT::"Correct Posted Purch. Invoice",PurchInvHeader) THEN BEGIN
        PurchCrMemoHdr.SETRANGE("Applies-to Doc. No.",PurchInvHeader."No.");
        IF PurchCrMemoHdr.FINDFIRST THEN BEGIN
          IF CONFIRM(STRSUBSTNO(PostingCreditMemoFailedOpenPostedCMQst,GETLASTERRORTEXT)) THEN
            PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
        END ELSE BEGIN
          PurchaseHeader.SETRANGE("Applies-to Doc. No.",PurchInvHeader."No.");
          IF PurchaseHeader.FINDFIRST THEN BEGIN
            IF CONFIRM(STRSUBSTNO(PostingCreditMemoFailedOpenCMQst,GETLASTERRORTEXT)) THEN
              PAGE.RUN(PAGE::"Purchase Credit Memo",PurchaseHeader);
          END ELSE
            ERROR(CreatingCreditMemoFailedNothingCreatedErr,GETLASTERRORTEXT);
        END;
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CreateCopyDocument@16(VAR PurchInvHeader@1002 : Record 122;VAR PurchaseHeader@1001 : Record 38;DocumentType@1000 : Option;SkipCopyFromDescription@1004 : Boolean);
    VAR
      CopyDocMgt@1003 : Codeunit 6620;
    BEGIN
      CLEAR(PurchaseHeader);
      PurchaseHeader."Document Type" := DocumentType;
      PurchaseHeader."No." := '';
      PurchaseHeader.SetAllowSelectNoSeries;
      PurchaseHeader.INSERT(TRUE);

      CASE DocumentType OF
        PurchaseHeader."Document Type"::"Credit Memo":
          CopyDocMgt.SetPropertiesForCreditMemoCorrection;
        PurchaseHeader."Document Type"::Invoice:
          CopyDocMgt.SetPropertiesForInvoiceCorrection(SkipCopyFromDescription);
        ELSE
          ERROR(WrongDocumentTypeForCopyDocumentErr);
      END;

      CopyDocMgt.CopyPurchaseDocForInvoiceCancelling(PurchInvHeader."No.",PurchaseHeader);
    END;

    [External]
    PROCEDURE CreateCreditMemoCopyDocument@11(VAR PurchInvHeader@1001 : Record 122;VAR PurchaseHeader@1000 : Record 38);
    BEGIN
      CreateCopyDocument(PurchInvHeader,PurchaseHeader,PurchaseHeader."Document Type"::"Credit Memo",FALSE);
    END;

    PROCEDURE CancelPostedInvoiceStartNewInvoice@1(VAR PurchInvHeader@1000 : Record 122;VAR PurchaseHeader@1002 : Record 38);
    BEGIN
      CancellingOnly := FALSE;

      IF CreateCreditMemo(PurchInvHeader) THEN BEGIN
        CreateCopyDocument(PurchInvHeader,PurchaseHeader,PurchaseHeader."Document Type"::Invoice,TRUE);
        COMMIT;
      END;
    END;

    [External]
    PROCEDURE TestCorrectInvoiceIsAllowed@5(VAR PurchInvHeader@1000 : Record 122;Cancelling@1001 : Boolean);
    BEGIN
      CancellingOnly := Cancelling;

      PurchInvHeader.CALCFIELDS(Amount);
      PurchInvHeader.TESTFIELD(Amount);
      TestIfPostingIsAllowed(PurchInvHeader);
      TestIfInvoiceIsCorrectedOnce(PurchInvHeader);
      TestIfInvoiceIsNotCorrectiveDoc(PurchInvHeader);
      TestIfInvoiceIsPaid(PurchInvHeader);
      TestIfVendorIsBlocked(PurchInvHeader,PurchInvHeader."Buy-from Vendor No.");
      TestIfVendorIsBlocked(PurchInvHeader,PurchInvHeader."Pay-to Vendor No.");
      TestVendorDimension(PurchInvHeader,PurchInvHeader."Pay-to Vendor No.");
      TestDimensionOnHeader(PurchInvHeader);
      TestPurchaseLines(PurchInvHeader);
      TestIfAnyFreeNumberSeries(PurchInvHeader);
      TestExternalDocument(PurchInvHeader);
      TestInventoryPostingClosed(PurchInvHeader);
    END;

    LOCAL PROCEDURE SetTrackInfoForCancellation@2(VAR PurchInvHeader@1000 : Record 122);
    VAR
      PurchCrMemoHdr@1001 : Record 124;
      CancelledDocument@1002 : Record 1900;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Applies-to Doc. No.",PurchInvHeader."No.");
      IF PurchCrMemoHdr.FINDLAST THEN
        CancelledDocument.InsertPurchInvToCrMemoCancelledDocument(PurchInvHeader."No.",PurchCrMemoHdr."No.");
    END;

    LOCAL PROCEDURE TestDimensionOnHeader@15(PurchInvHeader@1000 : Record 122);
    VAR
      DimensionManagement@1001 : Codeunit 408;
    BEGIN
      IF NOT DimensionManagement.CheckDimIDComb(PurchInvHeader."Dimension Set ID") THEN
        ErrorHelperHeader(ErrorType::DimCombHeaderErr,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestIfVendorIsBlocked@9(PurchInvHeader@1000 : Record 122;VendNo@1005 : Code[20]);
    VAR
      Vendor@1001 : Record 23;
    BEGIN
      Vendor.GET(VendNo);
      IF Vendor.Blocked IN [Vendor.Blocked::All] THEN
        ErrorHelperHeader(ErrorType::VendorBlocked,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestVendorDimension@3(PurchInvHeader@1000 : Record 122;VendNo@1005 : Code[20]);
    VAR
      Vendor@1001 : Record 23;
      DimensionManagement@1004 : Codeunit 408;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      Vendor.GET(VendNo);
      TableID[1] := DATABASE::Vendor;
      No[1] := Vendor."No.";
      IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,PurchInvHeader."Dimension Set ID") THEN
        ErrorHelperAccount(ErrorType::DimErr,Vendor.TABLECAPTION,Vendor."No.",Vendor."No.",Vendor.Name);
    END;

    LOCAL PROCEDURE TestPurchaseLines@6(PurchInvHeader@1000 : Record 122);
    VAR
      PurchRcptLine@1004 : Record 121;
      PurchInvLine@1001 : Record 123;
      Item@1002 : Record 27;
      DimensionManagement@1007 : Codeunit 408;
      ReceivedQtyNoReturned@1005 : Decimal;
      RevUnitCostLCY@1006 : Decimal;
      TableID@1013 : ARRAY [10] OF Integer;
      No@1014 : ARRAY [10] OF Code[20];
    BEGIN
      PurchInvLine.SETRANGE("Document No.",PurchInvHeader."No.");
      IF PurchInvLine.FIND('-') THEN
        REPEAT
          IF NOT IsCommentLine(PurchInvLine) THEN BEGIN
            IF PurchRcptLine.GET(PurchInvLine."Receipt No.",PurchInvLine."Receipt Line No.") THEN BEGIN
              IF PurchRcptLine."Order No." <> '' THEN
                ErrorHelperLine(ErrorType::LineFromOrder,PurchInvLine);
            END;

            IF (NOT PurchInvLine.IsCancellationSupported) AND NotInvRndAccount(PurchInvHeader."Vendor Posting Group",PurchInvLine) THEN
              ErrorHelperLine(ErrorType::WrongItemType,PurchInvLine);

            IF PurchInvLine.Type = PurchInvLine.Type::Item THEN BEGIN
              Item.GET(PurchInvLine."No.");

              IF Item.IsInventoriableType THEN
                IF (PurchInvLine.Quantity > 0) AND (PurchInvLine."Job No." = '') AND WasNotCancelled(PurchInvHeader."No.") THEN BEGIN
                  PurchInvLine.CalcReceivedPurchNotReturned(ReceivedQtyNoReturned,RevUnitCostLCY,FALSE);
                  IF PurchInvLine.Quantity <> ReceivedQtyNoReturned THEN
                    ErrorHelperLine(ErrorType::ItemIsReturned,PurchInvLine);
                END;

              IF Item.Blocked THEN
                ErrorHelperLine(ErrorType::ItemBlocked,PurchInvLine);

              TableID[1] := DATABASE::Item;
              No[1] := PurchInvLine."No.";
              IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,PurchInvLine."Dimension Set ID") THEN
                ErrorHelperAccount(ErrorType::DimErr,Item.TABLECAPTION,No[1],Item."No.",Item.Description);

              IF Item.IsInventoriableType THEN
                TestInventoryPostingSetup(PurchInvLine);

              TestGenPostingSetup(PurchInvLine);
              TestVendorPostingGroup(PurchInvLine,PurchInvHeader."Vendor Posting Group");
              TestVATPostingSetup(PurchInvLine);

              IF NOT DimensionManagement.CheckDimIDComb(PurchInvLine."Dimension Set ID") THEN
                ErrorHelperLine(ErrorType::DimCombErr,PurchInvLine);
            END;
          END;
        UNTIL PurchInvLine.NEXT = 0;
    END;

    LOCAL PROCEDURE TestGLAccount@21(AccountNo@1000 : Code[20];PurchInvLine@1005 : Record 123);
    VAR
      GLAccount@1001 : Record 15;
      Item@1006 : Record 27;
      DimensionManagement@1004 : Codeunit 408;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      GLAccount.GET(AccountNo);
      IF GLAccount.Blocked THEN
        ErrorHelperAccount(ErrorType::AccountBlocked,GLAccount.TABLECAPTION,AccountNo,'','');
      TableID[1] := DATABASE::"G/L Account";
      No[1] := AccountNo;
      Item.GET(PurchInvLine."No.");
      IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,PurchInvLine."Dimension Set ID") THEN
        ErrorHelperAccount(ErrorType::DimErr,GLAccount.TABLECAPTION,AccountNo,Item."No.",Item.Description);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsPaid@7(PurchInvHeader@1000 : Record 122);
    BEGIN
      PurchInvHeader.CALCFIELDS("Amount Including VAT");
      PurchInvHeader.CALCFIELDS("Remaining Amount");
      IF PurchInvHeader."Amount Including VAT" <> PurchInvHeader."Remaining Amount" THEN
        ErrorHelperHeader(ErrorType::IsPaid,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsCorrectedOnce@10(PurchInvHeader@1000 : Record 122);
    VAR
      CancelledDocument@1001 : Record 1900;
    BEGIN
      IF CancelledDocument.FindPurchCancelledInvoice(PurchInvHeader."No.") THEN
        ErrorHelperHeader(ErrorType::IsCorrected,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsNotCorrectiveDoc@32(PurchInvHeader@1000 : Record 122);
    VAR
      CancelledDocument@1001 : Record 1900;
    BEGIN
      IF CancelledDocument.FindPurchCorrectiveInvoice(PurchInvHeader."No.") THEN
        ErrorHelperHeader(ErrorType::IsCorrective,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestIfPostingIsAllowed@12(PurchInvHeader@1000 : Record 122);
    VAR
      GenJnlCheckLine@1001 : Codeunit 11;
    BEGIN
      IF GenJnlCheckLine.DateNotAllowed(PurchInvHeader."Posting Date") THEN
        ErrorHelperHeader(ErrorType::PostingNotAllowed,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestIfAnyFreeNumberSeries@14(PurchInvHeader@1003 : Record 122);
    VAR
      PurchasesPayablesSetup@1001 : Record 312;
      NoSeriesManagement@1002 : Codeunit 396;
      PostingDate@1000 : Date;
    BEGIN
      PostingDate := WORKDATE;
      PurchasesPayablesSetup.GET;

      IF NoSeriesManagement.TryGetNextNo(PurchasesPayablesSetup."Credit Memo Nos.",PostingDate) = '' THEN
        ErrorHelperHeader(ErrorType::SerieNumCM,PurchInvHeader);

      IF NoSeriesManagement.TryGetNextNo(PurchasesPayablesSetup."Posted Credit Memo Nos.",PostingDate) = '' THEN
        ErrorHelperHeader(ErrorType::SerieNumPostCM,PurchInvHeader);

      IF (NOT CancellingOnly) AND (NoSeriesManagement.TryGetNextNo(PurchasesPayablesSetup."Invoice Nos.",PostingDate) = '') THEN
        ErrorHelperHeader(ErrorType::SerieNumInv,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestExternalDocument@8(PurchInvHeader@1000 : Record 122);
    VAR
      PurchasesPayablesSetup@1001 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      IF (PurchInvHeader."Vendor Invoice No." = '') AND PurchasesPayablesSetup."Ext. Doc. No. Mandatory" THEN
        ErrorHelperHeader(ErrorType::ExtDocErr,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestInventoryPostingClosed@26(PurchInvHeader@1000 : Record 122);
    VAR
      InventoryPeriod@1001 : Record 5814;
    BEGIN
      InventoryPeriod.SETRANGE(Closed,TRUE);
      InventoryPeriod.SETFILTER("Ending Date",'>=%1',PurchInvHeader."Posting Date");
      IF InventoryPeriod.FINDFIRST THEN
        ErrorHelperHeader(ErrorType::InventoryPostClosed,PurchInvHeader);
    END;

    LOCAL PROCEDURE TestGenPostingSetup@20(PurchInvLine@1000 : Record 123);
    VAR
      GenPostingSetup@1001 : Record 252;
    BEGIN
      IF PurchInvLine.Type <> PurchInvLine.Type::"G/L Account" THEN
        WITH GenPostingSetup DO BEGIN
          GET(PurchInvLine."Gen. Bus. Posting Group",PurchInvLine."Gen. Prod. Posting Group");
          TESTFIELD("Purch. Account");
          TestGLAccount("Purch. Account",PurchInvLine);
          TESTFIELD("Purch. Credit Memo Account");
          TestGLAccount("Purch. Credit Memo Account",PurchInvLine);
          TESTFIELD("Direct Cost Applied Account");
          TestGLAccount("Direct Cost Applied Account",PurchInvLine);
          TESTFIELD("Purch. Line Disc. Account");
          TestGLAccount("Purch. Line Disc. Account",PurchInvLine);
        END;
    END;

    LOCAL PROCEDURE TestVendorPostingGroup@27(PurchInvLine@1000 : Record 123;VendorPostingGr@1002 : Code[20]);
    VAR
      VendorPostingGroup@1001 : Record 93;
    BEGIN
      WITH VendorPostingGroup DO BEGIN
        GET(VendorPostingGr);
        TESTFIELD("Payables Account");
        TestGLAccount("Payables Account",PurchInvLine);
      END;
    END;

    LOCAL PROCEDURE TestVATPostingSetup@29(PurchInvLine@1000 : Record 123);
    VAR
      VATPostingSetup@1001 : Record 325;
    BEGIN
      WITH VATPostingSetup DO BEGIN
        GET(PurchInvLine."VAT Bus. Posting Group",PurchInvLine."VAT Prod. Posting Group");
        IF "VAT Calculation Type" <> "VAT Calculation Type"::"Sales Tax" THEN BEGIN
          TESTFIELD("Purchase VAT Account");
          TestGLAccount("Purchase VAT Account",PurchInvLine);
        END;
      END;
    END;

    LOCAL PROCEDURE TestInventoryPostingSetup@39(PurchInvLine@1000 : Record 123);
    VAR
      InventoryPostingSetup@1001 : Record 5813;
    BEGIN
      WITH InventoryPostingSetup DO BEGIN
        GET(PurchInvLine."Location Code",PurchInvLine."Posting Group");
        TESTFIELD("Inventory Account");
        TestGLAccount("Inventory Account",PurchInvLine);
      END;
    END;

    LOCAL PROCEDURE IsCommentLine@18(PurchInvLine@1000 : Record 123) : Boolean;
    BEGIN
      EXIT((PurchInvLine.Type = PurchInvLine.Type::" ") OR (PurchInvLine."No." = ''));
    END;

    LOCAL PROCEDURE WasNotCancelled@31(InvNo@1000 : Code[20]) : Boolean;
    VAR
      PurchCrMemoHdr@1001 : Record 124;
    BEGIN
      PurchCrMemoHdr.SETRANGE("Applies-to Doc. Type",PurchCrMemoHdr."Applies-to Doc. Type"::Invoice);
      PurchCrMemoHdr.SETRANGE("Applies-to Doc. No.",InvNo);
      EXIT(PurchCrMemoHdr.ISEMPTY);
    END;

    LOCAL PROCEDURE NotInvRndAccount@19(VendorPostingGroupCode@1000 : Code[20];PurchInvLine@1003 : Record 123) : Boolean;
    VAR
      VendorPostingGroup@1001 : Record 93;
    BEGIN
      IF PurchInvLine.Type <> PurchInvLine.Type::"G/L Account" THEN
        EXIT(TRUE);

      VendorPostingGroup.GET(VendorPostingGroupCode);
      EXIT((VendorPostingGroup."Invoice Rounding Account" <> PurchInvLine."No.") OR (NOT PurchInvLine."System-Created Entry"));
    END;

    LOCAL PROCEDURE UnapplyCostApplication@25(VAR ItemJnlPostLine@1001 : Codeunit 22;InvNo@1000 : Code[20]) : Boolean;
    VAR
      TempItemLedgEntry@1003 : TEMPORARY Record 32;
      TempItemApplicationEntry@1002 : TEMPORARY Record 339;
    BEGIN
      FindItemLedgEntries(TempItemLedgEntry,InvNo);
      IF FindAppliedInbndEntries(TempItemApplicationEntry,TempItemLedgEntry) THEN BEGIN
        REPEAT
          ItemJnlPostLine.UnApply(TempItemApplicationEntry);
        UNTIL TempItemApplicationEntry.NEXT = 0;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE FindItemLedgEntries@30(VAR ItemLedgEntry@1002 : Record 32;InvNo@1000 : Code[20]);
    VAR
      PurchInvLine@1001 : Record 123;
    BEGIN
      WITH PurchInvLine DO BEGIN
        SETRANGE("Document No.",InvNo);
        SETRANGE(Type,Type::Item);
        IF FINDSET THEN
          REPEAT
            GetItemLedgEntries(ItemLedgEntry,FALSE);
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE FindAppliedInbndEntries@28(VAR TempItemApplicationEntry@1000 : TEMPORARY Record 339;VAR ItemLedgEntry@1001 : Record 32) : Boolean;
    VAR
      ItemApplicationEntry@1002 : Record 339;
    BEGIN
      TempItemApplicationEntry.RESET;
      TempItemApplicationEntry.DELETEALL;
      IF ItemLedgEntry.FINDSET THEN
        REPEAT
          IF ItemApplicationEntry.AppliedOutbndEntryExists(ItemLedgEntry."Entry No.",TRUE,FALSE) THEN
            REPEAT
              TempItemApplicationEntry := ItemApplicationEntry;
              IF NOT TempItemApplicationEntry.FIND THEN
                TempItemApplicationEntry.INSERT;
            UNTIL ItemApplicationEntry.NEXT = 0;
        UNTIL ItemLedgEntry.NEXT = 0;
      EXIT(TempItemApplicationEntry.FINDSET);
    END;

    LOCAL PROCEDURE ErrorHelperHeader@22(ErrorOption@1000 : Option;PurchInvHeader@1001 : Record 122);
    VAR
      Vendor@1003 : Record 23;
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::IsPaid:
            ERROR(PostedInvoiceIsPaidCCancelErr);
          ErrorType::VendorBlocked:
            BEGIN
              Vendor.GET(PurchInvHeader."Pay-to Vendor No.");
              ERROR(VendorIsBlockedCancelErr,Vendor.Name);
            END;
          ErrorType::IsCorrected:
            ERROR(AlreadyCancelledErr);
          ErrorType::IsCorrective:
            ERROR(CancelCorrectiveDocErr);
          ErrorType::SerieNumInv:
            ERROR(NoFreeInvoiceNoSeriesCancelErr);
          ErrorType::SerieNumCM:
            ERROR(NoFreeCMSeriesCancelErr);
          ErrorType::SerieNumPostCM:
            ERROR(NoFreePostCMSeriesCancelErr);
          ErrorType::FromOrder:
            ERROR(InvoiceIsBasedOnOrderCancelErr);
          ErrorType::PostingNotAllowed:
            ERROR(PostingNotAllowedCancelErr);
          ErrorType::ExtDocErr:
            ERROR(ExternalDocCancelErr);
          ErrorType::InventoryPostClosed:
            ERROR(InventoryPostClosedCancelErr);
          ErrorType::DimCombHeaderErr:
            ERROR(InvalidDimCombHeaderCancelErr);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::IsPaid:
            ERROR(PostedInvoiceIsPaidCorrectErr);
          ErrorType::VendorBlocked:
            BEGIN
              Vendor.GET(PurchInvHeader."Pay-to Vendor No.");
              ERROR(VendorIsBlockedCorrectErr,Vendor.Name);
            END;
          ErrorType::IsCorrected:
            ERROR(AlreadyCorrectedErr);
          ErrorType::IsCorrective:
            ERROR(CorrCorrectiveDocErr);
          ErrorType::SerieNumInv:
            ERROR(NoFreeInvoiceNoSeriesCorrectErr);
          ErrorType::SerieNumPostCM:
            ERROR(NoFreePostCMSeriesCorrectErr);
          ErrorType::SerieNumCM:
            ERROR(NoFreeCMSeriesCorrectErr);
          ErrorType::FromOrder:
            ERROR(InvoiceIsBasedOnOrderCorrectErr);
          ErrorType::PostingNotAllowed:
            ERROR(PostingNotAllowedCorrectErr);
          ErrorType::ExtDocErr:
            ERROR(ExternalDocCorrectErr);
          ErrorType::InventoryPostClosed:
            ERROR(InventoryPostClosedCorrectErr);
          ErrorType::DimCombHeaderErr:
            ERROR(InvalidDimCombHeaderCorrectErr);
        END;
    END;

    LOCAL PROCEDURE ErrorHelperLine@23(ErrorOption@1000 : Option;PurchInvLine@1001 : Record 123);
    VAR
      Item@1002 : Record 27;
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::ItemBlocked:
            BEGIN
              Item.GET(PurchInvLine."No.");
              ERROR(ItemIsBlockedCancelErr,Item."No.",Item.Description);
            END;
          ErrorType::ItemIsReturned:
            BEGIN
              Item.GET(PurchInvLine."No.");
              ERROR(ShippedQtyReturnedCancelErr,Item."No.",Item.Description);
            END;
          ErrorType::LineFromOrder:
            ERROR(PurchaseLineFromOrderCancelErr,PurchInvLine."No.",PurchInvLine.Description);
          ErrorType::WrongItemType:
            ERROR(LineTypeNotAllowedCancelErr,PurchInvLine."No.",PurchInvLine.Description,PurchInvLine.Type);
          ErrorType::LineFromJob:
            ERROR(UsedInJobCancelErr,PurchInvLine."No.",PurchInvLine.Description);
          ErrorType::DimCombErr:
            ERROR(InvalidDimCombinationCancelErr,PurchInvLine."No.",PurchInvLine.Description);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::ItemBlocked:
            BEGIN
              Item.GET(PurchInvLine."No.");
              ERROR(ItemIsBlockedCorrectErr,Item."No.",Item.Description);
            END;
          ErrorType::ItemIsReturned:
            BEGIN
              Item.GET(PurchInvLine."No.");
              ERROR(ShippedQtyReturnedCorrectErr,Item."No.",Item.Description);
            END;
          ErrorType::LineFromOrder:
            ERROR(PurchaseLineFromOrderCorrectErr,PurchInvLine."No.",PurchInvLine.Description);
          ErrorType::WrongItemType:
            ERROR(LineTypeNotAllowedCorrectErr,PurchInvLine."No.",PurchInvLine.Description,PurchInvLine.Type);
          ErrorType::LineFromJob:
            ERROR(UsedInJobCorrectErr,PurchInvLine."No.",PurchInvLine.Description);
          ErrorType::DimCombErr:
            ERROR(InvalidDimCombinationCorrectErr,PurchInvLine."No.",PurchInvLine.Description);
        END;
    END;

    LOCAL PROCEDURE ErrorHelperAccount@24(ErrorOption@1000 : Option;AccountNo@1001 : Code[20];AccountCaption@1002 : Text;No@1003 : Code[20];Name@1004 : Text);
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::AccountBlocked:
            ERROR(AccountIsBlockedCancelErr,AccountCaption,AccountNo);
          ErrorType::DimErr:
            ERROR(InvalidDimCodeCancelErr,AccountCaption,AccountNo,No,Name);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::AccountBlocked:
            ERROR(AccountIsBlockedCorrectErr,AccountCaption,AccountNo);
          ErrorType::DimErr:
            ERROR(InvalidDimCodeCorrectErr,AccountCaption,AccountNo,No,Name);
        END;
    END;

    BEGIN
    END.
  }
}

