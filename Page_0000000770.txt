OBJECT Page 770 Sales Performance
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:29 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Sales Performance;
    SourceTable=Table485;
    PageType=CardPart;
    ActionList=ACTIONS
    {
      { 23      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;Action    ;
                      Name=SelectChart;
                      CaptionML=ENU=Select Chart;
                      ToolTipML=ENU=Select the analysis report that the chart will be based on.;
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectChart;
                      OnAction=BEGIN
                                 IF AnalysisReportChartMgt.SelectChart(AnalysisReportChartSetup,Rec) THEN
                                   UpdateChart(Period::" ");
                               END;
                                }
      { 5       ;1   ;Separator  }
      { 15      ;1   ;ActionGroup;
                      Name=PeriodLength;
                      CaptionML=ENU=Period Length;
                      Image=Period }
      { 14      ;2   ;Action    ;
                      Name=Day;
                      CaptionML=ENU=Day;
                      ToolTipML=ENU=Each stack covers one day.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Day);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Week;
                      CaptionML=ENU=Week;
                      ToolTipML=ENU=Each stack except for the last stack covers one week. The last stack contains data from the start of the week until the date that is defined by the Show option.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Week);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=Month;
                      CaptionML=ENU=Month;
                      ToolTipML=ENU=Each stack except for the last stack covers one month. The last stack contains data from the start of the month until the date that is defined by the Show option.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Month);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 11      ;2   ;Action    ;
                      Name=Quarter;
                      CaptionML=ENU=Quarter;
                      ToolTipML=ENU=Each stack except for the last stack covers one quarter. The last stack contains data from the start of the quarter until the date that is defined by the Show option.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Quarter);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Year;
                      CaptionML=ENU=Year;
                      ToolTipML=ENU=Each stack except for the last stack covers one year. The last stack contains data from the start of the year until the date that is defined by the Show option.;
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 AnalysisReportChartSetup.SetPeriodLength(AnalysisReportChartSetup."Period Length"::Year);
                                 UpdateChart(Period::" ");
                               END;
                                }
      { 16      ;1   ;Action    ;
                      Name=PreviousPeriod;
                      CaptionML=ENU=Previous;
                      ToolTipML=ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                      ApplicationArea=#Basic,#Suite;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Previous);
                               END;
                                }
      { 17      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=ENU=Next;
                      ToolTipML=ENU=Show the information based on the next period.;
                      ApplicationArea=#Basic,#Suite;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 UpdateChart(Period::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=container;
                ContainerType=ContentArea }

    { 2   ;1   ;Field     ;
                ToolTipML=ENU=Specifies the status of the chart.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatusText;
                Enabled=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 3   ;1   ;Field     ;
                Name=BusinessChart;
                ApplicationArea=#Basic,#Suite;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      AnalysisReportChartSetup@1004 : Record 770;
      AnalysisReportChartMgt@1002 : Codeunit 770;
      StatusText@1001 : Text[250];
      Period@1005 : ' ,Next,Previous';

    LOCAL PROCEDURE UpdateChart@6(Period@1000 : ',Next,Previous');
    BEGIN
      AnalysisReportChartMgt.UpdateChart(
        Period,AnalysisReportChartSetup,AnalysisReportChartSetup."Analysis Area"::Sales,Rec,StatusText);
      Update(CurrPage.BusinessChart);
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      AnalysisReportChartMgt.DrillDown(Rec,AnalysisReportChartSetup);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-3::AddInReady@14();
    BEGIN
      UpdateChart(Period::" ");
    END;

    EVENT BusinessChart@-3::Refresh@15();
    BEGIN
      InitializePeriodFilter(0D,0D);
      UpdateChart(Period::" ");
    END;

    BEGIN
    END.
  }
}

