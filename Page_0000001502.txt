OBJECT Page 1502 Workflow Subpage
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:10:40 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Workflow Subpage;
    SourceTable=Table1507;
    DelayedInsert=Yes;
    PageType=ListPart;
    SourceTableTemporary=Yes;
    AutoSplitKey=Yes;
    ShowFilter=No;
    OnOpenPage=VAR
                 ApplicationAreaMgmtFacade@1000 : Codeunit 9179;
               BEGIN
                 IF ApplicationAreaMgmtFacade.IsBasicOnlyEnabled THEN
                   CurrPage.EDITABLE := FALSE;
               END;

    OnFindRecord=BEGIN
                   FILTERGROUP(4);
                   IF WorkflowCode <> GETRANGEMAX("Workflow Code") THEN BEGIN
                     WorkflowCode := GETRANGEMAX("Workflow Code");
                     ClearBuffer;
                   END;

                   IF ISEMPTY THEN
                     PopulateTable(WorkflowCode);

                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=VAR
                       Workflow@1000 : Record 1501;
                     BEGIN
                       Workflow.GET(WorkflowCode);
                       SetActionVisibility;
                     END;

    OnNewRecord=BEGIN
                  CreateNewWhenThenLine(WorkflowCode,BelowxRec);
                END;

    OnAfterGetCurrRecord=VAR
                           Workflow@1000 : Record 1501;
                         BEGIN
                           IF Workflow.GET(WorkflowCode) THEN ;
                           SetActionVisibility;
                           UpdateResponseDescriptionStyle;
                           IsNotTemplate := NOT Workflow.Template;
                         END;

    ActionList=ACTIONS
    {
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;Action    ;
                      Name=DecreaseIndent;
                      CaptionML=ENU=Decrease Indent;
                      ToolTipML=ENU=Reduce the indentation of this step.;
                      ApplicationArea=#Suite;
                      Visible=IsNotTemplate;
                      Image=PreviousRecord;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 MoveLeft;
                               END;
                                }
      { 10      ;1   ;Action    ;
                      Name=IncreaseIndent;
                      CaptionML=ENU=Increase Indent;
                      ToolTipML=ENU=Increase the indentation of this step.;
                      ApplicationArea=#Suite;
                      Visible=IsNotTemplate;
                      Image=NextRecord;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 MoveRight;
                               END;
                                }
      { 8       ;1   ;Action    ;
                      Name=DeleteEventConditions;
                      CaptionML=ENU=Delete Event Conditions;
                      ToolTipML=ENU=Remove the condition filter of this step.;
                      ApplicationArea=#Suite;
                      Visible=IsNotTemplate;
                      Enabled=EnableEditActions;
                      Image=Delete;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 DeleteEventConditions;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                IndentationColumnName=Indent;
                IndentationControls=Event Description;
                GroupType=Repeater;
                FreezeColumnID=Condition }

    { 11  ;2   ;Field     ;
                Width=1;
                ToolTipML=ENU=Specifies the relationship of the workflow step under parent workflow steps.;
                ApplicationArea=#Suite;
                SourceExpr=Indent;
                Visible=FALSE;
                Editable=FALSE }

    { 3   ;2   ;Field     ;
                Width=45;
                CaptionML=ENU=When Event;
                ToolTipML=ENU=Specifies the workflow event that triggers the related workflow response.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Event Description";
                Editable=IsNotTemplate;
                OnValidate=BEGIN
                             CurrPage.UPDATE(FALSE);
                           END;

                ShowMandatory=TRUE }

    { 4   ;2   ;Field     ;
                Width=30;
                CaptionML=ENU=On Condition;
                ToolTipML=ENU=Specifies the condition that moderates the workflow event that you specified in the Event Description field. When you choose the field, the Event Conditions window opens in which you can specify condition values for predefined lists of relevant fields.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Condition;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               IF CurrPage.EDITABLE THEN BEGIN
                                 OpenEventConditions;
                                 CurrPage.UPDATE(TRUE);
                               END;
                             END;
                              }

    { 6   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the workflow step that starts the workflow. The first workflow step is always of type Entry Point.;
                ApplicationArea=#Suite;
                SourceExpr="Entry Point";
                Visible=FALSE;
                Editable=IsNotTemplate }

    { 5   ;2   ;Field     ;
                Width=100;
                Lookup=No;
                CaptionML=ENU=Then Response;
                ToolTipML=ENU=Specifies the workflow response that is that triggered by the related workflow event.;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Response Description";
                Editable=FALSE;
                StyleExpr="Response Description Style";
                OnAssistEdit=BEGIN
                               IF CurrPage.EDITABLE THEN BEGIN
                                 OpenEventResponses;
                                 CurrPage.UPDATE(FALSE);
                               END;
                             END;
                              }

  }
  CODE
  {
    VAR
      WorkflowCode@1000 : Code[20];
      EnableEditActions@1001 : Boolean;
      IsNotTemplate@1003 : Boolean;

    LOCAL PROCEDURE SetActionVisibility@1();
    VAR
      Workflow@1001 : Record 1501;
      WorkflowStep@1000 : Record 1502;
      WorkflowRule@1002 : Record 1524;
    BEGIN
      IF NOT WorkflowStep.GET("Workflow Code","Event Step ID") THEN BEGIN
        EnableEditActions := FALSE;
        EXIT;
      END;

      Workflow.GET("Workflow Code");

      EnableEditActions := (NOT Workflow.Enabled) AND (WorkflowStep.Type = WorkflowStep.Type::"Event") AND
        ((NOT ISNULLGUID(WorkflowStep.Argument)) OR WorkflowStep.FindWorkflowRules(WorkflowRule));
    END;

    [External]
    PROCEDURE RefreshBuffer@2();
    BEGIN
      ClearBuffer;
      PopulateTable(WorkflowCode);
    END;

    BEGIN
    END.
  }
}

