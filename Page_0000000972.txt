OBJECT Page 972 Time Sheet Chart
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Time Sheets;
               ESM=Partes de horas;
               FRC=Feuilles de temps;
               ENC=Time Sheets];
    SourceTable=Table485;
    PageType=CardPart;
    OnFindRecord=BEGIN
                   UpdateChart;
                   IsChartDataReady := TRUE;
                 END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateChart;
                         END;

    ActionList=ACTIONS
    {
      { 4       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 5       ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 ESM=Periodo anterior;
                                 FRC=PÇriode prÇcÇdente;
                                 ENC=Previous Period];
                      ToolTipML=[ENU=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.;
                                 ESM=Muestra la informaci¢n en funci¢n del periodo anterior. Si se establece el campo Ver por en D°a, el filtro de fecha cambia al d°a anterior.;
                                 FRC=Affichez les informations en fonction de la pÇriode prÇcÇdente. Si vous dÇfinissez le champ Afficher par, le filtre date passe sur le jour prÇcÇdent.;
                                 ENC=Show the information based on the previous period. If you set the View by field to Day, the date filter changes to the day before.];
                      ApplicationArea=#Jobs;
                      Image=PreviousSet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.FindPeriod(SetWanted::Previous);
                                 UpdateStatus;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 ESM=Periodo siguiente;
                                 FRC=Prochaine pÇriode;
                                 ENC=Next Period];
                      ToolTipML=[ENU=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.;
                                 ESM=Muestra la informaci¢n en funci¢n del per°odo siguiente. Si se establece el campo Ver por en D°a, el filtro de fecha cambia al d°a anterior.;
                                 FRC=Afficher les informations en fonction de la pÇriode suivante. Si vous dÇfinissez le champ Afficher par, le filtre date passe sur le jour prÇcÇdent.;
                                 ENC=Show the information based on the next period. If you set the View by field to Day, the date filter changes to the day before.];
                      ApplicationArea=#Jobs;
                      Image=NextSet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.FindPeriod(SetWanted::Next);
                                 UpdateStatus;
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Show by;
                                 ESM=Mostrar por;
                                 FRC=Afficher par;
                                 ENC=Show by];
                      Image=View }
      { 8       ;2   ;Action    ;
                      CaptionML=[ENU=Status;
                                 ESM=Estado;
                                 FRC=êtat;
                                 ENC=Status];
                      ToolTipML=[ENU=View the approval status of the time sheet.;
                                 ESM=Permite ver el estado de aprobaci¢n del parte de horas.;
                                 FRC=Affichez l'Çtat d'approbation de la feuille de temps.;
                                 ENC=View the approval status of the time sheet.];
                      ApplicationArea=#Jobs;
                      Image=Report;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Status);
                                 UpdateStatus;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Type;
                                 ESM=Tipo;
                                 FRC=Type;
                                 ENC=Type];
                      ToolTipML=[ENU=Specifies the chart type.;
                                 ESM=Especifica el tipo de gr†fico.;
                                 FRC=SpÇcifie le type de graphique.;
                                 ENC=Specifies the chart type.];
                      ApplicationArea=#Jobs;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Type);
                                 UpdateStatus;
                               END;
                                }
      { 10      ;2   ;Action    ;
                      CaptionML=[ENU=Posted;
                                 ESM=Registrado;
                                 FRC=ReportÇ;
                                 ENC=Posted];
                      ToolTipML=[ENU=Specifies the sum of time sheet hours for posted time sheets.;
                                 ESM=Especifica la suma de horas de partes de horas para los partes de horas registrados.;
                                 FRC=SpÇcifie la somme des heures de feuille de temps pour les feuilles de temps reportÇes.;
                                 ENC=Specifies the sum of time sheet hours for posted time sheets.];
                      ApplicationArea=#Jobs;
                      Image=PostedTimeSheet;
                      OnAction=BEGIN
                                 TimeSheetChartSetup.SetShowBy(TimeSheetChartSetup."Show by"::Posted);
                                 UpdateStatus;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 3   ;1   ;Field     ;
                Name=StatusText;
                CaptionML=[ENU=Status Text;
                           ESM=Texto de estado;
                           FRC=Texte d'Çtat;
                           ENC=Status Text];
                ToolTipML=[ENU=Specifies the status of the chart.;
                           ESM=Especifica el estado del gr†fico.;
                           FRC=Indique l'Çtat du graphique.;
                           ENC=Specifies the status of the chart.];
                ApplicationArea=#Jobs;
                SourceExpr=StatusText;
                ShowCaption=No }

    { 2   ;1   ;Field     ;
                Name=BusinessChart;
                ApplicationArea=#Jobs;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.BusinessChart;PublicKeyToken=31bf3856ad364e35] }

  }
  CODE
  {
    VAR
      TimeSheetChartSetup@1001 : Record 959;
      OldTimeSheetChartSetup@1002 : Record 959;
      TimeSheetChartMgt@1000 : Codeunit 952;
      StatusText@1004 : Text[250];
      NeedsUpdate@1003 : Boolean;
      SetWanted@1005 : 'Previous,Next';
      IsChartDataReady@1007 : Boolean;
      IsChartAddInReady@1006 : Boolean;

    LOCAL PROCEDURE UpdateChart@6();
    BEGIN
      IF NOT NeedsUpdate THEN
        EXIT;
      IF NOT IsChartAddInReady THEN
        EXIT;
      TimeSheetChartMgt.UpdateData(Rec);
      Update(CurrPage.BusinessChart);
      UpdateStatus;

      NeedsUpdate := FALSE;
    END;

    LOCAL PROCEDURE UpdateStatus@8();
    BEGIN
      NeedsUpdate := NeedsUpdate OR IsSetupChanged;

      OldTimeSheetChartSetup := TimeSheetChartSetup;

      IF NeedsUpdate THEN
        StatusText := TimeSheetChartSetup.GetCurrentSelectionText;
    END;

    LOCAL PROCEDURE IsSetupChanged@4() : Boolean;
    BEGIN
      EXIT(
        (OldTimeSheetChartSetup."Starting Date" <> TimeSheetChartSetup."Starting Date") OR
        (OldTimeSheetChartSetup."Show by" <> TimeSheetChartSetup."Show by"));
    END;

    EVENT BusinessChart@-5::DataPointClicked@12(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
      SetDrillDownIndexes(point);
      TimeSheetChartMgt.DrillDown(Rec);
    END;

    EVENT BusinessChart@-5::DataPointDoubleClicked@13(point@1000 : DotNet "'Microsoft.Dynamics.Nav.Client.BusinessChart.Model, Version=13.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.BusinessChart.BusinessChartDataPoint");
    BEGIN
    END;

    EVENT BusinessChart@-2::AddInReady@14();
    BEGIN
      TimeSheetChartMgt.OnOpenPage(TimeSheetChartSetup);
      UpdateStatus;
      IsChartAddInReady := TRUE;
      IF IsChartDataReady THEN
        UpdateChart;
    END;

    EVENT BusinessChart@-2::Refresh@15();
    BEGIN
      IF IsChartDataReady AND IsChartAddInReady THEN BEGIN
        NeedsUpdate := TRUE;
        UpdateChart;
      END;
    END;

    BEGIN
    END.
  }
}

