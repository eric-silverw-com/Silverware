OBJECT Table 474 Job Queue Log Entry
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    ReplicateData=No;
    CaptionML=[ENU=Job Queue Log Entry;
               ESM=Mov. registro cola proyecto;
               FRC=êcriture journal file d'attente des travaux;
               ENC=Job Queue Log Entry];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              ESM=Nß mov.;
                                                              FRC=N¯ Çcriture;
                                                              ENC=Entry No.] }
    { 2   ;   ;ID                  ;GUID          ;CaptionML=[ENU=ID;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=ID] }
    { 3   ;   ;User ID             ;Text65        ;TableRelation=User."User Name";
                                                   TestTableRelation=No;
                                                   DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=User ID;
                                                              ESM=Id. usuario;
                                                              FRC=Code utilisateur;
                                                              ENC=User ID] }
    { 4   ;   ;Start Date/Time     ;DateTime      ;CaptionML=[ENU=Start Date/Time;
                                                              ESM=Fecha/hora inicio;
                                                              FRC=Date/heure de dÇbut;
                                                              ENC=Start Date/Time] }
    { 5   ;   ;End Date/Time       ;DateTime      ;CaptionML=[ENU=End Date/Time;
                                                              ESM=Fecha/hora finalizaci¢n;
                                                              FRC=Date/heure de fin;
                                                              ENC=End Date/Time] }
    { 6   ;   ;Object Type to Run  ;Option        ;CaptionML=[ENU=Object Type to Run;
                                                              ESM=Tipo objeto para ejecutar;
                                                              FRC=Type d'objet Ö exÇcuter;
                                                              ENC=Object Type to Run];
                                                   OptionCaptionML=[ENU=,,,Report,,Codeunit;
                                                                    ESM=,,,Informe,,M¢dulo;
                                                                    FRC=,,,Rapport,,Codeunit;
                                                                    ENC=,,,Report,,Codeunit];
                                                   OptionString=,,,Report,,Codeunit }
    { 7   ;   ;Object ID to Run    ;Integer       ;CaptionML=[ENU=Object ID to Run;
                                                              ESM=Id. objeto para ejecutar;
                                                              FRC=Code d'objet Ö exÇcuter;
                                                              ENC=Object ID to Run] }
    { 8   ;   ;Object Caption to Run;Text250      ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=FIELD(Object Type to Run),
                                                                                                                Object ID=FIELD(Object ID to Run)));
                                                   CaptionML=[ENU=Object Caption to Run;
                                                              ESM=T°tulo objeto para ejecutar;
                                                              FRC=LÇgende de l'objet Ö exÇcuter;
                                                              ENC=Object Caption to Run] }
    { 9   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              ESM=Estado;
                                                              FRC=êtat;
                                                              ENC=Status];
                                                   OptionCaptionML=[ENU=Success,In Process,Error;
                                                                    ESM=Correcto,En proceso,Error;
                                                                    FRC=RÇussite,En traitement,Erreur;
                                                                    ENC=Success,In Process,Error];
                                                   OptionString=Success,In Process,Error }
    { 10  ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 11  ;   ;Error Message       ;Text250       ;CaptionML=[ENU=Error Message;
                                                              ESM=Mensaje de error;
                                                              FRC=Message d'erreur;
                                                              ENC=Error Message] }
    { 12  ;   ;Error Message 2     ;Text250       ;CaptionML=[ENU=Error Message 2;
                                                              ESM=Mensaje de error 2;
                                                              FRC=Message d'erreur 2;
                                                              ENC=Error Message 2] }
    { 13  ;   ;Error Message 3     ;Text250       ;CaptionML=[ENU=Error Message 3;
                                                              ESM=Mensaje de error 3;
                                                              FRC=Message d'erreur 3;
                                                              ENC=Error Message 3] }
    { 14  ;   ;Error Message 4     ;Text250       ;CaptionML=[ENU=Error Message 4;
                                                              ESM=Mensaje de error 4;
                                                              FRC=Message d'erreur 4;
                                                              ENC=Error Message 4] }
    { 16  ;   ;Processed by User ID;Text65        ;DataClassification=EndUserIdentifiableInformation;
                                                   CaptionML=[ENU=Processed by User ID;
                                                              ESM=Procesado por id. usuario;
                                                              FRC=TraitÇ par Code utilisateur;
                                                              ENC=Processed by User ID] }
    { 17  ;   ;Job Queue Category Code;Code10     ;TableRelation="Job Queue Category";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Job Queue Category Code;
                                                              ESM=C¢d. categor°a cola proyectos;
                                                              FRC=Code catÇgorie de la file d'attente des travaux;
                                                              ENC=Job Queue Category Code] }
    { 18  ;   ;Error Call Stack    ;BLOB          ;DataClassification=SystemMetadata;
                                                   CaptionML=[ENU=Error Call Stack;
                                                              ESM=Pila de llamadas de error;
                                                              FRC=Pile d'appels de l'erreur;
                                                              ENC=Error Call Stack] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;ID,Status                                }
    {    ;Start Date/Time,ID                       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=There is no error message.;ESM=No hay ning£n mensaje de error.;FRC=Absence de message d''erreur.;ENC=There is no error message.';
      Text002@1000 : TextConst 'ENU=Are you sure that you want to delete job queue log entries?;ESM=®Est† seguro de que desea eliminar las entradas del registro de la cola de proyecto?;FRC=Voulez-vous vraiment supprimer les Çcritures du journal de la file d''attente des travaux?;ENC=Are you sure that you want to delete job queue log entries?';
      Text003@1002 : TextConst 'ENU=Marked as Error by %1.;ESM=Marcado como error por %1.;FRC=MarquÇ comme erreur par %1.;ENC=Marked as Error by %1.';
      Text004@1003 : TextConst 'ENU=Only entries with status In Progress can be marked as Error.;ESM=Solo las entradas con el estado En progreso se pueden marcar como error.;FRC=Seules les Çcritures dont l''Çtat est En cours peuvent àtre marquÇes comme Erreur.;ENC=Only entries with status In Progress can be marked as Error.';
      DeletingMsg@1004 : TextConst 'ENU=Deleting Entries...;ESM=Eliminando movimientos...;FRC=Suppression des Çcritures...;ENC=Deleting Entries...';
      DeletedMsg@1005 : TextConst 'ENU=Entries have been deleted.;ESM=Se han eliminado los movimientos.;FRC=Les Çcritures ont ÇtÇ supprimÇes.;ENC=Entries have been deleted.';
      Window@1006 : Dialog;

    [External]
    PROCEDURE GetErrorMessage@1() : Text;
    VAR
      TextMgt@1000 : Codeunit 41;
    BEGIN
      EXIT(TextMgt.GetRecordErrorMessage("Error Message","Error Message 2","Error Message 3","Error Message 4"));
    END;

    [External]
    PROCEDURE SetErrorMessage@2(ErrorText@1000 : Text);
    VAR
      TextMgt@1001 : Codeunit 41;
    BEGIN
      TextMgt.SetRecordErrorMessage("Error Message","Error Message 2","Error Message 3","Error Message 4",ErrorText);
    END;

    [External]
    PROCEDURE DeleteEntries@3(DaysOld@1000 : Integer);
    BEGIN
      IF NOT CONFIRM(Text002) THEN
        EXIT;
      Window.OPEN(DeletingMsg);
      SETFILTER(Status,'<>%1',Status::"In Process");
      IF DaysOld > 0 THEN
        SETFILTER("End Date/Time",'<=%1',CREATEDATETIME(TODAY - DaysOld,TIME));
      DELETEALL;
      Window.CLOSE;
      SETRANGE("End Date/Time");
      SETRANGE(Status);
      MESSAGE(DeletedMsg);
    END;

    [External]
    PROCEDURE ShowErrorMessage@8();
    VAR
      e@1000 : Text;
    BEGIN
      e := GetErrorMessage;
      IF e = '' THEN
        e := Text001;
      MESSAGE(e);
    END;

    [External]
    PROCEDURE ShowErrorCallStack@7();
    BEGIN
      IF Status = Status::Error THEN
        MESSAGE(GetErrorCallStack);
    END;

    [External]
    PROCEDURE MarkAsError@4();
    VAR
      JobQueueEntry@1003 : Record 472;
      ErrorMessage@1002 : Text;
    BEGIN
      IF Status <> Status::"In Process" THEN
        ERROR(Text004);

      ErrorMessage := STRSUBSTNO(Text003,USERID);
      OnBeforeMarkAsError(Rec,JobQueueEntry,ErrorMessage);

      IF JobQueueEntry.GET(ID) THEN
        JobQueueEntry.SetError(ErrorMessage);

      Status := Status::Error;
      SetErrorMessage(ErrorMessage);
      MODIFY;
    END;

    [External]
    PROCEDURE Duration@5() : Duration;
    BEGIN
      IF ("Start Date/Time" = 0DT) OR ("End Date/Time" = 0DT) THEN
        EXIT(0);
      EXIT(ROUND("End Date/Time" - "Start Date/Time",100));
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeMarkAsError@6(VAR JobQueueLogEntry@1000 : Record 474;VAR JobQueueEntry@1001 : Record 472;VAR ErrorMessage@1002 : Text);
    BEGIN
    END;

    [External]
    PROCEDURE SetErrorCallStack@120(NewCallStack@1000 : Text);
    VAR
      TempBlob@1001 : TEMPORARY Record 99008535;
    BEGIN
      CLEAR("Error Call Stack");
      IF NewCallStack = '' THEN
        EXIT;
      TempBlob.Blob := "Error Call Stack";
      TempBlob.WriteAsText(NewCallStack,TEXTENCODING::Windows);
      "Error Call Stack" := TempBlob.Blob;
    END;

    [External]
    PROCEDURE GetErrorCallStack@114() : Text;
    VAR
      TempBlob@1001 : Record 99008535;
      CR@1000 : Text;
    BEGIN
      CALCFIELDS("Error Call Stack");
      IF NOT "Error Call Stack".HASVALUE THEN
        EXIT('');

      CR[1] := 10;
      TempBlob.Blob := "Error Call Stack";
      EXIT(TempBlob.ReadAsText(CR,TEXTENCODING::Windows));
    END;

    BEGIN
    END.
  }
}

