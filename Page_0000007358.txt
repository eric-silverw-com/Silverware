OBJECT Page 7358 Whse. Internal Pick Line
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:42 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Lines;
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table7334;
    DelayedInsert=Yes;
    PageType=ListPart;
    OnNewRecord=BEGIN
                  SetUpNewLine(xRec);
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=ENU=&Line;
                      Image=Line }
      { 1901313504;2 ;Action    ;
                      CaptionML=ENU=Bin Contents List;
                      ToolTipML=ENU=View the contents of the selected bin and the parameters that define how items are routed through the bin.;
                      ApplicationArea=#Warehouse;
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1902759804;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=ENU=Item &Tracking Lines;
                      ToolTipML=ENU=View or edit serial numbers and lot numbers that are assigned to the item on the document or journal line.;
                      ApplicationArea=#ItemTracking;
                      Image=ItemTrackingLines;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 22  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the item that should be picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             ItemNoOnAfterValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the variant of the item on the line.;
                ApplicationArea=#Planning;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the description of the item in the line.;
                ApplicationArea=#Warehouse;
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the location of the internal pick line.;
                ApplicationArea=#Location;
                SourceExpr="Location Code";
                Visible=FALSE;
                Editable=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the To Zone Code of the zone where items should be placed once they are picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="To Zone Code";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code of the bin into which the items should be placed when they are picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="To Bin Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             ToBinCodeOnAfterValidate;
                           END;
                            }

    { 18  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the shelf number of the item for informational use.;
                ApplicationArea=#Warehouse;
                SourceExpr="Shelf No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ShelfNoOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that should be picked.;
                ApplicationArea=#Warehouse;
                SourceExpr=Quantity }

    { 4   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that should be picked, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding";
                Visible=TRUE }

    { 10  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity that still needs to be handled, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the item in pick instructions that are assigned to be picked for the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Qty.";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the item in pick instructions assigned to be picked for the line, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Pick Qty. (Base)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the line that is registered as picked.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Picked";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the quantity of the line that is registered as picked, in the base unit of measure.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. Picked (Base)";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the warehouse activity must be completed.;
                ApplicationArea=#Warehouse;
                SourceExpr="Due Date";
                OnValidate=BEGIN
                             DueDateOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Unit of Measure Code" }

    { 24  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of base units of measure, that are in the unit of measure, specified for the item on the line.;
                ApplicationArea=#Warehouse;
                SourceExpr="Qty. per Unit of Measure" }

  }
  CODE
  {
    VAR
      SortMethod@1000 : ' ,Item,Bin Code,Due Date';

    LOCAL PROCEDURE ShowBinContents@7300();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'');
    END;

    [External]
    PROCEDURE PickCreate@4();
    VAR
      WhseInternalPickHeader@1001 : Record 7333;
      WhseInternalPickLine@1000 : Record 7334;
      ReleaseWhseInternalPick@1002 : Codeunit 7315;
    BEGIN
      WhseInternalPickLine.COPY(Rec);
      WhseInternalPickHeader.GET(WhseInternalPickLine."No.");
      IF WhseInternalPickHeader.Status = WhseInternalPickHeader.Status::Open THEN
        ReleaseWhseInternalPick.Release(WhseInternalPickHeader);
      CreatePickDoc(WhseInternalPickLine,WhseInternalPickHeader);
    END;

    LOCAL PROCEDURE OpenItemTrackingLines@2();
    BEGIN
      OpenItemTrackingLines;
    END;

    LOCAL PROCEDURE GetActualSortMethod@1() : Decimal;
    VAR
      WhseInternalPickHeader@1000 : Record 7333;
    BEGIN
      IF WhseInternalPickHeader.GET("No.") THEN
        EXIT(WhseInternalPickHeader."Sorting Method");
      EXIT(0);
    END;

    LOCAL PROCEDURE ItemNoOnAfterValidate@19061248();
    BEGIN
      IF GetActualSortMethod = SortMethod::Item THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ToBinCodeOnAfterValidate@19037373();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Bin Code" THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShelfNoOnAfterValidate@19051954();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Bin Code" THEN
        CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DueDateOnAfterValidate@19011747();
    BEGIN
      IF GetActualSortMethod = SortMethod::"Due Date" THEN
        CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

