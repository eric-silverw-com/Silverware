OBJECT Page 99000892 Work Center Group Load Lines
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:12:21 PM;
    Version List=;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=ENU=Lines;
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
                 MfgSetup.GET;
                 MfgSetup.TESTFIELD("Show Capacity In");
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       CalculateCapacity(WorkCenterGroup."Capacity (Effective)",WorkCenterGroup."Prod. Order Need (Qty.)");
                       CapacityAvailable := WorkCenterGroup."Capacity (Effective)" - WorkCenterGroup."Prod. Order Need (Qty.)";
                       IF WorkCenterGroup."Capacity (Effective)" <> 0 THEN
                         CapacityEfficiency := ROUND(WorkCenterGroup."Prod. Order Need (Qty.)" / WorkCenterGroup."Capacity (Effective)" * 100,0.1)
                       ELSE
                         CapacityEfficiency := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=ENU=Period Start;
                ToolTipML=ENU=Specifies the starting date of the period that you want to view, for an overview of availability at the current work center group.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Period Start" }

    { 14  ;2   ;Field     ;
                CaptionML=ENU=Period Name;
                ToolTipML=ENU=Specifies the name of the period shown in the line.;
                ApplicationArea=#Manufacturing;
                SourceExpr="Period Name" }

    { 4   ;2   ;Field     ;
                Name=Capacity;
                CaptionML=ENU=Capacity;
                ToolTipML=ENU="Specifies the amount of work that can be done in a specified time period at this work center group. ";
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=WorkCenterGroup."Capacity (Effective)";
                OnDrillDown=VAR
                              CalendarEntry@1001 : Record 99000757;
                            BEGIN
                              CalendarEntry.SETCURRENTKEY("Work Center Group Code");
                              CalendarEntry.SETRANGE("Work Center Group Code",WorkCenterGroup.Code);
                              CalendarEntry.SETFILTER(Date,WorkCenterGroup.GETFILTER("Date Filter"));
                              PAGE.RUN(0,CalendarEntry);
                            END;
                             }

    { 6   ;2   ;Field     ;
                CaptionML=ENU=Allocated Qty.;
                ToolTipML=ENU="Specifies the amount of capacity that is needed to produce a desired output in a given time period. ";
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=WorkCenterGroup."Prod. Order Need (Qty.)";
                OnDrillDown=VAR
                              ProdOrderCapNeed@1001 : Record 5410;
                            BEGIN
                              ProdOrderCapNeed.SETCURRENTKEY("Work Center Group Code",Date);
                              ProdOrderCapNeed.SETRANGE("Requested Only",FALSE);
                              ProdOrderCapNeed.SETRANGE("Work Center Group Code",WorkCenterGroup.Code);
                              ProdOrderCapNeed.SETFILTER(Date,WorkCenterGroup.GETFILTER("Date Filter"));
                              PAGE.RUN(0,ProdOrderCapNeed);
                            END;
                             }

    { 8   ;2   ;Field     ;
                CaptionML=ENU=Availability After Orders;
                ToolTipML=ENU=Specifies the available capacity of this work center group that is not used in the planning of a given time period.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=CapacityAvailable }

    { 10  ;2   ;Field     ;
                CaptionML=ENU=Load;
                ToolTipML=ENU=Specifies the sum of the required number of times that all the planned and actual orders are run on the work center group in a specified period.;
                ApplicationArea=#Manufacturing;
                DecimalPlaces=0:5;
                SourceExpr=CapacityEfficiency }

  }
  CODE
  {
    VAR
      WorkCenterGroup@1000 : Record 99000756;
      MfgSetup@1007 : Record 99000765;
      PeriodFormMgt@1001 : Codeunit 359;
      CapacityAvailable@1002 : Decimal;
      CapacityEfficiency@1003 : Decimal;
      PeriodType@1004 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1005 : 'Net Change,Balance at Date';
      CapacityUoM@1006 : Code[10];

    [External]
    PROCEDURE Set@1(VAR NewWorkCenterGroup@1000 : Record 99000756;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date';NewCapUoM@1003 : Code[10]);
    BEGIN
      WorkCenterGroup.COPY(NewWorkCenterGroup);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CapacityUoM := NewCapUoM;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        WorkCenterGroup.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        WorkCenterGroup.SETRANGE("Date Filter",0D,"Period End");
    END;

    LOCAL PROCEDURE CalculateCapacity@2(VAR CapacityEffective@1000 : Decimal;VAR ProdOrderNeed@1001 : Decimal);
    VAR
      WorkCenter@1003 : Record 99000754;
      CalendarMgt@1004 : Codeunit 99000755;
      Capacity@1005 : Decimal;
      PONeed@1006 : Decimal;
    BEGIN
      IF CapacityUoM = '' THEN
        CapacityUoM := MfgSetup."Show Capacity In";
      WorkCenter.SETCURRENTKEY("Work Center Group Code");
      WorkCenter.SETRANGE("Work Center Group Code",WorkCenterGroup.Code);
      IF WorkCenter.FINDSET THEN
        REPEAT
          WorkCenterGroup.COPYFILTER("Date Filter",WorkCenter."Date Filter");
          WorkCenter.CALCFIELDS("Capacity (Effective)","Prod. Order Need (Qty.)");
          Capacity :=
            Capacity +
            WorkCenter."Capacity (Effective)" *
            CalendarMgt.TimeFactor(WorkCenter."Unit of Measure Code") /
            CalendarMgt.TimeFactor(CapacityUoM);

          PONeed :=
            PONeed +
            WorkCenter."Prod. Order Need (Qty.)" *
            CalendarMgt.TimeFactor(WorkCenter."Unit of Measure Code") /
            CalendarMgt.TimeFactor(CapacityUoM);
        UNTIL WorkCenter.NEXT = 0;

      CapacityEffective := Capacity;
      ProdOrderNeed := PONeed;
    END;

    BEGIN
    END.
  }
}

