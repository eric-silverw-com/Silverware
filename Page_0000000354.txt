OBJECT Page 354 Item Turnover Lines
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               ESM=L°neas;
               FRC=Lignes;
               ENC=Lines];
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       Item.CALCFIELDS("Purchases (Qty.)","Purchases (LCY)","Sales (Qty.)","Sales (LCY)");
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           ESM=Inicio periodo;
                           FRC=DÇbut pÇriode;
                           ENC=Period Start];
                ToolTipML=[ENU=Specifies the start date of the period defined on the line, related to year-to-date inventory turnover.;
                           ESM=Especifica la fecha de inicio del periodo definido en la l°nea, relacionada con la rotaci¢n de inventarios hasta la fecha.;
                           FRC=SpÇcifie la date dÇbut de la pÇriode dÇfinie sur la ligne, associÇe Ö la rotation annuelle de l'inventaire Ö ce jour.;
                           ENC=Specifies the start date of the period defined on the line, related to year-to-date inventory turnover.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Start" }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Period Name;
                           ESM=Nombre periodo;
                           FRC=Nom de pÇriode;
                           ENC=Period Name];
                ToolTipML=[ENU=Specifies the name of the period defined on the line, related to year-to-date inventory turnover.;
                           ESM=Especifica el nombre del periodo definido en la l°nea, relacionada con la rotaci¢n de inventarios hasta la fecha.;
                           FRC=SpÇcifie le nom de la pÇriode dÇfinie sur la ligne, associÇ Ö la rotation annuelle de l'inventaire Ö ce jour.;
                           ENC=Specifies the name of the period defined on the line, related to year-to-date inventory turnover.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Name" }

    { 4   ;2   ;Field     ;
                Name=PurchasesQty;
                DrillDown=Yes;
                CaptionML=[ENU=Purchases (Qty.);
                           ESM=Compras (cdad.);
                           FRC=Achats (qtÇ);
                           ENC=Purchases (Qty.)];
                ToolTipML=[ENU=Specifies how many units of the item have been purchased. The program automatically calculates and updates the contents of the field, using the Invoiced Quantity field in the Item Ledger Entry table for those entries of the Purchase type.;
                           ESM=Especifica cu†ntas unidades del producto se han comprado. El programa calcula y actualiza autom†ticamente el contenido del campo, utilizando el campo Cantidad facturada en la tabla Mov. producto para aquellos movimientos del tipo Compra.;
                           FRC=SpÇcifie le nombre d'unitÇs de l'article qui ont ÇtÇ achetÇes. Le programme calcule et met Ö jour automatiquement le contenu de ce champ en utilisant le champ QuantitÇ facturÇe de la table êcriture article pour les Çcritures de type Achat.;
                           ENC=Specifies how many units of the item have been purchased. The program automatically calculates and updates the contents of the field, using the Invoiced Quantity field in the Item Ledger Entry table for those entries of the Purchase type.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Purchases (Qty.)";
                OnDrillDown=BEGIN
                              ShowItemEntries(FALSE);
                            END;
                             }

    { 6   ;2   ;Field     ;
                Name=PurchasesLCY;
                DrillDown=Yes;
                CaptionML=[ENU=Purchases ($);
                           ESM=Compras ($);
                           FRC=Achats ($);
                           ENC=Purchases ($)];
                ToolTipML=[ENU=Specifies the total purchase amount, in $, of the item that has been purchased. The program automatically calculates and updates the contents of the field, using the Sales Amount (Actual) field in the Value Entry table for those entries that have been posted as purchases.;
                           ESM=Especifica el importe total de compras, en $, del producto que se ha comprado. El programa calcula y actualiza autom†ticamente el contenido del campo, utilizando el campo Importe ventas (Real) en la tabla Movimiento valor para aquellos movimientos que se han registrado como compras.;
                           FRC=SpÇcifie le montant d'achat total, en $, de l'article achetÇ. Le programme calcule et met Ö jour automatiquement le contenu de ce champ en utilisant le champ Montant vente (rÇel) de la table êcriture valeur pour les Çcritures qui ont ÇtÇ reportÇes comme des achats.;
                           ENC=Specifies the total purchase amount, in $, of the item that has been purchased. The program automatically calculates and updates the contents of the field, using the Sales Amount (Actual) field in the Value Entry table for those entries that have been posted as purchases.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Item."Purchases (LCY)";
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              ShowValueEntries(FALSE);
                            END;
                             }

    { 8   ;2   ;Field     ;
                Name=SalesQty;
                DrillDown=Yes;
                CaptionML=[ENU=Sales (Qty.);
                           ESM=Ventas (cdad.);
                           FRC=Ventes (qtÇ);
                           ENC=Sales (Qty.)];
                ToolTipML=[ENU=Specifies how many units of the item have been sold. The program automatically calculates and updates the contents of the field, using the Invoiced Quantity field in the Item Ledger Entry table for those entries of the Sales type.;
                           ESM=Especifica cu†ntas unidades del producto se han vendido. El programa calcula y actualiza autom†ticamente el contenido del campo, utilizando el campo Cantidad facturada en la tabla Mov. producto para aquellos movimientos del tipo Venta.;
                           FRC=SpÇcifie le nombre d'unitÇs de l'article qui ont ÇtÇ vendues. Le programme calcule et met Ö jour automatiquement le contenu de ce champ en utilisant le champ QuantitÇ facturÇe de la table êcriture article pour les Çcritures de type Vente.;
                           ENC=Specifies how many units of the item have been sold. The program automatically calculates and updates the contents of the field, using the Invoiced Quantity field in the Item Ledger Entry table for those entries of the Sales type.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=Item."Sales (Qty.)";
                OnDrillDown=BEGIN
                              ShowItemEntries(TRUE);
                            END;
                             }

    { 10  ;2   ;Field     ;
                Name=SalesLCY;
                DrillDown=Yes;
                CaptionML=[ENU=Sales ($);
                           ESM=Ventas ($);
                           FRC=Ventes ($);
                           ENC=Sales ($)];
                ToolTipML=[ENU=Specifies the sales amount, in $, of the item that has been sold. The program automatically calculates and updates the contents of the field, using the Sales Amount (Actual) field in the Value Entry table for those entries that have been posted as sales.;
                           ESM=Especifica el importe de ventas, en $, del producto que se ha vendido. El programa calcula y actualiza autom†ticamente el contenido del campo, utilizando el campo Importe ventas (Real) en la tabla Movimiento valor para aquellos movimientos que se han registrado como ventas.;
                           FRC=SpÇcifie le montant de vente, en $, de l'article vendu. Le programme calcule et met Ö jour automatiquement le contenu de ce champ en utilisant le champ Montant vente (rÇel) de la table êcritures valeur pour les Çcritures qui ont ÇtÇ reportÇes comme des ventes.;
                           ENC=Specifies the sales amount, in $, of the item that has been sold. The program automatically calculates and updates the contents of the field, using the Sales Amount (Actual) field in the Value Entry table for those entries that have been posted as sales.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Item."Sales (LCY)";
                AutoFormatType=1;
                OnDrillDown=BEGIN
                              ShowValueEntries(TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      Item@1000 : Record 27;
      PeriodFormMgt@1002 : Codeunit 359;
      PeriodType@1003 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1004 : 'Net Change,Balance at Date';

    [External]
    PROCEDURE Set@1(VAR NewItem@1000 : Record 27;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      Item.COPY(NewItem);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowItemEntries@2(ShowSales@1000 : Boolean);
    VAR
      ItemLedgEntry@1001 : Record 32;
    BEGIN
      SetDateFilter;
      ItemLedgEntry.RESET;
      ItemLedgEntry.SETCURRENTKEY("Item No.","Entry Type","Variant Code","Drop Shipment","Location Code","Posting Date");
      ItemLedgEntry.SETRANGE("Item No.",Item."No.");
      ItemLedgEntry.SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));
      ItemLedgEntry.SETFILTER("Drop Shipment",Item.GETFILTER("Drop Shipment Filter"));
      ItemLedgEntry.SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      ItemLedgEntry.SETFILTER("Global Dimension 1 Code",Item.GETFILTER("Global Dimension 1 Filter"));
      ItemLedgEntry.SETFILTER("Global Dimension 2 Code",Item.GETFILTER("Global Dimension 2 Filter"));
      ItemLedgEntry.SETFILTER("Posting Date",Item.GETFILTER("Date Filter"));
      IF ShowSales THEN
        ItemLedgEntry.SETRANGE("Entry Type",ItemLedgEntry."Entry Type"::Sale)
      ELSE
        ItemLedgEntry.SETRANGE("Entry Type",ItemLedgEntry."Entry Type"::Purchase);
      PAGE.RUN(0,ItemLedgEntry);
    END;

    LOCAL PROCEDURE ShowValueEntries@3(ShowSales@1000 : Boolean);
    VAR
      ValueEntry@1001 : Record 5802;
    BEGIN
      SetDateFilter;
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY(
        "Item No.","Posting Date","Item Ledger Entry Type","Entry Type","Variance Type","Item Charge No.",
        "Location Code","Variant Code","Global Dimension 1 Code","Global Dimension 2 Code","Source Type","Source No.");
      ValueEntry.SETRANGE("Item No.",Item."No.");
      ValueEntry.SETFILTER("Variant Code",Item.GETFILTER("Variant Filter"));
      ValueEntry.SETFILTER("Drop Shipment",Item.GETFILTER("Drop Shipment Filter"));
      ValueEntry.SETFILTER("Location Code",Item.GETFILTER("Location Filter"));
      ValueEntry.SETFILTER("Global Dimension 1 Code",Item.GETFILTER("Global Dimension 1 Filter"));
      ValueEntry.SETFILTER("Global Dimension 2 Code",Item.GETFILTER("Global Dimension 2 Filter"));
      ValueEntry.SETFILTER("Posting Date",Item.GETFILTER("Date Filter"));
      IF ShowSales THEN
        ValueEntry.SETRANGE("Item Ledger Entry Type",ValueEntry."Item Ledger Entry Type"::Sale)
      ELSE
        ValueEntry.SETRANGE("Item Ledger Entry Type",ValueEntry."Item Ledger Entry Type"::Purchase);
      PAGE.RUN(0,ValueEntry);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        Item.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        Item.SETRANGE("Date Filter",0D,"Period End");
    END;

    BEGIN
    END.
  }
}

