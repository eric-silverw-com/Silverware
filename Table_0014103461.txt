OBJECT Table 14103461 EasyPDF Document
{
  OBJECT-PROPERTIES
  {
    Date=05/10/18;
    Time=10:11:18 AM;
    Modified=Yes;
    Version List=EZP2.34.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN

               IF "Document Type" = "Document Type"::Report THEN
               BEGIN
                 Code := UPPERCASE(ReportName);
                 Description := ReportName;
                 Filename := CONVERTSTR(ReportName,'<>:"/\|?*','_________');
               END;
             END;

    OnDelete=VAR
               EasyPDFMessageTemplate@1000000000 : Record 14103467;
               EasyPDFAddress@1000000001 : Record 14103464;
               EasyPDFAttachment@1000000002 : Record 14103466;
             BEGIN

               // Remove all associated message templates
               EasyPDFMessageTemplate.RESET;
               EasyPDFMessageTemplate.SETRANGE(Code, Code);
               EasyPDFMessageTemplate.SETRANGE("User ID", "User ID");
               EasyPDFMessageTemplate.DELETEALL;

               // Remove all associated addresses
               EasyPDFAddress.RESET;
               EasyPDFAddress.SETRANGE(DocumentCode, Code);
               EasyPDFAddress.SETRANGE("User ID", "User ID");
               EasyPDFAddress.DELETEALL;

               // Remove all associated attachments
               EasyPDFAttachment.RESET;
               EasyPDFAttachment.SETRANGE(Code, Code);
               EasyPDFAttachment.SETRANGE(UserId, "User ID");
               EasyPDFAttachment.DELETEALL(TRUE);
             END;

    LookupPageID=Page14103462;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code50         }
    { 2   ;   ;User ID             ;Code50         }
    { 3   ;   ;Description         ;Text30         }
    { 4   ;   ;Document Type       ;Option        ;OptionString=Document,Report }
    { 5   ;   ;Report ID           ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   OnValidate=BEGIN

                                                                IF "Document Type" = "Document Type"::Report THEN
                                                                BEGIN
                                                                  CALCFIELDS(ReportName);
                                                                  Code := ReportName;
                                                                  Description := ReportName;
                                                                  Filename := CONVERTSTR(ReportName,'<>:"/\|?*','_________');
                                                                END;
                                                              END;
                                                               }
    { 6   ;   ;Save As Format      ;Option        ;InitValue=Pdf;
                                                   OptionString=Pdf,Word,Excel,Xml }
    { 7   ;   ;Filename            ;Text100        }
    { 9   ;   ;Preview E-Mail      ;Boolean       ;InitValue=Yes }
    { 11  ;   ;E-Mail From Address ;Text50         }
    { 12  ;   ;BatchOnPost         ;Boolean        }
    { 13  ;   ;SendOnPost          ;Boolean        }
    { 14  ;   ;E-Mail Message Language Code;Code10;InitValue=ENU;
                                                   TableRelation=Language.Code }
    { 15  ;   ;FAX Message Language Code;Code10   ;InitValue=ENU;
                                                   TableRelation=Language.Code }
    { 16  ;   ;LogToHistory        ;Boolean        }
    { 17  ;   ;PrinterSettingsFilePath;Text250    ;Description=Document specific settings }
    { 18  ;   ;ShiptoAddressing    ;Option        ;OptionString=[ ,Exclusive,Add To,Add Cc,Add Bcc] }
    { 19  ;   ;E-Mail Body Format  ;Option        ;OptionString=TEXT,HTML }
    { 20  ;   ;Send-to Customer Type;Option       ;OptionString=Bill-to,Sell-to }
    { 21  ;   ;Send-to Vendor Type ;Option        ;OptionString=Buy-from,Pay-to }
    { 22  ;   ;E-Mail Message Template;Integer    ;TableRelation="EasyPDF Message Template"."Entry No." WHERE (Code=FIELD(Code),
                                                                                                               User ID=FIELD(User ID),
                                                                                                               Message Type=CONST(EMAIL)) }
    { 23  ;   ;FAX Message Template;Integer       ;TableRelation="EasyPDF Message Template"."Entry No." WHERE (Code=FIELD(Code),
                                                                                                               User ID=FIELD(User ID),
                                                                                                               Message Type=CONST(FAX)) }
    { 24  ;   ;ReportName          ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (ID=FIELD(Report ID),
                                                                                         Type=CONST(Report))) }
    { 25  ;   ;DistributionList    ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("EasyPDF Address" WHERE (DocumentCode=FIELD(Code))) }
    { 30  ;   ;BatchPrintHardcopy  ;Boolean        }
    { 40  ;   ;AdditionalAttachments;Integer      ;FieldClass=FlowField;
                                                   InitValue=0;
                                                   CalcFormula=Count("EasyPDF Attachment" WHERE (AttachmentType=FILTER(Document),
                                                                                                 Code=FIELD(Code),
                                                                                                 UserId=FIELD(User ID))) }
    { 50  ;   ;BatchGenerationReportId;Integer    ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report)) }
    { 60  ;   ;ReportLayoutID      ;Integer        }
  }
  KEYS
  {
    {    ;Code,User ID                            ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description                         }
  }
  CODE
  {
    VAR
      SubjectLine@1100774002 : Text[250];

    PROCEDURE GetMessageTemplate@1000000001(MessageType@1000000000 : 'EMAIL,FAX';LanguageCode@1000000004 : Code[10];VAR MessageTemplateRec@1000000001 : Record 14103467) : Boolean;
    VAR
      TemplateRec@1000000002 : Record 14103467;
      EntryNo@1000000003 : Integer;
    BEGIN

      IF MessageType = MessageType::EMAIL THEN
        EntryNo := "E-Mail Message Template";
      IF MessageType = MessageType::FAX THEN
        EntryNo := "FAX Message Template";

      IF TemplateRec.GET(EntryNo) THEN BEGIN
        IF LanguageCode = TemplateRec."Language Code" THEN BEGIN
          MessageTemplateRec.COPY(TemplateRec);
          EXIT(TRUE);
        END;
      END;

      EXIT(FALSE);
    END;

    PROCEDURE FindMessageTemplate@1000000000(MessageType@1000000002 : 'EMAIL,FAX';LanguageCode@1000000004 : Code[10];VAR MessageTemplateRec@1000000000 : Record 14103467;FindFirstTemplate@1000000003 : Boolean);
    VAR
      TemplateRec@1000000001 : Record 14103467;
      EasyPDF@1000000005 : Codeunit 37062300;
      EasyPDFSetup@1000000006 : Record 14103460;
      EntryNo@1000000007 : Integer;
    BEGIN

      // Look for a template matching the (customer/vendor) language code

      TemplateRec.RESET;
      TemplateRec.SETRANGE(Code, Code);
      TemplateRec.SETRANGE("User ID", "User ID");
      TemplateRec.SETRANGE("Message Type", MessageType);
      TemplateRec.SETRANGE("Language Code", LanguageCode);
      IF TemplateRec.FINDFIRST THEN BEGIN
        MessageTemplateRec.COPY(TemplateRec);
        EXIT;
      END;

      IF FindFirstTemplate THEN BEGIN

        // If set, return the currently configured template for this document

        IF MessageType = MessageType::EMAIL THEN
          EntryNo := "E-Mail Message Template";
        IF MessageType = MessageType::FAX THEN
          EntryNo := "FAX Message Template";
        IF EntryNo <> 0 THEN BEGIN
          IF TemplateRec.GET(EntryNo) THEN BEGIN
            MessageTemplateRec.COPY(TemplateRec);
            EXIT;
          END;
        END;

        // Not found, look for the first template matching this document's language code

        IF MessageType = MessageType::EMAIL THEN
          TemplateRec.SETRANGE("Language Code", "E-Mail Message Language Code");
        IF MessageType = MessageType::FAX THEN
          TemplateRec.SETRANGE("Language Code", "FAX Message Language Code");
        IF TemplateRec.FINDFIRST THEN BEGIN
          MessageTemplateRec.COPY(TemplateRec);
          EXIT;
        END;

      END;

      // Still nothing, look for a template matching the preferred language code in the setup

      EasyPDF.GetSetup(EasyPDFSetup);
      TemplateRec.SETRANGE("Language Code", EasyPDFSetup.PreferredLanguageCode);
      IF TemplateRec.FINDFIRST THEN BEGIN
        MessageTemplateRec.COPY(TemplateRec);
        EXIT;
      END;

      // No luck, return a blank one

      CLEAR(MessageTemplateRec);
      MessageTemplateRec.INIT;
      MessageTemplateRec.Code := Code;
      MessageTemplateRec."User ID" := "User ID";
      MessageTemplateRec."Message Type" := MessageType;
      IF MessageType = MessageType::EMAIL THEN
        MessageTemplateRec."Language Code" := "E-Mail Message Language Code";
      IF MessageType = MessageType::FAX THEN
        MessageTemplateRec."Language Code" := "FAX Message Language Code";
    END;

    PROCEDURE GetReportExtension@1000000003() : Text;
    BEGIN

      CASE "Save As Format" OF
        "Save As Format"::Word:   EXIT('docx');
        "Save As Format"::Excel:  EXIT('xlsx');
        "Save As Format"::Pdf:    EXIT('pdf');
        "Save As Format"::Xml:    EXIT('xml');
      END;
      EXIT('');
    END;

    BEGIN
    END.
  }
}

