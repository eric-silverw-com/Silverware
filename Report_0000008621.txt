OBJECT Report 8621 Config. Package - Process
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:13:24 PM;
    Version List=;
  }
  PROPERTIES
  {
    TransactionType=UpdateNoLocks;
    CaptionML=ENU=Config. Package - Process;
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table8613;
               DataItemTableView=SORTING(Package Code,Table ID)
                                 ORDER(Ascending);
               OnAfterGetRecord=BEGIN
                                  MESSAGE(STRSUBSTNO(ImplementProcessingLogicMsg,"Table ID"));

                                  // Code sample of the text transformation on package data
                                  // ProcessCustomRulesExample("Config. Package Table");
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      SourceTable=Table8613;
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ImplementProcessingLogicMsg@1001 : TextConst '@@@=%1 - a table Id.;ENU=Implement processing logic for Table %1 in Report 8621 - Config. Package - Process.';

    LOCAL PROCEDURE ApplyTextTransformation@25(ConfigPackageTable@1001 : Record 8613;FieldNo@1002 : Integer;TransformationRule@1000 : Record 1237);
    VAR
      ConfigPackageData@1003 : Record 8615;
    BEGIN
      IF GetConfigPackageData(ConfigPackageData,ConfigPackageTable,FieldNo) THEN
        REPEAT
          ConfigPackageData.Value := COPYSTR(TransformationRule.TransformText(ConfigPackageData.Value),1,250);
          ConfigPackageData.MODIFY;
        UNTIL ConfigPackageData.NEXT = 0;
    END;

    LOCAL PROCEDURE GetConfigPackageData@4(VAR ConfigPackageData@1004 : Record 8615;ConfigPackageTable@1000 : Record 8613;FieldId@1001 : Integer) : Boolean;
    BEGIN
      ConfigPackageData.SETRANGE("Package Code",ConfigPackageTable."Package Code");
      ConfigPackageData.SETRANGE("Table ID",ConfigPackageTable."Table ID");
      ConfigPackageData.SETRANGE("Field ID",FieldId);
      EXIT(ConfigPackageData.FINDSET(TRUE,FALSE));
    END;

    PROCEDURE ProcessCustomRulesExample@5(ConfigPackageTable@1000 : Record 8613);
    VAR
      Customer@1001 : Record 18;
      BankAccount@1002 : Record 270;
      PaymentTerms@1003 : Record 3;
      TransformationRule@1004 : Record 1237;
    BEGIN
      CASE ConfigPackageTable."Table ID" OF
        DATABASE::"Payment Terms":
          BEGIN
            TransformationRule."Transformation Type" := TransformationRule."Transformation Type"::"Title Case";
            ApplyTextTransformation(ConfigPackageTable,PaymentTerms.FIELDNO(Description),TransformationRule);
          END;
        DATABASE::"Bank Account":
          BEGIN
            TransformationRule."Transformation Type" :=
              TransformationRule."Transformation Type"::"Remove Non-Alphanumeric Characters";
            ApplyTextTransformation(ConfigPackageTable,BankAccount.FIELDNO("SWIFT Code"),TransformationRule);
            ApplyTextTransformation(ConfigPackageTable,BankAccount.FIELDNO(IBAN),TransformationRule);
          END;
        DATABASE::Customer:
          BEGIN
            TransformationRule."Transformation Type" := TransformationRule."Transformation Type"::Replace;
            TransformationRule."Find Value" := 'Mister';
            TransformationRule."Replace Value" := 'Mr.';
            ApplyTextTransformation(ConfigPackageTable,Customer.FIELDNO(Name),TransformationRule);
          END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

