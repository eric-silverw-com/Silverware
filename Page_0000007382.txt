OBJECT Page 7382 Inventory Movement
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:43 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Inventory Movement;
    SaveValues=Yes;
    SourceTable=Table5766;
    SourceTableView=WHERE(Type=CONST(Invt. Movement));
    PageType=Document;
    RefreshOnActivate=Yes;
    OnOpenPage=BEGIN
                 ErrorIfUserIsNotWhseEmployee;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindFirstAllowedRec(Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(FindNextAllowedRec(Steps));
                 END;

    OnNewRecord=BEGIN
                  "Location Code" := xRec."Location Code";
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 100     ;1   ;ActionGroup;
                      CaptionML=ENU=&Movement;
                      Image=CreateMovement }
      { 101     ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+L;
                      CaptionML=ENU=List;
                      ToolTipML=ENU=View all warehouse documents of this type that exist.;
                      ApplicationArea=#Warehouse;
                      Image=OpportunitiesList;
                      OnAction=BEGIN
                                 LookupActivityHeader("Location Code",Rec);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      CaptionML=ENU=Co&mments;
                      ToolTipML=ENU=View or add comments for the record.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page 5776;
                      RunPageLink=Table Name=CONST(Whse. Activity Header),
                                  Type=FIELD(Type),
                                  No.=FIELD(No.);
                      Image=ViewComments }
      { 31      ;2   ;Action    ;
                      CaptionML=ENU=Registered Invt. Movements;
                      ToolTipML=ENU=View the list of completed inventory movements.;
                      ApplicationArea=#Warehouse;
                      RunObject=Page 7386;
                      RunPageView=SORTING(Invt. Movement No.);
                      RunPageLink=Invt. Movement No.=FIELD(No.);
                      Image=RegisteredDocs }
      { 40      ;2   ;Action    ;
                      CaptionML=ENU=Source Document;
                      ToolTipML=ENU=View the source document of the warehouse activity.;
                      ApplicationArea=#Warehouse;
                      Image=Order;
                      OnAction=VAR
                                 WMSMgt@1000 : Codeunit 7302;
                               BEGIN
                                 WMSMgt.ShowSourceDocCard("Source Type","Source Subtype","Source No.");
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 9       ;1   ;ActionGroup;
                      CaptionML=ENU=F&unctions;
                      Image=Action }
      { 13      ;2   ;Action    ;
                      Name=GetSourceDocument;
                      ShortCutKey=Ctrl+F7;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Get Source Document;
                      ToolTipML=ENU=Select the source document that you want to move items for.;
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      Image=GetSourceDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 CreateInvtPickMovement@1001 : Codeunit 7322;
                               BEGIN
                                 IF LineExist THEN
                                   ERROR(Text001);
                                 CreateInvtPickMovement.SetInvtMovement(TRUE);
                                 CreateInvtPickMovement.RUN(Rec);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      CaptionML=ENU=Autofill Qty. to Handle;
                      ToolTipML=ENU=Have the system enter the outstanding quantity in the Qty. to Handle field.;
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AutofillQtyToHandle;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AutofillQtyToHandle;
                               END;
                                }
      { 39      ;2   ;Action    ;
                      CaptionML=ENU=Delete Qty. to Handle;
                      ToolTipML=ENU="Have the system clear the value in the Qty. To Handle field. ";
                      ApplicationArea=#Warehouse;
                      Image=DeleteQtyToHandle;
                      OnAction=BEGIN
                                 DeleteQtyToHandle;
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=ENU=&Registering;
                      Image=PostOrder }
      { 28      ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=ENU=&Register Invt. Movement;
                      ToolTipML=ENU=Register the movement of items between bins in a basic warehouse configuration.;
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=RegisterPutAway;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 RegisterActivityYesNo;
                               END;
                                }
      { 6       ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=ENU=&Print;
                      ToolTipML=ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                      ApplicationArea=#Warehouse;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 WhseDocPrint.PrintInvtMovementHeader(Rec,FALSE);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903694506;1 ;Action    ;
                      CaptionML=ENU=Movement List;
                      ToolTipML=ENU=View the list of ongoing movements between bins according to a basic warehouse configuration.;
                      ApplicationArea=#Warehouse;
                      RunObject=Report 7301;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=ENU=General }

    { 2   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the involved entry or record, according to the specified number series.;
                ApplicationArea=#Warehouse;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 8   ;2   ;Field     ;
                ToolTipML=ENU=Specifies the code for the location where the warehouse activity takes place.;
                ApplicationArea=#Location;
                SourceExpr="Location Code" }

    { 15  ;2   ;Field     ;
                Lookup=No;
                DrillDown=No;
                ToolTipML=ENU=Specifies the type of document that the line relates to.;
                OptionCaptionML=ENU="  ,,,,,,,,,,,Prod. Consumption,,,,,,,,,Assembly Consumption";
                ApplicationArea=#Warehouse;
                SourceExpr="Source Document" }

    { 11  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number of the source document that the entry originates from.;
                ApplicationArea=#Warehouse;
                SourceExpr="Source No.";
                OnValidate=BEGIN
                             SourceNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           CreateInvtPickMovement@1002 : Codeunit 7322;
                         BEGIN
                           IF LineExist THEN
                             ERROR(Text001);

                           CreateInvtPickMovement.SetInvtMovement(TRUE);
                           CreateInvtPickMovement.RUN(Rec);
                           CurrPage.UPDATE;
                           CurrPage.WhseActivityLines.PAGE.UpdateForm;
                         END;
                          }

    { 16  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the number or the code of the customer or vendor that the line is linked to.;
                ApplicationArea=#Warehouse;
                SourceExpr="Destination No.";
                CaptionClass=FORMAT(WMSMgt.GetCaption("Destination Type","Source Document",0));
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                CaptionML=ENU=Name;
                ToolTipML=ENU=Specifies the name of the destination for the inventory movement.;
                ApplicationArea=#Warehouse;
                SourceExpr=WMSMgt.GetDestinationName("Destination Type","Destination No.");
                CaptionClass=FORMAT(WMSMgt.GetCaption("Destination Type","Source Document",1));
                Editable=FALSE }

    { 29  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the date when the warehouse activity should be recorded as being posted.;
                ApplicationArea=#Warehouse;
                SourceExpr="Posting Date" }

    { 44  ;2   ;Field     ;
                ToolTipML=ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                ApplicationArea=#Warehouse;
                SourceExpr="External Document No.";
                CaptionClass=FORMAT(WMSMgt.GetCaption("Destination Type","Source Document",2)) }

    { 21  ;2   ;Field     ;
                ToolTipML=ENU=Specifies an additional part of the document number that refers to the customer's or vendor's numbering system.;
                ApplicationArea=#Warehouse;
                SourceExpr="External Document No.2";
                CaptionClass=FORMAT(WMSMgt.GetCaption("Destination Type","Source Document",3)) }

    { 42  ;2   ;Field     ;
                ToolTipML=ENU=Specifies the method by which the lines are sorted on the warehouse header, such as Item or Document.;
                ApplicationArea=#Warehouse;
                SourceExpr="Sorting Method";
                OnValidate=BEGIN
                             SortingMethodOnAfterValidate;
                           END;
                            }

    { 97  ;1   ;Part      ;
                Name=WhseActivityLines;
                ApplicationArea=#Warehouse;
                SubPageView=SORTING(Activity Type,No.,Sorting Sequence No.)
                            WHERE(Breakbulk=CONST(No));
                SubPageLink=Activity Type=FIELD(Type),
                            No.=FIELD(No.);
                PagePartID=Page7383;
                PartType=Page }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 3   ;1   ;Part      ;
                ApplicationArea=#ItemTracking;
                SubPageLink=Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code),
                            Location Code=FIELD(Location Code);
                PagePartID=Page9126;
                ProviderID=97;
                Visible=False;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      WhseDocPrint@1000 : Codeunit 5776;
      WMSMgt@1001 : Codeunit 7302;
      Text001@1002 : TextConst 'ENU=You cannot use this function if the lines already exist.';

    LOCAL PROCEDURE AutofillQtyToHandle@1();
    BEGIN
      CurrPage.WhseActivityLines.PAGE.AutofillQtyToHandle;
    END;

    LOCAL PROCEDURE DeleteQtyToHandle@2();
    BEGIN
      CurrPage.WhseActivityLines.PAGE.DeleteQtyToHandle;
    END;

    LOCAL PROCEDURE RegisterActivityYesNo@3();
    BEGIN
      CurrPage.WhseActivityLines.PAGE.RegisterActivityYesNo;
    END;

    LOCAL PROCEDURE SourceNoOnAfterValidate@19036011();
    BEGIN
      CurrPage.UPDATE;
      CurrPage.WhseActivityLines.PAGE.UpdateForm;
    END;

    LOCAL PROCEDURE SortingMethodOnAfterValidate@19063061();
    BEGIN
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

