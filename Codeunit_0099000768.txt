OBJECT Codeunit 99000768 Production BOM-Copy
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    TableNo=99000771;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 cannot be copied to itself.;ESM=%1 no puede copiarse en s¡ misma.;FRC=%1 ne peut ˆtre copi‚ sur lui-mˆme.;ENC=The %1 cannot be copied to itself.';
      Text001@1001 : TextConst 'ENU=%1 on %2 %3 must not be %4;ESM=%1 en %2 %3 no debe ser %4;FRC=%1 dans %2 %3 ne doit pas ˆtre %4;ENC=%1 on %2 %3 must not be %4';
      Text002@1002 : TextConst 'ENU=%1 on %2 %3 %4 must not be %5;ESM=%1 en %2 %3 %4 no debe ser %5;FRC=%1 dans %2 %3 %4 ne doit pas ˆtre %5;ENC=%1 on %2 %3 %4 must not be %5';

    [External]
    PROCEDURE CopyBOM@1(BOMHeaderNo@1000 : Code[20];FromVersionCode@1001 : Code[20];CurrentBOMHeader@1002 : Record 99000771;ToVersionCode@1003 : Code[20]);
    VAR
      FromProdBOMLine@1004 : Record 99000772;
      ToProdBOMLine@1005 : Record 99000772;
      FromProdBOMCompComment@1006 : Record 99000776;
      ToProdBOMCompComment@1007 : Record 99000776;
      ProdBOMVersion@1008 : Record 99000779;
      SkipBOMDeletion@1009 : Boolean;
      LineNo@1010 : Integer;
    BEGIN
      IF (CurrentBOMHeader."No." = BOMHeaderNo) AND
         (FromVersionCode = ToVersionCode)
      THEN
        ERROR(Text000,CurrentBOMHeader.TABLECAPTION);

      IF ToVersionCode = '' THEN BEGIN
        IF CurrentBOMHeader.Status = CurrentBOMHeader.Status::Certified THEN
          ERROR(
            Text001,
            CurrentBOMHeader.FIELDCAPTION(Status),
            CurrentBOMHeader.TABLECAPTION,
            CurrentBOMHeader."No.",
            CurrentBOMHeader.Status);
      END ELSE BEGIN
        ProdBOMVersion.GET(
          CurrentBOMHeader."No.",ToVersionCode);
        IF ProdBOMVersion.Status = ProdBOMVersion.Status::Certified THEN
          ERROR(
            Text002,
            ProdBOMVersion.FIELDCAPTION(Status),
            ProdBOMVersion.TABLECAPTION,
            ProdBOMVersion."Production BOM No.",
            ProdBOMVersion."Version Code",
            ProdBOMVersion.Status);
      END;

      LineNo := 0;
      SkipBOMDeletion := FALSE;
      OnBeforeCopyBOM(CurrentBOMHeader,BOMHeaderNo,FromVersionCode,ToVersionCode,SkipBOMDeletion,LineNo);
      IF NOT SkipBOMDeletion THEN BEGIN
        ToProdBOMLine.SETRANGE("Production BOM No.",CurrentBOMHeader."No.");
        ToProdBOMLine.SETRANGE("Version Code",ToVersionCode);
        ToProdBOMLine.DELETEALL;

        ToProdBOMCompComment.SETRANGE("Production BOM No.",CurrentBOMHeader."No.");
        ToProdBOMCompComment.SETRANGE("Version Code",ToVersionCode);
        ToProdBOMCompComment.DELETEALL;
      END;

      FromProdBOMLine.SETRANGE("Production BOM No.",BOMHeaderNo);
      FromProdBOMLine.SETRANGE("Version Code",FromVersionCode);
      IF FromProdBOMLine.FIND('-') THEN
        REPEAT
          ToProdBOMLine := FromProdBOMLine;
          ToProdBOMLine."Production BOM No." := CurrentBOMHeader."No.";
          ToProdBOMLine."Version Code" := ToVersionCode;
          IF SkipBOMDeletion THEN
            ToProdBOMLine."Line No." := LineNo;
          OnBeforeInsertProdBOMComponent(ToProdBOMLine,FromProdBOMLine);
          ToProdBOMLine.INSERT;
          OnAfterInsertProdBOMComponent(ToProdBOMLine,FromProdBOMLine,CurrentBOMHeader,SkipBOMDeletion,LineNo);
        UNTIL FromProdBOMLine.NEXT = 0;

      IF SkipBOMDeletion THEN
        EXIT;

      FromProdBOMCompComment.SETRANGE("Production BOM No.",BOMHeaderNo);
      FromProdBOMCompComment.SETRANGE("Version Code",FromVersionCode);
      IF FromProdBOMCompComment.FIND('-') THEN
        REPEAT
          ToProdBOMCompComment := FromProdBOMCompComment;
          ToProdBOMCompComment."Production BOM No." := CurrentBOMHeader."No.";
          ToProdBOMCompComment."Version Code" := ToVersionCode;
          ToProdBOMCompComment.INSERT;
        UNTIL FromProdBOMCompComment.NEXT = 0;
    END;

    [External]
    PROCEDURE CopyFromVersion@2(VAR ProdBOMVersionList2@1000 : Record 99000779);
    VAR
      ProdBOMHeader@1001 : Record 99000771;
      OldProdBOMVersionList@1002 : Record 99000779;
    BEGIN
      OldProdBOMVersionList := ProdBOMVersionList2;

      ProdBOMHeader.INIT;
      ProdBOMHeader."No." := ProdBOMVersionList2."Production BOM No.";
      IF PAGE.RUNMODAL(0,ProdBOMVersionList2) = ACTION::LookupOK THEN BEGIN
        IF OldProdBOMVersionList.Status = OldProdBOMVersionList.Status::Certified THEN
          ERROR(
            Text002,
            OldProdBOMVersionList.FIELDCAPTION(Status),
            OldProdBOMVersionList.TABLECAPTION,
            OldProdBOMVersionList."Production BOM No.",
            OldProdBOMVersionList."Version Code",
            OldProdBOMVersionList.Status);
        CopyBOM(ProdBOMHeader."No.",ProdBOMVersionList2."Version Code",ProdBOMHeader,OldProdBOMVersionList."Version Code");
      END;

      ProdBOMVersionList2 := OldProdBOMVersionList;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCopyBOM@4(VAR ProdBOMHeader@1002 : Record 99000771;BOMHeaderNo@1000 : Code[20];FromVersionCode@1001 : Code[20];ToVersionCode@1003 : Code[20];VAR SkipBOMDeletion@1004 : Boolean;VAR LineNo@1005 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInsertProdBOMComponent@5(VAR ToProductionBOMLine@1001 : Record 99000772;VAR FromProductionBOMLine@1000 : Record 99000772;VAR ProductionBOMHeader@1002 : Record 99000771;VAR SkipBOMDeletion@1004 : Boolean;VAR LineNo@1003 : Integer);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeInsertProdBOMComponent@3(VAR ToProductionBOMLine@1000 : Record 99000772;VAR FromProductionBOMLine@1001 : Record 99000772);
    BEGIN
    END;

    BEGIN
    END.
  }
}

