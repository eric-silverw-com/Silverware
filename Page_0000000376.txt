OBJECT Page 376 Job Journal Reconcile
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Job Journal Reconcile;
               ESM=Control diario proyecto;
               FRC=Rapprochement journal projet;
               ENC=Job Journal Reconcile];
    SourceTable=Table278;
    DataCaptionExpr=Caption;
    PageType=List;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 JobJnlLine.SETCURRENTKEY("Journal Template Name","Journal Batch Name",Type,"No.","Unit of Measure Code","Work Type Code");
                 IF JobJnlLine.FIND('-') THEN BEGIN
                   OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                   OldWorkTypeCode := JobJnlLine."Work Type Code";
                   REPEAT
                     IF OldUnitOfMeasureCode <> JobJnlLine."Unit of Measure Code" THEN BEGIN
                       InsertUnitOfMeasureQty;
                       InsertWorkTypeQty;
                     END ELSE
                       IF OldWorkTypeCode <> JobJnlLine."Work Type Code" THEN
                         InsertWorkTypeQty;

                     OldUnitOfMeasureCode := JobJnlLine."Unit of Measure Code";
                     OldWorkTypeCode := JobJnlLine."Work Type Code";

                     UnitOfMeasureQty := UnitOfMeasureQty + JobJnlLine.Quantity;
                     WorkTypeQty := WorkTypeQty + JobJnlLine.Quantity;
                     TotalQty := TotalQty + JobJnlLine.Quantity;
                   UNTIL (JobJnlLine.NEXT = 0);

                   InsertUnitOfMeasureQty;
                   InsertWorkTypeQty;
                   INIT;
                   "Is Total" := TRUE;
                   "Unit of Measure Code" := '';
                   "Line Type" := "Line Type"::Total;
                   "Work Type Code" := '';
                   Quantity := TotalQty;
                   INSERT;

                   TotalQty := 0;
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       FormatLine(FORMAT("Unit of Measure Code"));
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.;
                           ESM=Especifica c¢mo se mide cada unidad del producto o el recurso, por ejemplo, en piezas u horas. De forma predeterminada, se inserta el valor en el campo Unidad de medida base de la ficha de producto o recurso.;
                           FRC=Sp‚cifie la maniŠre dont chaque unit‚ de mesure de l'article ou de la ressource est mesur‚e, par exemple en unit‚ de mesures ou en heures. Par d‚faut, la valeur du champ unit‚ de mesure de base de la fiche article ou la ressource est ins‚r‚e.;
                           ENC=Specifies how each unit of the item or resource is measured, such as in pieces or hours. By default, the value in the Base Unit of Measure field on the item or resource card is inserted.];
                ApplicationArea=#Jobs;
                SourceExpr="Unit of Measure Code";
                Style=Strong;
                StyleExpr=Emphasize }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which work type the resource applies to. Prices are updated based on this entry.;
                           ESM=Especifica a qu‚ tipo de trabajo corresponde el recurso. Los precios se actualizan seg£n este movimiento.;
                           FRC=Sp‚cifie le type travail auquel la ressource s'applique. Les prix sont mis … jour en se basant sur cette valeur.;
                           ENC=Specifies which work type the resource applies to. Prices are updated based on this entry.];
                ApplicationArea=#Jobs;
                SourceExpr="Work Type Code" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the job quantity to be reconciled.;
                           ESM=Especifica la cantidad de trabajo que se va a conciliar.;
                           FRC=Sp‚cifie la quantit‚ projet … rapprocher.;
                           ENC=Specifies the job quantity to be reconciled.];
                ApplicationArea=#Jobs;
                SourceExpr=Quantity;
                Style=Strong;
                StyleExpr=Emphasize }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Total %1;ESM=Total %1;FRC=Total %1;ENC=Total %1';
      JobJnlLine@1001 : Record 210;
      UnitOfMeasureQty@1003 : Decimal;
      WorkTypeQty@1004 : Decimal;
      TotalQty@1005 : Decimal;
      OldUnitOfMeasureCode@1006 : Text[10];
      OldWorkTypeCode@1007 : Code[10];
      Emphasize@19043477 : Boolean INDATASET;

    [External]
    PROCEDURE SetJobJnlLine@1(VAR JobJnlLine2@1000 : Record 210);
    BEGIN
      JobJnlLine2.TESTFIELD(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.COPYFILTERS(JobJnlLine2);
      JobJnlLine.SETRANGE(Type,JobJnlLine2.Type::Resource);
      JobJnlLine.SETRANGE("No.",JobJnlLine2."No.");
    END;

    LOCAL PROCEDURE InsertUnitOfMeasureQty@2();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := "Line Type"::Total;
      "Work Type Code" := '';
      Quantity := UnitOfMeasureQty;
      INSERT;
      UnitOfMeasureQty := 0;
    END;

    LOCAL PROCEDURE InsertWorkTypeQty@3();
    BEGIN
      INIT;
      "Is Total" := FALSE;
      "Unit of Measure Code" := OldUnitOfMeasureCode;
      "Line Type" := 0;
      "Work Type Code" := OldWorkTypeCode;
      Quantity := WorkTypeQty;
      INSERT;
      WorkTypeQty := 0;
    END;

    LOCAL PROCEDURE Caption@4() : Text[80];
    VAR
      Res@1000 : Record 156;
    BEGIN
      Res.GET(JobJnlLine.GETRANGEMIN("No."));
      EXIT(Res."No." + ' ' + Res.Name);
    END;

    LOCAL PROCEDURE FormatLine@19026690(Text@19007834 : Text[1024]);
    BEGIN
      IF "Line Type" = "Line Type"::Total THEN BEGIN
        Emphasize := TRUE;
        Text := STRSUBSTNO(Text000,Text);
      END;
    END;

    BEGIN
    END.
  }
}

