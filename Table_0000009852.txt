OBJECT Table 9852 Permission Buffer
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:15:50 PM;
    Version List=;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=ENU=Permission Buffer;
  }
  FIELDS
  {
    { 1   ;   ;Source              ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Source;
                                                   OptionCaptionML=ENU=Normal,Entitlement;
                                                   OptionString=Normal,Entitlement }
    { 2   ;   ;Permission Set      ;Code20        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Permission Set }
    { 3   ;   ;Type                ;Option        ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Type;
                                                   OptionCaptionML=ENU=User-Defined,Extension,System;
                                                   OptionString=User-Defined,Extension,System }
    { 4   ;   ;Read Permission     ;Option        ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Read Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 5   ;   ;Insert Permission   ;Option        ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Insert Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 6   ;   ;Modify Permission   ;Option        ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Modify Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 7   ;   ;Delete Permission   ;Option        ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Delete Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 8   ;   ;Execute Permission  ;Option        ;InitValue=Yes;
                                                   DataClassification=SystemMetadata;
                                                   CaptionML=ENU=Execute Permission;
                                                   OptionCaptionML=ENU=" ,Yes,Indirect";
                                                   OptionString=[ ,Yes,Indirect] }
    { 9   ;   ;App ID              ;GUID          ;DataClassification=SystemMetadata;
                                                   CaptionML=ENU=App ID }
  }
  KEYS
  {
    {    ;Type,Permission Set                     ;Clustered=Yes }
    {    ;Source                                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    LOCAL PROCEDURE GetScope@1() : Integer;
    VAR
      AggregatePermissionSet@1000 : Record 2000000167;
    BEGIN
      CASE Type OF
        Type::System:
          EXIT(AggregatePermissionSet.Scope::System);
        Type::"User-Defined",
        Type::Extension:
          EXIT(AggregatePermissionSet.Scope::Tenant);
      END;
    END;

    [External]
    PROCEDURE GetAppID@5() : GUID;
    VAR
      AggregatePermissionSet@1002 : Record 2000000167;
      Scope@1001 : Integer;
      ZeroGuid@1000 : GUID;
    BEGIN
      Scope := GetScope;
      IF Type <> Type::Extension THEN
        EXIT(ZeroGuid);

      AggregatePermissionSet.SETRANGE(Scope,Scope);
      AggregatePermissionSet.SETRANGE("Role ID","Permission Set");
      AggregatePermissionSet.FINDFIRST;
      EXIT(AggregatePermissionSet."App ID");
    END;

    [External]
    PROCEDURE OpenPermissionsPage@3(RunAsModal@1001 : Boolean);
    VAR
      PermissionPagesMgt@1000 : Codeunit 9001;
    BEGIN
      PermissionPagesMgt.ShowPermissions(GetScope,GetAppID,"Permission Set",RunAsModal)
    END;

    BEGIN
    END.
  }
}

