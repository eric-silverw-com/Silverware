OBJECT Page 9192 Company Creation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=11/27/18;
    Time=11:11:53 PM;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=ENU=Create New Company;
    PageType=NavigatePage;
    OnInit=VAR
             ApplicationAreaMgmt@1000 : Codeunit 9178;
             PermissionManager@1001 : Codeunit 9002;
           BEGIN
             IF NOT PermissionManager.IsSuper(USERSECURITYID) THEN
               ERROR(OnlySuperCanCreateNewCompanyErr);

             LoadTopBanners;
             IsAdvancedSaaS := ApplicationAreaMgmt.IsAdvancedSaaSEnabled;
             CanManageUser := PermissionManager.CanManageUsersOnTenant(USERSECURITYID);
           END;

    OnOpenPage=BEGIN
                 Step := Step::Start;
                 NewCompanyData := NewCompanyData::"Standard Data";
                 UpdateDataDescription;
                 EnableControls;
                 CurrPage.UserListPart.PAGE.SetRec(TempUser);
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::OK THEN
                         IF NOT CompanyCreated THEN
                           IF NOT CONFIRM(SetupNotCompletedQst,FALSE) THEN
                             ERROR('');
                     END;

    ActionList=ACTIONS
    {
      { 2       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 3       ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=ENU=Back;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 4       ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=ENU=Next;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 5       ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=ENU=Finish;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 6   ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 7   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesStandard."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 8   ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 9   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=MediaResourcesDone."Media Reference";
                Editable=FALSE;
                ShowCaption=No }

    { 10  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 11  ;2   ;Group     ;
                CaptionML=ENU=Welcome to assisted setup for creating a company;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 12  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=ENU=This guide will help you create a new company. }

    { 24  ;2   ;Group     ;
                CaptionML=ENU=Let's go!;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Next to get started. }

    { 13  ;1   ;Group     ;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 14  ;2   ;Group     ;
                CaptionML=ENU=Specify some basic information;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Enter a name for the company. }

    { 21  ;4   ;Field     ;
                Name=CompanyName;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyName;
                OnValidate=VAR
                             Company@1000 : Record 2000000006;
                           BEGIN
                             NewCompanyName := DELCHR(NewCompanyName,'<>');
                             Company.SETFILTER(Name,'%1','@' + NewCompanyName);
                             IF Company.FINDFIRST THEN
                               ERROR(CompanyAlreadyExistsErr);
                           END;

                ShowMandatory=TRUE;
                ShowCaption=No }

    { 16  ;3   ;Group     ;
                CaptionML=ENU=Select the data and setup to get started.;
                GroupType=Group }

    { 26  ;4   ;Group     ;
                Visible=NOT IsAdvancedSaaS;
                GroupType=Group }

    { 15  ;5   ;Field     ;
                Name=CompanyData;
                OptionCaptionML=ENU=Evaluation - Sample Data,Production - Setup Data Only,Create New - No Data;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyData;
                Visible=NOT IsAdvancedSaaS;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=No }

    { 27  ;4   ;Group     ;
                Visible=IsAdvancedSaaS;
                GroupType=Group }

    { 25  ;5   ;Field     ;
                Name=CompanyFullData;
                OptionCaptionML=ENU=Evaluation - Sample Data,Production - Setup Data Only,,Advanced Evaluation - Complete Sample Data,Create New - No Data;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyData;
                Visible=IsAdvancedSaaS;
                OnValidate=BEGIN
                             UpdateDataDescription;
                           END;

                ShowCaption=No }

    { 23  ;4   ;Field     ;
                Name=NewCompanyDataDescription;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=NewCompanyDataDescription;
                Editable=FALSE;
                MultiLine=Yes;
                ShowCaption=No }

    { 32  ;1   ;Group     ;
                Visible=AddUsersVisible;
                GroupType=Group }

    { 31  ;2   ;Group     ;
                CaptionML=ENU=Manage users of the new company.;
                Visible=CanManageUser;
                GroupType=Group }

    { 30  ;3   ;Group     ;
                CaptionML=ENU=Add users to or remove users from the new company.;
                GroupType=Group }

    { 29  ;4   ;Field     ;
                Name=ManageUserLabel;
                CaptionML=ENU=Manage Users;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ManageUsersLbl;
                Editable=FALSE;
                Style=AttentionAccent;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              PAGE.RUNMODAL(PAGE::"User Buffer List",TempUser);

                              ContainUsers := NOT TempUser.ISEMPTY;
                              CurrPage.UserListPart.PAGE.SetRec(TempUser);
                            END;

                ShowCaption=No }

    { 28  ;4   ;Group     ;
                Visible=ContainUsers;
                Enabled=FALSE;
                Editable=FALSE;
                GroupType=Group }

    { 33  ;5   ;Part      ;
                Name=UserListPart;
                CaptionML=ENU=Users;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page9826;
                PartType=Page }

    { 34  ;2   ;Group     ;
                CaptionML=ENU=The new company will be created without users;
                Visible=NOT CanManageUser;
                GroupType=Group }

    { 35  ;3   ;Field     ;
                Name=OnlySuperCanLabel;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OnlySuperCanManageUsersLbl;
                Editable=FALSE;
                Style=AttentionAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 17  ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=ENU=That's it!;
                GroupType=Group }

    { 19  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=ENU=Choose Finish to create the company. This can take a few minutes to complete. }

    { 22  ;3   ;Group     ;
                Visible=ConfigurationPackageExists;
                GroupType=Group;
                InstructionalTextML=ENU=The company is created and included in the companies list, but before you use it we need time to set up some data and settings for you. }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1000 : Record 9400;
      MediaRepositoryDone@1001 : Record 9400;
      MediaResourcesStandard@1030 : Record 2000000182;
      MediaResourcesDone@1029 : Record 2000000182;
      TempUser@1033 : TEMPORARY Record 2000000120;
      AssistedCompanySetup@1021 : Codeunit 1800;
      ClientTypeManagement@1077 : Codeunit 4;
      Step@1002 : 'Start,Creation,Add Users,Finish';
      TopBannerVisible@1003 : Boolean;
      FirstStepVisible@1004 : Boolean;
      CreationStepVisible@1005 : Boolean;
      FinalStepVisible@1006 : Boolean;
      FinishActionEnabled@1007 : Boolean;
      BackActionEnabled@1008 : Boolean;
      NextActionEnabled@1009 : Boolean;
      SetupNotCompletedQst@1013 : TextConst 'ENU=The company has not yet been created.\\Are you sure that you want to exit?';
      ConfigurationPackageExists@1022 : Boolean;
      NewCompanyName@1010 : Text[30];
      NewCompanyData@1011 : 'Evaluation Data,Standard Data,None,Extended Data,Full No Data';
      CompanyAlreadyExistsErr@1014 : TextConst 'ENU=A company with that name already exists. Try a different name.';
      NewCompanyDataDescription@1012 : Text;
      CompanyCreated@1015 : Boolean;
      SpecifyCompanyNameErr@1016 : TextConst 'ENU=To continue, you must specify a name for the company.';
      NoConfigurationPackageFileDefinedMsg@1020 : TextConst 'ENU=No configuration package file is defined for this company type. An empty company will be created.';
      EvaluationDataTxt@1023 : TextConst 'ENU=\Essential Experience / Cronus Company Sample Data / Setup Data\\Create a company with the Essential functionality scope containing everything you need to evaluate the product for companies with standard processes. For example, sample invoices and ledger entries allow you to view charts and reports.';
      StandardDataTxt@1024 : TextConst 'ENU=\Essential Experience / Setup Data Only\\Create a company with the Essential functionality scope containing data and setup, such as a chart of accounts and payment methods ready for use by companies with standard processes. Set up your own items and customers, and start posting right away.';
      NoDataTxt@1025 : TextConst 'ENU=\Any Experience / No Sample Data / No Setup Data\\Create a company with the desired experience for companies with any process complexity, and set it up manually.';
      ExtendedDataTxt@1019 : TextConst 'ENU=\Advanced Experience / Cronus Company Sample Data / Setup Data\\Create a company with the Advanced functionality scope containing everything you need to evaluate the product for companies with advanced processes. For example, sample items and customers allow you to start posting right away.';
      TrialPeriodTxt@1026 : TextConst 'ENU=\\You will be able to use this company for a 30-day trial period.';
      EvalPeriodTxt@1027 : TextConst 'ENU="\\You will be able to use the company to try out the product for as long as you want. "';
      IsAdvancedSaaS@1018 : Boolean;
      LangDifferentFromConfigurationPackageFileMsg@1017 : TextConst '@@@=%1 is the language code of the pack;ENU=The language of the configuration package file is different than your current language. The new company will be created in %1.';
      CompanySetUpInProgressMsg@1028 : TextConst '@@@=%1 - a company name;ENU=Company %1 has been created, but we are still setting it up for you.\This may take up to 10 minutes, so take a short break before you begin to use it.';
      AddUsersVisible@1031 : Boolean;
      ManageUsersLbl@1032 : TextConst 'ENU=Manage Users';
      CanManageUser@1034 : Boolean;
      ContainUsers@1035 : Boolean;
      OnlySuperCanManageUsersLbl@1036 : TextConst 'ENU=Only administrators and super users can sign in to this company and manage users.';
      OnlySuperCanCreateNewCompanyErr@1037 : TextConst 'ENU=Only users with the SUPER permission set can create a new company.';

    LOCAL PROCEDURE EnableControls@1();
    BEGIN
      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::"Add Users":
          ShowAddUsersStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@2();
    VAR
      AssistedCompanySetup@1000 : Codeunit 1800;
      PermissionManager@1001 : Codeunit 9002;
    BEGIN
      AssistedCompanySetup.CreateNewCompany(NewCompanyName);
      AssistedCompanySetup.SetUpNewCompany(NewCompanyName,NewCompanyData);

      IF TempUser.FINDSET THEN
        REPEAT
          PermissionManager.AddUserToDefaultUserGroupsForCompany(TempUser."User Security ID",NewCompanyName);
        UNTIL TempUser.NEXT = 0;

      CompanyCreated := TRUE;
      CurrPage.CLOSE;
      IF NOT (NewCompanyData IN [NewCompanyData::None,NewCompanyData::"Full No Data"]) THEN
        MESSAGE(CompanySetUpInProgressMsg,NewCompanyName);
    END;

    LOCAL PROCEDURE NextStep@3(Backwards@1000 : Boolean);
    BEGIN
      IF (Step = Step::Creation) AND NOT Backwards THEN
        IF NewCompanyName = '' THEN
          ERROR(SpecifyCompanyNameErr);
      IF (Step = Step::Creation) AND NOT Backwards THEN
        ValidateCompanyType;

      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@4();
    BEGIN
      FirstStepVisible := TRUE;

      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowCreationStep@5();
    BEGIN
      CreationStepVisible := TRUE;

      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowAddUsersStep@10();
    BEGIN
      AddUsersVisible := TRUE;

      FinishActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowFinalStep@6();
    BEGIN
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ResetControls@7();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      CreationStepVisible := FALSE;
      AddUsersVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@8();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(ClientTypeManagement.GetCurrentClientType))
      THEN
        IF MediaResourcesStandard.GET(MediaRepositoryStandard."Media Resources Ref") AND
           MediaResourcesDone.GET(MediaRepositoryDone."Media Resources Ref")
        THEN
          TopBannerVisible := MediaResourcesDone."Media Reference".HASVALUE;
    END;

    LOCAL PROCEDURE ValidateCompanyType@11();
    VAR
      ConfigurationPackageFile@1000 : Record 2000000170;
      UserPersonalization@1002 : Record 2000000073;
      LanguageManagement@1001 : Codeunit 43;
    BEGIN
      ConfigurationPackageExists := FALSE;
      IF NewCompanyData IN [NewCompanyData::None,NewCompanyData::"Full No Data"] THEN
        EXIT;
      ConfigurationPackageExists := AssistedCompanySetup.FindConfigurationPackageFile(ConfigurationPackageFile,NewCompanyData);

      IF NOT ConfigurationPackageExists THEN
        MESSAGE(NoConfigurationPackageFileDefinedMsg)
      ELSE BEGIN
        UserPersonalization.GET(USERSECURITYID);
        IF ConfigurationPackageFile."Language ID" <> UserPersonalization."Language ID" THEN
          MESSAGE(LangDifferentFromConfigurationPackageFileMsg,
            LanguageManagement.GetWindowsLanguageNameFromLanguageID(ConfigurationPackageFile."Language ID"));
      END;
    END;

    LOCAL PROCEDURE UpdateDataDescription@17();
    VAR
      TenantLicenseState@1000 : Record 2000000189;
    BEGIN
      CASE NewCompanyData OF
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription := EvaluationDataTxt;
        NewCompanyData::"Standard Data":
          NewCompanyDataDescription := StandardDataTxt;
        NewCompanyData::"Extended Data":
          NewCompanyDataDescription := ExtendedDataTxt;
        NewCompanyData::None,NewCompanyData::"Full No Data":
          NewCompanyDataDescription := NoDataTxt;
      END;

      IF IsAdvancedSaaS THEN
        EXIT;
      IF NOT TenantLicenseState.FINDLAST THEN
        EXIT;
      IF TenantLicenseState.State = TenantLicenseState.State::Paid THEN
        EXIT;

      CASE NewCompanyData OF
        NewCompanyData::"Evaluation Data":
          NewCompanyDataDescription += EvalPeriodTxt;
        NewCompanyData::"Standard Data",
        NewCompanyData::None:
          NewCompanyDataDescription += TrialPeriodTxt;
      END;
    END;

    BEGIN
    END.
  }
}

