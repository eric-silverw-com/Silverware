OBJECT Table 7500 Item Attribute
{
  OBJECT-PROPERTIES
  {
    Date=09/19/18;
    Time=12:00:00 PM;
    Version List=NAVW113.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Name;
    OnDelete=BEGIN
               IF HasBeenUsed THEN
                 IF NOT CONFIRM(DeleteUsedAttributeQst) THEN
                   ERROR('');
               DeleteValuesAndTranslations;
             END;

    OnRename=VAR
               ItemAttributeValue@1000 : Record 7501;
             BEGIN
               ItemAttributeValue.SETRANGE("Attribute ID",xRec.ID);
               IF ItemAttributeValue.FINDSET THEN
                 REPEAT
                   ItemAttributeValue.RENAME(ID,ItemAttributeValue.ID);
                 UNTIL ItemAttributeValue.NEXT = 0;
             END;

    CaptionML=[ENU=Item Attribute;
               ESM=Atributo de producto;
               FRC=Attribut article;
               ENC=Item Attribute];
    LookupPageID=Page7500;
  }
  FIELDS
  {
    { 1   ;   ;ID                  ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=ID;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=ID];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text250       ;OnValidate=BEGIN
                                                                IF xRec.Name = Name THEN
                                                                  EXIT;

                                                                TESTFIELD(Name);
                                                                IF HasBeenUsed THEN
                                                                  IF NOT CONFIRM(RenameUsedAttributeQst) THEN
                                                                    ERROR('');
                                                                CheckNameUniqueness(Rec,Name);
                                                                DeleteValuesAndTranslationsConditionally(xRec,Name);
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name];
                                                   NotBlank=Yes }
    { 6   ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              ESM=Bloqueado;
                                                              FRC=Bloqu‚;
                                                              ENC=Blocked] }
    { 7   ;   ;Type                ;Option        ;InitValue=Text;
                                                   OnValidate=VAR
                                                                ItemAttributeValue@1000 : Record 7501;
                                                              BEGIN
                                                                IF xRec.Type <> Type THEN BEGIN
                                                                  ItemAttributeValue.SETRANGE("Attribute ID",ID);
                                                                  IF NOT ItemAttributeValue.ISEMPTY THEN
                                                                    ERROR(ChangingAttributeTypeErr,Name);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Option,Text,Integer,Decimal;
                                                                    ESM=Opci¢n,Texto,Entero,Decimal;
                                                                    FRC=Option,Texte,Entier,D‚cimal;
                                                                    ENC=Option,Text,Integer,Decimal];
                                                   OptionString=Option,Text,Integer,Decimal }
    { 8   ;   ;Unit of Measure     ;Text30        ;OnValidate=BEGIN
                                                                IF (xRec."Unit of Measure" <> '') AND (xRec."Unit of Measure" <> "Unit of Measure") THEN
                                                                  IF HasBeenUsed THEN
                                                                    IF NOT CONFIRM(ChangeUsedAttributeUoMQst) THEN
                                                                      ERROR('');
                                                              END;

                                                   CaptionML=[ENU=Unit of Measure;
                                                              ESM=Unidad medida;
                                                              FRC=Unit‚ de mesure;
                                                              ENC=Unit of Measure] }
  }
  KEYS
  {
    {    ;ID                                      ;Clustered=Yes }
    {    ;Name                                     }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Name                                     }
    { 2   ;Brick               ;ID,Name                                  }
  }
  CODE
  {
    VAR
      ItemAttributeTranslation@1022 : Record 7502;
      NameAlreadyExistsErr@1000 : TextConst '@@@=%1 - arbitrary name;ENU=The item attribute with name ''%1'' already exists.;ESM=Ya existe el atributo de producto con el nombre ''%1''.;FRC=L''attribut article ®ÿ%1ÿ¯ existe d‚j….;ENC=The item attribute with name ''%1'' already exists.';
      ReuseValueTranslationsQst@1001 : TextConst '@@@=%1 - arbitrary name,%2 - arbitrary name;ENU=There are values and translations for item attribute ''%1''.\\Do you want to reuse them after changing the item attribute name to ''%2''?;ESM=Ya existen valores y traducciones del atributo de producto ''%1''.\\¨Quiere volver a usar estos valores una vez que haya cambiado el nombre del atributo de producto a ''%2''?;FRC=Il existe des valeurs et des traductions pour l''attribut d''article ®ÿ%1ÿ¯.\\Souhaitez-vous les r‚utiliser aprŠs avoir remplac‚ le nom de l''attribut d''article par ®ÿ%2ÿ¯ÿ?;ENC=There are values and translations for item attribute ''%1''.\\Do you want to reuse them after changing the item attribute name to ''%2''?';
      ChangingAttributeTypeErr@1002 : TextConst '@@@=%1 - arbirtrary text;ENU=You cannot change the type of item attribute ''%1'', because it is either in use or it has predefined values.;ESM=No puede cambiar el tipo de atributo de producto ''%1'', porque ya est  en uso o tiene valores predeterminados.;FRC=Vous ne pouvez pas modifier le type de l''attribut d''article ®ÿ%1ÿ¯, car il est utilis‚ ou pr‚sente des valeurs pr‚d‚finies.;ENC=You cannot change the type of item attribute ''%1'', because it is either in use or it has predefined values.';
      DeleteUsedAttributeQst@1004 : TextConst 'ENU=This item attribute has been assigned to at least one item.\\Are you sure you want to delete it?;ESM=Este atributo de producto se asign¢ a un producto como m¡nimo.\\¨Est  seguro de que quiere eliminarlo?;FRC=Cet attribut d''article a ‚t‚ affect‚ … au moins un article.\\Souhaitez-vous le supprimerÿ?;ENC=This item attribute has been assigned to at least one item.\\Are you sure you want to delete it?';
      RenameUsedAttributeQst@1005 : TextConst 'ENU=This item attribute has been assigned to at least one item.\\Are you sure you want to rename it?;ESM=Este atributo de producto se asign¢ a un producto como m¡nimo.\\¨Est  seguro de que quiere cambiarle el nombre?;FRC=Cet attribut d''article a ‚t‚ affect‚ … au moins un article.\\Souhaitez-vous le renommerÿ?;ENC=This item attribute has been assigned to at least one item.\\Are you sure you want to rename it?';
      ChangeUsedAttributeUoMQst@1003 : TextConst 'ENU=This item attribute has been assigned to at least one item.\\Are you sure you want to change its unit of measure?;ESM=Este atributo de producto se asign¢ a un producto como m¡nimo.\\¨Est  seguro de que quiere cambiar su unidad de medida?;FRC=Cet attribut d''article a ‚t‚ affect‚ … au moins un article.\\Souhaitez-vous en modifier l''unit‚ de mesure?;ENC=This item attribute has been assigned to at least one item.\\Are you sure you want to change its unit of measure?';
      ChangeToOptionQst@1006 : TextConst 'ENU=Predefined values can be defined only for item attributes of type Option.\\Do you want to change the type of this item attribute to Option?;ESM=Solo se pueden definir valores predefinidos para los atributos de producto del tipo Opci¢n.\\¨Quiere cambiar el tipo del atributo de producto a Opci¢n?;FRC=Des valeurs pr‚d‚finies ne peuvent ˆtre d‚finies que pour les attributs d''article de type Option.\\Voulez-vous modifier le type de cet attribut d''article sur Optionÿ?;ENC=Predefined values can be defined only for item attributes of type Option.\\Do you want to change the type of this item attribute to Option?';

    [External]
    PROCEDURE GetTranslatedName@3(LanguageID@1000 : Integer) : Text[250];
    VAR
      Language@1001 : Record 8;
    BEGIN
      Language.SETRANGE("Windows Language ID",LanguageID);
      IF Language.FINDFIRST THEN BEGIN
        GetAttributeTranslation(Language.Code);
        EXIT(ItemAttributeTranslation.Name);
      END;
      EXIT(Name);
    END;

    [External]
    PROCEDURE GetNameInCurrentLanguage@4() : Text[250];
    BEGIN
      EXIT(GetTranslatedName(GLOBALLANGUAGE));
    END;

    LOCAL PROCEDURE GetAttributeTranslation@19(LanguageCode@1000 : Code[10]);
    BEGIN
      IF (ItemAttributeTranslation."Attribute ID" <> ID) OR (ItemAttributeTranslation."Language Code" <> LanguageCode) THEN
        IF NOT ItemAttributeTranslation.GET(ID,LanguageCode) THEN BEGIN
          ItemAttributeTranslation.INIT;
          ItemAttributeTranslation."Attribute ID" := ID;
          ItemAttributeTranslation."Language Code" := LanguageCode;
          ItemAttributeTranslation.Name := Name;
        END;
    END;

    [External]
    PROCEDURE GetValues@1() Values : Text;
    VAR
      ItemAttributeValue@1000 : Record 7501;
    BEGIN
      IF Type <> Type::Option THEN
        EXIT('');
      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      IF ItemAttributeValue.FINDSET THEN
        REPEAT
          IF Values <> '' THEN
            Values += ',';
          Values += ItemAttributeValue.Value;
        UNTIL ItemAttributeValue.NEXT = 0;
    END;

    [External]
    PROCEDURE HasBeenUsed@8() : Boolean;
    VAR
      ItemAttributeValueMapping@1000 : Record 7505;
    BEGIN
      ItemAttributeValueMapping.SETRANGE("Item Attribute ID",ID);
      EXIT(NOT ItemAttributeValueMapping.ISEMPTY);
    END;

    [External]
    PROCEDURE RemoveUnusedArbitraryValues@9();
    VAR
      ItemAttributeValue@1000 : Record 7501;
    BEGIN
      IF Type = Type::Option THEN
        EXIT;

      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      IF ItemAttributeValue.FINDSET THEN
        REPEAT
          IF NOT ItemAttributeValue.HasBeenUsed THEN
            ItemAttributeValue.DELETE;
        UNTIL ItemAttributeValue.NEXT = 0;
    END;

    [External]
    PROCEDURE OpenItemAttributeValues@2();
    VAR
      ItemAttributeValue@1000 : Record 7501;
    BEGIN
      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      IF (Type <> Type::Option) AND ItemAttributeValue.ISEMPTY THEN
        IF CONFIRM(ChangeToOptionQst) THEN BEGIN
          VALIDATE(Type,Type::Option);
          MODIFY;
        END;

      IF Type = Type::Option THEN
        PAGE.RUN(PAGE::"Item Attribute Values",ItemAttributeValue);
    END;

    LOCAL PROCEDURE CheckNameUniqueness@5(ItemAttribute@1000 : Record 7500;NameToCheck@1001 : Text[250]);
    BEGIN
      OnBeforeCheckNameUniqueness(ItemAttribute,Rec);

      ItemAttribute.SETRANGE(Name,NameToCheck);
      ItemAttribute.SETFILTER(ID,'<>%1',ItemAttribute.ID);
      IF NOT ItemAttribute.ISEMPTY THEN
        ERROR(NameAlreadyExistsErr,NameToCheck);
    END;

    LOCAL PROCEDURE DeleteValuesAndTranslationsConditionally@7(ItemAttribute@1000 : Record 7500;NameToCheck@1001 : Text[250]);
    VAR
      ItemAttributeTranslation@1002 : Record 7502;
      ItemAttributeValue@1003 : Record 7501;
      ValuesOrTranslationsExist@1004 : Boolean;
    BEGIN
      IF (ItemAttribute.Name <> '') AND (ItemAttribute.Name <> NameToCheck) THEN BEGIN
        ItemAttributeValue.SETRANGE("Attribute ID",ID);
        ItemAttributeTranslation.SETRANGE("Attribute ID",ID);
        ValuesOrTranslationsExist := NOT (ItemAttributeValue.ISEMPTY AND ItemAttributeTranslation.ISEMPTY);
        IF ValuesOrTranslationsExist THEN
          IF NOT CONFIRM(STRSUBSTNO(ReuseValueTranslationsQst,ItemAttribute.Name,NameToCheck)) THEN
            DeleteValuesAndTranslations;
      END;
    END;

    LOCAL PROCEDURE DeleteValuesAndTranslations@6();
    VAR
      ItemAttributeValue@1000 : Record 7501;
      ItemAttributeValueMapping@1001 : Record 7505;
      ItemAttrValueTranslation@1002 : Record 7503;
    BEGIN
      ItemAttributeValueMapping.SETRANGE("Item Attribute ID",ID);
      ItemAttributeValueMapping.DELETEALL;

      ItemAttributeValue.SETRANGE("Attribute ID",ID);
      ItemAttributeValue.DELETEALL;

      ItemAttributeTranslation.SETRANGE("Attribute ID",ID);
      ItemAttributeTranslation.DELETEALL;

      ItemAttrValueTranslation.SETRANGE("Attribute ID",ID);
      ItemAttrValueTranslation.DELETEALL;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeCheckNameUniqueness@10(VAR NewItemAttribute@1000 : Record 7500;ItemAttribute@1001 : Record 7500);
    BEGIN
    END;

    BEGIN
    END.
  }
}

